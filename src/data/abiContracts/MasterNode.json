{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_router",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_link",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "_MASTER_CONTRACT_CHAIN_ID",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nodeAddress",
          "type": "address"
        }
      ],
      "name": "DestinationNodeNotValid",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "router",
          "type": "address"
        }
      ],
      "name": "InvalidRouter",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "currentBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "calculatedFees",
          "type": "uint256"
        }
      ],
      "name": "NotEnoughBalance",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "MintAwrp",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferRequested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint8",
          "name": "commandResumeOperations",
          "type": "uint8"
        }
      ],
      "name": "ResumeOperations",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint64",
          "name": "detinationCCIPid",
          "type": "uint64"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "destinationNodeAddress",
          "type": "address"
        }
      ],
      "name": "WarpAssets",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint64",
          "name": "detinationCCIPid",
          "type": "uint64"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawAssets",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MASTER_CONTRACT_CHAIN_ID",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_resmumeOperationsFromSameChain",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "aWarpTokenMinterFromSameChain",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "activeNode",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nodeAddress",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "chainCCIPid",
          "type": "uint64"
        },
        {
          "internalType": "bool",
          "name": "isActiveNode",
          "type": "bool"
        }
      ],
      "name": "addValidNode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allowMoreNodes",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "totalUsdcSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalUsdcBorrow",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "supplyRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "addCapital",
          "type": "uint256"
        }
      ],
      "name": "calculateNewSupplyRates",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "messageId",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "sourceChainSelector",
              "type": "uint64"
            },
            {
              "internalType": "bytes",
              "name": "sender",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Client.EVMTokenAmount[]",
              "name": "destTokenAmounts",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Client.Any2EVMMessage",
          "name": "message",
          "type": "tuple"
        }
      ],
      "name": "ccipReceive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_activeNode",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "destinationNode",
          "type": "address"
        }
      ],
      "name": "checkApprovedWarp",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getChainIdFromActiveNode",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "destinationCCIPid",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "s_linkTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "routerAddress",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "getLinkFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRouter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isProtocolInTestMode",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastActiveNode",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastTimeWarped",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "totalUsdcSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalUsdcBorrow",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "supplyRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalAusdcNode",
          "type": "uint256"
        }
      ],
      "name": "nodeAaveFeedFromSameChain",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stopAddingNodes",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "validNodes",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isValidNode",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isActiveNode",
          "type": "bool"
        },
        {
          "internalType": "uint64",
          "name": "chainCCIPid",
          "type": "uint64"
        },
        {
          "internalType": "uint256",
          "name": "lastDataFromAave",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalUsdcSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalUsdcBorrow",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "supplyRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalAusdcNode",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_destinationNodeAddress",
          "type": "address"
        }
      ],
      "name": "warpAssets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/incae/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.3/contracts/token/ERC20/ERC20.sol",
    "1": "C:/Users/incae/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.3/contracts/token/ERC20/IERC20.sol",
    "10": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/shared/access/OwnerIsCreator.sol",
    "11": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/shared/interfaces/IOwnable.sol",
    "12": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol",
    "13": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/vendor/openzeppelin-solidity/v4.8.3/contracts/utils/introspection/IERC165.sol",
    "14": "contracts/MasterNode.sol",
    "15": "contracts/utils_node/UtilsMasterNode.sol",
    "16": "interfaces/INode.sol",
    "2": "C:/Users/incae/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.3/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "3": "C:/Users/incae/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.3/contracts/utils/Context.sol",
    "4": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/ccip/applications/CCIPReceiver.sol",
    "5": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol",
    "6": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/ccip/interfaces/IRouterClient.sol",
    "7": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/ccip/libraries/Client.sol",
    "8": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/shared/access/ConfirmedOwner.sol",
    "9": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol"
  },
  "ast": {
    "absolutePath": "contracts/MasterNode.sol",
    "exportedSymbols": {
      "CCIPReceiver": [
        1728
      ],
      "Client": [
        1835
      ],
      "Context": [
        2218
      ],
      "ERC20": [
        1608
      ],
      "IERC20": [
        2171
      ],
      "IERC20Metadata": [
        2196
      ],
      "INode": [
        2093
      ],
      "IRouterClient": [
        1780
      ],
      "LinkTokenInterface": [
        1946
      ],
      "MasterNode": [
        1021
      ],
      "OwnerIsCreator": [
        1851
      ],
      "UtilsMasterNode": [
        2076
      ]
    },
    "id": 1022,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:14"
      },
      {
        "absolutePath": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/ccip/interfaces/IRouterClient.sol",
        "file": "@chainlink/contracts/src/v0.8/ccip/interfaces/IRouterClient.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1022,
        "sourceUnit": 1781,
        "src": "57:94:14",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2,
              "name": "IRouterClient",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1780,
              "src": "65:13:14",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/shared/access/OwnerIsCreator.sol",
        "file": "@chainlink/contracts/src/v0.8/shared/access/OwnerIsCreator.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1022,
        "sourceUnit": 1852,
        "src": "152:94:14",
        "symbolAliases": [
          {
            "foreign": {
              "id": 4,
              "name": "OwnerIsCreator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1851,
              "src": "160:14:14",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/ccip/libraries/Client.sol",
        "file": "@chainlink/contracts/src/v0.8/ccip/libraries/Client.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1022,
        "sourceUnit": 1836,
        "src": "247:79:14",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6,
              "name": "Client",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1835,
              "src": "255:6:14",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/ccip/applications/CCIPReceiver.sol",
        "file": "@chainlink/contracts/src/v0.8/ccip/applications/CCIPReceiver.sol",
        "id": 9,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1022,
        "sourceUnit": 1729,
        "src": "327:94:14",
        "symbolAliases": [
          {
            "foreign": {
              "id": 8,
              "name": "CCIPReceiver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1728,
              "src": "335:12:14",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol",
        "file": "@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol",
        "id": 11,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1022,
        "sourceUnit": 1947,
        "src": "423:106:14",
        "symbolAliases": [
          {
            "foreign": {
              "id": 10,
              "name": "LinkTokenInterface",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1946,
              "src": "431:18:14",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/incae/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.3/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 12,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1022,
        "sourceUnit": 1609,
        "src": "531:55:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/utils_node/UtilsMasterNode.sol",
        "file": "./utils_node/UtilsMasterNode.sol",
        "id": 13,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1022,
        "sourceUnit": 2077,
        "src": "587:42:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/INode.sol",
        "file": "../interfaces/INode.sol",
        "id": 14,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1022,
        "sourceUnit": 2094,
        "src": "649:33:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 16,
              "name": "CCIPReceiver",
              "nameLocations": [
                "806:12:14"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1728,
              "src": "806:12:14"
            },
            "id": 17,
            "nodeType": "InheritanceSpecifier",
            "src": "806:12:14"
          },
          {
            "baseName": {
              "id": 18,
              "name": "OwnerIsCreator",
              "nameLocations": [
                "820:14:14"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1851,
              "src": "820:14:14"
            },
            "id": 19,
            "nodeType": "InheritanceSpecifier",
            "src": "820:14:14"
          },
          {
            "baseName": {
              "id": 20,
              "name": "ERC20",
              "nameLocations": [
                "836:5:14"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1608,
              "src": "836:5:14"
            },
            "id": 21,
            "nodeType": "InheritanceSpecifier",
            "src": "836:5:14"
          },
          {
            "baseName": {
              "id": 22,
              "name": "UtilsMasterNode",
              "nameLocations": [
                "843:15:14"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2076,
              "src": "843:15:14"
            },
            "id": 23,
            "nodeType": "InheritanceSpecifier",
            "src": "843:15:14"
          }
        ],
        "canonicalName": "MasterNode",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 15,
          "nodeType": "StructuredDocumentation",
          "src": "684:99:14",
          "text": "@title - A simple messenger contract for transferring/receiving tokens and data across chains."
        },
        "fullyImplemented": true,
        "id": 1021,
        "linearizedBaseContracts": [
          1021,
          2076,
          1608,
          2196,
          2171,
          2218,
          1851,
          2264,
          2427,
          2443,
          1728,
          2243,
          2231
        ],
        "name": "MasterNode",
        "nameLocation": "792:10:14",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "errorSelector": "8f0f4206",
            "id": 29,
            "name": "NotEnoughBalance",
            "nameLocation": "937:16:14",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25,
                  "mutability": "mutable",
                  "name": "currentBalance",
                  "nameLocation": "962:14:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "954:22:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "954:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27,
                  "mutability": "mutable",
                  "name": "calculatedFees",
                  "nameLocation": "986:14:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "978:22:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "978:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "953:48:14"
            },
            "src": "931:71:14"
          },
          {
            "errorSelector": "d53fef3e",
            "id": 33,
            "name": "DestinationNodeNotValid",
            "nameLocation": "1081:23:14",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31,
                  "mutability": "mutable",
                  "name": "nodeAddress",
                  "nameLocation": "1113:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "1105:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1105:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1104:21:14"
            },
            "src": "1075:51:14"
          },
          {
            "anonymous": false,
            "eventSelector": "985439828e84e84b426dc5fad9dbe12249540a3a89d03b3b635f89b4fe1e1ff2",
            "id": 39,
            "name": "WarpAssets",
            "nameLocation": "1223:10:14",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "detinationCCIPid",
                  "nameLocation": "1258:16:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "1243:31:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1243:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "destinationNodeAddress",
                  "nameLocation": "1300:22:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "1284:38:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1284:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1233:95:14"
            },
            "src": "1217:112:14"
          },
          {
            "anonymous": false,
            "eventSelector": "f3f4e036f86c1437e14fac401835b304a1b76776b49e2e2a4d86c119433b80cf",
            "id": 47,
            "name": "WithdrawAssets",
            "nameLocation": "1341:14:14",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "detinationCCIPid",
                  "nameLocation": "1380:16:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "1365:31:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1365:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "userAddress",
                  "nameLocation": "1422:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "1406:27:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1406:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1459:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "1443:22:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1443:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1355:116:14"
            },
            "src": "1335:137:14"
          },
          {
            "anonymous": false,
            "eventSelector": "8392741ef8e51329e7bd6d6010db40081a08ad52773cfc62f82ac6626991ce83",
            "id": 51,
            "name": "ResumeOperations",
            "nameLocation": "1483:16:14",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "commandResumeOperations",
                  "nameLocation": "1514:23:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "1500:37:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1500:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1499:39:14"
            },
            "src": "1477:62:14"
          },
          {
            "anonymous": false,
            "eventSelector": "b55160cc367b9cdf2289af15a6163d786de0a3d0722f78f652dec347580c8564",
            "id": 57,
            "name": "MintAwrp",
            "nameLocation": "1550:8:14",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "userAddress",
                  "nameLocation": "1575:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 57,
                  "src": "1559:27:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1559:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1604:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 57,
                  "src": "1588:22:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1588:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1558:53:14"
            },
            "src": "1544:68:14"
          },
          {
            "constant": false,
            "functionSelector": "ddf85603",
            "id": 60,
            "mutability": "mutable",
            "name": "isProtocolInTestMode",
            "nameLocation": "1630:20:14",
            "nodeType": "VariableDeclaration",
            "scope": 1021,
            "src": "1618:39:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 58,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1618:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "74727565",
              "id": 59,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1653:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "true"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 63,
            "mutability": "mutable",
            "name": "s_linkToken",
            "nameLocation": "1691:11:14",
            "nodeType": "VariableDeclaration",
            "scope": 1021,
            "src": "1664:38:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LinkTokenInterface_$1946",
              "typeString": "contract LinkTokenInterface"
            },
            "typeName": {
              "id": 62,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 61,
                "name": "LinkTokenInterface",
                "nameLocations": [
                  "1664:18:14"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1946,
                "src": "1664:18:14"
              },
              "referencedDeclaration": 1946,
              "src": "1664:18:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LinkTokenInterface_$1946",
                "typeString": "contract LinkTokenInterface"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "8cf19d19",
            "id": 65,
            "mutability": "immutable",
            "name": "MASTER_CONTRACT_CHAIN_ID",
            "nameLocation": "1732:24:14",
            "nodeType": "VariableDeclaration",
            "scope": 1021,
            "src": "1708:48:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 64,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "1708:6:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "654e8e0c",
            "id": 68,
            "mutability": "mutable",
            "name": "allowMoreNodes",
            "nameLocation": "1774:14:14",
            "nodeType": "VariableDeclaration",
            "scope": 1021,
            "src": "1762:33:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 66,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1762:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "74727565",
              "id": 67,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1791:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "true"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "61ac3f99",
            "id": 70,
            "mutability": "mutable",
            "name": "lastActiveNode",
            "nameLocation": "1816:14:14",
            "nodeType": "VariableDeclaration",
            "scope": 1021,
            "src": "1801:29:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 69,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1801:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6c1dc077",
            "id": 72,
            "mutability": "mutable",
            "name": "activeNode",
            "nameLocation": "1851:10:14",
            "nodeType": "VariableDeclaration",
            "scope": 1021,
            "src": "1836:25:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 71,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1836:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e12b948b",
            "id": 74,
            "mutability": "mutable",
            "name": "lastTimeWarped",
            "nameLocation": "1882:14:14",
            "nodeType": "VariableDeclaration",
            "scope": 1021,
            "src": "1867:29:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 73,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1867:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "MasterNode.ValidNodes",
            "id": 91,
            "members": [
              {
                "constant": false,
                "id": 76,
                "mutability": "mutable",
                "name": "isValidNode",
                "nameLocation": "1936:11:14",
                "nodeType": "VariableDeclaration",
                "scope": 91,
                "src": "1931:16:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 75,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1931:4:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 78,
                "mutability": "mutable",
                "name": "isActiveNode",
                "nameLocation": "1962:12:14",
                "nodeType": "VariableDeclaration",
                "scope": 91,
                "src": "1957:17:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 77,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1957:4:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 80,
                "mutability": "mutable",
                "name": "chainCCIPid",
                "nameLocation": "1991:11:14",
                "nodeType": "VariableDeclaration",
                "scope": 91,
                "src": "1984:18:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 79,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "1984:6:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 82,
                "mutability": "mutable",
                "name": "lastDataFromAave",
                "nameLocation": "2020:16:14",
                "nodeType": "VariableDeclaration",
                "scope": 91,
                "src": "2012:24:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 81,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2012:7:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 84,
                "mutability": "mutable",
                "name": "totalUsdcSupply",
                "nameLocation": "2054:15:14",
                "nodeType": "VariableDeclaration",
                "scope": 91,
                "src": "2046:23:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 83,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2046:7:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 86,
                "mutability": "mutable",
                "name": "totalUsdcBorrow",
                "nameLocation": "2087:15:14",
                "nodeType": "VariableDeclaration",
                "scope": 91,
                "src": "2079:23:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 85,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2079:7:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 88,
                "mutability": "mutable",
                "name": "supplyRate",
                "nameLocation": "2120:10:14",
                "nodeType": "VariableDeclaration",
                "scope": 91,
                "src": "2112:18:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 87,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2112:7:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 90,
                "mutability": "mutable",
                "name": "totalAusdcNode",
                "nameLocation": "2148:14:14",
                "nodeType": "VariableDeclaration",
                "scope": 91,
                "src": "2140:22:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 89,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2140:7:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ValidNodes",
            "nameLocation": "1910:10:14",
            "nodeType": "StructDefinition",
            "scope": 1021,
            "src": "1903:266:14",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b2d92955",
            "id": 96,
            "mutability": "mutable",
            "name": "validNodes",
            "nameLocation": "2213:10:14",
            "nodeType": "VariableDeclaration",
            "scope": 1021,
            "src": "2175:48:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$91_storage_$",
              "typeString": "mapping(address => struct MasterNode.ValidNodes)"
            },
            "typeName": {
              "id": 95,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 92,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2183:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2175:30:14",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$91_storage_$",
                "typeString": "mapping(address => struct MasterNode.ValidNodes)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 94,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 93,
                  "name": "ValidNodes",
                  "nameLocations": [
                    "2194:10:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 91,
                  "src": "2194:10:14"
                },
                "referencedDeclaration": 91,
                "src": "2194:10:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ValidNodes_$91_storage_ptr",
                  "typeString": "struct MasterNode.ValidNodes"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 122,
              "nodeType": "Block",
              "src": "2387:118:14",
              "statements": [
                {
                  "expression": {
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 112,
                      "name": "s_linkToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "2397:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LinkTokenInterface_$1946",
                        "typeString": "contract LinkTokenInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 114,
                          "name": "_link",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100,
                          "src": "2430:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 113,
                        "name": "LinkTokenInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1946,
                        "src": "2411:18:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LinkTokenInterface_$1946_$",
                          "typeString": "type(contract LinkTokenInterface)"
                        }
                      },
                      "id": 115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2411:25:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LinkTokenInterface_$1946",
                        "typeString": "contract LinkTokenInterface"
                      }
                    },
                    "src": "2397:39:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LinkTokenInterface_$1946",
                      "typeString": "contract LinkTokenInterface"
                    }
                  },
                  "id": 117,
                  "nodeType": "ExpressionStatement",
                  "src": "2397:39:14"
                },
                {
                  "expression": {
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 118,
                      "name": "MASTER_CONTRACT_CHAIN_ID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "2446:24:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 119,
                      "name": "_MASTER_CONTRACT_CHAIN_ID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102,
                      "src": "2473:25:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "2446:52:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 121,
                  "nodeType": "ExpressionStatement",
                  "src": "2446:52:14"
                }
              ]
            },
            "id": 123,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 105,
                    "name": "_router",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 98,
                    "src": "2351:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 106,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 104,
                  "name": "CCIPReceiver",
                  "nameLocations": [
                    "2338:12:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1728,
                  "src": "2338:12:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "2338:21:14"
              },
              {
                "arguments": [
                  {
                    "hexValue": "576172705969656c64",
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2366:11:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6e5bd3a7f1ed96a77cd5f67b9871f9bbaf8246a034059514102ca756c979a0ad",
                      "typeString": "literal_string \"WarpYield\""
                    },
                    "value": "WarpYield"
                  },
                  {
                    "hexValue": "61575250",
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2379:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_5c2aa465d21b20af1889df7f97d25d68ec9b8540df778db221765393d1ff7929",
                      "typeString": "literal_string \"aWRP\""
                    },
                    "value": "aWRP"
                  }
                ],
                "id": 110,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 107,
                  "name": "ERC20",
                  "nameLocations": [
                    "2360:5:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1608,
                  "src": "2360:5:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "2360:26:14"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98,
                  "mutability": "mutable",
                  "name": "_router",
                  "nameLocation": "2259:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 123,
                  "src": "2251:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2251:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100,
                  "mutability": "mutable",
                  "name": "_link",
                  "nameLocation": "2284:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 123,
                  "src": "2276:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2276:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102,
                  "mutability": "mutable",
                  "name": "_MASTER_CONTRACT_CHAIN_ID",
                  "nameLocation": "2306:25:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 123,
                  "src": "2299:32:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 101,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2299:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2241:96:14"
            },
            "returnParameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2387:0:14"
            },
            "scope": 1021,
            "src": "2230:275:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 139,
              "nodeType": "Block",
              "src": "2556:137:14",
              "statements": [
                {
                  "condition": {
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2570:36:14",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 127,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 96,
                          "src": "2571:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$91_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 129,
                        "indexExpression": {
                          "id": 128,
                          "name": "nodeAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 125,
                          "src": "2582:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2571:23:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$91_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 130,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2595:11:14",
                      "memberName": "isValidNode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 76,
                      "src": "2571:35:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 137,
                  "nodeType": "IfStatement",
                  "src": "2566:110:14",
                  "trueBody": {
                    "id": 136,
                    "nodeType": "Block",
                    "src": "2608:68:14",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 133,
                              "name": "nodeAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 125,
                              "src": "2653:11:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 132,
                            "name": "DestinationNodeNotValid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33,
                            "src": "2629:23:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                              "typeString": "function (address) pure"
                            }
                          },
                          "id": 134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2629:36:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 135,
                        "nodeType": "RevertStatement",
                        "src": "2622:43:14"
                      }
                    ]
                  }
                },
                {
                  "id": 138,
                  "nodeType": "PlaceholderStatement",
                  "src": "2685:1:14"
                }
              ]
            },
            "id": 140,
            "name": "onlyValidNodes",
            "nameLocation": "2520:14:14",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 125,
                  "mutability": "mutable",
                  "name": "nodeAddress",
                  "nameLocation": "2543:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "2535:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 124,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2535:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2534:21:14"
            },
            "src": "2511:182:14",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 154,
              "nodeType": "Block",
              "src": "2735:174:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 143,
                              "name": "validNodes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 96,
                              "src": "2766:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$91_storage_$",
                                "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                              }
                            },
                            "id": 146,
                            "indexExpression": {
                              "expression": {
                                "id": 144,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2777:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 145,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2781:6:14",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2777:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2766:22:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ValidNodes_$91_storage",
                              "typeString": "struct MasterNode.ValidNodes storage ref"
                            }
                          },
                          "id": 147,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2789:11:14",
                          "memberName": "chainCCIPid",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 80,
                          "src": "2766:34:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 148,
                          "name": "MASTER_CONTRACT_CHAIN_ID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "2804:24:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "2766:62:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52657175697265206d617374657220616e64206e6f646520696e2073616d6520636861696e",
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2842:39:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5f03148fc98866fc88ba0b74aa8942ff4bdb75490412a503e1b1f86ebc254af6",
                          "typeString": "literal_string \"Require master and node in same chain\""
                        },
                        "value": "Require master and node in same chain"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5f03148fc98866fc88ba0b74aa8942ff4bdb75490412a503e1b1f86ebc254af6",
                          "typeString": "literal_string \"Require master and node in same chain\""
                        }
                      ],
                      "id": 142,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2745:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2745:146:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 152,
                  "nodeType": "ExpressionStatement",
                  "src": "2745:146:14"
                },
                {
                  "id": 153,
                  "nodeType": "PlaceholderStatement",
                  "src": "2901:1:14"
                }
              ]
            },
            "id": 155,
            "name": "masterAndNodeInSameChain",
            "nameLocation": "2708:24:14",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2732:2:14"
            },
            "src": "2699:210:14",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 164,
              "nodeType": "Block",
              "src": "2961:39:14",
              "statements": [
                {
                  "expression": {
                    "id": 162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 160,
                      "name": "allowMoreNodes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "2971:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2988:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2971:22:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 163,
                  "nodeType": "ExpressionStatement",
                  "src": "2971:22:14"
                }
              ]
            },
            "functionSelector": "6c98d513",
            "id": 165,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 158,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 157,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2951:9:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2426,
                  "src": "2951:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "2951:9:14"
              }
            ],
            "name": "stopAddingNodes",
            "nameLocation": "2924:15:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 156,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2939:2:14"
            },
            "returnParameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2961:0:14"
            },
            "scope": 1021,
            "src": "2915:85:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 213,
              "nodeType": "Block",
              "src": "3137:356:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 177,
                        "name": "allowMoreNodes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68,
                        "src": "3155:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f206d6f7265206e6f64657320616c6c6f776564",
                        "id": 178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3171:23:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_14986cb525690d9998a9e460f0aca8b42b9aa5faddc27699fe8d3c65ad4113cd",
                          "typeString": "literal_string \"No more nodes allowed\""
                        },
                        "value": "No more nodes allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_14986cb525690d9998a9e460f0aca8b42b9aa5faddc27699fe8d3c65ad4113cd",
                          "typeString": "literal_string \"No more nodes allowed\""
                        }
                      ],
                      "id": 176,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3147:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3147:48:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 180,
                  "nodeType": "ExpressionStatement",
                  "src": "3147:48:14"
                },
                {
                  "expression": {
                    "id": 186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 181,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 96,
                          "src": "3205:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$91_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 183,
                        "indexExpression": {
                          "id": 182,
                          "name": "nodeAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 167,
                          "src": "3216:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3205:23:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$91_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 184,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3229:11:14",
                      "memberName": "isValidNode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 76,
                      "src": "3205:35:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3243:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3205:42:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 187,
                  "nodeType": "ExpressionStatement",
                  "src": "3205:42:14"
                },
                {
                  "expression": {
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 188,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 96,
                          "src": "3257:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$91_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 190,
                        "indexExpression": {
                          "id": 189,
                          "name": "nodeAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 167,
                          "src": "3268:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3257:23:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$91_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 191,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3281:12:14",
                      "memberName": "isActiveNode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 78,
                      "src": "3257:36:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 192,
                      "name": "isActiveNode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 171,
                      "src": "3296:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3257:51:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 194,
                  "nodeType": "ExpressionStatement",
                  "src": "3257:51:14"
                },
                {
                  "expression": {
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 195,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 96,
                          "src": "3318:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$91_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 197,
                        "indexExpression": {
                          "id": 196,
                          "name": "nodeAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 167,
                          "src": "3329:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3318:23:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$91_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 198,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3342:11:14",
                      "memberName": "chainCCIPid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 80,
                      "src": "3318:35:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 199,
                      "name": "chainCCIPid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 169,
                      "src": "3356:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "3318:49:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 201,
                  "nodeType": "ExpressionStatement",
                  "src": "3318:49:14"
                },
                {
                  "condition": {
                    "id": 202,
                    "name": "isActiveNode",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 171,
                    "src": "3382:12:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 212,
                  "nodeType": "IfStatement",
                  "src": "3378:109:14",
                  "trueBody": {
                    "id": 211,
                    "nodeType": "Block",
                    "src": "3396:91:14",
                    "statements": [
                      {
                        "expression": {
                          "id": 205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 203,
                            "name": "lastActiveNode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70,
                            "src": "3410:14:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 204,
                            "name": "nodeAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 167,
                            "src": "3427:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3410:28:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 206,
                        "nodeType": "ExpressionStatement",
                        "src": "3410:28:14"
                      },
                      {
                        "expression": {
                          "id": 209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 207,
                            "name": "activeNode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 72,
                            "src": "3452:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 208,
                            "name": "nodeAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 167,
                            "src": "3465:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3452:24:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 210,
                        "nodeType": "ExpressionStatement",
                        "src": "3452:24:14"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "10a78df8",
            "id": 214,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 174,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 173,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3127:9:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2426,
                  "src": "3127:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "3127:9:14"
              }
            ],
            "name": "addValidNode",
            "nameLocation": "3015:12:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 167,
                  "mutability": "mutable",
                  "name": "nodeAddress",
                  "nameLocation": "3045:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 214,
                  "src": "3037:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 166,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3037:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 169,
                  "mutability": "mutable",
                  "name": "chainCCIPid",
                  "nameLocation": "3073:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 214,
                  "src": "3066:18:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 168,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "3066:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 171,
                  "mutability": "mutable",
                  "name": "isActiveNode",
                  "nameLocation": "3099:12:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 214,
                  "src": "3094:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 170,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3094:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3027:90:14"
            },
            "returnParameters": {
              "id": 175,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3137:0:14"
            },
            "scope": 1021,
            "src": "3006:487:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 247,
              "nodeType": "Block",
              "src": "3902:234:14",
              "statements": [
                {
                  "assignments": [
                    null,
                    221,
                    223
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 221,
                      "mutability": "mutable",
                      "name": "userAddress",
                      "nameLocation": "3923:11:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 247,
                      "src": "3915:19:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 220,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3915:7:14",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 223,
                      "mutability": "mutable",
                      "name": "shares",
                      "nameLocation": "3944:6:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 247,
                      "src": "3936:14:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 222,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3936:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 236,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 226,
                          "name": "_any2EvmMessage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 217,
                          "src": "3978:15:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Any2EVMMessage_$1800_memory_ptr",
                            "typeString": "struct Client.Any2EVMMessage memory"
                          }
                        },
                        "id": 227,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3994:4:14",
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1795,
                        "src": "3978:20:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 229,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4013:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": {
                              "id": 228,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "4013:5:14",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 231,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4020:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 230,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4020:7:14",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 233,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4029:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 232,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4029:7:14",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 234,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "4012:25:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint8_$_$_t_type$_t_address_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(uint8),type(address),type(uint256))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint8_$_$_t_type$_t_address_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(uint8),type(address),type(uint256))"
                        }
                      ],
                      "expression": {
                        "id": 224,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "3954:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3958:6:14",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "3954:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3954:93:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_address_payable_$_t_uint256_$",
                      "typeString": "tuple(uint8,address payable,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3912:135:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 238,
                        "name": "userAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 221,
                        "src": "4064:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 239,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 223,
                        "src": "4077:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 237,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1425,
                      "src": "4058:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4058:26:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 241,
                  "nodeType": "ExpressionStatement",
                  "src": "4058:26:14"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 243,
                        "name": "userAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 221,
                        "src": "4109:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 244,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 223,
                        "src": "4122:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 242,
                      "name": "MintAwrp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "4100:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4100:29:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 246,
                  "nodeType": "EmitStatement",
                  "src": "4095:34:14"
                }
              ]
            },
            "id": 248,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_aWarpTokenMinter",
            "nameLocation": "3815:17:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 217,
                  "mutability": "mutable",
                  "name": "_any2EvmMessage",
                  "nameLocation": "3871:15:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 248,
                  "src": "3842:44:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Any2EVMMessage_$1800_memory_ptr",
                    "typeString": "struct Client.Any2EVMMessage"
                  },
                  "typeName": {
                    "id": 216,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 215,
                      "name": "Client.Any2EVMMessage",
                      "nameLocations": [
                        "3842:6:14",
                        "3849:14:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1800,
                      "src": "3842:21:14"
                    },
                    "referencedDeclaration": 1800,
                    "src": "3842:21:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Any2EVMMessage_$1800_storage_ptr",
                      "typeString": "struct Client.Any2EVMMessage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3832:60:14"
            },
            "returnParameters": {
              "id": 219,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3902:0:14"
            },
            "scope": 1021,
            "src": "3806:330:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 271,
              "nodeType": "Block",
              "src": "4385:87:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 262,
                        "name": "userAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 250,
                        "src": "4401:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 263,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 252,
                        "src": "4414:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 261,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1425,
                      "src": "4395:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4395:26:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 265,
                  "nodeType": "ExpressionStatement",
                  "src": "4395:26:14"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 267,
                        "name": "userAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 250,
                        "src": "4445:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 268,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 252,
                        "src": "4458:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 266,
                      "name": "MintAwrp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "4436:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4436:29:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 270,
                  "nodeType": "EmitStatement",
                  "src": "4431:34:14"
                }
              ]
            },
            "functionSelector": "04783ea4",
            "id": 272,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 255,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 254,
                  "name": "masterAndNodeInSameChain",
                  "nameLocations": [
                    "4333:24:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 155,
                  "src": "4333:24:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "4333:24:14"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 257,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "4373:3:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4377:6:14",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "4373:10:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 259,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 256,
                  "name": "onlyValidNodes",
                  "nameLocations": [
                    "4358:14:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 140,
                  "src": "4358:14:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "4358:26:14"
              }
            ],
            "name": "aWarpTokenMinterFromSameChain",
            "nameLocation": "4235:29:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 250,
                  "mutability": "mutable",
                  "name": "userAddress",
                  "nameLocation": "4282:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 272,
                  "src": "4274:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 249,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4274:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 252,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "4311:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 272,
                  "src": "4303:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 251,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4303:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4264:59:14"
            },
            "returnParameters": {
              "id": 260,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4385:0:14"
            },
            "scope": 1021,
            "src": "4226:246:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 310,
              "nodeType": "Block",
              "src": "4882:218:14",
              "statements": [
                {
                  "expression": {
                    "id": 290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 278,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 96,
                          "src": "4892:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$91_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 287,
                        "indexExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 281,
                                "name": "_any2EvmMessage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 275,
                                "src": "4914:15:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Any2EVMMessage_$1800_memory_ptr",
                                  "typeString": "struct Client.Any2EVMMessage memory"
                                }
                              },
                              "id": 282,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4930:6:14",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1793,
                              "src": "4914:22:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 284,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4939:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 283,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4939:7:14",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 285,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "4938:9:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            ],
                            "expression": {
                              "id": 279,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "4903:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 280,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "4907:6:14",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "4903:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4903:45:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4892:57:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$91_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 288,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4963:12:14",
                      "memberName": "isActiveNode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 78,
                      "src": "4892:83:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4978:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4892:90:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 291,
                  "nodeType": "ExpressionStatement",
                  "src": "4892:90:14"
                },
                {
                  "expression": {
                    "id": 301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 292,
                      "name": "activeNode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "4993:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 295,
                            "name": "_any2EvmMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 275,
                            "src": "5017:15:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Any2EVMMessage_$1800_memory_ptr",
                              "typeString": "struct Client.Any2EVMMessage memory"
                            }
                          },
                          "id": 296,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5033:6:14",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1793,
                          "src": "5017:22:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "components": [
                            {
                              "id": 298,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5042:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 297,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5042:7:14",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "id": 299,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "5041:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          }
                        ],
                        "expression": {
                          "id": 293,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "5006:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "5010:6:14",
                        "memberName": "decode",
                        "nodeType": "MemberAccess",
                        "src": "5006:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5006:45:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "4993:58:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 302,
                  "nodeType": "ExpressionStatement",
                  "src": "4993:58:14"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 306,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5090:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5084:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 304,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "5084:5:14",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5084:8:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 303,
                      "name": "ResumeOperations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "5067:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
                        "typeString": "function (uint8)"
                      }
                    },
                    "id": 308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5067:26:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 309,
                  "nodeType": "EmitStatement",
                  "src": "5062:31:14"
                }
              ]
            },
            "id": 311,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_resmumeOperations",
            "nameLocation": "4794:18:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 275,
                  "mutability": "mutable",
                  "name": "_any2EvmMessage",
                  "nameLocation": "4851:15:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 311,
                  "src": "4822:44:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Any2EVMMessage_$1800_memory_ptr",
                    "typeString": "struct Client.Any2EVMMessage"
                  },
                  "typeName": {
                    "id": 274,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 273,
                      "name": "Client.Any2EVMMessage",
                      "nameLocations": [
                        "4822:6:14",
                        "4829:14:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1800,
                      "src": "4822:21:14"
                    },
                    "referencedDeclaration": 1800,
                    "src": "4822:21:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Any2EVMMessage_$1800_storage_ptr",
                      "typeString": "struct Client.Any2EVMMessage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4812:60:14"
            },
            "returnParameters": {
              "id": 277,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4882:0:14"
            },
            "scope": 1021,
            "src": "4785:315:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 340,
              "nodeType": "Block",
              "src": "5317:133:14",
              "statements": [
                {
                  "expression": {
                    "id": 326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 320,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 96,
                          "src": "5327:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$91_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 323,
                        "indexExpression": {
                          "expression": {
                            "id": 321,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5338:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5342:6:14",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5338:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5327:22:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$91_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 324,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "5350:12:14",
                      "memberName": "isActiveNode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 78,
                      "src": "5327:35:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 325,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5365:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5327:42:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 327,
                  "nodeType": "ExpressionStatement",
                  "src": "5327:42:14"
                },
                {
                  "expression": {
                    "id": 331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 328,
                      "name": "activeNode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "5379:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 329,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "5392:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 330,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5396:6:14",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5392:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5379:23:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 332,
                  "nodeType": "ExpressionStatement",
                  "src": "5379:23:14"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 336,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5440:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5434:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 334,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "5434:5:14",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5434:8:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 333,
                      "name": "ResumeOperations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "5417:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
                        "typeString": "function (uint8)"
                      }
                    },
                    "id": 338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5417:26:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 339,
                  "nodeType": "EmitStatement",
                  "src": "5412:31:14"
                }
              ]
            },
            "functionSelector": "995714ae",
            "id": 341,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 314,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 313,
                  "name": "masterAndNodeInSameChain",
                  "nameLocations": [
                    "5253:24:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 155,
                  "src": "5253:24:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "5253:24:14"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 316,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "5301:3:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "5305:6:14",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "5301:10:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 318,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 315,
                  "name": "onlyValidNodes",
                  "nameLocations": [
                    "5286:14:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 140,
                  "src": "5286:14:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "5286:26:14"
              }
            ],
            "name": "_resmumeOperationsFromSameChain",
            "nameLocation": "5194:31:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 312,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5225:2:14"
            },
            "returnParameters": {
              "id": 319,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5317:0:14"
            },
            "scope": 1021,
            "src": "5185:265:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 443,
              "nodeType": "Block",
              "src": "5855:869:14",
              "statements": [
                {
                  "assignments": [
                    null,
                    348,
                    350,
                    352,
                    354
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 348,
                      "mutability": "mutable",
                      "name": "totalUsdcSupply",
                      "nameLocation": "5901:15:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 443,
                      "src": "5893:23:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 347,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5893:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 350,
                      "mutability": "mutable",
                      "name": "totalUsdcBorrow",
                      "nameLocation": "5938:15:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 443,
                      "src": "5930:23:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 349,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5930:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 352,
                      "mutability": "mutable",
                      "name": "supplyRate",
                      "nameLocation": "5975:10:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 443,
                      "src": "5967:18:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 351,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5967:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 354,
                      "mutability": "mutable",
                      "name": "totalAusdcNode",
                      "nameLocation": "6007:14:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 443,
                      "src": "5999:22:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 353,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5999:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 371,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 357,
                          "name": "_any2EvmMessage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 344,
                          "src": "6062:15:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Any2EVMMessage_$1800_memory_ptr",
                            "typeString": "struct Client.Any2EVMMessage memory"
                          }
                        },
                        "id": 358,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6078:4:14",
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1795,
                        "src": "6062:20:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 360,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6101:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": {
                              "id": 359,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "6101:5:14",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 362,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6108:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 361,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6108:7:14",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 364,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6117:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 363,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6117:7:14",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 366,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6126:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 365,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6126:7:14",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 368,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6135:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 367,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6135:7:14",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 369,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "6100:43:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint8_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(uint8),type(uint256),type(uint256),type(uint256),type(uint256))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint8_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(uint8),type(uint256),type(uint256),type(uint256),type(uint256))"
                        }
                      ],
                      "expression": {
                        "id": 355,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "6034:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 356,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "6038:6:14",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "6034:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6034:123:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint8,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5865:292:14"
                },
                {
                  "expression": {
                    "id": 385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 372,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 96,
                          "src": "6168:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$91_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 381,
                        "indexExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 375,
                                "name": "_any2EvmMessage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 344,
                                "src": "6190:15:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Any2EVMMessage_$1800_memory_ptr",
                                  "typeString": "struct Client.Any2EVMMessage memory"
                                }
                              },
                              "id": 376,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6206:6:14",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1793,
                              "src": "6190:22:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 378,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6215:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 377,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6215:7:14",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 379,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "6214:9:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            ],
                            "expression": {
                              "id": 373,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "6179:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 374,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "6183:6:14",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "6179:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6179:45:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6168:57:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$91_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 382,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6239:16:14",
                      "memberName": "lastDataFromAave",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 82,
                      "src": "6168:87:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 383,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "6258:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6264:9:14",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "6258:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6168:105:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 386,
                  "nodeType": "ExpressionStatement",
                  "src": "6168:105:14"
                },
                {
                  "expression": {
                    "id": 399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 387,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 96,
                          "src": "6283:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$91_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 396,
                        "indexExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 390,
                                "name": "_any2EvmMessage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 344,
                                "src": "6305:15:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Any2EVMMessage_$1800_memory_ptr",
                                  "typeString": "struct Client.Any2EVMMessage memory"
                                }
                              },
                              "id": 391,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6321:6:14",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1793,
                              "src": "6305:22:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 393,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6330:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 392,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6330:7:14",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 394,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "6329:9:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            ],
                            "expression": {
                              "id": 388,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "6294:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 389,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "6298:6:14",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "6294:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6294:45:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6283:57:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$91_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 397,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6354:15:14",
                      "memberName": "totalUsdcSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 84,
                      "src": "6283:86:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 398,
                      "name": "totalUsdcSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 348,
                      "src": "6372:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6283:104:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 400,
                  "nodeType": "ExpressionStatement",
                  "src": "6283:104:14"
                },
                {
                  "expression": {
                    "id": 413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 401,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 96,
                          "src": "6397:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$91_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 410,
                        "indexExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 404,
                                "name": "_any2EvmMessage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 344,
                                "src": "6419:15:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Any2EVMMessage_$1800_memory_ptr",
                                  "typeString": "struct Client.Any2EVMMessage memory"
                                }
                              },
                              "id": 405,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6435:6:14",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1793,
                              "src": "6419:22:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 407,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6444:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 406,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6444:7:14",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 408,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "6443:9:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            ],
                            "expression": {
                              "id": 402,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "6408:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 403,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "6412:6:14",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "6408:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6408:45:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6397:57:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$91_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 411,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6468:15:14",
                      "memberName": "totalUsdcBorrow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 86,
                      "src": "6397:86:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 412,
                      "name": "totalUsdcBorrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 350,
                      "src": "6486:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6397:104:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 414,
                  "nodeType": "ExpressionStatement",
                  "src": "6397:104:14"
                },
                {
                  "expression": {
                    "id": 427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 415,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 96,
                          "src": "6511:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$91_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 424,
                        "indexExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 418,
                                "name": "_any2EvmMessage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 344,
                                "src": "6533:15:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Any2EVMMessage_$1800_memory_ptr",
                                  "typeString": "struct Client.Any2EVMMessage memory"
                                }
                              },
                              "id": 419,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6549:6:14",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1793,
                              "src": "6533:22:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 421,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6558:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 420,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6558:7:14",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 422,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "6557:9:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            ],
                            "expression": {
                              "id": 416,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "6522:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 417,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "6526:6:14",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "6522:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6522:45:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6511:57:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$91_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 425,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6582:10:14",
                      "memberName": "supplyRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 88,
                      "src": "6511:81:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 426,
                      "name": "supplyRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 352,
                      "src": "6595:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6511:94:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 428,
                  "nodeType": "ExpressionStatement",
                  "src": "6511:94:14"
                },
                {
                  "expression": {
                    "id": 441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 429,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 96,
                          "src": "6615:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$91_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 438,
                        "indexExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 432,
                                "name": "_any2EvmMessage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 344,
                                "src": "6637:15:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Any2EVMMessage_$1800_memory_ptr",
                                  "typeString": "struct Client.Any2EVMMessage memory"
                                }
                              },
                              "id": 433,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6653:6:14",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1793,
                              "src": "6637:22:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 435,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6662:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 434,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6662:7:14",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 436,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "6661:9:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            ],
                            "expression": {
                              "id": 430,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "6626:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 431,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "6630:6:14",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "6626:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6626:45:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6615:57:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$91_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 439,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6686:14:14",
                      "memberName": "totalAusdcNode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 90,
                      "src": "6615:85:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 440,
                      "name": "totalAusdcNode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 354,
                      "src": "6703:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6615:102:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 442,
                  "nodeType": "ExpressionStatement",
                  "src": "6615:102:14"
                }
              ]
            },
            "id": 444,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_nodeAaveFeed",
            "nameLocation": "5772:13:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 345,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 344,
                  "mutability": "mutable",
                  "name": "_any2EvmMessage",
                  "nameLocation": "5824:15:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 444,
                  "src": "5795:44:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Any2EVMMessage_$1800_memory_ptr",
                    "typeString": "struct Client.Any2EVMMessage"
                  },
                  "typeName": {
                    "id": 343,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 342,
                      "name": "Client.Any2EVMMessage",
                      "nameLocations": [
                        "5795:6:14",
                        "5802:14:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1800,
                      "src": "5795:21:14"
                    },
                    "referencedDeclaration": 1800,
                    "src": "5795:21:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Any2EVMMessage_$1800_storage_ptr",
                      "typeString": "struct Client.Any2EVMMessage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5785:60:14"
            },
            "returnParameters": {
              "id": 346,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5855:0:14"
            },
            "scope": 1021,
            "src": "5763:961:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 502,
              "nodeType": "Block",
              "src": "7038:326:14",
              "statements": [
                {
                  "expression": {
                    "id": 468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 461,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 96,
                          "src": "7048:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$91_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 464,
                        "indexExpression": {
                          "expression": {
                            "id": 462,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7059:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7063:6:14",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7059:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7048:22:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$91_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 465,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7071:16:14",
                      "memberName": "lastDataFromAave",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 82,
                      "src": "7048:39:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 466,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "7090:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 467,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7096:9:14",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "7090:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7048:57:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 469,
                  "nodeType": "ExpressionStatement",
                  "src": "7048:57:14"
                },
                {
                  "expression": {
                    "id": 476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 470,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 96,
                          "src": "7115:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$91_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 473,
                        "indexExpression": {
                          "expression": {
                            "id": 471,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7126:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7130:6:14",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7126:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7115:22:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$91_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 474,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7138:15:14",
                      "memberName": "totalUsdcSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 84,
                      "src": "7115:38:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 475,
                      "name": "totalUsdcSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 446,
                      "src": "7156:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7115:56:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 477,
                  "nodeType": "ExpressionStatement",
                  "src": "7115:56:14"
                },
                {
                  "expression": {
                    "id": 484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 478,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 96,
                          "src": "7181:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$91_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 481,
                        "indexExpression": {
                          "expression": {
                            "id": 479,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7192:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7196:6:14",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7192:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7181:22:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$91_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 482,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7204:15:14",
                      "memberName": "totalUsdcBorrow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 86,
                      "src": "7181:38:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 483,
                      "name": "totalUsdcBorrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 448,
                      "src": "7222:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7181:56:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 485,
                  "nodeType": "ExpressionStatement",
                  "src": "7181:56:14"
                },
                {
                  "expression": {
                    "id": 492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 486,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 96,
                          "src": "7247:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$91_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 489,
                        "indexExpression": {
                          "expression": {
                            "id": 487,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7258:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7262:6:14",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7258:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7247:22:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$91_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 490,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7270:10:14",
                      "memberName": "supplyRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 88,
                      "src": "7247:33:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 491,
                      "name": "supplyRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 450,
                      "src": "7283:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7247:46:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 493,
                  "nodeType": "ExpressionStatement",
                  "src": "7247:46:14"
                },
                {
                  "expression": {
                    "id": 500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 494,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 96,
                          "src": "7303:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$91_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 497,
                        "indexExpression": {
                          "expression": {
                            "id": 495,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7314:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7318:6:14",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7314:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7303:22:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$91_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 498,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7326:14:14",
                      "memberName": "totalAusdcNode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 90,
                      "src": "7303:37:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 499,
                      "name": "totalAusdcNode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 452,
                      "src": "7343:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7303:54:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 501,
                  "nodeType": "ExpressionStatement",
                  "src": "7303:54:14"
                }
              ]
            },
            "functionSelector": "08a767fe",
            "id": 503,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 455,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 454,
                  "name": "masterAndNodeInSameChain",
                  "nameLocations": [
                    "6986:24:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 155,
                  "src": "6986:24:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "6986:24:14"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 457,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "7026:3:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "7030:6:14",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "7026:10:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 459,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 456,
                  "name": "onlyValidNodes",
                  "nameLocations": [
                    "7011:14:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 140,
                  "src": "7011:14:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "7011:26:14"
              }
            ],
            "name": "nodeAaveFeedFromSameChain",
            "nameLocation": "6819:25:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 446,
                  "mutability": "mutable",
                  "name": "totalUsdcSupply",
                  "nameLocation": "6862:15:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 503,
                  "src": "6854:23:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 445,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6854:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 448,
                  "mutability": "mutable",
                  "name": "totalUsdcBorrow",
                  "nameLocation": "6895:15:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 503,
                  "src": "6887:23:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 447,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6887:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 450,
                  "mutability": "mutable",
                  "name": "supplyRate",
                  "nameLocation": "6928:10:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 503,
                  "src": "6920:18:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 449,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6920:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 452,
                  "mutability": "mutable",
                  "name": "totalAusdcNode",
                  "nameLocation": "6956:14:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 503,
                  "src": "6948:22:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 451,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6948:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6844:132:14"
            },
            "returnParameters": {
              "id": 460,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7038:0:14"
            },
            "scope": 1021,
            "src": "6810:554:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1693
            ],
            "body": {
              "id": 558,
              "nodeType": "Block",
              "src": "8020:387:14",
              "statements": [
                {
                  "assignments": [
                    521
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 521,
                      "mutability": "mutable",
                      "name": "command",
                      "nameLocation": "8036:7:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 558,
                      "src": "8030:13:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 520,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "8030:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 525,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 523,
                        "name": "_any2EvmMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 506,
                        "src": "8069:15:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Any2EVMMessage_$1800_memory_ptr",
                          "typeString": "struct Client.Any2EVMMessage memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Any2EVMMessage_$1800_memory_ptr",
                          "typeString": "struct Client.Any2EVMMessage memory"
                        }
                      ],
                      "id": 522,
                      "name": "_internalCommandRouter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1974,
                      "src": "8046:22:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Any2EVMMessage_$1800_memory_ptr_$returns$_t_uint8_$",
                        "typeString": "function (struct Client.Any2EVMMessage memory) returns (uint8)"
                      }
                    },
                    "id": 524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8046:39:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8030:55:14"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 526,
                      "name": "command",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 521,
                      "src": "8099:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 527,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8110:1:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8099:12:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 536,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 534,
                        "name": "command",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 521,
                        "src": "8182:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8193:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "8182:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 542,
                          "name": "command",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 521,
                          "src": "8266:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8277:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "8266:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 554,
                        "nodeType": "Block",
                        "src": "8341:60:14",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "696e76616c696420636f6d6d616e642066726f6d204e6f6465",
                                  "id": 551,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8362:27:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_5ae3160618806915eb95e7eff27bdd789150f31a91a3a3ee805c28ae74beda69",
                                    "typeString": "literal_string \"invalid command from Node\""
                                  },
                                  "value": "invalid command from Node"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_5ae3160618806915eb95e7eff27bdd789150f31a91a3a3ee805c28ae74beda69",
                                    "typeString": "literal_string \"invalid command from Node\""
                                  }
                                ],
                                "id": 550,
                                "name": "revert",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -19,
                                  -19
                                ],
                                "referencedDeclaration": -19,
                                "src": "8355:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (string memory) pure"
                                }
                              },
                              "id": 552,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8355:35:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 553,
                            "nodeType": "ExpressionStatement",
                            "src": "8355:35:14"
                          }
                        ]
                      },
                      "id": 555,
                      "nodeType": "IfStatement",
                      "src": "8262:139:14",
                      "trueBody": {
                        "id": 549,
                        "nodeType": "Block",
                        "src": "8280:55:14",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 546,
                                  "name": "_any2EvmMessage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 506,
                                  "src": "8308:15:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Any2EVMMessage_$1800_memory_ptr",
                                    "typeString": "struct Client.Any2EVMMessage memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_struct$_Any2EVMMessage_$1800_memory_ptr",
                                    "typeString": "struct Client.Any2EVMMessage memory"
                                  }
                                ],
                                "id": 545,
                                "name": "_nodeAaveFeed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 444,
                                "src": "8294:13:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Any2EVMMessage_$1800_memory_ptr_$returns$__$",
                                  "typeString": "function (struct Client.Any2EVMMessage memory)"
                                }
                              },
                              "id": 547,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8294:30:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 548,
                            "nodeType": "ExpressionStatement",
                            "src": "8294:30:14"
                          }
                        ]
                      }
                    },
                    "id": 556,
                    "nodeType": "IfStatement",
                    "src": "8178:223:14",
                    "trueBody": {
                      "id": 541,
                      "nodeType": "Block",
                      "src": "8196:60:14",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 538,
                                "name": "_any2EvmMessage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 506,
                                "src": "8229:15:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Any2EVMMessage_$1800_memory_ptr",
                                  "typeString": "struct Client.Any2EVMMessage memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Any2EVMMessage_$1800_memory_ptr",
                                  "typeString": "struct Client.Any2EVMMessage memory"
                                }
                              ],
                              "id": 537,
                              "name": "_resmumeOperations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 311,
                              "src": "8210:18:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Any2EVMMessage_$1800_memory_ptr_$returns$__$",
                                "typeString": "function (struct Client.Any2EVMMessage memory)"
                              }
                            },
                            "id": 539,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8210:35:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 540,
                          "nodeType": "ExpressionStatement",
                          "src": "8210:35:14"
                        }
                      ]
                    }
                  },
                  "id": 557,
                  "nodeType": "IfStatement",
                  "src": "8095:306:14",
                  "trueBody": {
                    "id": 533,
                    "nodeType": "Block",
                    "src": "8113:59:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 530,
                              "name": "_any2EvmMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 506,
                              "src": "8145:15:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Any2EVMMessage_$1800_memory_ptr",
                                "typeString": "struct Client.Any2EVMMessage memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Any2EVMMessage_$1800_memory_ptr",
                                "typeString": "struct Client.Any2EVMMessage memory"
                              }
                            ],
                            "id": 529,
                            "name": "_aWarpTokenMinter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 248,
                            "src": "8127:17:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Any2EVMMessage_$1800_memory_ptr_$returns$__$",
                              "typeString": "function (struct Client.Any2EVMMessage memory)"
                            }
                          },
                          "id": 531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8127:34:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 532,
                        "nodeType": "ExpressionStatement",
                        "src": "8127:34:14"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 559,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "expression": {
                          "id": 512,
                          "name": "_any2EvmMessage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 506,
                          "src": "7980:15:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Any2EVMMessage_$1800_memory_ptr",
                            "typeString": "struct Client.Any2EVMMessage memory"
                          }
                        },
                        "id": 513,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7996:6:14",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1793,
                        "src": "7980:22:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 515,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8005:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 514,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8005:7:14",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 516,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "8004:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        }
                      ],
                      "expression": {
                        "id": 510,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "7969:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 511,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "7973:6:14",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "7969:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7969:45:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 518,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 509,
                  "name": "onlyValidNodes",
                  "nameLocations": [
                    "7954:14:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 140,
                  "src": "7954:14:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "7954:61:14"
              }
            ],
            "name": "_ccipReceive",
            "nameLocation": "7839:12:14",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 508,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7937:8:14"
            },
            "parameters": {
              "id": 507,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 506,
                  "mutability": "mutable",
                  "name": "_any2EvmMessage",
                  "nameLocation": "7890:15:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 559,
                  "src": "7861:44:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Any2EVMMessage_$1800_memory_ptr",
                    "typeString": "struct Client.Any2EVMMessage"
                  },
                  "typeName": {
                    "id": 505,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 504,
                      "name": "Client.Any2EVMMessage",
                      "nameLocations": [
                        "7861:6:14",
                        "7868:14:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1800,
                      "src": "7861:21:14"
                    },
                    "referencedDeclaration": 1800,
                    "src": "7861:21:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Any2EVMMessage_$1800_storage_ptr",
                      "typeString": "struct Client.Any2EVMMessage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7851:60:14"
            },
            "returnParameters": {
              "id": 519,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8020:0:14"
            },
            "scope": 1021,
            "src": "7830:577:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 659,
              "nodeType": "Block",
              "src": "8982:1287:14",
              "statements": [
                {
                  "assignments": [
                    577
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 577,
                      "mutability": "mutable",
                      "name": "evm2AnyMessage",
                      "nameLocation": "9193:14:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 659,
                      "src": "9164:43:14",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EVM2AnyMessage_$1813_memory_ptr",
                        "typeString": "struct Client.EVM2AnyMessage"
                      },
                      "typeName": {
                        "id": 576,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 575,
                          "name": "Client.EVM2AnyMessage",
                          "nameLocations": [
                            "9164:6:14",
                            "9171:14:14"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1813,
                          "src": "9164:21:14"
                        },
                        "referencedDeclaration": 1813,
                        "src": "9164:21:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EVM2AnyMessage_$1813_storage_ptr",
                          "typeString": "struct Client.EVM2AnyMessage"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 586,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 579,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 563,
                        "src": "9241:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 580,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 565,
                        "src": "9264:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 583,
                            "name": "s_linkToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63,
                            "src": "9291:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LinkTokenInterface_$1946",
                              "typeString": "contract LinkTokenInterface"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LinkTokenInterface_$1946",
                              "typeString": "contract LinkTokenInterface"
                            }
                          ],
                          "id": 582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9283:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 581,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9283:7:14",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9283:20:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 578,
                      "name": "_buildCCIPMessage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 697,
                      "src": "9210:17:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$_t_address_$returns$_t_struct$_EVM2AnyMessage_$1813_memory_ptr_$",
                        "typeString": "function (address,bytes memory,address) pure returns (struct Client.EVM2AnyMessage memory)"
                      }
                    },
                    "id": 585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9210:103:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EVM2AnyMessage_$1813_memory_ptr",
                      "typeString": "struct Client.EVM2AnyMessage memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9164:149:14"
                },
                {
                  "assignments": [
                    589
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 589,
                      "mutability": "mutable",
                      "name": "router",
                      "nameLocation": "9421:6:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 659,
                      "src": "9407:20:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRouterClient_$1780",
                        "typeString": "contract IRouterClient"
                      },
                      "typeName": {
                        "id": 588,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 587,
                          "name": "IRouterClient",
                          "nameLocations": [
                            "9407:13:14"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1780,
                          "src": "9407:13:14"
                        },
                        "referencedDeclaration": 1780,
                        "src": "9407:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRouterClient_$1780",
                          "typeString": "contract IRouterClient"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 595,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 591,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "9444:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MasterNode_$1021",
                              "typeString": "contract MasterNode"
                            }
                          },
                          "id": 592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9449:9:14",
                          "memberName": "getRouter",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1705,
                          "src": "9444:14:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9444:16:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 590,
                      "name": "IRouterClient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1780,
                      "src": "9430:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IRouterClient_$1780_$",
                        "typeString": "type(contract IRouterClient)"
                      }
                    },
                    "id": 594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9430:31:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRouterClient_$1780",
                      "typeString": "contract IRouterClient"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9407:54:14"
                },
                {
                  "assignments": [
                    597
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 597,
                      "mutability": "mutable",
                      "name": "fees",
                      "nameLocation": "9537:4:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 659,
                      "src": "9529:12:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 596,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9529:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 603,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 600,
                        "name": "_destinationChainSelector",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 561,
                        "src": "9558:25:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 601,
                        "name": "evm2AnyMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 577,
                        "src": "9585:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EVM2AnyMessage_$1813_memory_ptr",
                          "typeString": "struct Client.EVM2AnyMessage memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_struct$_EVM2AnyMessage_$1813_memory_ptr",
                          "typeString": "struct Client.EVM2AnyMessage memory"
                        }
                      ],
                      "expression": {
                        "id": 598,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 589,
                        "src": "9544:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRouterClient_$1780",
                          "typeString": "contract IRouterClient"
                        }
                      },
                      "id": 599,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9551:6:14",
                      "memberName": "getFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1768,
                      "src": "9544:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint64_$_t_struct$_EVM2AnyMessage_$1813_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint64,struct Client.EVM2AnyMessage memory) view external returns (uint256)"
                      }
                    },
                    "id": 602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9544:56:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9529:71:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 607,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "9657:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 608,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9661:6:14",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "9657:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 611,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "9677:4:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MasterNode_$1021",
                                  "typeString": "contract MasterNode"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MasterNode_$1021",
                                  "typeString": "contract MasterNode"
                                }
                              ],
                              "id": 610,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9669:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 609,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9669:7:14",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 612,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9669:13:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 613,
                            "name": "fees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 597,
                            "src": "9684:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 605,
                            "name": "s_linkToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63,
                            "src": "9632:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LinkTokenInterface_$1946",
                              "typeString": "contract LinkTokenInterface"
                            }
                          },
                          "id": 606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9644:12:14",
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1945,
                          "src": "9632:24:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9632:57:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f742070726f7669646564204c696e6b20666f722066656573",
                        "id": 615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9703:28:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_afb0688769ed3833a956fba5ec2b64712f3f707f42b0b0fcc105794bfc66fab0",
                          "typeString": "literal_string \"Not provided Link for fees\""
                        },
                        "value": "Not provided Link for fees"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_afb0688769ed3833a956fba5ec2b64712f3f707f42b0b0fcc105794bfc66fab0",
                          "typeString": "literal_string \"Not provided Link for fees\""
                        }
                      ],
                      "id": 604,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9611:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9611:130:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 617,
                  "nodeType": "ExpressionStatement",
                  "src": "9611:130:14"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 618,
                      "name": "fees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 597,
                      "src": "9756:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 623,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "9793:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MasterNode_$1021",
                                "typeString": "contract MasterNode"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MasterNode_$1021",
                                "typeString": "contract MasterNode"
                              }
                            ],
                            "id": 622,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9785:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 621,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9785:7:14",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 624,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9785:13:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 619,
                          "name": "s_linkToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "9763:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LinkTokenInterface_$1946",
                            "typeString": "contract LinkTokenInterface"
                          }
                        },
                        "id": 620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9775:9:14",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1878,
                        "src": "9763:21:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 625,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9763:36:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9756:43:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 638,
                  "nodeType": "IfStatement",
                  "src": "9752:128:14",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 632,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "9867:4:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MasterNode_$1021",
                                    "typeString": "contract MasterNode"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MasterNode_$1021",
                                    "typeString": "contract MasterNode"
                                  }
                                ],
                                "id": 631,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9859:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 630,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9859:7:14",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 633,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9859:13:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 628,
                              "name": "s_linkToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63,
                              "src": "9837:11:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LinkTokenInterface_$1946",
                                "typeString": "contract LinkTokenInterface"
                              }
                            },
                            "id": 629,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9849:9:14",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1878,
                            "src": "9837:21:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9837:36:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 635,
                          "name": "fees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 597,
                          "src": "9875:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 627,
                        "name": "NotEnoughBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "9820:16:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                          "typeString": "function (uint256,uint256) pure"
                        }
                      },
                      "id": 636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9820:60:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 637,
                    "nodeType": "RevertStatement",
                    "src": "9813:67:14"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 644,
                            "name": "router",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 589,
                            "src": "10026:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IRouterClient_$1780",
                              "typeString": "contract IRouterClient"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IRouterClient_$1780",
                              "typeString": "contract IRouterClient"
                            }
                          ],
                          "id": 643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10018:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 642,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10018:7:14",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10018:15:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 646,
                        "name": "fees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 597,
                        "src": "10035:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 639,
                        "name": "s_linkToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63,
                        "src": "9998:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LinkTokenInterface_$1946",
                          "typeString": "contract LinkTokenInterface"
                        }
                      },
                      "id": 641,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10010:7:14",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1871,
                      "src": "9998:19:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9998:42:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 648,
                  "nodeType": "ExpressionStatement",
                  "src": "9998:42:14"
                },
                {
                  "expression": {
                    "id": 655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 649,
                      "name": "messageId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 571,
                      "src": "10132:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 652,
                          "name": "_destinationChainSelector",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 561,
                          "src": "10160:25:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        {
                          "id": 653,
                          "name": "evm2AnyMessage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 577,
                          "src": "10187:14:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_EVM2AnyMessage_$1813_memory_ptr",
                            "typeString": "struct Client.EVM2AnyMessage memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          {
                            "typeIdentifier": "t_struct$_EVM2AnyMessage_$1813_memory_ptr",
                            "typeString": "struct Client.EVM2AnyMessage memory"
                          }
                        ],
                        "expression": {
                          "id": 650,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 589,
                          "src": "10144:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IRouterClient_$1780",
                            "typeString": "contract IRouterClient"
                          }
                        },
                        "id": 651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10151:8:14",
                        "memberName": "ccipSend",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1779,
                        "src": "10144:15:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint64_$_t_struct$_EVM2AnyMessage_$1813_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (uint64,struct Client.EVM2AnyMessage memory) payable external returns (bytes32)"
                        }
                      },
                      "id": 654,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10144:58:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "10132:70:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 656,
                  "nodeType": "ExpressionStatement",
                  "src": "10132:70:14"
                },
                {
                  "expression": {
                    "id": 657,
                    "name": "messageId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 571,
                    "src": "10253:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 572,
                  "id": 658,
                  "nodeType": "Return",
                  "src": "10246:16:14"
                }
              ]
            },
            "id": 660,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 568,
                    "name": "_receiver",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 563,
                    "src": "8943:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 569,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 567,
                  "name": "onlyValidNodes",
                  "nameLocations": [
                    "8928:14:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 140,
                  "src": "8928:14:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "8928:25:14"
              }
            ],
            "name": "_sendMessage",
            "nameLocation": "8803:12:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 561,
                  "mutability": "mutable",
                  "name": "_destinationChainSelector",
                  "nameLocation": "8832:25:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 660,
                  "src": "8825:32:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 560,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "8825:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 563,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "8875:9:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 660,
                  "src": "8867:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 562,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8867:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 565,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "8907:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 660,
                  "src": "8894:18:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 564,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8894:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8815:103:14"
            },
            "returnParameters": {
              "id": 572,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 571,
                  "mutability": "mutable",
                  "name": "messageId",
                  "nameLocation": "8971:9:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 660,
                  "src": "8963:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 570,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8963:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8962:19:14"
            },
            "scope": 1021,
            "src": "8794:1475:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 696,
              "nodeType": "Block",
              "src": "10955:662:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 677,
                            "name": "_receiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 663,
                            "src": "11045:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 675,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "11034:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "11038:6:14",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "11034:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11034:21:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 679,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 665,
                        "src": "11111:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 684,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11198:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "11170:27:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_EVMTokenAmount_$1787_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (struct Client.EVMTokenAmount memory[] memory)"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 681,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 680,
                                "name": "Client.EVMTokenAmount",
                                "nameLocations": [
                                  "11174:6:14",
                                  "11181:14:14"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1787,
                                "src": "11174:21:14"
                              },
                              "referencedDeclaration": 1787,
                              "src": "11174:21:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_EVMTokenAmount_$1787_storage_ptr",
                                "typeString": "struct Client.EVMTokenAmount"
                              }
                            },
                            "id": 682,
                            "nodeType": "ArrayTypeName",
                            "src": "11174:23:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$1787_storage_$dyn_storage_ptr",
                              "typeString": "struct Client.EVMTokenAmount[]"
                            }
                          }
                        },
                        "id": 685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11170:30:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$1787_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Client.EVMTokenAmount memory[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "325f3030305f303030",
                                "id": 690,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11416:9:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2000000_by_1",
                                  "typeString": "int_const 2000000"
                                },
                                "value": "2_000_000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_2000000_by_1",
                                  "typeString": "int_const 2000000"
                                }
                              ],
                              "expression": {
                                "id": 688,
                                "name": "Client",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1835,
                                "src": "11383:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Client_$1835_$",
                                  "typeString": "type(library Client)"
                                }
                              },
                              "id": 689,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11390:14:14",
                              "memberName": "EVMExtraArgsV1",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1819,
                              "src": "11383:21:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_EVMExtraArgsV1_$1819_storage_ptr_$",
                                "typeString": "type(struct Client.EVMExtraArgsV1 storage pointer)"
                              }
                            },
                            "id": 691,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [
                              "11406:8:14"
                            ],
                            "names": [
                              "gasLimit"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "11383:44:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_EVMExtraArgsV1_$1819_memory_ptr",
                              "typeString": "struct Client.EVMExtraArgsV1 memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_EVMExtraArgsV1_$1819_memory_ptr",
                              "typeString": "struct Client.EVMExtraArgsV1 memory"
                            }
                          ],
                          "expression": {
                            "id": 686,
                            "name": "Client",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1835,
                            "src": "11279:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Client_$1835_$",
                              "typeString": "type(library Client)"
                            }
                          },
                          "id": 687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11286:12:14",
                          "memberName": "_argsToBytes",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1834,
                          "src": "11279:19:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_EVMExtraArgsV1_$1819_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (struct Client.EVMExtraArgsV1 memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11279:166:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 693,
                        "name": "_feeTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 667,
                        "src": "11579:16:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$1787_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Client.EVMTokenAmount memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 673,
                        "name": "Client",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1835,
                        "src": "10984:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Client_$1835_$",
                          "typeString": "type(library Client)"
                        }
                      },
                      "id": 674,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10991:14:14",
                      "memberName": "EVM2AnyMessage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1813,
                      "src": "10984:21:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_EVM2AnyMessage_$1813_storage_ptr_$",
                        "typeString": "type(struct Client.EVM2AnyMessage storage pointer)"
                      }
                    },
                    "id": 694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "11024:8:14",
                      "11105:4:14",
                      "11156:12:14",
                      "11268:9:14",
                      "11569:8:14"
                    ],
                    "names": [
                      "receiver",
                      "data",
                      "tokenAmounts",
                      "extraArgs",
                      "feeToken"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "10984:626:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EVM2AnyMessage_$1813_memory_ptr",
                      "typeString": "struct Client.EVM2AnyMessage memory"
                    }
                  },
                  "functionReturnParameters": 672,
                  "id": 695,
                  "nodeType": "Return",
                  "src": "10965:645:14"
                }
              ]
            },
            "documentation": {
              "id": 661,
              "nodeType": "StructuredDocumentation",
              "src": "10275:501:14",
              "text": "@notice Construct a CCIP message.\n @dev This function will create an EVM2AnyMessage struct with all the necessary information for programmable tokens transfer.\n @param _receiver The address of the receiver.\n @param _data The bytes data to be sent.\n @param _feeTokenAddress The address of the token used for fees. Set address(0) for native gas.\n @return Client.EVM2AnyMessage Returns an EVM2AnyMessage struct which contains information for sending a CCIP message."
            },
            "id": 697,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_buildCCIPMessage",
            "nameLocation": "10790:17:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 663,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "10825:9:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 697,
                  "src": "10817:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 662,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10817:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 665,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "10857:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 697,
                  "src": "10844:18:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 664,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10844:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 667,
                  "mutability": "mutable",
                  "name": "_feeTokenAddress",
                  "nameLocation": "10880:16:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 697,
                  "src": "10872:24:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 666,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10872:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10807:95:14"
            },
            "returnParameters": {
              "id": 672,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 671,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 697,
                  "src": "10925:28:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_EVM2AnyMessage_$1813_memory_ptr",
                    "typeString": "struct Client.EVM2AnyMessage"
                  },
                  "typeName": {
                    "id": 670,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 669,
                      "name": "Client.EVM2AnyMessage",
                      "nameLocations": [
                        "10925:6:14",
                        "10932:14:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1813,
                      "src": "10925:21:14"
                    },
                    "referencedDeclaration": 1813,
                    "src": "10925:21:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EVM2AnyMessage_$1813_storage_ptr",
                      "typeString": "struct Client.EVM2AnyMessage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10924:30:14"
            },
            "scope": 1021,
            "src": "10781:836:14",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 701,
              "nodeType": "Block",
              "src": "11911:2:14",
              "statements": []
            },
            "documentation": {
              "id": 698,
              "nodeType": "StructuredDocumentation",
              "src": "11623:256:14",
              "text": "@notice Fallback function to allow the contract to receive Ether.\n @dev This function has no function body, making it a default function for receiving Ether.\n It is automatically called when Ether is sent to the contract without any data."
            },
            "id": 702,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 699,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11891:2:14"
            },
            "returnParameters": {
              "id": 700,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11911:0:14"
            },
            "scope": 1021,
            "src": "11884:29:14",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 804,
              "nodeType": "Block",
              "src": "12213:1252:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 708,
                            "name": "validNodes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 96,
                            "src": "12244:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$91_storage_$",
                              "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                            }
                          },
                          "id": 710,
                          "indexExpression": {
                            "id": 709,
                            "name": "_destinationNodeAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 704,
                            "src": "12255:23:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12244:35:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ValidNodes_$91_storage",
                            "typeString": "struct MasterNode.ValidNodes storage ref"
                          }
                        },
                        "id": 711,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12280:11:14",
                        "memberName": "isValidNode",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 76,
                        "src": "12244:47:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "44657374696e6174696f6e204e6f6465206973206e6f74207661696c64",
                        "id": 712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12305:31:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b414758b125486fc8ed6ba85f765624ef198cd04669cbe6ffb0971f2edf95c73",
                          "typeString": "literal_string \"Destination Node is not vaild\""
                        },
                        "value": "Destination Node is not vaild"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b414758b125486fc8ed6ba85f765624ef198cd04669cbe6ffb0971f2edf95c73",
                          "typeString": "literal_string \"Destination Node is not vaild\""
                        }
                      ],
                      "id": 707,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12223:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12223:123:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 714,
                  "nodeType": "ExpressionStatement",
                  "src": "12223:123:14"
                },
                {
                  "condition": {
                    "id": 716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "12415:21:14",
                    "subExpression": {
                      "id": 715,
                      "name": "isProtocolInTestMode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "12416:20:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 726,
                  "nodeType": "IfStatement",
                  "src": "12411:190:14",
                  "trueBody": {
                    "id": 725,
                    "nodeType": "Block",
                    "src": "12438:163:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 719,
                                  "name": "activeNode",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 72,
                                  "src": "12495:10:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 720,
                                  "name": "_destinationNodeAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 704,
                                  "src": "12507:23:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 718,
                                "name": "checkApprovedWarp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 996,
                                "src": "12477:17:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address,address) view returns (bool)"
                                }
                              },
                              "id": 721,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12477:54:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "436f6e646974696f6e20746f2077617270206e6f74206d6574",
                              "id": 722,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12549:27:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f70ce457302d2edbd68a4c1955414d27cfaaadb35a052a336e2e0cc2fd2c2238",
                                "typeString": "literal_string \"Condition to warp not met\""
                              },
                              "value": "Condition to warp not met"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f70ce457302d2edbd68a4c1955414d27cfaaadb35a052a336e2e0cc2fd2c2238",
                                "typeString": "literal_string \"Condition to warp not met\""
                              }
                            ],
                            "id": 717,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "12452:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12452:138:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 724,
                        "nodeType": "ExpressionStatement",
                        "src": "12452:138:14"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    728
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 728,
                      "mutability": "mutable",
                      "name": "_destinationCCIPid",
                      "nameLocation": "12617:18:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 804,
                      "src": "12610:25:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 727,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "12610:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 733,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 729,
                        "name": "validNodes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96,
                        "src": "12638:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$91_storage_$",
                          "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                        }
                      },
                      "id": 731,
                      "indexExpression": {
                        "id": 730,
                        "name": "_destinationNodeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 704,
                        "src": "12649:23:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "12638:35:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ValidNodes_$91_storage",
                        "typeString": "struct MasterNode.ValidNodes storage ref"
                      }
                    },
                    "id": 732,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "12687:11:14",
                    "memberName": "chainCCIPid",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 80,
                    "src": "12638:60:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12610:88:14"
                },
                {
                  "assignments": [
                    735
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 735,
                      "mutability": "mutable",
                      "name": "commandWarpAssets",
                      "nameLocation": "12714:17:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 804,
                      "src": "12708:23:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 734,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "12708:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 737,
                  "initialValue": {
                    "hexValue": "31",
                    "id": 736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12734:1:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12708:27:14"
                },
                {
                  "assignments": [
                    739
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 739,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "12759:4:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 804,
                      "src": "12746:17:14",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 738,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "12746:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 746,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 742,
                        "name": "commandWarpAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 735,
                        "src": "12790:17:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 743,
                        "name": "_destinationCCIPid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 728,
                        "src": "12821:18:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 744,
                        "name": "_destinationNodeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 704,
                        "src": "12853:23:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 740,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "12766:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 741,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "12770:6:14",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "12766:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12766:120:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12746:140:14"
                },
                {
                  "expression": {
                    "id": 752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 747,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 96,
                          "src": "12896:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$91_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 749,
                        "indexExpression": {
                          "id": 748,
                          "name": "activeNode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 72,
                          "src": "12907:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12896:22:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$91_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 750,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "12919:12:14",
                      "memberName": "isActiveNode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 78,
                      "src": "12896:35:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 751,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12934:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "12896:43:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 753,
                  "nodeType": "ExpressionStatement",
                  "src": "12896:43:14"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    },
                    "id": 759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 754,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 96,
                          "src": "12954:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$91_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 756,
                        "indexExpression": {
                          "id": 755,
                          "name": "activeNode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 72,
                          "src": "12965:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12954:22:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$91_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 757,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12977:11:14",
                      "memberName": "chainCCIPid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 80,
                      "src": "12954:34:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 758,
                      "name": "MASTER_CONTRACT_CHAIN_ID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "12992:24:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "12954:62:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 778,
                    "nodeType": "Block",
                    "src": "13181:91:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 770,
                                  "name": "validNodes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 96,
                                  "src": "13208:10:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$91_storage_$",
                                    "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                                  }
                                },
                                "id": 772,
                                "indexExpression": {
                                  "id": 771,
                                  "name": "activeNode",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 72,
                                  "src": "13219:10:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "13208:22:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ValidNodes_$91_storage",
                                  "typeString": "struct MasterNode.ValidNodes storage ref"
                                }
                              },
                              "id": 773,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13231:11:14",
                              "memberName": "chainCCIPid",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 80,
                              "src": "13208:34:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            {
                              "id": 774,
                              "name": "activeNode",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 72,
                              "src": "13244:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 775,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 739,
                              "src": "13256:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 769,
                            "name": "_sendMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 660,
                            "src": "13195:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint64_$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (uint64,address,bytes memory) returns (bytes32)"
                            }
                          },
                          "id": 776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13195:66:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 777,
                        "nodeType": "ExpressionStatement",
                        "src": "13195:66:14"
                      }
                    ]
                  },
                  "id": 779,
                  "nodeType": "IfStatement",
                  "src": "12950:322:14",
                  "trueBody": {
                    "id": 768,
                    "nodeType": "Block",
                    "src": "13018:157:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 764,
                              "name": "_destinationCCIPid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 728,
                              "src": "13091:18:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            {
                              "id": 765,
                              "name": "_destinationNodeAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 704,
                              "src": "13127:23:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 761,
                                  "name": "activeNode",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 72,
                                  "src": "13038:10:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 760,
                                "name": "INode",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2093,
                                "src": "13032:5:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_INode_$2093_$",
                                  "typeString": "type(contract INode)"
                                }
                              },
                              "id": 762,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13032:17:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_INode_$2093",
                                "typeString": "contract INode"
                              }
                            },
                            "id": 763,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13050:23:14",
                            "memberName": "warpAssetsFromSameChain",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2092,
                            "src": "13032:41:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint64_$_t_address_$returns$__$",
                              "typeString": "function (uint64,address) external"
                            }
                          },
                          "id": 766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13032:132:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 767,
                        "nodeType": "ExpressionStatement",
                        "src": "13032:132:14"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 780,
                      "name": "lastActiveNode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "13282:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 781,
                      "name": "activeNode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "13299:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13282:27:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 783,
                  "nodeType": "ExpressionStatement",
                  "src": "13282:27:14"
                },
                {
                  "expression": {
                    "id": 789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 784,
                      "name": "activeNode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "13319:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13340:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "13332:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 785,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13332:7:14",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 788,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13332:10:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13319:23:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 790,
                  "nodeType": "ExpressionStatement",
                  "src": "13319:23:14"
                },
                {
                  "expression": {
                    "id": 794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 791,
                      "name": "lastTimeWarped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74,
                      "src": "13352:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 792,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "13369:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 793,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13375:9:14",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "13369:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13352:32:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 795,
                  "nodeType": "ExpressionStatement",
                  "src": "13352:32:14"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 797,
                            "name": "validNodes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 96,
                            "src": "13411:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$91_storage_$",
                              "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                            }
                          },
                          "id": 799,
                          "indexExpression": {
                            "id": 798,
                            "name": "activeNode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 72,
                            "src": "13422:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13411:22:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ValidNodes_$91_storage",
                            "typeString": "struct MasterNode.ValidNodes storage ref"
                          }
                        },
                        "id": 800,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13434:11:14",
                        "memberName": "chainCCIPid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 80,
                        "src": "13411:34:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 801,
                        "name": "activeNode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "13447:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 796,
                      "name": "WarpAssets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "13400:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint64_$_t_address_$returns$__$",
                        "typeString": "function (uint64,address)"
                      }
                    },
                    "id": 802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13400:58:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 803,
                  "nodeType": "EmitStatement",
                  "src": "13395:63:14"
                }
              ]
            },
            "functionSelector": "0a2ac7b7",
            "id": 805,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "warpAssets",
            "nameLocation": "12160:10:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 705,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 704,
                  "mutability": "mutable",
                  "name": "_destinationNodeAddress",
                  "nameLocation": "12179:23:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 805,
                  "src": "12171:31:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 703,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12171:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12170:33:14"
            },
            "returnParameters": {
              "id": 706,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12213:0:14"
            },
            "scope": 1021,
            "src": "12151:1314:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 885,
              "nodeType": "Block",
              "src": "13746:696:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 811,
                            "name": "validNodes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 96,
                            "src": "13764:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$91_storage_$",
                              "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                            }
                          },
                          "id": 813,
                          "indexExpression": {
                            "id": 812,
                            "name": "activeNode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 72,
                            "src": "13775:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13764:22:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ValidNodes_$91_storage",
                            "typeString": "struct MasterNode.ValidNodes storage ref"
                          }
                        },
                        "id": 814,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13787:12:14",
                        "memberName": "isActiveNode",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 78,
                        "src": "13764:35:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f6465206973206e6f7420416374697665",
                        "id": 815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13801:20:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_036926b7eb2047bdf695035566f1e9989601a3dea1b4917f558eca27485e05b9",
                          "typeString": "literal_string \"Node is not Active\""
                        },
                        "value": "Node is not Active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_036926b7eb2047bdf695035566f1e9989601a3dea1b4917f558eca27485e05b9",
                          "typeString": "literal_string \"Node is not Active\""
                        }
                      ],
                      "id": 810,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13756:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13756:66:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 817,
                  "nodeType": "ExpressionStatement",
                  "src": "13756:66:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 819,
                          "name": "shares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 807,
                          "src": "13841:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 821,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "13861:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 822,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13865:6:14",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "13861:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 820,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1120,
                            "src": "13851:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13851:21:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13841:31:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f756768742062616c616e6365",
                        "id": 825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13874:21:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8b745e1e49bc3a21dc0e85a5fcefdac1a659905f53d03b0cfc0a9455e9c5156d",
                          "typeString": "literal_string \"Not enought balance\""
                        },
                        "value": "Not enought balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8b745e1e49bc3a21dc0e85a5fcefdac1a659905f53d03b0cfc0a9455e9c5156d",
                          "typeString": "literal_string \"Not enought balance\""
                        }
                      ],
                      "id": 818,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13833:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13833:63:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 827,
                  "nodeType": "ExpressionStatement",
                  "src": "13833:63:14"
                },
                {
                  "assignments": [
                    829
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 829,
                      "mutability": "mutable",
                      "name": "commandWitdraw",
                      "nameLocation": "13913:14:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 885,
                      "src": "13907:20:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 828,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "13907:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 831,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "13930:1:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13907:24:14"
                },
                {
                  "assignments": [
                    833
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 833,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "13955:4:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 885,
                      "src": "13942:17:14",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 832,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "13942:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 841,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 836,
                        "name": "commandWitdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 829,
                        "src": "13973:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "expression": {
                          "id": 837,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "13989:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13993:6:14",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "13989:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 839,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 807,
                        "src": "14001:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 834,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "13962:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 835,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "13966:6:14",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "13962:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13962:46:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13942:66:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 843,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "14025:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14029:6:14",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "14025:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 845,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 807,
                        "src": "14037:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 842,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1497,
                      "src": "14019:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14019:25:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 847,
                  "nodeType": "ExpressionStatement",
                  "src": "14019:25:14"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    },
                    "id": 853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 848,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 96,
                          "src": "14059:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$91_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 850,
                        "indexExpression": {
                          "id": 849,
                          "name": "activeNode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 72,
                          "src": "14070:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14059:22:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$91_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 851,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14082:11:14",
                      "memberName": "chainCCIPid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 80,
                      "src": "14059:34:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 852,
                      "name": "MASTER_CONTRACT_CHAIN_ID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "14097:24:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "14059:62:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 873,
                    "nodeType": "Block",
                    "src": "14213:91:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 865,
                                  "name": "validNodes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 96,
                                  "src": "14240:10:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$91_storage_$",
                                    "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                                  }
                                },
                                "id": 867,
                                "indexExpression": {
                                  "id": 866,
                                  "name": "activeNode",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 72,
                                  "src": "14251:10:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "14240:22:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ValidNodes_$91_storage",
                                  "typeString": "struct MasterNode.ValidNodes storage ref"
                                }
                              },
                              "id": 868,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14263:11:14",
                              "memberName": "chainCCIPid",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 80,
                              "src": "14240:34:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            {
                              "id": 869,
                              "name": "activeNode",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 72,
                              "src": "14276:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 870,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 833,
                              "src": "14288:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 864,
                            "name": "_sendMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 660,
                            "src": "14227:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint64_$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (uint64,address,bytes memory) returns (bytes32)"
                            }
                          },
                          "id": 871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14227:66:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 872,
                        "nodeType": "ExpressionStatement",
                        "src": "14227:66:14"
                      }
                    ]
                  },
                  "id": 874,
                  "nodeType": "IfStatement",
                  "src": "14055:249:14",
                  "trueBody": {
                    "id": 863,
                    "nodeType": "Block",
                    "src": "14123:84:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 858,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "14177:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 859,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14181:6:14",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "14177:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 860,
                              "name": "shares",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 807,
                              "src": "14189:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 855,
                                  "name": "activeNode",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 72,
                                  "src": "14143:10:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 854,
                                "name": "INode",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2093,
                                "src": "14137:5:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_INode_$2093_$",
                                  "typeString": "type(contract INode)"
                                }
                              },
                              "id": 856,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14137:17:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_INode_$2093",
                                "typeString": "contract INode"
                              }
                            },
                            "id": 857,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14155:21:14",
                            "memberName": "withdrawFromSameChain",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2085,
                            "src": "14137:39:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 861,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14137:59:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 862,
                        "nodeType": "ExpressionStatement",
                        "src": "14137:59:14"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 876,
                            "name": "validNodes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 96,
                            "src": "14347:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$91_storage_$",
                              "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                            }
                          },
                          "id": 878,
                          "indexExpression": {
                            "id": 877,
                            "name": "activeNode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 72,
                            "src": "14358:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14347:22:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ValidNodes_$91_storage",
                            "typeString": "struct MasterNode.ValidNodes storage ref"
                          }
                        },
                        "id": 879,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14370:11:14",
                        "memberName": "chainCCIPid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 80,
                        "src": "14347:34:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "expression": {
                          "id": 880,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "14395:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14399:6:14",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "14395:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 882,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 807,
                        "src": "14419:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 875,
                      "name": "WithdrawAssets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47,
                      "src": "14319:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint64_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint64,address,uint256)"
                      }
                    },
                    "id": 883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14319:116:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 884,
                  "nodeType": "EmitStatement",
                  "src": "14314:121:14"
                }
              ]
            },
            "functionSelector": "2e1a7d4d",
            "id": 886,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "13712:8:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 808,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 807,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "13729:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 886,
                  "src": "13721:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 806,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13721:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13720:16:14"
            },
            "returnParameters": {
              "id": 809,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13746:0:14"
            },
            "scope": 1021,
            "src": "13703:739:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 995,
              "nodeType": "Block",
              "src": "14802:982:14",
              "statements": [
                {
                  "assignments": [
                    896
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 896,
                      "mutability": "mutable",
                      "name": "newSupplyRate",
                      "nameLocation": "14820:13:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 995,
                      "src": "14812:21:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 895,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14812:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 915,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 898,
                            "name": "validNodes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 96,
                            "src": "14873:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$91_storage_$",
                              "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                            }
                          },
                          "id": 900,
                          "indexExpression": {
                            "id": 899,
                            "name": "destinationNode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 890,
                            "src": "14884:15:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14873:27:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ValidNodes_$91_storage",
                            "typeString": "struct MasterNode.ValidNodes storage ref"
                          }
                        },
                        "id": 901,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14901:15:14",
                        "memberName": "totalUsdcSupply",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 84,
                        "src": "14873:43:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 902,
                            "name": "validNodes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 96,
                            "src": "14930:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$91_storage_$",
                              "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                            }
                          },
                          "id": 904,
                          "indexExpression": {
                            "id": 903,
                            "name": "destinationNode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 890,
                            "src": "14941:15:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14930:27:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ValidNodes_$91_storage",
                            "typeString": "struct MasterNode.ValidNodes storage ref"
                          }
                        },
                        "id": 905,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14958:15:14",
                        "memberName": "totalUsdcBorrow",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 86,
                        "src": "14930:43:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 906,
                            "name": "validNodes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 96,
                            "src": "14987:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$91_storage_$",
                              "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                            }
                          },
                          "id": 908,
                          "indexExpression": {
                            "id": 907,
                            "name": "destinationNode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 890,
                            "src": "14998:15:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14987:27:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ValidNodes_$91_storage",
                            "typeString": "struct MasterNode.ValidNodes storage ref"
                          }
                        },
                        "id": 909,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15015:10:14",
                        "memberName": "supplyRate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 88,
                        "src": "14987:38:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 910,
                            "name": "validNodes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 96,
                            "src": "15039:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$91_storage_$",
                              "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                            }
                          },
                          "id": 912,
                          "indexExpression": {
                            "id": 911,
                            "name": "destinationNode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 890,
                            "src": "15050:15:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "15039:27:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ValidNodes_$91_storage",
                            "typeString": "struct MasterNode.ValidNodes storage ref"
                          }
                        },
                        "id": 913,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15067:14:14",
                        "memberName": "totalAusdcNode",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 90,
                        "src": "15039:42:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 897,
                      "name": "calculateNewSupplyRates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2075,
                      "src": "14836:23:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14836:255:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14812:279:14"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 986,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 979,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 965,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 955,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 945,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 938,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 931,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 924,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 921,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 916,
                                          "name": "lastTimeWarped",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 74,
                                          "src": "15121:14:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_rational_86400_by_1",
                                                "typeString": "int_const 86400"
                                              },
                                              "id": 919,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "hexValue": "33363030",
                                                "id": 917,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "15139:4:14",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_3600_by_1",
                                                  "typeString": "int_const 3600"
                                                },
                                                "value": "3600"
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "*",
                                              "rightExpression": {
                                                "hexValue": "3234",
                                                "id": 918,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "15146:2:14",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_24_by_1",
                                                  "typeString": "int_const 24"
                                                },
                                                "value": "24"
                                              },
                                              "src": "15139:9:14",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_86400_by_1",
                                                "typeString": "int_const 86400"
                                              }
                                            }
                                          ],
                                          "id": 920,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "15138:11:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_86400_by_1",
                                            "typeString": "int_const 86400"
                                          }
                                        },
                                        "src": "15121:28:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<",
                                      "rightExpression": {
                                        "expression": {
                                          "id": 922,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -4,
                                          "src": "15152:5:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 923,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "15158:9:14",
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "15152:15:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "15121:46:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&&",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "id": 930,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 925,
                                            "name": "validNodes",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 96,
                                            "src": "15183:10:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$91_storage_$",
                                              "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                                            }
                                          },
                                          "id": 927,
                                          "indexExpression": {
                                            "id": 926,
                                            "name": "_activeNode",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 888,
                                            "src": "15194:11:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "15183:23:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_ValidNodes_$91_storage",
                                            "typeString": "struct MasterNode.ValidNodes storage ref"
                                          }
                                        },
                                        "id": 928,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "15207:12:14",
                                        "memberName": "isActiveNode",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 78,
                                        "src": "15183:36:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "hexValue": "74727565",
                                        "id": 929,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "15223:4:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "true"
                                      },
                                      "src": "15183:44:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "15121:106:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "&&",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 937,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 932,
                                          "name": "validNodes",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 96,
                                          "src": "15243:10:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$91_storage_$",
                                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                                          }
                                        },
                                        "id": 934,
                                        "indexExpression": {
                                          "id": 933,
                                          "name": "_activeNode",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 888,
                                          "src": "15254:11:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "15243:23:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_ValidNodes_$91_storage",
                                          "typeString": "struct MasterNode.ValidNodes storage ref"
                                        }
                                      },
                                      "id": 935,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "15267:16:14",
                                      "memberName": "lastDataFromAave",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 82,
                                      "src": "15243:40:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 936,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "15286:1:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "15243:44:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "15121:166:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 944,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 939,
                                        "name": "validNodes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 96,
                                        "src": "15303:10:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$91_storage_$",
                                          "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                                        }
                                      },
                                      "id": 941,
                                      "indexExpression": {
                                        "id": 940,
                                        "name": "destinationNode",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 890,
                                        "src": "15314:15:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "15303:27:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ValidNodes_$91_storage",
                                        "typeString": "struct MasterNode.ValidNodes storage ref"
                                      }
                                    },
                                    "id": 942,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "15331:16:14",
                                    "memberName": "lastDataFromAave",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 82,
                                    "src": "15303:44:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 943,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "15350:1:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "15303:48:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "15121:230:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 954,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 951,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 946,
                                        "name": "validNodes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 96,
                                        "src": "15367:10:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$91_storage_$",
                                          "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                                        }
                                      },
                                      "id": 948,
                                      "indexExpression": {
                                        "id": 947,
                                        "name": "_activeNode",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 888,
                                        "src": "15378:11:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "15367:23:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ValidNodes_$91_storage",
                                        "typeString": "struct MasterNode.ValidNodes storage ref"
                                      }
                                    },
                                    "id": 949,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "15391:16:14",
                                    "memberName": "lastDataFromAave",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 82,
                                    "src": "15367:40:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "hexValue": "33363030",
                                    "id": 950,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "15410:4:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_3600_by_1",
                                      "typeString": "int_const 3600"
                                    },
                                    "value": "3600"
                                  },
                                  "src": "15367:47:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "expression": {
                                    "id": 952,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "15417:5:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 953,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "15423:9:14",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "15417:15:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15367:65:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "15121:311:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 964,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 961,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 956,
                                      "name": "validNodes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 96,
                                      "src": "15448:10:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$91_storage_$",
                                        "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                                      }
                                    },
                                    "id": 958,
                                    "indexExpression": {
                                      "id": 957,
                                      "name": "destinationNode",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 890,
                                      "src": "15459:15:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "15448:27:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ValidNodes_$91_storage",
                                      "typeString": "struct MasterNode.ValidNodes storage ref"
                                    }
                                  },
                                  "id": 959,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "15476:16:14",
                                  "memberName": "lastDataFromAave",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 82,
                                  "src": "15448:44:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "hexValue": "33363030",
                                  "id": 960,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "15495:4:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_3600_by_1",
                                    "typeString": "int_const 3600"
                                  },
                                  "value": "3600"
                                },
                                "src": "15448:51:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "expression": {
                                  "id": 962,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "15514:5:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 963,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "15520:9:14",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "15514:15:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "15448:81:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "15121:408:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 971,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 966,
                                  "name": "validNodes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 96,
                                  "src": "15545:10:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$91_storage_$",
                                    "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                                  }
                                },
                                "id": 968,
                                "indexExpression": {
                                  "id": 967,
                                  "name": "destinationNode",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 890,
                                  "src": "15556:15:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "15545:27:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ValidNodes_$91_storage",
                                  "typeString": "struct MasterNode.ValidNodes storage ref"
                                }
                              },
                              "id": 969,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15573:11:14",
                              "memberName": "isValidNode",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 76,
                              "src": "15545:39:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "74727565",
                              "id": 970,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15588:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            "src": "15545:47:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "15121:471:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 978,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 973,
                                "name": "validNodes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 96,
                                "src": "15608:10:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$91_storage_$",
                                  "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                                }
                              },
                              "id": 975,
                              "indexExpression": {
                                "id": 974,
                                "name": "destinationNode",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 890,
                                "src": "15619:15:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15608:27:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ValidNodes_$91_storage",
                                "typeString": "struct MasterNode.ValidNodes storage ref"
                              }
                            },
                            "id": 976,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "15636:12:14",
                            "memberName": "isActiveNode",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 78,
                            "src": "15608:40:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "66616c7365",
                            "id": 977,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15652:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "15608:49:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "15121:536:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 980,
                              "name": "validNodes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 96,
                              "src": "15673:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$91_storage_$",
                                "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                              }
                            },
                            "id": 982,
                            "indexExpression": {
                              "id": 981,
                              "name": "_activeNode",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 888,
                              "src": "15684:11:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15673:23:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ValidNodes_$91_storage",
                              "typeString": "struct MasterNode.ValidNodes storage ref"
                            }
                          },
                          "id": 983,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15697:10:14",
                          "memberName": "supplyRate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 88,
                          "src": "15673:34:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15710:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "15673:38:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "15121:590:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 992,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 987,
                            "name": "validNodes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 96,
                            "src": "15727:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$91_storage_$",
                              "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                            }
                          },
                          "id": 989,
                          "indexExpression": {
                            "id": 988,
                            "name": "_activeNode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 888,
                            "src": "15738:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "15727:23:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ValidNodes_$91_storage",
                            "typeString": "struct MasterNode.ValidNodes storage ref"
                          }
                        },
                        "id": 990,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15751:10:14",
                        "memberName": "supplyRate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 88,
                        "src": "15727:34:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 991,
                        "name": "newSupplyRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 896,
                        "src": "15764:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "15727:50:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "15121:656:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 894,
                  "id": 994,
                  "nodeType": "Return",
                  "src": "15102:675:14"
                }
              ]
            },
            "functionSelector": "1d880928",
            "id": 996,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkApprovedWarp",
            "nameLocation": "14689:17:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 891,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 888,
                  "mutability": "mutable",
                  "name": "_activeNode",
                  "nameLocation": "14724:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 996,
                  "src": "14716:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 887,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14716:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 890,
                  "mutability": "mutable",
                  "name": "destinationNode",
                  "nameLocation": "14753:15:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 996,
                  "src": "14745:23:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 889,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14745:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14706:68:14"
            },
            "returnParameters": {
              "id": 894,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 893,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 996,
                  "src": "14796:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 892,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14796:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14795:6:14"
            },
            "scope": 1021,
            "src": "14680:1104:14",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1019,
              "nodeType": "Block",
              "src": "15980:168:14",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1001,
                      "name": "activeNode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "15994:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1004,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16016:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "16008:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1002,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "16008:7:14",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1005,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16008:10:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "15994:24:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1013,
                  "nodeType": "IfStatement",
                  "src": "15990:100:14",
                  "trueBody": {
                    "id": 1012,
                    "nodeType": "Block",
                    "src": "16020:70:14",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1007,
                              "name": "validNodes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 96,
                              "src": "16041:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$91_storage_$",
                                "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                              }
                            },
                            "id": 1009,
                            "indexExpression": {
                              "id": 1008,
                              "name": "lastActiveNode",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 70,
                              "src": "16052:14:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16041:26:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ValidNodes_$91_storage",
                              "typeString": "struct MasterNode.ValidNodes storage ref"
                            }
                          },
                          "id": 1010,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "16068:11:14",
                          "memberName": "chainCCIPid",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 80,
                          "src": "16041:38:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "functionReturnParameters": 1000,
                        "id": 1011,
                        "nodeType": "Return",
                        "src": "16034:45:14"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 1014,
                        "name": "validNodes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96,
                        "src": "16107:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$91_storage_$",
                          "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                        }
                      },
                      "id": 1016,
                      "indexExpression": {
                        "id": 1015,
                        "name": "activeNode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "16118:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "16107:22:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ValidNodes_$91_storage",
                        "typeString": "struct MasterNode.ValidNodes storage ref"
                      }
                    },
                    "id": 1017,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "16130:11:14",
                    "memberName": "chainCCIPid",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 80,
                    "src": "16107:34:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "functionReturnParameters": 1000,
                  "id": 1018,
                  "nodeType": "Return",
                  "src": "16100:41:14"
                }
              ]
            },
            "functionSelector": "1803c2f5",
            "id": 1020,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getChainIdFromActiveNode",
            "nameLocation": "15922:24:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 997,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15946:2:14"
            },
            "returnParameters": {
              "id": 1000,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 999,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1020,
                  "src": "15972:6:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 998,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "15972:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15971:8:14"
            },
            "scope": 1021,
            "src": "15913:235:14",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1022,
        "src": "783:15367:14",
        "usedErrors": [
          29,
          33,
          1709
        ]
      }
    ],
    "src": "32:16119:14"
  },
  "bytecode": "",
  "bytecodeSha1": "267023f6b28c4edba7356ca5ffa6578d78b6b4be",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.19+commit.7dd6d404"
  },
  "contractName": "MasterNode",
  "coverageMap": {
    "branches": {
      "0": {
        "ERC20._burn": {
          "92": [
            9505,
            9526,
            true
          ],
          "93": [
            9696,
            9720,
            true
          ]
        },
        "ERC20._spendAllowance": {
          "94": [
            11351,
            11388,
            false
          ]
        },
        "ERC20.decreaseAllowance": {
          "91": [
            6809,
            6844,
            true
          ]
        }
      },
      "1": {},
      "10": {},
      "11": {},
      "12": {},
      "13": {},
      "14": {
        "MasterNode._ccipReceive": {
          "79": [
            8099,
            8111,
            false
          ],
          "80": [
            8182,
            8194,
            false
          ],
          "81": [
            8266,
            8278,
            false
          ]
        },
        "MasterNode._sendMessage": {
          "87": [
            9756,
            9799,
            false
          ],
          "88": [
            9632,
            9689,
            true
          ]
        },
        "MasterNode.addValidNode": {
          "84": [
            3155,
            3169,
            true
          ]
        },
        "MasterNode.getChainIdFromActiveNode": {
          "90": [
            15994,
            16018,
            false
          ]
        },
        "MasterNode.warpAssets": {
          "85": [
            12954,
            13016,
            false
          ],
          "86": [
            12416,
            12436,
            false
          ],
          "89": [
            12477,
            12531,
            true
          ]
        },
        "MasterNode.withdraw": {
          "82": [
            13841,
            13872,
            true
          ],
          "83": [
            14059,
            14121,
            false
          ]
        }
      },
      "15": {},
      "16": {},
      "2": {},
      "3": {},
      "4": {},
      "5": {},
      "6": {},
      "7": {},
      "8": {},
      "9": {}
    },
    "statements": {
      "0": {
        "ERC20._approve": {
          "73": [
            10627,
            10695
          ],
          "74": [
            10705,
            10773
          ],
          "75": [
            10830,
            10867
          ],
          "76": [
            10784,
            10820
          ]
        },
        "ERC20._burn": {
          "30": [
            9497,
            9564
          ],
          "31": [
            9688,
            9759
          ],
          "32": [
            9973,
            10015
          ]
        },
        "ERC20._mint": {
          "69": [
            8642,
            8707
          ],
          "70": [
            8994,
            9036
          ],
          "71": [
            8778,
            8800
          ],
          "72": [
            8946,
            8974
          ]
        },
        "ERC20._spendAllowance": {
          "41": [
            11404,
            11472
          ],
          "42": [
            11514,
            11565
          ]
        },
        "ERC20._transfer": {
          "65": [
            7591,
            7659
          ],
          "66": [
            7669,
            7733
          ],
          "67": [
            7840,
            7912
          ],
          "68": [
            8205,
            8236
          ]
        },
        "ERC20.approve": {
          "52": [
            4568,
            4600
          ]
        },
        "ERC20.balanceOf": {
          "24": [
            3499,
            3524
          ]
        },
        "ERC20.decimals": {
          "27": [
            3166,
            3175
          ]
        },
        "ERC20.decreaseAllowance": {
          "5": [
            6801,
            6886
          ],
          "6": [
            6920,
            6980
          ]
        },
        "ERC20.increaseAllowance": {
          "26": [
            6013,
            6077
          ]
        },
        "ERC20.name": {
          "58": [
            2233,
            2245
          ]
        },
        "ERC20.symbol": {
          "10": [
            2446,
            2460
          ]
        },
        "ERC20.transfer": {
          "3": [
            3860,
            3888
          ]
        },
        "ERC20.transferFrom": {
          "40": [
            5421,
            5448
          ]
        }
      },
      "1": {},
      "10": {},
      "11": {},
      "12": {},
      "13": {},
      "14": {
        "MasterNode._aWarpTokenMinter": {
          "11": [
            4058,
            4084
          ],
          "12": [
            4095,
            4129
          ]
        },
        "MasterNode._buildCCIPMessage": {
          "35": [
            10965,
            11610
          ]
        },
        "MasterNode._ccipReceive": {
          "21": [
            8355,
            8390
          ]
        },
        "MasterNode._nodeAaveFeed": {
          "16": [
            6168,
            6273
          ],
          "17": [
            6283,
            6387
          ],
          "18": [
            6397,
            6501
          ],
          "19": [
            6511,
            6605
          ],
          "20": [
            6615,
            6717
          ]
        },
        "MasterNode._resmumeOperations": {
          "13": [
            4892,
            4982
          ],
          "14": [
            4993,
            5051
          ],
          "15": [
            5062,
            5093
          ]
        },
        "MasterNode._resmumeOperationsFromSameChain": {
          "7": [
            5379,
            5402
          ],
          "8": [
            5327,
            5369
          ],
          "9": [
            5412,
            5443
          ]
        },
        "MasterNode._sendMessage": {
          "36": [
            9611,
            9741
          ],
          "37": [
            9752,
            9880
          ],
          "38": [
            9998,
            10040
          ],
          "39": [
            10132,
            10202
          ]
        },
        "MasterNode.aWarpTokenMinterFromSameChain": {
          "59": [
            4395,
            4421
          ],
          "60": [
            4431,
            4465
          ]
        },
        "MasterNode.addValidNode": {
          "43": [
            3147,
            3195
          ],
          "44": [
            3205,
            3247
          ],
          "45": [
            3452,
            3476
          ]
        },
        "MasterNode.checkApprovedWarp": {
          "62": [
            15102,
            15777
          ]
        },
        "MasterNode.getChainIdFromActiveNode": {
          "63": [
            16100,
            16141
          ],
          "64": [
            16034,
            16079
          ]
        },
        "MasterNode.nodeAaveFeedFromSameChain": {
          "53": [
            7303,
            7357
          ],
          "54": [
            7048,
            7105
          ],
          "55": [
            7115,
            7171
          ],
          "56": [
            7181,
            7237
          ],
          "57": [
            7247,
            7293
          ]
        },
        "MasterNode.stopAddingNodes": {
          "25": [
            2971,
            2993
          ]
        },
        "MasterNode.warpAssets": {
          "46": [
            12223,
            12346
          ],
          "47": [
            12896,
            12939
          ],
          "48": [
            13032,
            13164
          ],
          "49": [
            13352,
            13384
          ],
          "50": [
            13395,
            13458
          ],
          "51": [
            12452,
            12590
          ]
        },
        "MasterNode.withdraw": {
          "28": [
            13756,
            13822
          ],
          "29": [
            13833,
            13896
          ],
          "33": [
            14137,
            14196
          ],
          "34": [
            14314,
            14435
          ]
        }
      },
      "15": {},
      "16": {},
      "2": {},
      "3": {
        "Context._msgSender": {
          "4": [
            712,
            729
          ]
        }
      },
      "4": {
        "CCIPReceiver.getRouter": {
          "2": [
            2262,
            2290
          ]
        },
        "CCIPReceiver.supportsInterface": {
          "61": [
            1502,
            1609
          ]
        }
      },
      "5": {},
      "6": {},
      "7": {
        "Client._argsToBytes": {
          "77": [
            1387,
            1450
          ]
        }
      },
      "8": {},
      "9": {
        "ConfirmedOwnerWithProposal._transferOwnership": {
          "0": [
            1629,
            1681
          ],
          "1": [
            1714,
            1758
          ]
        },
        "ConfirmedOwnerWithProposal._validateOwnership": {
          "78": [
            1894,
            1950
          ]
        },
        "ConfirmedOwnerWithProposal.acceptOwnership": {
          "22": [
            1120,
            1183
          ],
          "23": [
            1282,
            1329
          ]
        }
      }
    }
  },
  "dependencies": [
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/CCIPReceiver",
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/Client",
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/ConfirmedOwner",
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/ConfirmedOwnerWithProposal",
    "OpenZeppelin/openzeppelin-contracts@4.8.3/Context",
    "OpenZeppelin/openzeppelin-contracts@4.8.3/ERC20",
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/IAny2EVMMessageReceiver",
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.8.3/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.8.3/IERC20Metadata",
    "INode",
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/IOwnable",
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/IRouterClient",
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/LinkTokenInterface",
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/OwnerIsCreator",
    "UtilsMasterNode"
  ],
  "deployedBytecode": "60806040818152600480361015610021575b505050361561001f57600080fd5b005b600092833560e01c90816301ffc9a71461202f5750806304783ea414611f6557806306fdde0314611e9857806308a767fe14611ded578063095ea7b314611dc35780630a2ac7b7146117b557806310a78df8146116ba5780631803c2f51461168d57806318160ddd146116705780631d8809281461163957806323b872dd1461156d5780632e1a7d4d14610ead578063313ce56714610e915780633950935114610e42578063544b170914610cff57806361ac3f9914610cd6578063654e8e0c14610caf5780636c1dc07714610c865780636c98d51314610c5d57806370a0823114610c2557806379ba509714610b7e57806385572ffb1461072d5780638cf19d19146106e95780638da5cb5b146106c157806395d89b41146105a6578063995714ae146104d1578063a457c2d714610428578063a9059cbb146103f7578063b0f479a1146103b3578063b2d9295514610320578063c1586af8146102fa578063dd62ed3e146102ac578063ddf8560314610288578063e12b948b146102655763f2fde38b036100115734610261576020366003190112610261576101c4612083565b906101cd612933565b6001600160a01b039182169233841461021e575050600180546001600160a01b031916831790558254167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12788380a380f35b906020606492519162461bcd60e51b8352820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152fd5b8280fd5b505034610284578160031936011261028457602090600a549051908152f35b5080fd5b50503461028457816003193601126102845760209060ff6007541690519015158152f35b5050346102845780600319360112610284576020916102c9612083565b826102d2612099565b6001600160a01b03928316845260038652922091166000908152908352819020549051908152f35b50503461028457602090610319610310366120ef565b929190916128db565b9051908152f35b509034610261576020366003190112610261576101009281906001600160a01b03610349612083565b168152600b6020522080549260018201546002830154906005600385015493850154940154946001600160401b0381519760ff81161515895260ff8160081c16151560208a015260101c16908701526060860152608085015260a084015260c083015260e0820152f35b505034610284578160031936011261028457517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b505034610284578060031936011261028457602090610421610417612083565b602435903361256c565b5160018152f35b5082346104ce57826003193601126104ce57610442612083565b91836024359233815260036020522060018060a01b03841660005260205283600020549082821061047d576020856104218585038733612780565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b80fd5b5034610261578260031936011261026157338352600b6020526105276001600160401b03808486205460101c16907f00000000000000000000000000000000000000000000000000000000000000001614612219565b338352600b60205260ff8284205416156105905750338252600b602052812061010061ff0019825416179055336001600160601b0360a01b600954161760095560017f8392741ef8e51329e7bd6d6010db40081a08ad52773cfc62f82ac6626991ce838280a280f35b6024915190636a9ff79f60e11b82523390820152fd5b5091346104ce57806003193601126104ce578151918160065492600184811c918186169586156106b7575b60209687851081146106a4578899509688969785829a52918260001461067d575050600114610621575b50505061061d929161060e9103856121a2565b519282849384528301906120af565b0390f35b9190869350600683527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f5b828410610665575050508201018161060e61061d6105fb565b8054848a01860152889550879490930192810161064c565b60ff19168782015293151560051b8601909301935084925061060e915061061d90506105fb565b634e487b7160e01b835260228a52602483fd5b92607f16926105d1565b505034610284578160031936011261028457905490516001600160a01b039091168152602090f35b505034610284578160031936011261028457602090516001600160401b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b503461026157602091600319838136011261090e578235906001600160401b0390818311610ab25760a09083360301126109af576001600160a01b03937f000000000000000000000000000000000000000000000000000000000000000085163303610b675783519161079f8361210d565b838201358352602490818501358181168103610b4657888501526044850135818111610aaa576107d4908436918801016121c3565b938681019485526064860135828111610aae576107f6908536918901016121c3565b9560608201968752608481013590838211610b63570136602382011215610aae5784810135928311610b4f578751926108348b8260051b01856121a2565b808452848b85019160061b83010191368311610b4b578501905b828210610b0c575050506080015282518781805181010312610aa65761087688889201612882565b16808952600b885260ff868a20541615610af7575083518781805181010312610aa6576108a68860ff9201612896565b16806109125750505050519260608480518101031261090e576060916108d06108d8928601612896565b508401612882565b92015191166108e782826126dc565b7fb55160cc367b9cdf2289af15a6163d786de0a3d0722f78f652dec347580c85648380a380f35b8480fd5b9596959294939192600181036109b35750505050815183818051810103126109af5761094084869201612882565b168552600b8352842061010061ff0019825416179055519080828051810103126109ab5761096e9101612882565b166001600160601b0360a01b600954161760095560017f8392741ef8e51329e7bd6d6010db40081a08ad52773cfc62f82ac6626991ce838280a280f35b8380fd5b8580fd5b9296939492600203610ab657505160a081805181010312610ab2576109d9858201612896565b508381015195606082015160a060808401519301519784518881805181010312610aae57610a0989889201612882565b168a52600b8852426001888c20015584518881805181010312610aae57610a3289889201612882565b168a526002878b20015583518781805181010312610aaa57610a5688879201612882565b1689526003868a20015582518681805181010312610aa657610a7a87869201612882565b16885284882001555183818051810103126109af57600593610a9c9101612882565b1684528320015580f35b8880fd5b8980fd5b8a80fd5b8680fd5b8660196064928888519362461bcd60e51b85528401528201527f696e76616c696420636f6d6d616e642066726f6d204e6f6465000000000000006044820152fd5b8551636a9ff79f60e11b815280840191909152fd5b8982360312610b4b57895190610b218261216c565b8235908c82168203610b4657828e928d9452828501358382015281520191019061084e565b600080fd5b8c80fd5b83604186634e487b7160e01b600052526000fd5b8b80fd5b6024908451906335fdcccd60e21b82523390820152fd5b509034610261578260031936011261026157600154916001600160a01b03918284163303610be957505082546001600160a01b03198082163390811786559316600155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020606492519162461bcd60e51b8352820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b6044820152fd5b5050346102845760203660031901126102845760209181906001600160a01b03610c4d612083565b1681526002845220549051908152f35b83346104ce57806003193601126104ce57610c76612933565b6007805460ff60a81b1916905580f35b50503461028457816003193601126102845760095490516001600160a01b039091168152602090f35b50503461028457816003193601126102845760209060ff60075460a81c1690519015158152f35b50503461028457816003193601126102845760085490516001600160a01b039091168152602090f35b5091346104ce5760a03660031901126104ce578235916001600160401b03938484168403610b4657610d2f612099565b6001600160a01b039490916044358681169290839003610b465760643591878316809303610b4657608435988911610ab257610d74610df096979899369083016121c3565b87519460209a8b971687870152868652610d8d8661216c565b8851610d988161213e565b60008152610db58a51610daa8161213e565b620f424081526128a4565b928a5197610dc28961210d565b885288880152898701526060860152608085015286516320487ded60e01b8152958694859384938401612273565b03915afa928315610e375792610e08575b5051908152f35b9091508281813d8311610e30575b610e2081836121a2565b81010312610b4657519038610e01565b503d610e16565b8251903d90823e3d90fd5b50503461028457806003193601126102845761042160209282610e63612083565b91338152600386522060018060a01b0382166000528452610e8a6024358460002054612357565b9033612780565b5050346102845781600319360112610284576020905160128152f35b50903461026157602091826003193601126109ab576009546001600160a01b039081168552600b8452828520548235949060081c60ff161561153657338652600281528386205485116114fe578351928682850152338585015260608681860152808552610f1a85612187565b33156114b25733885260028352858820548781106114645790878993923385526002865203878420558782540382558287518981527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef863392a3846009541690818452600b8552878420546001600160401b0397888260101c1691897f00000000000000000000000000000000000000000000000000000000000000001683146000146110645750505050508360095416803b156102615786516315e005b760e31b81523392810192835260208301899052918391839182908490829060400103925af1801561105a57611046575b5050600b915b60095416865252339184205460101c167ff3f4e036f86c1437e14fac401835b304a1b76776b49e2e2a4d86c119433b80cf8480a480f35b61104f90612159565b6109af578538611009565b86513d84823e3d90fd5b60ff9192949650949294161561144d578884806080898f8c60075460081c169986818c9851946110938661210d565b8186528501528301528382015201528a5196888801528787526110b58761216c565b8a516110c08161213e565b600081526110dd8c516110d28161213e565b621e848081526128a4565b938c51986110ea8a61210d565b8952898901528b8801528601526080850152875163b0f479a160e01b815285818381305afa908115611443579087918c91611409575b5089516320487ded60e01b81529116938b908783806111428a89898401612273565b0381895afa9283156113ff5790889183946113cd575b5060648c51809481936323b872dd60e01b835233898401523060248401528760448401525af19081156113c3578c916113a6575b5015611363578660075460081c169089518c6370a0823160e01b9182815230868201528981602481885afa918215611358579161132b575b5082116112ba5750895163095ea7b360e01b81526001600160a01b03861681850190815260208101929092528c939290918891839182908790829060400103925af180156112b0579187959391611237979593611283575b508a516396f4e9f960e01b8152968795869485938401612273565b03925af180156112795761124f575b50600b9161100f565b8190813d8311611272575b61126481836121a2565b810103126109af5738611246565b503d61125a565b85513d89823e3d90fd5b6112a290873d89116112a9575b61129a81836121a2565b81019061233f565b503861121c565b503d611290565b8a513d85823e3d90fd5b908c8b8980879560248451809981938252308a8301525afa928315610e3757926112fa575b5051634787a10360e11b815292830152602482015260449150fd5b90915084813d8311611324575b61131181836121a2565b81010312610b46576044935190856112df565b503d611307565b90508881813d8311611351575b61134281836121a2565b81010312610b465751386111c4565b503d611338565b8d51903d90823e3d90fd5b885162461bcd60e51b8152808301879052601a60248201527f4e6f742070726f7669646564204c696e6b20666f7220666565730000000000006044820152606490fd5b6113bd9150873d89116112a95761129a81836121a2565b3861118c565b8a513d8e823e3d90fd5b9250925081813d83116113f8575b6113e581836121a2565b81010312610b4657868c91519238611158565b503d6113db565b8b513d84823e3d90fd5b809250878092503d831161143c575b61142281836121a2565b81010312610aae57518681168103610aae57869038611120565b503d611418565b89513d8d823e3d90fd5b8851636a9ff79f60e11b8152808301869052602490fd5b865162461bcd60e51b8152808401859052602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608490fd5b5060849185519162461bcd60e51b8352820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152fd5b9050606492519162461bcd60e51b835282015260136024820152724e6f7420656e6f756768742062616c616e636560681b6044820152fd5b9050606492519162461bcd60e51b835282015260126024820152714e6f6465206973206e6f742041637469766560701b6044820152fd5b5082903461028457606036600319011261028457611589612083565b611591612099565b91846044359460018060a01b03841681526003602052203360005260205284600020549060001982036115cd575b60208661042187878761256c565b8482106115f657509183916115eb6020969561042195033383612780565b9193948193506115bf565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b505034610284578060031936011261028457602090611667611659612083565b611661612099565b9061237a565b90519015158152f35b503461026157826003193601126102615760209250549051908152f35b5050346102845781600319360112610284576020906001600160401b036116b2612516565b915191168152f35b5034610261576060366003190112610261576116d4612083565b906024356001600160401b0381168103610b46576044359283151592838503610ab2576116ff612933565b60ff60075460a81c161561177a575090600191828060a01b031694858752600b60205286209261ff0069ffffffffffffffff000085549360101b169269ffffffffffffffffffff19169160081b16171717905561175a575080f35b6001600160601b0360a01b81816008541617600855600954161760095580f35b606490602087519162461bcd60e51b83528201526015602482015274139bc81b5bdc99481b9bd9195cc8185b1b1bddd959605a1b6044820152fd5b508290346102845760209283600319360112610261576117d3612083565b6001600160a01b03818116808652600b8752838620549192909160ff1615611d805760ff6007541615611d24575b50808552600b86526001600160401b0393848487205460101c169084516001898201528286820152606090848282015281815261183d81612187565b6009805487168a52600b8b52878a20805461ff0019169055548616808a52878a20549091601082901c8a16917f00000000000000000000000000000000000000000000000000000000000000008b16830361194d5750505050508360095416803b15611949578792918360449288519687958694634bb297ff60e11b865285015260248401525af1801561193f5761192b575b508394600b915b6009546001600160601b0360a01b9181168260085416176008551660095542600a558480525282205460101c167f985439828e84e84b426dc5fad9dbe12249540a3a89d03b3b635f89b4fe1e1ff28280a380f35b93611938600b9295612159565b93906118d0565b83513d87823e3d90fd5b8780fd5b939b96509194509160ff1615611d0d578560075460081c168a819b60808a516119758161210d565b828152828a820152828c8201528d8382015201528851958787015286865261199c8661216c565b88516119a78161213e565b8b81526119b88a516110d28161213e565b938a51976119c58961210d565b885288880152898701528501526080840152855163b0f479a160e01b815284818481305afa908115611d03579086918a91611cc9575b5016918651996320487ded60e01b8b52858b80611a1b8887878401612273565b0381875afa9a8b15611b79578a9b611c9a575b50858a9160648d8b5194859384926323b872dd60e01b8452338985015230602485015260448401525af1908115611b79578a91611c7d575b5015611c3a5788998660075460081c169088516370a0823160e01b9081815230858201528881602481875afa908115611c30578d91611c03575b508211611b835750885163095ea7b360e01b81526001600160a01b038616848201908152602081019290925291879183919082908e90829060400103925af18015611b7957869492611b109694928c92611b5c575b5089516396f4e9f960e01b8152968795869485938401612273565b03925af18015611b5257611b28575b50600b916118d7565b8190813d8311611b4b575b611b3d81836121a2565b8101031261090e5786611b1f565b503d611b33565b84513d88823e3d90fd5b611b7290873d89116112a95761129a81836121a2565b508d611af5565b88513d8c823e3d90fd5b898c949389809360248451809481938252308a8301525afa928315611bf9578693611bc5575b505051634787a10360e11b815292830152602482015260449150fd5b9080929350813d8311611bf2575b611bdd81836121a2565b8101031261090e576044945051908580611ba9565b503d611bd3565b82513d88823e3d90fd5b90508881813d8311611c29575b611c1a81836121a2565b81010312610b4b57518e611aa0565b503d611c10565b8b513d8f823e3d90fd5b865162461bcd60e51b8152908101859052601a60248201527f4e6f742070726f7669646564204c696e6b20666f7220666565730000000000006044820152606490fd5b611c949150863d88116112a95761129a81836121a2565b8b611a66565b909a508581813d8311611cc2575b611cb281836121a2565b81010312610aaa57519985611a2e565b503d611ca8565b809250868092503d8311611cfc575b611ce281836121a2565b81010312610aa657518581168103610aa65785908b6119fb565b503d611cd8565b87513d8b823e3d90fd5b8651636a9ff79f60e11b8152808401859052602490fd5b611d3290836009541661237a565b15611d3d5786611801565b825162461bcd60e51b8152808501879052601960248201527f436f6e646974696f6e20746f2077617270206e6f74206d6574000000000000006044820152606490fd5b835162461bcd60e51b8152808601889052601d60248201527f44657374696e6174696f6e204e6f6465206973206e6f74207661696c640000006044820152606490fd5b505034610284578060031936011261028457602090610421611de3612083565b6024359033612780565b5082903461028457611dfe366120ef565b939091338652600b602052611e466001600160401b03808989205460101c16907f00000000000000000000000000000000000000000000000000000000000000001614612219565b338652600b60205260ff878720541615611e82576005949596338852600b60205287209342600186015560028501556003840155820155015580f35b8651636a9ff79f60e11b81523381840152602490fd5b5091346104ce57806003193601126104ce578151918160055492600184811c91818616958615611f5b575b60209687851081146106a4578899509688969785829a52918260001461067d575050600114611eff5750505061061d929161060e9103856121a2565b9190869350600583527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db05b828410611f43575050508201018161060e61061d6105fb565b8054848a018601528895508794909301928101611f2a565b92607f1692611ec3565b5034610261578160031936011261026157611f7e612083565b9060243592338552600b602052611fc86001600160401b03808388205460101c16907f00000000000000000000000000000000000000000000000000000000000000001614612219565b338552600b60205260ff818620541615612018575050611fe882826126dc565b6001600160a01b03167fb55160cc367b9cdf2289af15a6163d786de0a3d0722f78f652dec347580c85648380a380f35b602492505190636a9ff79f60e11b82523390820152fd5b92505034610261576020366003190112610261573563ffffffff60e01b811680910361026157602092506385572ffb60e01b8114908115612072575b5015158152f35b6301ffc9a760e01b1490503861206b565b600435906001600160a01b0382168203610b4657565b602435906001600160a01b0382168203610b4657565b919082519283825260005b8481106120db575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016120ba565b6080906003190112610b465760043590602435906044359060643590565b60a081019081106001600160401b0382111761212857604052565b634e487b7160e01b600052604160045260246000fd5b602081019081106001600160401b0382111761212857604052565b6001600160401b03811161212857604052565b604081019081106001600160401b0382111761212857604052565b608081019081106001600160401b0382111761212857604052565b90601f801991011681019081106001600160401b0382111761212857604052565b81601f82011215610b46578035906001600160401b03821161212857604051926121f7601f8401601f1916602001856121a2565b82845260208383010111610b4657816000926020809301838601378301015290565b1561222057565b60405162461bcd60e51b815260206004820152602560248201527f52657175697265206d617374657220616e64206e6f646520696e2073616d652060448201526431b430b4b760d91b6064820152608490fd5b906001600160401b0390939293168152604060209181838201526122a2855160a08484015260e08301906120af565b916122be8487015193603f1994858583030160608601526120af565b8187015194848483030160808501528080875193848152019601926000905b83821061231657505050505060c06080612313959660018060a01b0360608201511660a0850152015192828503019101526120af565b90565b845180516001600160a01b031689528301518884015296870196938201936001909101906122dd565b90816020910312610b4657518015158103610b465790565b9190820180921161236457565b634e487b7160e01b600052601160045260246000fd5b60018060a01b03809216916000838152600b90602091808352604092838320946123ba600287015460038801549760049860058a830154920154926128db565b96600a5462015180810180911161249257421198896124f8575b896124e0575b896124ca575b896124a5575b8961246f575b89612456575b8961243e575b5088612427575b88612410575b505050505050505090565b168352522001541090503880808080808080612405565b8181168552838352858520870154151598506123ff565b85528383528585205460081c60ff16159850386123f8565b8086528484528686205460ff16151560011499506123f2565b809950855283835260018686200154610e108101809111612492574210986123ec565b634e487b7160e01b865260118852602486fd5b9850818116855283835260018686200154610e108101809111612492574210986123e6565b80865284845286862060010154151599506123e0565b818316865284845286862060010154151599506123da565b81831686528484528686205460081c60ff16151560011499506123d4565b6009546001600160a01b039081169081156125495750600052600b6020526001600160401b0360406000205460101c1690565b905060085416600052600b6020526001600160401b0360406000205460101c1690565b6001600160a01b03908116918215612689571691821561263857600082815260026020526040812054918083106125e457604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef95876020965260028652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b031690811561273b577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60208261271e600094600454612357565b6004558484526002825260408420818154019055604051908152a3565b60405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606490fd5b6001600160a01b0390811691821561283157169182156127e15760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260038252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b51906001600160a01b0382168203610b4657565b519060ff82168203610b4657565b604051906397a657c960e01b602083015251602482015260248152606081018181106001600160401b038211176121285760405290565b926128e69193612357565b670de0b6b3a7640000928381029080820485149015171561236457811561291d570490818102918183041490151715612364570490565b634e487b7160e01b600052601260045260246000fd5b6000546001600160a01b0316330361294757565b60405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b6044820152606490fdfea264697066735822122039644e48c4be223103bf0f264ff278c9e78b2e4f17dd4fa38b623a48de7f2f3b64736f6c63430008130033",
  "deployedSourceMap": "783:15367:14:-:0;;;;;;;;;;;;-1:-1:-1;783:15367:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;783:15367:14;;;;;;:::i;:::-;2032:59:9;;;:::i;:::-;-1:-1:-1;;;;;783:15367:14;;;;1643:10:9;1637:16;;783:15367:14;;-1:-1:-1;;783:15367:14;;;-1:-1:-1;;;;;;783:15367:14;;;;;;;;1719:39:9;783:15367:14;;1719:39:9;783:15367:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1867:29;783:15367;;;;;;;;;;;;;;;;;;;;;;;;;;;;1618:39;783:15367;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;-1:-1:-1;;;;;783:15367:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;783:15367:14;;;;;;;;-1:-1:-1;;;;;783:15367:14;;:::i;:::-;;;;2175:48;783:15367;;;;;2175:48;783:15367;2175:48;;783:15367;2175:48;;;783:15367;2175:48;;783:15367;2175:48;;783:15367;2175:48;;;783:15367;2175:48;;783:15367;;-1:-1:-1;;;;;783:15367:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2277:12:4;-1:-1:-1;;;;;783:15367:14;;;;;;;;;;;;;;;;;;;;;;3881:6:0;783:15367:14;;:::i;:::-;;;719:10:3;;3881:6:0;:::i;:::-;783:15367:14;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;719:10:3;;783:15367:14;;;;;;;;;;;;;;;;;;;;;6809:35:0;;;;783:15367:14;;;;6945:34:0;783:15367:14;;;;719:10:3;6945:34:0;:::i;783:15367:14:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:15367:14;;;;;;;;;;;;;;;;;;;;;2777:10;783:15367;;2766:10;783:15367;;2745:146;-1:-1:-1;;;;;783:15367:14;;;;;;;;2804:24;;783:15367;2766:62;2745:146;:::i;:::-;2777:10;783:15367;;2766:10;783:15367;;;;;;;;2570:36;2566:110;;2777:10;;783:15367;;2766:10;783:15367;;;;;;;;;;;;;2777:10;-1:-1:-1;;;;;783:15367:14;;5379:23;783:15367;;;5379:23;783:15367;5365:4;5417:26;;;;783:15367;;2566:110;783:15367;;;2629:36;;;;;;2777:10;2629:36;;;783:15367;2629:36;783:15367;;;;;;;;;;;;;;;;;;2453:7:0;783:15367:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;2453:7:0;783:15367:14;;;;;;;;;-1:-1:-1;;;783:15367:14;;;;;;;;;;;;;;;;;;;-1:-1:-1;783:15367:14;;;;;;;;;;;-1:-1:-1;;783:15367:14;;;;;;;;;;;;;;;;-1:-1:-1;783:15367:14;;-1:-1:-1;783:15367:14;;-1:-1:-1;783:15367:14;;-1:-1:-1;783:15367:14;;;-1:-1:-1;;;783:15367:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;783:15367:14;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1708:48:14;783:15367;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;783:15367:14;;;;;;;;;;;;;;;-1:-1:-1;;;;;783:15367:14;2449:12:4;783:15367:14;;2427:10:4;:35;2423:73;;783:15367:14;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7980:22;;783:15367;;;;7969:45;;783:15367;;;;;7969:45;;;;783:15367;:::i;:::-;;;;;2571:10;783:15367;;;;;;;;2570:36;2566:110;;477:20:15;;;783:15367:14;;;;466:41:15;;783:15367:14;;;;;466:41:15;783:15367:14;466:41:15;;783:15367:14;:::i;:::-;;8099:12;;;3978:20;;;;;783:15367;;;;;3954:93;;783:15367;;;;;3954:93;783:15367;;3954:93;;;783:15367;:::i;:::-;;;;;:::i;:::-;;;;;;4077:6;;;;:::i;:::-;4100:29;;;;783:15367;;;;;;8095:306;8182:12;;;;;;;;783:15367;8182:12;;783:15367;;4914:22;;;;;;783:15367;;;;4903:45;;783:15367;;;;;4903:45;;;;783:15367;:::i;:::-;;;;2571:10;783:15367;;;;;;;;;;;;;5017:22;783:15367;;;;;5006:45;;783:15367;;;;;5006:45;;783:15367;:::i;:::-;;-1:-1:-1;;;;;783:15367:14;;4993:58;783:15367;;;4993:58;783:15367;;5067:26;;;;783:15367;;;;;;;;;;8178:223;8266:12;;;;;8277:1;8266:12;8277:1;;6062:20;;783:15367;;;;6034:123;;783:15367;;;;;6034:123;;;783:15367;:::i;:::-;;;;;;;;;;;;;;;;;;;6190:22;;;783:15367;;;;6179:45;;783:15367;;;;;6179:45;;;;783:15367;:::i;:::-;;;;2571:10;783:15367;;6258:15;783:15367;;;;6168:87;783:15367;6305:22;;783:15367;;;;6294:45;;783:15367;;;;;6294:45;;;;783:15367;:::i;:::-;;;;8277:1;783:15367;;;6283:86;783:15367;6419:22;;783:15367;;;;6408:45;;783:15367;;;;;6408:45;;;;783:15367;:::i;:::-;;;;;;;;6397:86;783:15367;6533:22;;783:15367;;;;6522:45;;783:15367;;;;;6522:45;;;;783:15367;:::i;:::-;;;;;;;6511:81;783:15367;6637:22;783:15367;;;;6626:45;;783:15367;;;;;6626:45;783:15367;6626:45;;783:15367;:::i;:::-;;;;;;6615:85;783:15367;;;;;;;;;;;;;;;;;;;8262:139;783:15367;;;;;;;;;;;8355:35;;;;783:15367;;;;;;;;;8355:35;2566:110;783:15367;;-1:-1:-1;;;2629:36:14;;;;;783:15367;;;;2629:36;783:15367;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2423:73:4;783:15367:14;;;;2471:25:4;;;;;;2427:10;2471:25;;;783:15367:14;2471:25:4;783:15367:14;;;;;;;;;;;;;;1142:14:9;783:15367:14;;-1:-1:-1;;;;;783:15367:14;;;;1128:10:9;:28;783:15367:14;;-1:-1:-1;;783:15367:14;;-1:-1:-1;;;;;;783:15367:14;;;1128:10:9;783:15367:14;;;;;;;-1:-1:-1;783:15367:14;;1287:42:9;783:15367:14;;1287:42:9;783:15367:14;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:15367:14;;;;;;;;;;;;;-1:-1:-1;;783:15367:14;;;;;;;;-1:-1:-1;;;;;783:15367:14;;:::i;:::-;;;;3506:9:0;783:15367:14;;;;;;;;;;;;;;;;;;;;;;;2032:59:9;;:::i;:::-;2971:22:14;783:15367;;-1:-1:-1;;;;783:15367:14;;;;;;;;;;;;;;;;;;;1836:25;783:15367;;;-1:-1:-1;;;;;783:15367:14;;;;;;;;;;;;;;;;;;;;;;;;;1762:33;783:15367;;;;;;;;;;;;;;;;;;;;;;;;;;1801:29;783:15367;;;-1:-1:-1;;;;;783:15367:14;;;;;;;;;;;;;;;;-1:-1:-1;;783:15367:14;;;;;;;-1:-1:-1;;;;;783:15367:14;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;783:15367:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1662:48:15;783:15367:14;;;;;;;;;:::i;:::-;;;;;;;;;992:20:15;;;783:15367:14;992:20:15;;;;;;:::i;:::-;783:15367:14;;;;;:::i;:::-;;;;1226:157:15;783:15367:14;;;;;:::i;:::-;1357:9:15;783:15367:14;;1226:157:15;:::i;:::-;783:15367:14;;;;;;;:::i;:::-;;;945:574:15;;;783:15367:14;945:574:15;;;783:15367:14;;945:574:15;;783:15367:14;;945:574:15;;783:15367:14;;;-1:-1:-1;;;1662:48:15;;783:15367:14;;;;;;;1662:48:15;;;:::i;:::-;;;;;;;;;;;;;783:15367:14;;;;;;;1662:48:15;;;;;;;;;;;;;;;;;:::i;:::-;;;783:15367:14;;;;;1662:48:15;;;;;;;;;;783:15367:14;;;;;;;;;;;;;;;;;;;;;;;;6038:38:0;783:15367:14;;;;;:::i;:::-;719:10:3;;783:15367:14;;;;;;;;;;;;;;;;;6038:38:0;783:15367:14;;;;;;6038:38:0;:::i;:::-;719:10:3;;6038:38:0;:::i;783:15367:14:-;;;;;;;;;;;;;;;;;3173:2:0;783:15367:14;;;;;;;;;;;;;;;;;;;13775:10;783:15367;-1:-1:-1;;;;;783:15367:14;;;;;13764:10;783:15367;;;;;;;;;;;;;;;;;13861:10;783:15367;;3506:9:0;783:15367:14;;;;;;13841:31;;783:15367;;;;13962:46;;;;;783:15367;13861:10;783:15367;;;;;;;;;;13962:46;;;;;;:::i;:::-;13861:10;9505:21:0;783:15367:14;;13861:10;783:15367;;3506:9:0;783:15367:14;;;;;;9696:24:0;;;783:15367:14;;13861:10;;;;;;783:15367;;3506:9:0;783:15367:14;;;;;;;;;;;;;;;;;;;9978:37:0;13861:10:14;;9978:37:0;;783:15367:14;13775:10;783:15367;;;;;;13764:10;783:15367;;;;;;-1:-1:-1;;;;;783:15367:14;;;;;;14097:24;;;783:15367;14059:62;;14055:249;783:15367;;;;;;;;;13775:10;783:15367;;14137:59;;;;;783:15367;;-1:-1:-1;;;14137:59:14;;13861:10;14137:59;;;783:15367;;;;;;;;;;;;;;;;;;;;;;14137:59;;;;;;;;;;14055:249;;;13764:10;14055:249;;13775:10;783:15367;;;;;13861:10;783:15367;;;;;;;14319:116;;;;783:15367;;14137:59;;;;:::i;:::-;783:15367;;14137:59;;;;;783:15367;;;;;;;;;14055:249;783:15367;;;;;;;;;;2570:36;2566:110;;783:15367;;;;;;;9291:11;783:15367;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;11034:21;;;;783:15367;11034:21;;;;;;:::i;:::-;783:15367;;;;;:::i;:::-;;;;11279:166;783:15367;;;;;:::i;:::-;11416:9;783:15367;;11279:166;:::i;:::-;783:15367;;;;;;;:::i;:::-;;;10984:626;;;783:15367;10984:626;;;783:15367;10984:626;;783:15367;;10984:626;;783:15367;;;-1:-1:-1;;;9444:16:14;;10984:626;783:15367;9444:4;783:15367;9444:4;:16;;;;;;;;;;;;;;14055:249;-1:-1:-1;783:15367:14;;-1:-1:-1;;;9544:56:14;;783:15367;;;;;9544:56;783:15367;;9544:56;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;14055:249;783:15367;;;;;;;;;;;9632:57;;13861:10;9632:57;;;783:15367;9444:4;783:15367;;;;;;;;;9632:57;;;;;;;;;;;14055:249;783:15367;;;;;9291:11;783:15367;;;;;;;;;;;9763:36;;;;9444:4;9763:36;;;783:15367;9763:36;;783:15367;9763:36;;;;;;;;;;;;14055:249;9756:43;;;9752:128;;-1:-1:-1;783:15367:14;;-1:-1:-1;;;9998:42:14;;-1:-1:-1;;;;;783:15367:14;;9998:42;;;783:15367;;;;;;;;;;;;;;;;;;;;;;;;;;;9998:42;;;;;;;;;;;;;10144:58;9998:42;;;;;14055:249;-1:-1:-1;783:15367:14;;-1:-1:-1;;;10144:58:14;;783:15367;;;;;;;10144:58;;;:::i;:::-;;;;;;;;;;;14055:249;;13764:10;14055:249;;;10144:58;;;;;;;;;;;;;;:::i;:::-;;;783:15367;;;;10144:58;;;;;;;;;783:15367;;;;;;;;;9998:42;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;783:15367;;;;;;;;;9752:128;783:15367;;;;;;;;;;9837:36;;;;;;9444:4;9837:36;;;783:15367;9837:36;;;;;;;;;;9752:128;-1:-1:-1;783:15367:14;-1:-1:-1;;;9820:60:14;;;;;783:15367;;;;;;;-1:-1:-1;9820:60:14;9837:36;;;;;;;;;;;;;;;;:::i;:::-;;;783:15367;;;;;;;9837:36;;;;;;;;;9763;;;;;;;;;;;;;;;;:::i;:::-;;;783:15367;;;;;9763:36;;;;;;;;;783:15367;;;;;;;;;;;;;-1:-1:-1;;;783:15367:14;;;;;;;;;;;;;;;;;;;;;9632:57;;;;;;;;;;;;;;:::i;:::-;;;;;783:15367;;;;;;;;;9544:56;;;;;;;;;;;;;;;;;:::i;:::-;;;783:15367;;;;;;;;9544:56;;;;;;;;;;783:15367;;;;;;;;;9444:16;;;;;;;;;;;;;;;;;;:::i;:::-;;;783:15367;;;;;;;;;;;;9444:16;;;;;;;;;;;783:15367;;;;;;;;;2566:110;783:15367;;-1:-1:-1;;;2629:36:14;;;;;783:15367;;;;;2629:36;783:15367;;;-1:-1:-1;;;783:15367:14;;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:15367:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:15367:14;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:15367:14;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:15367:14;;;;;;;;;;;;;;-1:-1:-1;;783:15367:14;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;719:10:3;783:15367:14;;;;;;;;11371:17:0;;;11351:37;;11347:243;;783:15367:14;;5441:6:0;;;;;;:::i;11347:243::-;11412:26;;;783:15367:14;;;;;;11539:25:0;783:15367:14;;;5441:6:0;783:15367:14;;719:10:3;11539:25:0;;:::i;:::-;11347:243;;;;;;;;783:15367:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;783:15367:14;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;783:15367:14;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;783:15367:14;;;;;;;;;;;;;;;;;;2032:59:9;;:::i;:::-;783:15367:14;3155:14;783:15367;;;;;;;;;;;;;;;;;;;;;3205:10;783:15367;;;;;;;;;;;;;;;;;;;;;;;;;;3378:109;;783:15367;;;3378:109;-1:-1:-1;;;;;783:15367:14;;;;;;;;;;3452:24;783:15367;;;3452:24;783:15367;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:15367:14;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;783:15367:14;;;;;;12244:10;783:15367;;;;;;;;;;;;;;;;12416:20;783:15367;;12415:21;12411:190;;783:15367;;;;;12244:10;783:15367;;-1:-1:-1;;;;;783:15367:14;;;;;;;;;;;;;12766:120;;;783:15367;;;;;;;;;;;;;12766:120;;;;;;:::i;:::-;12907:10;783:15367;;;;;;12244:10;783:15367;;;;;;;-1:-1:-1;;783:15367:14;;;;;;;;;;;;;;;;;;;;;;12992:24;783:15367;;12954:62;;783:15367;;;;;;;;12907:10;783:15367;;13032:132;;;;;783:15367;;;;;;;;;;;;;;;;13032:132;;;;783:15367;;;;;13032:132;;;;;;;;12950:322;;;;12244:10;12950:322;;12907:10;783:15367;-1:-1:-1;;;;;783:15367:14;;;;;;;;;;;;;12907:10;783:15367;13369:15;13352:32;783:15367;;;;;;;;;;;13400:58;;;;783:15367;;13032:132;;;12244:10;13032:132;;;:::i;:::-;;;;;;783:15367;;;;;;;;;13032:132;783:15367;;;12950:322;783:15367;;;-1:-1:-1;783:15367:14;;-1:-1:-1;783:15367:14;;;2570:36;2566:110;;783:15367;12416:20;783:15367;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;11034:21;;;;783:15367;11034:21;;;;;;:::i;:::-;783:15367;;;;;:::i;:::-;;;;11279:166;783:15367;;;;;:::i;11279:166::-;783:15367;;;;;;;:::i;:::-;;;10984:626;;;783:15367;10984:626;;;783:15367;10984:626;;783:15367;;10984:626;;783:15367;;;-1:-1:-1;;;9444:16:14;;10984:626;783:15367;9444:4;783:15367;9444:4;:16;;;;;;;;;;;;;;12950:322;783:15367;;;;;;;;;9544:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;12950:322;783:15367;;;;;;;;;;;;;;;;9632:57;;9657:10;9632:57;;;783:15367;9444:4;783:15367;;;;;;;;9632:57;;;;;;;;;;;12950:322;783:15367;;;;;;;12416:20;783:15367;;;;;;;;;;9763:36;;;;9444:4;9763:36;;;783:15367;9763:36;;783:15367;9763:36;;;;;;;;;;;;;12950:322;9756:43;;;9752:128;;-1:-1:-1;783:15367:14;;-1:-1:-1;;;9998:42:14;;-1:-1:-1;;;;;783:15367:14;;9998:42;;;783:15367;;;;;;;;;;;;;;;;;;;;;;;;9998:42;;;;;;;;;;;10144:58;9998:42;;;;;;;12950:322;-1:-1:-1;783:15367:14;;-1:-1:-1;;;10144:58:14;;783:15367;;;;;;;10144:58;;;:::i;:::-;;;;;;;;;;;12950:322;;12244:10;12950:322;;;10144:58;;;;;;;;;;;;;;:::i;:::-;;;783:15367;;;;10144:58;;;;;;;;;783:15367;;;;;;;;;9998:42;;;;;;;;;;;;;:::i;:::-;;;;;;783:15367;;;;;;;;;9752:128;783:15367;;;;;;;;;;9837:36;;;;;;9444:4;9837:36;;;783:15367;9837:36;;;;;;;;;;;9752:128;-1:-1:-1;;783:15367:14;-1:-1:-1;;;9820:60:14;;;;;783:15367;;;;;;;-1:-1:-1;9820:60:14;9837:36;;;;;;;;;;;;;;;;;:::i;:::-;;;783:15367;;;;;;;;9837:36;;;;;;;;;;;783:15367;;;;;;;;;9763:36;;;;;;;;;;;;;;;;:::i;:::-;;;783:15367;;;;;9763:36;;;;;;;;;783:15367;;;;;;;;;;;;-1:-1:-1;;;783:15367:14;;;;;;;;;;;;;;;;;;;;;9632:57;;;;;;;;;;;;;;:::i;:::-;;;;9544:56;;;;;;;;;;;;;;;;;:::i;:::-;;;783:15367;;;;;;;9544:56;;;;;;;9444:16;;;;;;;;;;;;;;;;;;:::i;:::-;;;783:15367;;;;;;;;;;;;9444:16;;;;;;;;;;;783:15367;;;;;;;;;2566:110;783:15367;;-1:-1:-1;;;2629:36:14;;;;;783:15367;;;;;2629:36;12411:190;12477:54;783:15367;;12495:10;783:15367;;12477:54;:::i;:::-;783:15367;;;12411:190;;;783:15367;;;-1:-1:-1;;;783:15367:14;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:15367:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4593:6:0;783:15367:14;;:::i;:::-;;;719:10:3;;4593:6:0;:::i;783:15367:14:-;;;;;;;;;;:::i;:::-;2777:10;;;;783:15367;;2766:10;783:15367;;2745:146;-1:-1:-1;;;;;783:15367:14;;;;;;;;2804:24;;783:15367;2766:62;2745:146;:::i;:::-;2777:10;783:15367;;2766:10;783:15367;;;;;;;;2570:36;2566:110;;7303:37;2777:10;;;;783:15367;;2766:10;783:15367;;;;7090:15;;7048:39;;;783:15367;7115:38;;;783:15367;7181:38;;;783:15367;7247:33;;783:15367;7303:37;783:15367;;;2566:110;783:15367;;-1:-1:-1;;;2629:36:14;;2777:10;2629:36;;;783:15367;;;2629:36;783:15367;;;;;;;;;;;;;;;;;;2240:5:0;783:15367:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;2240:5:0;783:15367:14;;;;;;;;;-1:-1:-1;;;783:15367:14;;;;;;;;;;;;;;;;;;;-1:-1:-1;783:15367:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;2777:10;;783:15367;;2766:10;783:15367;;2745:146;-1:-1:-1;;;;;783:15367:14;;;;;;;;2804:24;;783:15367;2766:62;2745:146;:::i;:::-;2777:10;783:15367;;2766:10;783:15367;;;;;;;;2570:36;2566:110;;4414:6;;;;;;:::i;:::-;-1:-1:-1;;;;;783:15367:14;4436:29;;;;783:15367;;2566:110;783:15367;;;;2629:36;;;;;;2777:10;2629:36;;;783:15367;2629:36;783:15367;;;;;;;;;-1:-1:-1;;783:15367:14;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1509:56:4;;;:100;;;;783:15367:14;;;;;;;1509:100:4;-1:-1:-1;;;1569:40:4;;-1:-1:-1;1509:100:4;;;783:15367:14;;;;-1:-1:-1;;;;;783:15367:14;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;783:15367:14;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;783:15367:14;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;783:15367:14;;;;;;;:::o;:::-;-1:-1:-1;;;;;783:15367:14;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;783:15367:14;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;783:15367:14;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;783:15367:14;;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;;;;783:15367:14;;;;;;;;;;;-1:-1:-1;;783:15367:14;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;783:15367:14;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;783:15367:14;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:15367:14;;;;;;;;;-1:-1:-1;;;;;783:15367:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;-1:-1:-1;;;;;783:15367:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;14680:1104;783:15367;;;;;;;;-1:-1:-1;;783:15367:14;;;14873:10;783:15367;;;;;;;;;;;14873:43;14836:255;14873:43;;;783:15367;14930:43;;;783:15367;14987:38;;;15039:42;14987:38;;;783:15367;15039:42;;783:15367;14836:255;;:::i;:::-;783:15367;15121:14;783:15367;15139:9;783:15367;;;;;;;15152:15;-1:-1:-1;15121:106:14;;;;14680:1104;15121:166;;;14680:1104;15121:230;;;14680:1104;15121:311;;;14680:1104;15121:408;;;14680:1104;15121:471;;;14680:1104;15121:536;;;14680:1104;15121:590;;;;14680:1104;15121:656;;;14680:1104;15102:675;;;;;;;;14680:1104;:::o;15121:656::-;783:15367;;;;;15727:34;783:15367;15727:50;;-1:-1:-1;15121:656:14;;;;;;;;;;:590;783:15367;;;;;;;;;;;15673:34;;783:15367;15673:38;;;-1:-1:-1;15121:590:14;;:536;783:15367;;;;;;;;;;;;;;;-1:-1:-1;15121:536:14;;;:471;783:15367;;;;;;;;;;;;;;;15545:47;;-1:-1:-1;15121:471:14;;:408;783:15367;;;;;;;;;;;;15448:44;783:15367;15495:4;783:15367;;;;;;;15152:15;-1:-1:-1;15121:408:14;;;783:15367;-1:-1:-1;;;783:15367:14;;;;;;;;15121:311;783:15367;;;;;;;;;;;;;;15367:40;783:15367;15410:4;783:15367;;;;;;;15152:15;-1:-1:-1;15121:311:14;;;:230;783:15367;;;;;;;;;;15303:44;783:15367;15303:48;;;-1:-1:-1;15121:230:14;;:166;783:15367;;;;;;;;;;;;15243:40;783:15367;15243:44;;;-1:-1:-1;15121:166:14;;:106;783:15367;;;;;;;;;;;;;;;;;;;15183:44;;-1:-1:-1;15121:106:14;;15913:235;15994:10;783:15367;-1:-1:-1;;;;;783:15367:14;;;;15994:24;;15990:100;;783:15367;-1:-1:-1;783:15367:14;16107:10;783:15367;;-1:-1:-1;;;;;783:15367:14;-1:-1:-1;783:15367:14;;;;;15913:235;:::o;15990:100::-;783:15367;;16052:14;783:15367;;-1:-1:-1;783:15367:14;16041:10;783:15367;;-1:-1:-1;;;;;783:15367:14;-1:-1:-1;783:15367:14;;;;;16034:45;:::o;7473:818:0:-;-1:-1:-1;;;;;783:15367:14;;;;7599:18:0;;783:15367:14;;;7677:16:0;;;783:15367:14;;7615:1:0;783:15367:14;;;7815:9:0;783:15367:14;;;;;;7848:21:0;;;;783:15367:14;;;;;8210:26:0;783:15367:14;;;;;7815:9:0;783:15367:14;;;;;;;;;;;;;;;;;;;;;;8210:26:0;7473:818::o;783:15367:14:-;;;-1:-1:-1;;;783:15367:14;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:15367:14;;;;;;;;;;-1:-1:-1;;;783:15367:14;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:15367:14;;;;;;;;;;-1:-1:-1;;;783:15367:14;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:15367:14;;;;;;;8567:535:0;-1:-1:-1;;;;;783:15367:14;;8650:21:0;;783:15367:14;;8999:37:0;783:15367:14;;8778:22:0;8669:1;783:15367:14;8778:22:0;783:15367:14;8778:22:0;:::i;:::-;;783:15367:14;;;;8946:9:0;783:15367:14;;;;;;;;;;;;;;;;8999:37:0;8567:535::o;783:15367:14:-;;;-1:-1:-1;;;783:15367:14;;;;;;;;;;;;;;;;;;;;10504:370:0;-1:-1:-1;;;;;783:15367:14;;;;10635:19:0;;783:15367:14;;;10713:21:0;;;783:15367:14;;;10835:32:0;783:15367:14;;10652:1:0;783:15367:14;10784:11:0;783:15367:14;;;10652:1:0;783:15367:14;;10652:1:0;783:15367:14;;;;;10652:1:0;783:15367:14;;;;;;;10835:32:0;10504:370::o;783:15367:14:-;;;-1:-1:-1;;;783:15367:14;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:15367:14;;;;;;;;;;-1:-1:-1;;;783:15367:14;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:15367:14;;;;;;;;;;-1:-1:-1;;;;;783:15367:14;;;;;;:::o;:::-;;;;;;;;;;:::o;1285:170:7:-;783:15367:14;;;;;;1394:56:7;;;;1218:10;1394:56;;;783:15367:14;1394:56:7;;;783:15367:14;;;;;;-1:-1:-1;;;;;783:15367:14;;;;;;;1285:170:7;:::o;1748:636:15:-;;2050:28;1748:636;;2050:28;:::i;:::-;2186:4;783:15367:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1748:636:15;:::o;783:15367:14:-;;;;-1:-1:-1;783:15367:14;;;;;-1:-1:-1;783:15367:14;1797:158:9;1916:7;783:15367:14;-1:-1:-1;;;;;783:15367:14;1902:10:9;:21;783:15367:14;;1797:158:9:o;783:15367:14:-;;;-1:-1:-1;;;783:15367:14;;;;;;;;;;;;-1:-1:-1;;;783:15367:14;;;;;;",
  "language": "Solidity",
  "natspec": {
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "acceptOwnership()": {
        "notice": "Allows an ownership transfer to be completed by the recipient."
      },
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))": {
        "details": "Note ensure you check the msg.sender is the OffRampRouter",
        "notice": "Called by the Router to deliver a message. If this reverts, any token transfers also revert. The message will move to a FAILED state and become available for manual execution.",
        "params": {
          "message": "CCIP Message"
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "getRouter()": {
        "notice": "Return the current router",
        "returns": {
          "_0": "CCIP router address"
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "notice": "Get the current owner"
      },
      "supportsInterface(bytes4)": {
        "details": "Should indicate whether the contract implements IAny2EVMMessageReceiver e.g. return interfaceId == type(IAny2EVMMessageReceiver).interfaceId || interfaceId == type(IERC165).interfaceId This allows CCIP to check if ccipReceive is available before calling it. If this returns false or reverts, only tokens are transferred to the receiver. If this returns true, tokens are transferred and ccipReceive is called atomically. Additionally, if the receiver address does not have code associated with it at the time of execution (EXTCODESIZE returns 0), only tokens will be transferred.",
        "notice": "IERC165 supports an interfaceId",
        "params": {
          "interfaceId": "The interfaceId to check"
        },
        "returns": {
          "_0": "true if the interfaceId is supported"
        }
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "notice": "Allows an owner to begin transferring ownership to a new address."
      }
    },
    "title": "- A simple messenger contract for transferring/receiving tokens and data across chains.",
    "version": 1
  },
  "offset": [
    783,
    16150
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x21 JUMPI JUMPDEST POP POP POP CALLDATASIZE ISZERO PUSH2 0x1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x202F JUMPI POP DUP1 PUSH4 0x4783EA4 EQ PUSH2 0x1F65 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1E98 JUMPI DUP1 PUSH4 0x8A767FE EQ PUSH2 0x1DED JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1DC3 JUMPI DUP1 PUSH4 0xA2AC7B7 EQ PUSH2 0x17B5 JUMPI DUP1 PUSH4 0x10A78DF8 EQ PUSH2 0x16BA JUMPI DUP1 PUSH4 0x1803C2F5 EQ PUSH2 0x168D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1670 JUMPI DUP1 PUSH4 0x1D880928 EQ PUSH2 0x1639 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x156D JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0xEAD JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0xE91 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0xE42 JUMPI DUP1 PUSH4 0x544B1709 EQ PUSH2 0xCFF JUMPI DUP1 PUSH4 0x61AC3F99 EQ PUSH2 0xCD6 JUMPI DUP1 PUSH4 0x654E8E0C EQ PUSH2 0xCAF JUMPI DUP1 PUSH4 0x6C1DC077 EQ PUSH2 0xC86 JUMPI DUP1 PUSH4 0x6C98D513 EQ PUSH2 0xC5D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xC25 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0xB7E JUMPI DUP1 PUSH4 0x85572FFB EQ PUSH2 0x72D JUMPI DUP1 PUSH4 0x8CF19D19 EQ PUSH2 0x6E9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x6C1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x5A6 JUMPI DUP1 PUSH4 0x995714AE EQ PUSH2 0x4D1 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x428 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0xB0F479A1 EQ PUSH2 0x3B3 JUMPI DUP1 PUSH4 0xB2D92955 EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0xC1586AF8 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0xDDF85603 EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0xE12B948B EQ PUSH2 0x265 JUMPI PUSH4 0xF2FDE38B SUB PUSH2 0x11 JUMPI CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH2 0x1C4 PUSH2 0x2083 JUMP JUMPDEST SWAP1 PUSH2 0x1CD PUSH2 0x2933 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 CALLER DUP5 EQ PUSH2 0x21E JUMPI POP POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP4 OR SWAP1 SSTORE DUP3 SLOAD AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x284 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x284 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xA SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x284 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x284 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x7 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x284 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x284 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x2C9 PUSH2 0x2083 JUMP JUMPDEST DUP3 PUSH2 0x2D2 PUSH2 0x2099 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP5 MSTORE PUSH1 0x3 DUP7 MSTORE SWAP3 KECCAK256 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 DUP4 MSTORE DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x284 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x319 PUSH2 0x310 CALLDATASIZE PUSH2 0x20EF JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x28DB JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH2 0x100 SWAP3 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x349 PUSH2 0x2083 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE KECCAK256 DUP1 SLOAD SWAP3 PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD SWAP1 PUSH1 0x5 PUSH1 0x3 DUP6 ADD SLOAD SWAP4 DUP6 ADD SLOAD SWAP5 ADD SLOAD SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 MLOAD SWAP8 PUSH1 0xFF DUP2 AND ISZERO ISZERO DUP10 MSTORE PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND ISZERO ISZERO PUSH1 0x20 DUP11 ADD MSTORE PUSH1 0x10 SHR AND SWAP1 DUP8 ADD MSTORE PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP3 ADD MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x284 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x284 JUMPI MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x284 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x284 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x421 PUSH2 0x417 PUSH2 0x2083 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x256C JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP DUP3 CALLVALUE PUSH2 0x4CE JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x4CE JUMPI PUSH2 0x442 PUSH2 0x2083 JUMP JUMPDEST SWAP2 DUP4 PUSH1 0x24 CALLDATALOAD SWAP3 CALLER DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP4 PUSH1 0x0 KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0x47D JUMPI PUSH1 0x20 DUP6 PUSH2 0x421 DUP6 DUP6 SUB DUP8 CALLER PUSH2 0x2780 JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x261 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x261 JUMPI CALLER DUP4 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH2 0x527 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP5 DUP7 KECCAK256 SLOAD PUSH1 0x10 SHR AND SWAP1 PUSH32 0x0 AND EQ PUSH2 0x2219 JUMP JUMPDEST CALLER DUP4 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0xFF DUP3 DUP5 KECCAK256 SLOAD AND ISZERO PUSH2 0x590 JUMPI POP CALLER DUP3 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE DUP2 KECCAK256 PUSH2 0x100 PUSH2 0xFF00 NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x9 SLOAD AND OR PUSH1 0x9 SSTORE PUSH1 0x1 PUSH32 0x8392741EF8E51329E7BD6D6010DB40081A08AD52773CFC62F82AC6626991CE83 DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST PUSH1 0x24 SWAP2 MLOAD SWAP1 PUSH4 0x6A9FF79F PUSH1 0xE1 SHL DUP3 MSTORE CALLER SWAP1 DUP3 ADD MSTORE REVERT JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x4CE JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x4CE JUMPI DUP2 MLOAD SWAP2 DUP2 PUSH1 0x6 SLOAD SWAP3 PUSH1 0x1 DUP5 DUP2 SHR SWAP2 DUP2 DUP7 AND SWAP6 DUP7 ISZERO PUSH2 0x6B7 JUMPI JUMPDEST PUSH1 0x20 SWAP7 DUP8 DUP6 LT DUP2 EQ PUSH2 0x6A4 JUMPI DUP9 SWAP10 POP SWAP7 DUP9 SWAP7 SWAP8 DUP6 DUP3 SWAP11 MSTORE SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x67D JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x621 JUMPI JUMPDEST POP POP POP PUSH2 0x61D SWAP3 SWAP2 PUSH2 0x60E SWAP2 SUB DUP6 PUSH2 0x21A2 JUMP JUMPDEST MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x20AF JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP1 DUP7 SWAP4 POP PUSH1 0x6 DUP4 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F JUMPDEST DUP3 DUP5 LT PUSH2 0x665 JUMPI POP POP POP DUP3 ADD ADD DUP2 PUSH2 0x60E PUSH2 0x61D PUSH2 0x5FB JUMP JUMPDEST DUP1 SLOAD DUP5 DUP11 ADD DUP7 ADD MSTORE DUP9 SWAP6 POP DUP8 SWAP5 SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x64C JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP3 ADD MSTORE SWAP4 ISZERO ISZERO PUSH1 0x5 SHL DUP7 ADD SWAP1 SWAP4 ADD SWAP4 POP DUP5 SWAP3 POP PUSH2 0x60E SWAP2 POP PUSH2 0x61D SWAP1 POP PUSH2 0x5FB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x22 DUP11 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x5D1 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x284 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x284 JUMPI SWAP1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x284 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x284 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x3 NOT DUP4 DUP2 CALLDATASIZE ADD SLT PUSH2 0x90E JUMPI DUP3 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 DUP4 GT PUSH2 0xAB2 JUMPI PUSH1 0xA0 SWAP1 DUP4 CALLDATASIZE SUB ADD SLT PUSH2 0x9AF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 PUSH32 0x0 DUP6 AND CALLER SUB PUSH2 0xB67 JUMPI DUP4 MLOAD SWAP2 PUSH2 0x79F DUP4 PUSH2 0x210D JUMP JUMPDEST DUP4 DUP3 ADD CALLDATALOAD DUP4 MSTORE PUSH1 0x24 SWAP1 DUP2 DUP6 ADD CALLDATALOAD DUP2 DUP2 AND DUP2 SUB PUSH2 0xB46 JUMPI DUP9 DUP6 ADD MSTORE PUSH1 0x44 DUP6 ADD CALLDATALOAD DUP2 DUP2 GT PUSH2 0xAAA JUMPI PUSH2 0x7D4 SWAP1 DUP5 CALLDATASIZE SWAP2 DUP9 ADD ADD PUSH2 0x21C3 JUMP JUMPDEST SWAP4 DUP7 DUP2 ADD SWAP5 DUP6 MSTORE PUSH1 0x64 DUP7 ADD CALLDATALOAD DUP3 DUP2 GT PUSH2 0xAAE JUMPI PUSH2 0x7F6 SWAP1 DUP6 CALLDATASIZE SWAP2 DUP10 ADD ADD PUSH2 0x21C3 JUMP JUMPDEST SWAP6 PUSH1 0x60 DUP3 ADD SWAP7 DUP8 MSTORE PUSH1 0x84 DUP2 ADD CALLDATALOAD SWAP1 DUP4 DUP3 GT PUSH2 0xB63 JUMPI ADD CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0xAAE JUMPI DUP5 DUP2 ADD CALLDATALOAD SWAP3 DUP4 GT PUSH2 0xB4F JUMPI DUP8 MLOAD SWAP3 PUSH2 0x834 DUP12 DUP3 PUSH1 0x5 SHL ADD DUP6 PUSH2 0x21A2 JUMP JUMPDEST DUP1 DUP5 MSTORE DUP5 DUP12 DUP6 ADD SWAP2 PUSH1 0x6 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0xB4B JUMPI DUP6 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xB0C JUMPI POP POP POP PUSH1 0x80 ADD MSTORE DUP3 MLOAD DUP8 DUP2 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0xAA6 JUMPI PUSH2 0x876 DUP9 DUP9 SWAP3 ADD PUSH2 0x2882 JUMP JUMPDEST AND DUP1 DUP10 MSTORE PUSH1 0xB DUP9 MSTORE PUSH1 0xFF DUP7 DUP11 KECCAK256 SLOAD AND ISZERO PUSH2 0xAF7 JUMPI POP DUP4 MLOAD DUP8 DUP2 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0xAA6 JUMPI PUSH2 0x8A6 DUP9 PUSH1 0xFF SWAP3 ADD PUSH2 0x2896 JUMP JUMPDEST AND DUP1 PUSH2 0x912 JUMPI POP POP POP POP MLOAD SWAP3 PUSH1 0x60 DUP5 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0x90E JUMPI PUSH1 0x60 SWAP2 PUSH2 0x8D0 PUSH2 0x8D8 SWAP3 DUP7 ADD PUSH2 0x2896 JUMP JUMPDEST POP DUP5 ADD PUSH2 0x2882 JUMP JUMPDEST SWAP3 ADD MLOAD SWAP2 AND PUSH2 0x8E7 DUP3 DUP3 PUSH2 0x26DC JUMP JUMPDEST PUSH32 0xB55160CC367B9CDF2289AF15A6163D786DE0A3D0722F78F652DEC347580C8564 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP5 DUP1 REVERT JUMPDEST SWAP6 SWAP7 SWAP6 SWAP3 SWAP5 SWAP4 SWAP2 SWAP3 PUSH1 0x1 DUP2 SUB PUSH2 0x9B3 JUMPI POP POP POP POP DUP2 MLOAD DUP4 DUP2 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0x9AF JUMPI PUSH2 0x940 DUP5 DUP7 SWAP3 ADD PUSH2 0x2882 JUMP JUMPDEST AND DUP6 MSTORE PUSH1 0xB DUP4 MSTORE DUP5 KECCAK256 PUSH2 0x100 PUSH2 0xFF00 NOT DUP3 SLOAD AND OR SWAP1 SSTORE MLOAD SWAP1 DUP1 DUP3 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0x9AB JUMPI PUSH2 0x96E SWAP2 ADD PUSH2 0x2882 JUMP JUMPDEST AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x9 SLOAD AND OR PUSH1 0x9 SSTORE PUSH1 0x1 PUSH32 0x8392741EF8E51329E7BD6D6010DB40081A08AD52773CFC62F82AC6626991CE83 DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST SWAP3 SWAP7 SWAP4 SWAP5 SWAP3 PUSH1 0x2 SUB PUSH2 0xAB6 JUMPI POP MLOAD PUSH1 0xA0 DUP2 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0xAB2 JUMPI PUSH2 0x9D9 DUP6 DUP3 ADD PUSH2 0x2896 JUMP JUMPDEST POP DUP4 DUP2 ADD MLOAD SWAP6 PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0xA0 PUSH1 0x80 DUP5 ADD MLOAD SWAP4 ADD MLOAD SWAP8 DUP5 MLOAD DUP9 DUP2 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0xAAE JUMPI PUSH2 0xA09 DUP10 DUP9 SWAP3 ADD PUSH2 0x2882 JUMP JUMPDEST AND DUP11 MSTORE PUSH1 0xB DUP9 MSTORE TIMESTAMP PUSH1 0x1 DUP9 DUP13 KECCAK256 ADD SSTORE DUP5 MLOAD DUP9 DUP2 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0xAAE JUMPI PUSH2 0xA32 DUP10 DUP9 SWAP3 ADD PUSH2 0x2882 JUMP JUMPDEST AND DUP11 MSTORE PUSH1 0x2 DUP8 DUP12 KECCAK256 ADD SSTORE DUP4 MLOAD DUP8 DUP2 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0xAAA JUMPI PUSH2 0xA56 DUP9 DUP8 SWAP3 ADD PUSH2 0x2882 JUMP JUMPDEST AND DUP10 MSTORE PUSH1 0x3 DUP7 DUP11 KECCAK256 ADD SSTORE DUP3 MLOAD DUP7 DUP2 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0xAA6 JUMPI PUSH2 0xA7A DUP8 DUP7 SWAP3 ADD PUSH2 0x2882 JUMP JUMPDEST AND DUP9 MSTORE DUP5 DUP9 KECCAK256 ADD SSTORE MLOAD DUP4 DUP2 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0x9AF JUMPI PUSH1 0x5 SWAP4 PUSH2 0xA9C SWAP2 ADD PUSH2 0x2882 JUMP JUMPDEST AND DUP5 MSTORE DUP4 KECCAK256 ADD SSTORE DUP1 RETURN JUMPDEST DUP9 DUP1 REVERT JUMPDEST DUP10 DUP1 REVERT JUMPDEST DUP11 DUP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x19 PUSH1 0x64 SWAP3 DUP9 DUP9 MLOAD SWAP4 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x696E76616C696420636F6D6D616E642066726F6D204E6F646500000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP6 MLOAD PUSH4 0x6A9FF79F PUSH1 0xE1 SHL DUP2 MSTORE DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE REVERT JUMPDEST DUP10 DUP3 CALLDATASIZE SUB SLT PUSH2 0xB4B JUMPI DUP10 MLOAD SWAP1 PUSH2 0xB21 DUP3 PUSH2 0x216C JUMP JUMPDEST DUP3 CALLDATALOAD SWAP1 DUP13 DUP3 AND DUP3 SUB PUSH2 0xB46 JUMPI DUP3 DUP15 SWAP3 DUP14 SWAP5 MSTORE DUP3 DUP6 ADD CALLDATALOAD DUP4 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x84E JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP13 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x41 DUP7 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x0 REVERT JUMPDEST DUP12 DUP1 REVERT JUMPDEST PUSH1 0x24 SWAP1 DUP5 MLOAD SWAP1 PUSH4 0x35FDCCCD PUSH1 0xE2 SHL DUP3 MSTORE CALLER SWAP1 DUP3 ADD MSTORE REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x261 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x261 JUMPI PUSH1 0x1 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 DUP5 AND CALLER SUB PUSH2 0xBE9 JUMPI POP POP DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP3 AND CALLER SWAP1 DUP2 OR DUP7 SSTORE SWAP4 AND PUSH1 0x1 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x26BAB9BA10313290383937B837B9B2B21037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x284 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x284 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xC4D PUSH2 0x2083 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x2 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x4CE JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x4CE JUMPI PUSH2 0xC76 PUSH2 0x2933 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND SWAP1 SSTORE DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x284 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x284 JUMPI PUSH1 0x9 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x284 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x284 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x7 SLOAD PUSH1 0xA8 SHR AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x284 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x284 JUMPI PUSH1 0x8 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x4CE JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x4CE JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP4 DUP5 DUP5 AND DUP5 SUB PUSH2 0xB46 JUMPI PUSH2 0xD2F PUSH2 0x2099 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP2 PUSH1 0x44 CALLDATALOAD DUP7 DUP2 AND SWAP3 SWAP1 DUP4 SWAP1 SUB PUSH2 0xB46 JUMPI PUSH1 0x64 CALLDATALOAD SWAP2 DUP8 DUP4 AND DUP1 SWAP4 SUB PUSH2 0xB46 JUMPI PUSH1 0x84 CALLDATALOAD SWAP9 DUP10 GT PUSH2 0xAB2 JUMPI PUSH2 0xD74 PUSH2 0xDF0 SWAP7 SWAP8 SWAP9 SWAP10 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x21C3 JUMP JUMPDEST DUP8 MLOAD SWAP5 PUSH1 0x20 SWAP11 DUP12 SWAP8 AND DUP8 DUP8 ADD MSTORE DUP7 DUP7 MSTORE PUSH2 0xD8D DUP7 PUSH2 0x216C JUMP JUMPDEST DUP9 MLOAD PUSH2 0xD98 DUP2 PUSH2 0x213E JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH2 0xDB5 DUP11 MLOAD PUSH2 0xDAA DUP2 PUSH2 0x213E JUMP JUMPDEST PUSH3 0xF4240 DUP2 MSTORE PUSH2 0x28A4 JUMP JUMPDEST SWAP3 DUP11 MLOAD SWAP8 PUSH2 0xDC2 DUP10 PUSH2 0x210D JUMP JUMPDEST DUP9 MSTORE DUP9 DUP9 ADD MSTORE DUP10 DUP8 ADD MSTORE PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD MSTORE DUP7 MLOAD PUSH4 0x20487DED PUSH1 0xE0 SHL DUP2 MSTORE SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 DUP5 ADD PUSH2 0x2273 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0xE37 JUMPI SWAP3 PUSH2 0xE08 JUMPI JUMPDEST POP MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 POP DUP3 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xE30 JUMPI JUMPDEST PUSH2 0xE20 DUP2 DUP4 PUSH2 0x21A2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xB46 JUMPI MLOAD SWAP1 CODESIZE PUSH2 0xE01 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xE16 JUMP JUMPDEST DUP3 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x284 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x284 JUMPI PUSH2 0x421 PUSH1 0x20 SWAP3 DUP3 PUSH2 0xE63 PUSH2 0x2083 JUMP JUMPDEST SWAP2 CALLER DUP2 MSTORE PUSH1 0x3 DUP7 MSTORE KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 MSTORE DUP5 MSTORE PUSH2 0xE8A PUSH1 0x24 CALLDATALOAD DUP5 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2357 JUMP JUMPDEST SWAP1 CALLER PUSH2 0x2780 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x284 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x284 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x20 SWAP2 DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x9AB JUMPI PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0xB DUP5 MSTORE DUP3 DUP6 KECCAK256 SLOAD DUP3 CALLDATALOAD SWAP5 SWAP1 PUSH1 0x8 SHR PUSH1 0xFF AND ISZERO PUSH2 0x1536 JUMPI CALLER DUP7 MSTORE PUSH1 0x2 DUP2 MSTORE DUP4 DUP7 KECCAK256 SLOAD DUP6 GT PUSH2 0x14FE JUMPI DUP4 MLOAD SWAP3 DUP7 DUP3 DUP6 ADD MSTORE CALLER DUP6 DUP6 ADD MSTORE PUSH1 0x60 DUP7 DUP2 DUP7 ADD MSTORE DUP1 DUP6 MSTORE PUSH2 0xF1A DUP6 PUSH2 0x2187 JUMP JUMPDEST CALLER ISZERO PUSH2 0x14B2 JUMPI CALLER DUP9 MSTORE PUSH1 0x2 DUP4 MSTORE DUP6 DUP9 KECCAK256 SLOAD DUP8 DUP2 LT PUSH2 0x1464 JUMPI SWAP1 DUP8 DUP10 SWAP4 SWAP3 CALLER DUP6 MSTORE PUSH1 0x2 DUP7 MSTORE SUB DUP8 DUP5 KECCAK256 SSTORE DUP8 DUP3 SLOAD SUB DUP3 SSTORE DUP3 DUP8 MLOAD DUP10 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP7 CALLER SWAP3 LOG3 DUP5 PUSH1 0x9 SLOAD AND SWAP1 DUP2 DUP5 MSTORE PUSH1 0xB DUP6 MSTORE DUP8 DUP5 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP8 DUP9 DUP3 PUSH1 0x10 SHR AND SWAP2 DUP10 PUSH32 0x0 AND DUP4 EQ PUSH1 0x0 EQ PUSH2 0x1064 JUMPI POP POP POP POP POP DUP4 PUSH1 0x9 SLOAD AND DUP1 EXTCODESIZE ISZERO PUSH2 0x261 JUMPI DUP7 MLOAD PUSH4 0x15E005B7 PUSH1 0xE3 SHL DUP2 MSTORE CALLER SWAP3 DUP2 ADD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD DUP10 SWAP1 MSTORE SWAP2 DUP4 SWAP2 DUP4 SWAP2 DUP3 SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x105A JUMPI PUSH2 0x1046 JUMPI JUMPDEST POP POP PUSH1 0xB SWAP2 JUMPDEST PUSH1 0x9 SLOAD AND DUP7 MSTORE MSTORE CALLER SWAP2 DUP5 KECCAK256 SLOAD PUSH1 0x10 SHR AND PUSH32 0xF3F4E036F86C1437E14FAC401835B304A1B76776B49E2E2A4D86C119433B80CF DUP5 DUP1 LOG4 DUP1 RETURN JUMPDEST PUSH2 0x104F SWAP1 PUSH2 0x2159 JUMP JUMPDEST PUSH2 0x9AF JUMPI DUP6 CODESIZE PUSH2 0x1009 JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0xFF SWAP2 SWAP3 SWAP5 SWAP7 POP SWAP5 SWAP3 SWAP5 AND ISZERO PUSH2 0x144D JUMPI DUP9 DUP5 DUP1 PUSH1 0x80 DUP10 DUP16 DUP13 PUSH1 0x7 SLOAD PUSH1 0x8 SHR AND SWAP10 DUP7 DUP2 DUP13 SWAP9 MLOAD SWAP5 PUSH2 0x1093 DUP7 PUSH2 0x210D JUMP JUMPDEST DUP2 DUP7 MSTORE DUP6 ADD MSTORE DUP4 ADD MSTORE DUP4 DUP3 ADD MSTORE ADD MSTORE DUP11 MLOAD SWAP7 DUP9 DUP9 ADD MSTORE DUP8 DUP8 MSTORE PUSH2 0x10B5 DUP8 PUSH2 0x216C JUMP JUMPDEST DUP11 MLOAD PUSH2 0x10C0 DUP2 PUSH2 0x213E JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH2 0x10DD DUP13 MLOAD PUSH2 0x10D2 DUP2 PUSH2 0x213E JUMP JUMPDEST PUSH3 0x1E8480 DUP2 MSTORE PUSH2 0x28A4 JUMP JUMPDEST SWAP4 DUP13 MLOAD SWAP9 PUSH2 0x10EA DUP11 PUSH2 0x210D JUMP JUMPDEST DUP10 MSTORE DUP10 DUP10 ADD MSTORE DUP12 DUP9 ADD MSTORE DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD MSTORE DUP8 MLOAD PUSH4 0xB0F479A1 PUSH1 0xE0 SHL DUP2 MSTORE DUP6 DUP2 DUP4 DUP2 ADDRESS GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1443 JUMPI SWAP1 DUP8 SWAP2 DUP13 SWAP2 PUSH2 0x1409 JUMPI JUMPDEST POP DUP10 MLOAD PUSH4 0x20487DED PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 AND SWAP4 DUP12 SWAP1 DUP8 DUP4 DUP1 PUSH2 0x1142 DUP11 DUP10 DUP10 DUP5 ADD PUSH2 0x2273 JUMP JUMPDEST SUB DUP2 DUP10 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x13FF JUMPI SWAP1 DUP9 SWAP2 DUP4 SWAP5 PUSH2 0x13CD JUMPI JUMPDEST POP PUSH1 0x64 DUP13 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP4 MSTORE CALLER DUP10 DUP5 ADD MSTORE ADDRESS PUSH1 0x24 DUP5 ADD MSTORE DUP8 PUSH1 0x44 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x13C3 JUMPI DUP13 SWAP2 PUSH2 0x13A6 JUMPI JUMPDEST POP ISZERO PUSH2 0x1363 JUMPI DUP7 PUSH1 0x7 SLOAD PUSH1 0x8 SHR AND SWAP1 DUP10 MLOAD DUP13 PUSH4 0x70A08231 PUSH1 0xE0 SHL SWAP2 DUP3 DUP2 MSTORE ADDRESS DUP7 DUP3 ADD MSTORE DUP10 DUP2 PUSH1 0x24 DUP2 DUP9 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x1358 JUMPI SWAP2 PUSH2 0x132B JUMPI JUMPDEST POP DUP3 GT PUSH2 0x12BA JUMPI POP DUP10 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 DUP6 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP13 SWAP4 SWAP3 SWAP1 SWAP2 DUP9 SWAP2 DUP4 SWAP2 DUP3 SWAP1 DUP8 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x12B0 JUMPI SWAP2 DUP8 SWAP6 SWAP4 SWAP2 PUSH2 0x1237 SWAP8 SWAP6 SWAP4 PUSH2 0x1283 JUMPI JUMPDEST POP DUP11 MLOAD PUSH4 0x96F4E9F9 PUSH1 0xE0 SHL DUP2 MSTORE SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 ADD PUSH2 0x2273 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x1279 JUMPI PUSH2 0x124F JUMPI JUMPDEST POP PUSH1 0xB SWAP2 PUSH2 0x100F JUMP JUMPDEST DUP2 SWAP1 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1272 JUMPI JUMPDEST PUSH2 0x1264 DUP2 DUP4 PUSH2 0x21A2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x9AF JUMPI CODESIZE PUSH2 0x1246 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x125A JUMP JUMPDEST DUP6 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x12A2 SWAP1 DUP8 RETURNDATASIZE DUP10 GT PUSH2 0x12A9 JUMPI JUMPDEST PUSH2 0x129A DUP2 DUP4 PUSH2 0x21A2 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x233F JUMP JUMPDEST POP CODESIZE PUSH2 0x121C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1290 JUMP JUMPDEST DUP11 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 DUP13 DUP12 DUP10 DUP1 DUP8 SWAP6 PUSH1 0x24 DUP5 MLOAD DUP1 SWAP10 DUP2 SWAP4 DUP3 MSTORE ADDRESS DUP11 DUP4 ADD MSTORE GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0xE37 JUMPI SWAP3 PUSH2 0x12FA JUMPI JUMPDEST POP MLOAD PUSH4 0x4787A103 PUSH1 0xE1 SHL DUP2 MSTORE SWAP3 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP2 POP REVERT JUMPDEST SWAP1 SWAP2 POP DUP5 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1324 JUMPI JUMPDEST PUSH2 0x1311 DUP2 DUP4 PUSH2 0x21A2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xB46 JUMPI PUSH1 0x44 SWAP4 MLOAD SWAP1 DUP6 PUSH2 0x12DF JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1307 JUMP JUMPDEST SWAP1 POP DUP9 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1351 JUMPI JUMPDEST PUSH2 0x1342 DUP2 DUP4 PUSH2 0x21A2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xB46 JUMPI MLOAD CODESIZE PUSH2 0x11C4 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1338 JUMP JUMPDEST DUP14 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP9 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP4 ADD DUP8 SWAP1 MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F742070726F7669646564204C696E6B20666F722066656573000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x13BD SWAP2 POP DUP8 RETURNDATASIZE DUP10 GT PUSH2 0x12A9 JUMPI PUSH2 0x129A DUP2 DUP4 PUSH2 0x21A2 JUMP JUMPDEST CODESIZE PUSH2 0x118C JUMP JUMPDEST DUP11 MLOAD RETURNDATASIZE DUP15 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP3 POP SWAP3 POP DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x13F8 JUMPI JUMPDEST PUSH2 0x13E5 DUP2 DUP4 PUSH2 0x21A2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xB46 JUMPI DUP7 DUP13 SWAP2 MLOAD SWAP3 CODESIZE PUSH2 0x1158 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x13DB JUMP JUMPDEST DUP12 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP DUP8 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x143C JUMPI JUMPDEST PUSH2 0x1422 DUP2 DUP4 PUSH2 0x21A2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xAAE JUMPI MLOAD DUP7 DUP2 AND DUP2 SUB PUSH2 0xAAE JUMPI DUP7 SWAP1 CODESIZE PUSH2 0x1120 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1418 JUMP JUMPDEST DUP10 MLOAD RETURNDATASIZE DUP14 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP9 MLOAD PUSH4 0x6A9FF79F PUSH1 0xE1 SHL DUP2 MSTORE DUP1 DUP4 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP6 SWAP1 MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP PUSH1 0x84 SWAP2 DUP6 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E6F7420656E6F756768742062616C616E6365 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4E6F6465206973206E6F7420416374697665 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x284 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x284 JUMPI PUSH2 0x1589 PUSH2 0x2083 JUMP JUMPDEST PUSH2 0x1591 PUSH2 0x2099 JUMP JUMPDEST SWAP2 DUP5 PUSH1 0x44 CALLDATALOAD SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP5 PUSH1 0x0 KECCAK256 SLOAD SWAP1 PUSH1 0x0 NOT DUP3 SUB PUSH2 0x15CD JUMPI JUMPDEST PUSH1 0x20 DUP7 PUSH2 0x421 DUP8 DUP8 DUP8 PUSH2 0x256C JUMP JUMPDEST DUP5 DUP3 LT PUSH2 0x15F6 JUMPI POP SWAP2 DUP4 SWAP2 PUSH2 0x15EB PUSH1 0x20 SWAP7 SWAP6 PUSH2 0x421 SWAP6 SUB CALLER DUP4 PUSH2 0x2780 JUMP JUMPDEST SWAP2 SWAP4 SWAP5 DUP2 SWAP4 POP PUSH2 0x15BF JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x284 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x284 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x1667 PUSH2 0x1659 PUSH2 0x2083 JUMP JUMPDEST PUSH2 0x1661 PUSH2 0x2099 JUMP JUMPDEST SWAP1 PUSH2 0x237A JUMP JUMPDEST SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x261 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x261 JUMPI PUSH1 0x20 SWAP3 POP SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x284 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x284 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x16B2 PUSH2 0x2516 JUMP JUMPDEST SWAP2 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH2 0x16D4 PUSH2 0x2083 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 SUB PUSH2 0xB46 JUMPI PUSH1 0x44 CALLDATALOAD SWAP3 DUP4 ISZERO ISZERO SWAP3 DUP4 DUP6 SUB PUSH2 0xAB2 JUMPI PUSH2 0x16FF PUSH2 0x2933 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x7 SLOAD PUSH1 0xA8 SHR AND ISZERO PUSH2 0x177A JUMPI POP SWAP1 PUSH1 0x1 SWAP2 DUP3 DUP1 PUSH1 0xA0 SHL SUB AND SWAP5 DUP6 DUP8 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE DUP7 KECCAK256 SWAP3 PUSH2 0xFF00 PUSH10 0xFFFFFFFFFFFFFFFF0000 DUP6 SLOAD SWAP4 PUSH1 0x10 SHL AND SWAP3 PUSH10 0xFFFFFFFFFFFFFFFFFFFF NOT AND SWAP2 PUSH1 0x8 SHL AND OR OR OR SWAP1 SSTORE PUSH2 0x175A JUMPI POP DUP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP2 DUP2 PUSH1 0x8 SLOAD AND OR PUSH1 0x8 SSTORE PUSH1 0x9 SLOAD AND OR PUSH1 0x9 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x139BC81B5BDC99481B9BD9195CC8185B1B1BDDD959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x284 JUMPI PUSH1 0x20 SWAP3 DUP4 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x261 JUMPI PUSH2 0x17D3 PUSH2 0x2083 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0xB DUP8 MSTORE DUP4 DUP7 KECCAK256 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0xFF AND ISZERO PUSH2 0x1D80 JUMPI PUSH1 0xFF PUSH1 0x7 SLOAD AND ISZERO PUSH2 0x1D24 JUMPI JUMPDEST POP DUP1 DUP6 MSTORE PUSH1 0xB DUP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP4 DUP5 DUP5 DUP8 KECCAK256 SLOAD PUSH1 0x10 SHR AND SWAP1 DUP5 MLOAD PUSH1 0x1 DUP10 DUP3 ADD MSTORE DUP3 DUP7 DUP3 ADD MSTORE PUSH1 0x60 SWAP1 DUP5 DUP3 DUP3 ADD MSTORE DUP2 DUP2 MSTORE PUSH2 0x183D DUP2 PUSH2 0x2187 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD DUP8 AND DUP11 MSTORE PUSH1 0xB DUP12 MSTORE DUP8 DUP11 KECCAK256 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE SLOAD DUP7 AND DUP1 DUP11 MSTORE DUP8 DUP11 KECCAK256 SLOAD SWAP1 SWAP2 PUSH1 0x10 DUP3 SWAP1 SHR DUP11 AND SWAP2 PUSH32 0x0 DUP12 AND DUP4 SUB PUSH2 0x194D JUMPI POP POP POP POP POP DUP4 PUSH1 0x9 SLOAD AND DUP1 EXTCODESIZE ISZERO PUSH2 0x1949 JUMPI DUP8 SWAP3 SWAP2 DUP4 PUSH1 0x44 SWAP3 DUP9 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH4 0x4BB297FF PUSH1 0xE1 SHL DUP7 MSTORE DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x193F JUMPI PUSH2 0x192B JUMPI JUMPDEST POP DUP4 SWAP5 PUSH1 0xB SWAP2 JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL SWAP2 DUP2 AND DUP3 PUSH1 0x8 SLOAD AND OR PUSH1 0x8 SSTORE AND PUSH1 0x9 SSTORE TIMESTAMP PUSH1 0xA SSTORE DUP5 DUP1 MSTORE MSTORE DUP3 KECCAK256 SLOAD PUSH1 0x10 SHR AND PUSH32 0x985439828E84E84B426DC5FAD9DBE12249540A3A89D03B3B635F89B4FE1E1FF2 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP4 PUSH2 0x1938 PUSH1 0xB SWAP3 SWAP6 PUSH2 0x2159 JUMP JUMPDEST SWAP4 SWAP1 PUSH2 0x18D0 JUMP JUMPDEST DUP4 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST SWAP4 SWAP12 SWAP7 POP SWAP2 SWAP5 POP SWAP2 PUSH1 0xFF AND ISZERO PUSH2 0x1D0D JUMPI DUP6 PUSH1 0x7 SLOAD PUSH1 0x8 SHR AND DUP11 DUP2 SWAP12 PUSH1 0x80 DUP11 MLOAD PUSH2 0x1975 DUP2 PUSH2 0x210D JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 DUP11 DUP3 ADD MSTORE DUP3 DUP13 DUP3 ADD MSTORE DUP14 DUP4 DUP3 ADD MSTORE ADD MSTORE DUP9 MLOAD SWAP6 DUP8 DUP8 ADD MSTORE DUP7 DUP7 MSTORE PUSH2 0x199C DUP7 PUSH2 0x216C JUMP JUMPDEST DUP9 MLOAD PUSH2 0x19A7 DUP2 PUSH2 0x213E JUMP JUMPDEST DUP12 DUP2 MSTORE PUSH2 0x19B8 DUP11 MLOAD PUSH2 0x10D2 DUP2 PUSH2 0x213E JUMP JUMPDEST SWAP4 DUP11 MLOAD SWAP8 PUSH2 0x19C5 DUP10 PUSH2 0x210D JUMP JUMPDEST DUP9 MSTORE DUP9 DUP9 ADD MSTORE DUP10 DUP8 ADD MSTORE DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD MSTORE DUP6 MLOAD PUSH4 0xB0F479A1 PUSH1 0xE0 SHL DUP2 MSTORE DUP5 DUP2 DUP5 DUP2 ADDRESS GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1D03 JUMPI SWAP1 DUP7 SWAP2 DUP11 SWAP2 PUSH2 0x1CC9 JUMPI JUMPDEST POP AND SWAP2 DUP7 MLOAD SWAP10 PUSH4 0x20487DED PUSH1 0xE0 SHL DUP12 MSTORE DUP6 DUP12 DUP1 PUSH2 0x1A1B DUP9 DUP8 DUP8 DUP5 ADD PUSH2 0x2273 JUMP JUMPDEST SUB DUP2 DUP8 GAS STATICCALL SWAP11 DUP12 ISZERO PUSH2 0x1B79 JUMPI DUP11 SWAP12 PUSH2 0x1C9A JUMPI JUMPDEST POP DUP6 DUP11 SWAP2 PUSH1 0x64 DUP14 DUP12 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP5 MSTORE CALLER DUP10 DUP6 ADD MSTORE ADDRESS PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x1B79 JUMPI DUP11 SWAP2 PUSH2 0x1C7D JUMPI JUMPDEST POP ISZERO PUSH2 0x1C3A JUMPI DUP9 SWAP10 DUP7 PUSH1 0x7 SLOAD PUSH1 0x8 SHR AND SWAP1 DUP9 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL SWAP1 DUP2 DUP2 MSTORE ADDRESS DUP6 DUP3 ADD MSTORE DUP9 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1C30 JUMPI DUP14 SWAP2 PUSH2 0x1C03 JUMPI JUMPDEST POP DUP3 GT PUSH2 0x1B83 JUMPI POP DUP9 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 DUP8 SWAP2 DUP4 SWAP2 SWAP1 DUP3 SWAP1 DUP15 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x1B79 JUMPI DUP7 SWAP5 SWAP3 PUSH2 0x1B10 SWAP7 SWAP5 SWAP3 DUP13 SWAP3 PUSH2 0x1B5C JUMPI JUMPDEST POP DUP10 MLOAD PUSH4 0x96F4E9F9 PUSH1 0xE0 SHL DUP2 MSTORE SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 ADD PUSH2 0x2273 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x1B52 JUMPI PUSH2 0x1B28 JUMPI JUMPDEST POP PUSH1 0xB SWAP2 PUSH2 0x18D7 JUMP JUMPDEST DUP2 SWAP1 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1B4B JUMPI JUMPDEST PUSH2 0x1B3D DUP2 DUP4 PUSH2 0x21A2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x90E JUMPI DUP7 PUSH2 0x1B1F JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1B33 JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x1B72 SWAP1 DUP8 RETURNDATASIZE DUP10 GT PUSH2 0x12A9 JUMPI PUSH2 0x129A DUP2 DUP4 PUSH2 0x21A2 JUMP JUMPDEST POP DUP14 PUSH2 0x1AF5 JUMP JUMPDEST DUP9 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP10 DUP13 SWAP5 SWAP4 DUP10 DUP1 SWAP4 PUSH1 0x24 DUP5 MLOAD DUP1 SWAP5 DUP2 SWAP4 DUP3 MSTORE ADDRESS DUP11 DUP4 ADD MSTORE GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x1BF9 JUMPI DUP7 SWAP4 PUSH2 0x1BC5 JUMPI JUMPDEST POP POP MLOAD PUSH4 0x4787A103 PUSH1 0xE1 SHL DUP2 MSTORE SWAP3 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP2 POP REVERT JUMPDEST SWAP1 DUP1 SWAP3 SWAP4 POP DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1BF2 JUMPI JUMPDEST PUSH2 0x1BDD DUP2 DUP4 PUSH2 0x21A2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x90E JUMPI PUSH1 0x44 SWAP5 POP MLOAD SWAP1 DUP6 DUP1 PUSH2 0x1BA9 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1BD3 JUMP JUMPDEST DUP3 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP DUP9 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1C29 JUMPI JUMPDEST PUSH2 0x1C1A DUP2 DUP4 PUSH2 0x21A2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xB4B JUMPI MLOAD DUP15 PUSH2 0x1AA0 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1C10 JUMP JUMPDEST DUP12 MLOAD RETURNDATASIZE DUP16 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F742070726F7669646564204C696E6B20666F722066656573000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x1C94 SWAP2 POP DUP7 RETURNDATASIZE DUP9 GT PUSH2 0x12A9 JUMPI PUSH2 0x129A DUP2 DUP4 PUSH2 0x21A2 JUMP JUMPDEST DUP12 PUSH2 0x1A66 JUMP JUMPDEST SWAP1 SWAP11 POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1CC2 JUMPI JUMPDEST PUSH2 0x1CB2 DUP2 DUP4 PUSH2 0x21A2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xAAA JUMPI MLOAD SWAP10 DUP6 PUSH2 0x1A2E JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1CA8 JUMP JUMPDEST DUP1 SWAP3 POP DUP7 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x1CFC JUMPI JUMPDEST PUSH2 0x1CE2 DUP2 DUP4 PUSH2 0x21A2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xAA6 JUMPI MLOAD DUP6 DUP2 AND DUP2 SUB PUSH2 0xAA6 JUMPI DUP6 SWAP1 DUP12 PUSH2 0x19FB JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1CD8 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP7 MLOAD PUSH4 0x6A9FF79F PUSH1 0xE1 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH2 0x1D32 SWAP1 DUP4 PUSH1 0x9 SLOAD AND PUSH2 0x237A JUMP JUMPDEST ISZERO PUSH2 0x1D3D JUMPI DUP7 PUSH2 0x1801 JUMP JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP6 ADD DUP8 SWAP1 MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E646974696F6E20746F2077617270206E6F74206D657400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP7 ADD DUP9 SWAP1 MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44657374696E6174696F6E204E6F6465206973206E6F74207661696C64000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x284 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x284 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x421 PUSH2 0x1DE3 PUSH2 0x2083 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x2780 JUMP JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x284 JUMPI PUSH2 0x1DFE CALLDATASIZE PUSH2 0x20EF JUMP JUMPDEST SWAP4 SWAP1 SWAP2 CALLER DUP7 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH2 0x1E46 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP10 DUP10 KECCAK256 SLOAD PUSH1 0x10 SHR AND SWAP1 PUSH32 0x0 AND EQ PUSH2 0x2219 JUMP JUMPDEST CALLER DUP7 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0xFF DUP8 DUP8 KECCAK256 SLOAD AND ISZERO PUSH2 0x1E82 JUMPI PUSH1 0x5 SWAP5 SWAP6 SWAP7 CALLER DUP9 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE DUP8 KECCAK256 SWAP4 TIMESTAMP PUSH1 0x1 DUP7 ADD SSTORE PUSH1 0x2 DUP6 ADD SSTORE PUSH1 0x3 DUP5 ADD SSTORE DUP3 ADD SSTORE ADD SSTORE DUP1 RETURN JUMPDEST DUP7 MLOAD PUSH4 0x6A9FF79F PUSH1 0xE1 SHL DUP2 MSTORE CALLER DUP2 DUP5 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x4CE JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x4CE JUMPI DUP2 MLOAD SWAP2 DUP2 PUSH1 0x5 SLOAD SWAP3 PUSH1 0x1 DUP5 DUP2 SHR SWAP2 DUP2 DUP7 AND SWAP6 DUP7 ISZERO PUSH2 0x1F5B JUMPI JUMPDEST PUSH1 0x20 SWAP7 DUP8 DUP6 LT DUP2 EQ PUSH2 0x6A4 JUMPI DUP9 SWAP10 POP SWAP7 DUP9 SWAP7 SWAP8 DUP6 DUP3 SWAP11 MSTORE SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x67D JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x1EFF JUMPI POP POP POP PUSH2 0x61D SWAP3 SWAP2 PUSH2 0x60E SWAP2 SUB DUP6 PUSH2 0x21A2 JUMP JUMPDEST SWAP2 SWAP1 DUP7 SWAP4 POP PUSH1 0x5 DUP4 MSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 JUMPDEST DUP3 DUP5 LT PUSH2 0x1F43 JUMPI POP POP POP DUP3 ADD ADD DUP2 PUSH2 0x60E PUSH2 0x61D PUSH2 0x5FB JUMP JUMPDEST DUP1 SLOAD DUP5 DUP11 ADD DUP7 ADD MSTORE DUP9 SWAP6 POP DUP8 SWAP5 SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x1F2A JUMP JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x1EC3 JUMP JUMPDEST POP CALLVALUE PUSH2 0x261 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x261 JUMPI PUSH2 0x1F7E PUSH2 0x2083 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP3 CALLER DUP6 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH2 0x1FC8 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP4 DUP9 KECCAK256 SLOAD PUSH1 0x10 SHR AND SWAP1 PUSH32 0x0 AND EQ PUSH2 0x2219 JUMP JUMPDEST CALLER DUP6 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0xFF DUP2 DUP7 KECCAK256 SLOAD AND ISZERO PUSH2 0x2018 JUMPI POP POP PUSH2 0x1FE8 DUP3 DUP3 PUSH2 0x26DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xB55160CC367B9CDF2289AF15A6163D786DE0A3D0722F78F652DEC347580C8564 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x24 SWAP3 POP MLOAD SWAP1 PUSH4 0x6A9FF79F PUSH1 0xE1 SHL DUP3 MSTORE CALLER SWAP1 DUP3 ADD MSTORE REVERT JUMPDEST SWAP3 POP POP CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI CALLDATALOAD PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 AND DUP1 SWAP2 SUB PUSH2 0x261 JUMPI PUSH1 0x20 SWAP3 POP PUSH4 0x85572FFB PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x2072 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP CODESIZE PUSH2 0x206B JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xB46 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xB46 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x20DB JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x20BA JUMP JUMPDEST PUSH1 0x80 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0xB46 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x64 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x2128 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x2128 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2128 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x2128 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x2128 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x2128 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0xB46 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x2128 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x21F7 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x21A2 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0xB46 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2220 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52657175697265206D617374657220616E64206E6F646520696E2073616D6520 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x31B430B4B7 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP4 SWAP3 SWAP4 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 SWAP2 DUP2 DUP4 DUP3 ADD MSTORE PUSH2 0x22A2 DUP6 MLOAD PUSH1 0xA0 DUP5 DUP5 ADD MSTORE PUSH1 0xE0 DUP4 ADD SWAP1 PUSH2 0x20AF JUMP JUMPDEST SWAP2 PUSH2 0x22BE DUP5 DUP8 ADD MLOAD SWAP4 PUSH1 0x3F NOT SWAP5 DUP6 DUP6 DUP4 SUB ADD PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x20AF JUMP JUMPDEST DUP2 DUP8 ADD MLOAD SWAP5 DUP5 DUP5 DUP4 SUB ADD PUSH1 0x80 DUP6 ADD MSTORE DUP1 DUP1 DUP8 MLOAD SWAP4 DUP5 DUP2 MSTORE ADD SWAP7 ADD SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0x2316 JUMPI POP POP POP POP POP PUSH1 0xC0 PUSH1 0x80 PUSH2 0x2313 SWAP6 SWAP7 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x60 DUP3 ADD MLOAD AND PUSH1 0xA0 DUP6 ADD MSTORE ADD MLOAD SWAP3 DUP3 DUP6 SUB ADD SWAP2 ADD MSTORE PUSH2 0x20AF JUMP JUMPDEST SWAP1 JUMP JUMPDEST DUP5 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 MSTORE DUP4 ADD MLOAD DUP9 DUP5 ADD MSTORE SWAP7 DUP8 ADD SWAP7 SWAP4 DUP3 ADD SWAP4 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x22DD JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xB46 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0xB46 JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x2364 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND SWAP2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xB SWAP1 PUSH1 0x20 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 DUP4 DUP4 KECCAK256 SWAP5 PUSH2 0x23BA PUSH1 0x2 DUP8 ADD SLOAD PUSH1 0x3 DUP9 ADD SLOAD SWAP8 PUSH1 0x4 SWAP9 PUSH1 0x5 DUP11 DUP4 ADD SLOAD SWAP3 ADD SLOAD SWAP3 PUSH2 0x28DB JUMP JUMPDEST SWAP7 PUSH1 0xA SLOAD PUSH3 0x15180 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x2492 JUMPI TIMESTAMP GT SWAP9 DUP10 PUSH2 0x24F8 JUMPI JUMPDEST DUP10 PUSH2 0x24E0 JUMPI JUMPDEST DUP10 PUSH2 0x24CA JUMPI JUMPDEST DUP10 PUSH2 0x24A5 JUMPI JUMPDEST DUP10 PUSH2 0x246F JUMPI JUMPDEST DUP10 PUSH2 0x2456 JUMPI JUMPDEST DUP10 PUSH2 0x243E JUMPI JUMPDEST POP DUP9 PUSH2 0x2427 JUMPI JUMPDEST DUP9 PUSH2 0x2410 JUMPI JUMPDEST POP POP POP POP POP POP POP POP SWAP1 JUMP JUMPDEST AND DUP4 MSTORE MSTORE KECCAK256 ADD SLOAD LT SWAP1 POP CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x2405 JUMP JUMPDEST DUP2 DUP2 AND DUP6 MSTORE DUP4 DUP4 MSTORE DUP6 DUP6 KECCAK256 DUP8 ADD SLOAD ISZERO ISZERO SWAP9 POP PUSH2 0x23FF JUMP JUMPDEST DUP6 MSTORE DUP4 DUP4 MSTORE DUP6 DUP6 KECCAK256 SLOAD PUSH1 0x8 SHR PUSH1 0xFF AND ISZERO SWAP9 POP CODESIZE PUSH2 0x23F8 JUMP JUMPDEST DUP1 DUP7 MSTORE DUP5 DUP5 MSTORE DUP7 DUP7 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ SWAP10 POP PUSH2 0x23F2 JUMP JUMPDEST DUP1 SWAP10 POP DUP6 MSTORE DUP4 DUP4 MSTORE PUSH1 0x1 DUP7 DUP7 KECCAK256 ADD SLOAD PUSH2 0xE10 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x2492 JUMPI TIMESTAMP LT SWAP9 PUSH2 0x23EC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 DUP9 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST SWAP9 POP DUP2 DUP2 AND DUP6 MSTORE DUP4 DUP4 MSTORE PUSH1 0x1 DUP7 DUP7 KECCAK256 ADD SLOAD PUSH2 0xE10 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x2492 JUMPI TIMESTAMP LT SWAP9 PUSH2 0x23E6 JUMP JUMPDEST DUP1 DUP7 MSTORE DUP5 DUP5 MSTORE DUP7 DUP7 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO ISZERO SWAP10 POP PUSH2 0x23E0 JUMP JUMPDEST DUP2 DUP4 AND DUP7 MSTORE DUP5 DUP5 MSTORE DUP7 DUP7 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO ISZERO SWAP10 POP PUSH2 0x23DA JUMP JUMPDEST DUP2 DUP4 AND DUP7 MSTORE DUP5 DUP5 MSTORE DUP7 DUP7 KECCAK256 SLOAD PUSH1 0x8 SHR PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ SWAP10 POP PUSH2 0x23D4 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x2549 JUMPI POP PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x10 SHR AND SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x8 SLOAD AND PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x10 SHR AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x2689 JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x2638 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 DUP1 DUP4 LT PUSH2 0x25E4 JUMPI PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE PUSH1 0x2 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x273B JUMPI PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP3 PUSH2 0x271E PUSH1 0x0 SWAP5 PUSH1 0x4 SLOAD PUSH2 0x2357 JUMP JUMPDEST PUSH1 0x4 SSTORE DUP5 DUP5 MSTORE PUSH1 0x2 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x2831 JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x27E1 JUMPI PUSH1 0x20 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x3 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xB46 JUMPI JUMP JUMPDEST MLOAD SWAP1 PUSH1 0xFF DUP3 AND DUP3 SUB PUSH2 0xB46 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH4 0x97A657C9 PUSH1 0xE0 SHL PUSH1 0x20 DUP4 ADD MSTORE MLOAD PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x60 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x2128 JUMPI PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST SWAP3 PUSH2 0x28E6 SWAP2 SWAP4 PUSH2 0x2357 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP3 DUP4 DUP2 MUL SWAP1 DUP1 DUP3 DIV DUP6 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x2364 JUMPI DUP2 ISZERO PUSH2 0x291D JUMPI DIV SWAP1 DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x2364 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2947 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27B7363C9031B0B63630B1363290313C9037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY PUSH5 0x4E48C4BE22 BALANCE SUB 0xBF 0xF 0x26 0x4F CALLCODE PUSH25 0xC9E78B2E4F17DD4FA38B623A48DE7F2F3B64736F6C63430008 SGT STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "9": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "10": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "11": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "LT",
      "path": "14"
    },
    "12": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "13": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x21"
    },
    "16": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "17": {
      "op": "JUMPDEST"
    },
    "18": {
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "19": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "20": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "21": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "22": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "23": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F"
    },
    "26": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "27": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "29": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "30": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "REVERT",
      "path": "14"
    },
    "31": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "32": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "STOP",
      "path": "14"
    },
    "33": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "34": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "36": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "37": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "38": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "39": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "41": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "SHR",
      "path": "14"
    },
    "42": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "43": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "44": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x1FFC9A7"
    },
    "49": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "EQ",
      "path": "14"
    },
    "50": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x202F"
    },
    "53": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "54": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "55": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "56": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x4783EA4"
    },
    "61": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "EQ",
      "path": "14"
    },
    "62": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F65"
    },
    "65": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "66": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "67": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x6FDDE03"
    },
    "72": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "EQ",
      "path": "14"
    },
    "73": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1E98"
    },
    "76": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "77": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "78": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x8A767FE"
    },
    "83": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "EQ",
      "path": "14"
    },
    "84": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1DED"
    },
    "87": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "88": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "89": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x95EA7B3"
    },
    "94": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "EQ",
      "path": "14"
    },
    "95": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1DC3"
    },
    "98": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "99": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "100": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xA2AC7B7"
    },
    "105": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "EQ",
      "path": "14"
    },
    "106": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x17B5"
    },
    "109": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "110": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "111": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x10A78DF8"
    },
    "116": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "EQ",
      "path": "14"
    },
    "117": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x16BA"
    },
    "120": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "121": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "122": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x1803C2F5"
    },
    "127": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "EQ",
      "path": "14"
    },
    "128": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x168D"
    },
    "131": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "132": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "133": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x18160DDD"
    },
    "138": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "EQ",
      "path": "14"
    },
    "139": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1670"
    },
    "142": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "143": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "144": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x1D880928"
    },
    "149": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "EQ",
      "path": "14"
    },
    "150": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1639"
    },
    "153": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "154": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "155": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x23B872DD"
    },
    "160": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "EQ",
      "path": "14"
    },
    "161": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x156D"
    },
    "164": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "165": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "166": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x2E1A7D4D"
    },
    "171": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "EQ",
      "path": "14"
    },
    "172": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xEAD"
    },
    "175": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "176": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "177": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x313CE567"
    },
    "182": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "EQ",
      "path": "14"
    },
    "183": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE91"
    },
    "186": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "187": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "188": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x39509351"
    },
    "193": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "EQ",
      "path": "14"
    },
    "194": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE42"
    },
    "197": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "198": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "199": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x544B1709"
    },
    "204": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "EQ",
      "path": "14"
    },
    "205": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xCFF"
    },
    "208": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "209": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "210": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x61AC3F99"
    },
    "215": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "EQ",
      "path": "14"
    },
    "216": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xCD6"
    },
    "219": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "220": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "221": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x654E8E0C"
    },
    "226": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "EQ",
      "path": "14"
    },
    "227": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xCAF"
    },
    "230": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "231": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "232": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x6C1DC077"
    },
    "237": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "EQ",
      "path": "14"
    },
    "238": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC86"
    },
    "241": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "242": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "243": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x6C98D513"
    },
    "248": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "EQ",
      "path": "14"
    },
    "249": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC5D"
    },
    "252": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "253": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "254": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x70A08231"
    },
    "259": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "EQ",
      "path": "14"
    },
    "260": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC25"
    },
    "263": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "264": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "265": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x79BA5097"
    },
    "270": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "EQ",
      "path": "14"
    },
    "271": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB7E"
    },
    "274": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "275": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "276": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x85572FFB"
    },
    "281": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "EQ",
      "path": "14"
    },
    "282": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x72D"
    },
    "285": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "286": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "287": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x8CF19D19"
    },
    "292": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "EQ",
      "path": "14"
    },
    "293": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x6E9"
    },
    "296": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "297": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "298": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x8DA5CB5B"
    },
    "303": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "EQ",
      "path": "14"
    },
    "304": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x6C1"
    },
    "307": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "308": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "309": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x95D89B41"
    },
    "314": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "EQ",
      "path": "14"
    },
    "315": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5A6"
    },
    "318": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "319": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "320": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x995714AE"
    },
    "325": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "EQ",
      "path": "14"
    },
    "326": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4D1"
    },
    "329": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "330": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "331": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xA457C2D7"
    },
    "336": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "EQ",
      "path": "14"
    },
    "337": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x428"
    },
    "340": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "341": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "342": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xA9059CBB"
    },
    "347": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "EQ",
      "path": "14"
    },
    "348": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3F7"
    },
    "351": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "352": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "353": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xB0F479A1"
    },
    "358": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "EQ",
      "path": "14"
    },
    "359": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3B3"
    },
    "362": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "363": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "364": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xB2D92955"
    },
    "369": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "EQ",
      "path": "14"
    },
    "370": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x320"
    },
    "373": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "374": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "375": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xC1586AF8"
    },
    "380": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "EQ",
      "path": "14"
    },
    "381": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2FA"
    },
    "384": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "385": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "386": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xDD62ED3E"
    },
    "391": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "EQ",
      "path": "14"
    },
    "392": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2AC"
    },
    "395": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "396": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "397": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xDDF85603"
    },
    "402": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "EQ",
      "path": "14"
    },
    "403": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x288"
    },
    "406": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "407": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "408": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xE12B948B"
    },
    "413": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "EQ",
      "path": "14"
    },
    "414": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x265"
    },
    "417": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "418": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xF2FDE38B"
    },
    "423": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "424": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x11"
    },
    "427": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "428": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "429": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x261"
    },
    "432": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "433": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "435": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "436": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "438": {
      "op": "NOT"
    },
    "439": {
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "440": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "441": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x261"
    },
    "444": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "445": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1C4"
    },
    "448": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2083"
    },
    "451": {
      "fn": null,
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "452": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "453": {
      "offset": [
        2032,
        2091
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "454": {
      "fn": null,
      "offset": [
        2032,
        2091
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1CD"
    },
    "457": {
      "fn": null,
      "offset": [
        2032,
        2091
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2933"
    },
    "460": {
      "fn": null,
      "jump": "i",
      "offset": [
        2032,
        2091
      ],
      "op": "JUMP",
      "path": "9"
    },
    "461": {
      "fn": null,
      "offset": [
        2032,
        2091
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "466": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "468": {
      "op": "SHL"
    },
    "469": {
      "op": "SUB"
    },
    "470": {
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "471": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "472": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "473": {
      "fn": null,
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "474": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1643,
        1653
      ],
      "op": "CALLER",
      "path": "9",
      "statement": 0
    },
    "475": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1637,
        1653
      ],
      "op": "DUP5",
      "path": "9"
    },
    "476": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1637,
        1653
      ],
      "op": "EQ",
      "path": "9"
    },
    "477": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x21E"
    },
    "480": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "481": {
      "op": "POP"
    },
    "482": {
      "op": "POP"
    },
    "483": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "485": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "486": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "491": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "493": {
      "op": "SHL"
    },
    "494": {
      "op": "SUB"
    },
    "495": {
      "op": "NOT"
    },
    "496": {
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "497": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "498": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "OR",
      "path": "14"
    },
    "499": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "500": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "501": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "502": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "503": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "504": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1719,
        1758
      ],
      "op": "PUSH32",
      "path": "9",
      "statement": 1,
      "value": "0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278"
    },
    "537": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "538": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "539": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1719,
        1758
      ],
      "op": "LOG3",
      "path": "9"
    },
    "540": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "541": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "RETURN",
      "path": "14"
    },
    "542": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "543": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "544": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "546": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "548": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "549": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "550": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "551": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x461BCD"
    },
    "555": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE5"
    },
    "557": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "SHL",
      "path": "14"
    },
    "558": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "559": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "560": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "561": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "562": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "563": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x17"
    },
    "565": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "567": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "568": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "569": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "570": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000"
    },
    "603": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "605": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "606": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "607": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "608": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "REVERT",
      "path": "14"
    },
    "609": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "610": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "611": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "612": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "REVERT",
      "path": "14"
    },
    "613": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "614": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "615": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "616": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "617": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "620": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "621": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "622": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "624": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "NOT",
      "path": "14"
    },
    "625": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "626": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "627": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "628": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "631": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "632": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "634": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "635": {
      "offset": [
        1867,
        1896
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA"
    },
    "637": {
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "638": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "639": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "640": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "641": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "642": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "643": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "RETURN",
      "path": "14"
    },
    "644": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "645": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "646": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "647": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "REVERT",
      "path": "14"
    },
    "648": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "649": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "650": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "651": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "652": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "655": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "656": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "657": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "659": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "NOT",
      "path": "14"
    },
    "660": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "661": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "662": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "663": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "666": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "667": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "669": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "670": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "672": {
      "offset": [
        1618,
        1657
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x7"
    },
    "674": {
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "675": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "676": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "677": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "678": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "679": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "680": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "681": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "682": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "683": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "RETURN",
      "path": "14"
    },
    "684": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "685": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "686": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "687": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "688": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "691": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "692": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "693": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "695": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "NOT",
      "path": "14"
    },
    "696": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "697": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "698": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "699": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "702": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "703": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "705": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "706": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2C9"
    },
    "709": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2083"
    },
    "712": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "713": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "714": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "715": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2D2"
    },
    "718": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2099"
    },
    "721": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "722": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "727": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "729": {
      "op": "SHL"
    },
    "730": {
      "op": "SUB"
    },
    "731": {
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "732": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "733": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "734": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "735": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "736": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "738": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "739": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "740": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "741": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "742": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "743": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "744": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "746": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "747": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "748": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "749": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "750": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "751": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "752": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "753": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "754": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "755": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "756": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "757": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "758": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "759": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "760": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "761": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "RETURN",
      "path": "14"
    },
    "762": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "763": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "764": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "765": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "766": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "769": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "770": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "772": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "773": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x319"
    },
    "776": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x310"
    },
    "779": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "780": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x20EF"
    },
    "783": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "784": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "785": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "786": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "787": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "788": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "789": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x28DB"
    },
    "792": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "793": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "794": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "795": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "796": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "797": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "798": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "799": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "RETURN",
      "path": "14"
    },
    "800": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "801": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "802": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "803": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "804": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x261"
    },
    "807": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "808": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "810": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "811": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "813": {
      "op": "NOT"
    },
    "814": {
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "815": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "816": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x261"
    },
    "819": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "820": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x100"
    },
    "823": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "824": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "825": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "826": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "830": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "832": {
      "op": "SHL"
    },
    "833": {
      "op": "SUB"
    },
    "834": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x349"
    },
    "837": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2083"
    },
    "840": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "841": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "842": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "843": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "844": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "845": {
      "offset": [
        2175,
        2223
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "847": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "849": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "850": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "851": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "852": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "853": {
      "offset": [
        2175,
        2223
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "854": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "856": {
      "offset": [
        2175,
        2223
      ],
      "op": "DUP3",
      "path": "14"
    },
    "857": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        2175,
        2223
      ],
      "op": "ADD",
      "path": "14"
    },
    "858": {
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "859": {
      "offset": [
        2175,
        2223
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "861": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        2175,
        2223
      ],
      "op": "DUP4",
      "path": "14"
    },
    "862": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        2175,
        2223
      ],
      "op": "ADD",
      "path": "14"
    },
    "863": {
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "864": {
      "offset": [
        2175,
        2223
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "865": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        2175,
        2223
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x5"
    },
    "867": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "869": {
      "offset": [
        2175,
        2223
      ],
      "op": "DUP6",
      "path": "14"
    },
    "870": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        2175,
        2223
      ],
      "op": "ADD",
      "path": "14"
    },
    "871": {
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "872": {
      "offset": [
        2175,
        2223
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "873": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        2175,
        2223
      ],
      "op": "DUP6",
      "path": "14"
    },
    "874": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        2175,
        2223
      ],
      "op": "ADD",
      "path": "14"
    },
    "875": {
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "876": {
      "offset": [
        2175,
        2223
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "877": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        2175,
        2223
      ],
      "op": "ADD",
      "path": "14"
    },
    "878": {
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "879": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "880": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "884": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "886": {
      "op": "SHL"
    },
    "887": {
      "op": "SUB"
    },
    "888": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "889": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "890": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "891": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "893": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "894": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "895": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "896": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "897": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "DUP10",
      "path": "14"
    },
    "898": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "899": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "901": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "902": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "904": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "SHR",
      "path": "14"
    },
    "905": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "906": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "907": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "908": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "910": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "DUP11",
      "path": "14"
    },
    "911": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "912": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "913": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x10"
    },
    "915": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "SHR",
      "path": "14"
    },
    "916": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "917": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "918": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "DUP8",
      "path": "14"
    },
    "919": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "920": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "921": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "923": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "924": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "925": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "926": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "928": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "929": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "930": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "931": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "933": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "934": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "935": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "936": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xC0"
    },
    "938": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "939": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "940": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "941": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "943": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "944": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "945": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "946": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "RETURN",
      "path": "14"
    },
    "947": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "948": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "949": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "950": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "951": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "954": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "955": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "956": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "958": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "NOT",
      "path": "14"
    },
    "959": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "960": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "961": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "962": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "965": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "966": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "967": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        2277,
        2289
      ],
      "op": "PUSH32",
      "path": "4",
      "statement": 2,
      "value": "0x0"
    },
    "1000": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1002": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1004": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1006": {
      "op": "SHL"
    },
    "1007": {
      "op": "SUB"
    },
    "1008": {
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "1009": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1010": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1011": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1013": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1014": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        16150
      ],
      "op": "RETURN",
      "path": "14"
    },
    "1015": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1016": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "1017": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "1018": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        16150
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "1019": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "1022": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1023": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1024": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "1026": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        16150
      ],
      "op": "NOT",
      "path": "14"
    },
    "1027": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "1028": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "1029": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "1030": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "1033": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1034": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1036": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1037": {
      "fn": "ERC20.transfer",
      "offset": [
        3881,
        3887
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 3,
      "value": "0x421"
    },
    "1040": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x417"
    },
    "1043": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2083"
    },
    "1046": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1047": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1048": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "1050": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "1051": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "3",
      "statement": 4
    },
    "1052": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1053": {
      "fn": "ERC20.transfer",
      "offset": [
        3881,
        3887
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x256C"
    },
    "1056": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3881,
        3887
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1057": {
      "fn": "ERC20.transfer",
      "offset": [
        3881,
        3887
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1058": {
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1059": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "1061": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1062": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1063": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        16150
      ],
      "op": "RETURN",
      "path": "14"
    },
    "1064": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1065": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "1066": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1067": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        16150
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "1068": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4CE"
    },
    "1071": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1072": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1073": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "1075": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        16150
      ],
      "op": "NOT",
      "path": "14"
    },
    "1076": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "1077": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "1078": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "1079": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4CE"
    },
    "1082": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1083": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x442"
    },
    "1086": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2083"
    },
    "1089": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1090": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1091": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1092": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1093": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "1095": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "1096": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1097": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1098": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1099": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1100": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "1102": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1104": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1105": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        16150
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1106": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "1108": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1109": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "1111": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        16150
      ],
      "op": "SHL",
      "path": "14"
    },
    "1112": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "1113": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1114": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "1115": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1117": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1118": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1120": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1121": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1122": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1124": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        16150
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1125": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1126": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6809,
        6844
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 5
    },
    "1127": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6809,
        6844
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1128": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6809,
        6844
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1129": {
      "branch": 91,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6809,
        6844
      ],
      "op": "LT",
      "path": "0"
    },
    "1130": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x47D"
    },
    "1133": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1134": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1136": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1137": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6945,
        6979
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 6,
      "value": "0x421"
    },
    "1140": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1141": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1142": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "1143": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "DUP8",
      "path": "14"
    },
    "1144": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1145": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6945,
        6979
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2780"
    },
    "1148": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6945,
        6979
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1149": {
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1150": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x84"
    },
    "1152": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1153": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1155": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "1156": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1157": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1158": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x461BCD"
    },
    "1162": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE5"
    },
    "1164": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "SHL",
      "path": "14"
    },
    "1165": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1166": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1167": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1168": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "1169": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1170": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x25"
    },
    "1172": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "1174": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1175": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "1176": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1177": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "1210": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "1212": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1213": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "1214": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1215": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "1221": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "1223": {
      "op": "SHL"
    },
    "1224": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "1226": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1227": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "1228": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1229": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1230": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1231": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1232": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1233": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1234": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "1235": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "1236": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x261"
    },
    "1239": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1240": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1241": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "1243": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "NOT",
      "path": "14"
    },
    "1244": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "1245": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "1246": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "1247": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x261"
    },
    "1250": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1251": {
      "offset": [
        2777,
        2787
      ],
      "op": "CALLER",
      "path": "14"
    },
    "1252": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1253": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1254": {
      "offset": [
        2766,
        2776
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "1256": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1258": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1259": {
      "offset": [
        2745,
        2891
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x527"
    },
    "1262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1266": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1268": {
      "op": "SHL"
    },
    "1269": {
      "op": "SUB"
    },
    "1270": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1271": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1272": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "1273": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1274": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1275": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x10"
    },
    "1277": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "SHR",
      "path": "14"
    },
    "1278": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "1279": {
      "offset": [
        2804,
        2828
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1280": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        2804,
        2828
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x0"
    },
    "1313": {
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "1314": {
      "offset": [
        2766,
        2828
      ],
      "op": "EQ",
      "path": "14"
    },
    "1315": {
      "offset": [
        2745,
        2891
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2219"
    },
    "1318": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        2745,
        2891
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1319": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        2745,
        2891
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1320": {
      "offset": [
        2777,
        2787
      ],
      "op": "CALLER",
      "path": "14"
    },
    "1321": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1322": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1323": {
      "offset": [
        2766,
        2776
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "1325": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1327": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1328": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "1330": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1331": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1332": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1333": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1334": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "1335": {
      "offset": [
        2570,
        2606
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1336": {
      "offset": [
        2566,
        2676
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x590"
    },
    "1339": {
      "offset": [
        2566,
        2676
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1340": {
      "offset": [
        2777,
        2787
      ],
      "op": "POP",
      "path": "14"
    },
    "1341": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        2777,
        2787
      ],
      "op": "CALLER",
      "path": "14"
    },
    "1342": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1343": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1344": {
      "offset": [
        2766,
        2776
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "1346": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1348": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1349": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1350": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1351": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x100"
    },
    "1354": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xFF00"
    },
    "1357": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "NOT",
      "path": "14"
    },
    "1358": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1359": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1360": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "1361": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "OR",
      "path": "14"
    },
    "1362": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1363": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "1364": {
      "offset": [
        2777,
        2787
      ],
      "op": "CALLER",
      "path": "14"
    },
    "1365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1369": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1371": {
      "op": "SHL"
    },
    "1372": {
      "op": "SUB"
    },
    "1373": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "1375": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "SHL",
      "path": "14"
    },
    "1376": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        5379,
        5402
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 7,
      "value": "0x9"
    },
    "1378": {
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1379": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "1380": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "OR",
      "path": "14"
    },
    "1381": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        5379,
        5402
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9"
    },
    "1383": {
      "offset": [
        783,
        16150
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "1384": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        5365,
        5369
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 8,
      "value": "0x1"
    },
    "1386": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        5417,
        5443
      ],
      "op": "PUSH32",
      "path": "14",
      "statement": 9,
      "value": "0x8392741EF8E51329E7BD6D6010DB40081A08AD52773CFC62F82AC6626991CE83"
    },
    "1419": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        5417,
        5443
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1420": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        5417,
        5443
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1421": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        5417,
        5443
      ],
      "op": "LOG2",
      "path": "14"
    },
    "1422": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1423": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "RETURN",
      "path": "14"
    },
    "1424": {
      "offset": [
        2566,
        2676
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1425": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "1427": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1428": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1429": {
      "offset": [
        2629,
        2665
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1430": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        2629,
        2665
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x6A9FF79F"
    },
    "1435": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        2629,
        2665
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE1"
    },
    "1437": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        2629,
        2665
      ],
      "op": "SHL",
      "path": "14"
    },
    "1438": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        2629,
        2665
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1439": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        2629,
        2665
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1440": {
      "offset": [
        2777,
        2787
      ],
      "op": "CALLER",
      "path": "14"
    },
    "1441": {
      "offset": [
        2629,
        2665
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1442": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        2629,
        2665
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1443": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        2629,
        2665
      ],
      "op": "ADD",
      "path": "14"
    },
    "1444": {
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1445": {
      "offset": [
        2629,
        2665
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1446": {
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1447": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "1448": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1449": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "1450": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4CE"
    },
    "1453": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1454": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1455": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "1457": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "NOT",
      "path": "14"
    },
    "1458": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "1459": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "1460": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "1461": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4CE"
    },
    "1464": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1465": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1466": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1467": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1468": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1469": {
      "fn": "ERC20.symbol",
      "offset": [
        2453,
        2460
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x6"
    },
    "1471": {
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1472": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1473": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "1475": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1476": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1477": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SHR",
      "path": "14"
    },
    "1478": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1479": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1480": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "1481": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "1482": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "1483": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "1484": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1485": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x6B7"
    },
    "1488": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1489": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1490": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1492": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "1493": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP8",
      "path": "14"
    },
    "1494": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1495": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "LT",
      "path": "14"
    },
    "1496": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1497": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "EQ",
      "path": "14"
    },
    "1498": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x6A4"
    },
    "1501": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1502": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP9",
      "path": "14"
    },
    "1503": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP10",
      "path": "14"
    },
    "1504": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "1505": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "1506": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP9",
      "path": "14"
    },
    "1507": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "1508": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "1509": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1510": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1511": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP11",
      "path": "14"
    },
    "1512": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1513": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1514": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1515": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1517": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "EQ",
      "path": "14"
    },
    "1518": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x67D"
    },
    "1521": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1522": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "1523": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "1524": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "1526": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "EQ",
      "path": "14"
    },
    "1527": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x621"
    },
    "1530": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1531": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1532": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "1533": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "1534": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "1535": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x61D"
    },
    "1538": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1539": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1540": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x60E"
    },
    "1543": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1544": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "1545": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1546": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x21A2"
    },
    "1549": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1550": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1551": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1552": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1553": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1554": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1555": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1556": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1557": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1558": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1559": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "1560": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1561": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x20AF"
    },
    "1564": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1565": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1566": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "1567": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1568": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "RETURN",
      "path": "14"
    },
    "1569": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1570": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1571": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1572": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "1573": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1574": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "1575": {
      "fn": "ERC20.symbol",
      "offset": [
        2453,
        2460
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "1577": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1578": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1579": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F"
    },
    "1612": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1613": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1614": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1615": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "LT",
      "path": "14"
    },
    "1616": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x665"
    },
    "1619": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1620": {
      "op": "POP"
    },
    "1621": {
      "op": "POP"
    },
    "1622": {
      "op": "POP"
    },
    "1623": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1624": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "1625": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "1626": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1627": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x60E"
    },
    "1630": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x61D"
    },
    "1633": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5FB"
    },
    "1636": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1637": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1638": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1639": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1640": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1641": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP11",
      "path": "14"
    },
    "1642": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "1643": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "1644": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "1645": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1646": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP9",
      "path": "14"
    },
    "1647": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "1648": {
      "op": "POP"
    },
    "1649": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP8",
      "path": "14"
    },
    "1650": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "1651": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1652": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1653": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "1654": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1655": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1656": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "1657": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x64C"
    },
    "1660": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1661": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1662": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1664": {
      "op": "NOT"
    },
    "1665": {
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "1666": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP8",
      "path": "14"
    },
    "1667": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1668": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "1669": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1670": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1671": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1672": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1673": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x5"
    },
    "1675": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SHL",
      "path": "14"
    },
    "1676": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "1677": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "1678": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1679": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1680": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "1681": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1682": {
      "op": "POP"
    },
    "1683": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1684": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1685": {
      "op": "POP"
    },
    "1686": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x60E"
    },
    "1689": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1690": {
      "op": "POP"
    },
    "1691": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x61D"
    },
    "1694": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1695": {
      "op": "POP"
    },
    "1696": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5FB"
    },
    "1699": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1700": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1701": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1706": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1708": {
      "op": "SHL"
    },
    "1709": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1710": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1711": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x22"
    },
    "1713": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP11",
      "path": "14"
    },
    "1714": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1715": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "1717": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1718": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1719": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1720": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1721": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x7F"
    },
    "1723": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "1724": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1725": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5D1"
    },
    "1728": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1729": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1730": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "1731": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "1732": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "1733": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "1736": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1737": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1738": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "1740": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "NOT",
      "path": "14"
    },
    "1741": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "1742": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "1743": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "1744": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "1747": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1748": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1749": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1750": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1751": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1756": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1758": {
      "op": "SHL"
    },
    "1759": {
      "op": "SUB"
    },
    "1760": {
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1761": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1762": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "1763": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1764": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1765": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1767": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1768": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "RETURN",
      "path": "14"
    },
    "1769": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1770": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "1771": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "1772": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "1773": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "1776": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1777": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1778": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "1780": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "NOT",
      "path": "14"
    },
    "1781": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "1782": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "1783": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "1784": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "1787": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1788": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1790": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1791": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1796": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1798": {
      "op": "SHL"
    },
    "1799": {
      "op": "SUB"
    },
    "1800": {
      "offset": [
        1708,
        1756
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x0"
    },
    "1833": {
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "1834": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1835": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1836": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "RETURN",
      "path": "14"
    },
    "1837": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1838": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "1839": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "1840": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x261"
    },
    "1843": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1844": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1846": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1847": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "1849": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "NOT",
      "path": "14"
    },
    "1850": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1851": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1852": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "1853": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "1854": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "1855": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x90E"
    },
    "1858": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1859": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1860": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "1861": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1866": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1868": {
      "op": "SHL"
    },
    "1869": {
      "op": "SUB"
    },
    "1870": {
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1871": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1872": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1873": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "GT",
      "path": "14"
    },
    "1874": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAB2"
    },
    "1877": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1878": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "1880": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1881": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1882": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "1883": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "1884": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "1885": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "1886": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x9AF"
    },
    "1889": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1890": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1894": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1896": {
      "op": "SHL"
    },
    "1897": {
      "op": "SUB"
    },
    "1898": {
      "offset": [
        783,
        16150
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1899": {
      "offset": [
        2449,
        2461
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x0"
    },
    "1932": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1933": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "1934": {
      "offset": [
        2427,
        2437
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1935": {
      "offset": [
        2427,
        2462
      ],
      "op": "SUB",
      "path": "4"
    },
    "1936": {
      "offset": [
        2423,
        2496
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB67"
    },
    "1939": {
      "offset": [
        2423,
        2496
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1940": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1941": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1942": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1943": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x79F"
    },
    "1946": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1947": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x210D"
    },
    "1950": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1951": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1952": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1953": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1954": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "1955": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "1956": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1957": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1958": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "1960": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1961": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1962": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1963": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "1964": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "1965": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1966": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1967": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "1968": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1969": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "1970": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB46"
    },
    "1973": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1974": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP9",
      "path": "14"
    },
    "1975": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1976": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "1977": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1978": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "1980": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1981": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "1982": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "1983": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1984": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1985": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "GT",
      "path": "14"
    },
    "1986": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAAA"
    },
    "1989": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1990": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x7D4"
    },
    "1993": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1994": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1995": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "1996": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1997": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP9",
      "path": "14"
    },
    "1998": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "1999": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "2000": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x21C3"
    },
    "2003": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2004": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2005": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "2006": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2007": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2008": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "2009": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "2010": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2011": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2012": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "2014": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2015": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "2016": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "2017": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2018": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2019": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "GT",
      "path": "14"
    },
    "2020": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAAE"
    },
    "2023": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2024": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x7F6"
    },
    "2027": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2028": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2029": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "2030": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2031": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP10",
      "path": "14"
    },
    "2032": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "2033": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "2034": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x21C3"
    },
    "2037": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2038": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2039": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "2040": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "2042": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2043": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "2044": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "2045": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP8",
      "path": "14"
    },
    "2046": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2047": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x84"
    },
    "2049": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2050": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "2051": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "2052": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2053": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2054": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2055": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "GT",
      "path": "14"
    },
    "2056": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB63"
    },
    "2059": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2060": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "2061": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "2062": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x23"
    },
    "2064": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2065": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "2066": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "2067": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2068": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAAE"
    },
    "2071": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2072": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2073": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2074": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "2075": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "2076": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2077": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2078": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "GT",
      "path": "14"
    },
    "2079": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB4F"
    },
    "2082": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2083": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP8",
      "path": "14"
    },
    "2084": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2085": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2086": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x834"
    },
    "2089": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP12",
      "path": "14"
    },
    "2090": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2091": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x5"
    },
    "2093": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SHL",
      "path": "14"
    },
    "2094": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "2095": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2096": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x21A2"
    },
    "2099": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2100": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2101": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2102": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2103": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2104": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2105": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP12",
      "path": "14"
    },
    "2106": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2107": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "2108": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2109": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x6"
    },
    "2111": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SHL",
      "path": "14"
    },
    "2112": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2113": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "2114": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "2115": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2116": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "2117": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2118": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "GT",
      "path": "14"
    },
    "2119": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB4B"
    },
    "2122": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2123": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2124": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "2125": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2126": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2127": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2128": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2129": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "LT",
      "path": "14"
    },
    "2130": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB0C"
    },
    "2133": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2134": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "2135": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "2136": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "2137": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "2139": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "2140": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2141": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7980,
        8002
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2142": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7980,
        8002
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2143": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP8",
      "path": "14"
    },
    "2144": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2145": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2146": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2147": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7969,
        8014
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2148": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7969,
        8014
      ],
      "op": "ADD",
      "path": "14"
    },
    "2149": {
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "2150": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "2151": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAA6"
    },
    "2154": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2155": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x876"
    },
    "2158": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7969,
        8014
      ],
      "op": "DUP9",
      "path": "14"
    },
    "2159": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7969,
        8014
      ],
      "op": "DUP9",
      "path": "14"
    },
    "2160": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7969,
        8014
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2161": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7969,
        8014
      ],
      "op": "ADD",
      "path": "14"
    },
    "2162": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2882"
    },
    "2165": {
      "fn": "MasterNode._ccipReceive",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2166": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2167": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "2168": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2169": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "DUP10",
      "path": "14"
    },
    "2170": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2171": {
      "offset": [
        2571,
        2581
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "2173": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP9",
      "path": "14"
    },
    "2174": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2175": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "2177": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2178": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "DUP11",
      "path": "14"
    },
    "2179": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "2180": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2181": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "2182": {
      "offset": [
        2570,
        2606
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2183": {
      "offset": [
        2566,
        2676
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAF7"
    },
    "2186": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2566,
        2676
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2187": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        477,
        497
      ],
      "op": "POP",
      "path": "15"
    },
    "2188": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        477,
        497
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2189": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        477,
        497
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2190": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP8",
      "path": "14"
    },
    "2191": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2192": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2193": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2194": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        466,
        507
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2195": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        466,
        507
      ],
      "op": "ADD",
      "path": "15"
    },
    "2196": {
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "2197": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "2198": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAA6"
    },
    "2201": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2202": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x8A6"
    },
    "2205": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        466,
        507
      ],
      "op": "DUP9",
      "path": "15"
    },
    "2206": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "2208": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        466,
        507
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2209": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        466,
        507
      ],
      "op": "ADD",
      "path": "15"
    },
    "2210": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2896"
    },
    "2213": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2214": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2215": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "2216": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8099,
        8111
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2217": {
      "branch": 79,
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8099,
        8111
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x912"
    },
    "2220": {
      "branch": 79,
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8099,
        8111
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2221": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        3978,
        3998
      ],
      "op": "POP",
      "path": "14"
    },
    "2222": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        3978,
        3998
      ],
      "op": "POP",
      "path": "14"
    },
    "2223": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        3978,
        3998
      ],
      "op": "POP",
      "path": "14"
    },
    "2224": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        3978,
        3998
      ],
      "op": "POP",
      "path": "14"
    },
    "2225": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        3978,
        3998
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2226": {
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2227": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "2229": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2230": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2231": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2232": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        3954,
        4047
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2233": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        3954,
        4047
      ],
      "op": "ADD",
      "path": "14"
    },
    "2234": {
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "2235": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "2236": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x90E"
    },
    "2239": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2240": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "2242": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        3954,
        4047
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2243": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x8D0"
    },
    "2246": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x8D8"
    },
    "2249": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        3954,
        4047
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2250": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        3954,
        4047
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2251": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        3954,
        4047
      ],
      "op": "ADD",
      "path": "14"
    },
    "2252": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2896"
    },
    "2255": {
      "fn": "MasterNode._aWarpTokenMinter",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2256": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2257": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "2258": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2259": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "2260": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2882"
    },
    "2263": {
      "fn": "MasterNode._aWarpTokenMinter",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2264": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2265": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2266": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "2267": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2268": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2269": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "2270": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4077,
        4083
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 11,
      "value": "0x8E7"
    },
    "2273": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4077,
        4083
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2274": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4077,
        4083
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2275": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4077,
        4083
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x26DC"
    },
    "2278": {
      "fn": "MasterNode._aWarpTokenMinter",
      "jump": "i",
      "offset": [
        4077,
        4083
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2279": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4077,
        4083
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2280": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4100,
        4129
      ],
      "op": "PUSH32",
      "path": "14",
      "statement": 12,
      "value": "0xB55160CC367B9CDF2289AF15A6163D786DE0A3D0722F78F652DEC347580C8564"
    },
    "2313": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4100,
        4129
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2314": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4100,
        4129
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2315": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4100,
        4129
      ],
      "op": "LOG3",
      "path": "14"
    },
    "2316": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2317": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        16150
      ],
      "op": "RETURN",
      "path": "14"
    },
    "2318": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2319": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2320": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2321": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        16150
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2322": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8095,
        8401
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2323": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8182,
        8194
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "2324": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8182,
        8194
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "2325": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8182,
        8194
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "2326": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8182,
        8194
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2327": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8182,
        8194
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "2328": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8182,
        8194
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "2329": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8182,
        8194
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2330": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8182,
        8194
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2331": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "2333": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8182,
        8194
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2334": {
      "branch": 80,
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8182,
        8194
      ],
      "op": "SUB",
      "path": "14"
    },
    "2335": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x9B3"
    },
    "2338": {
      "branch": 80,
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2339": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        4914,
        4936
      ],
      "op": "POP",
      "path": "14",
      "statement": 13
    },
    "2340": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        4914,
        4936
      ],
      "op": "POP",
      "path": "14"
    },
    "2341": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        4914,
        4936
      ],
      "op": "POP",
      "path": "14"
    },
    "2342": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        4914,
        4936
      ],
      "op": "POP",
      "path": "14"
    },
    "2343": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        4914,
        4936
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2344": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        4914,
        4936
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2345": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2346": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2347": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2348": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2349": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        4903,
        4948
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2350": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        4903,
        4948
      ],
      "op": "ADD",
      "path": "14"
    },
    "2351": {
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "2352": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "2353": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x9AF"
    },
    "2356": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2357": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x940"
    },
    "2360": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        4903,
        4948
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2361": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        4903,
        4948
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2362": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        4903,
        4948
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2363": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        4903,
        4948
      ],
      "op": "ADD",
      "path": "14"
    },
    "2364": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2882"
    },
    "2367": {
      "fn": "MasterNode._resmumeOperations",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2368": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2369": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "2370": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2371": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2372": {
      "offset": [
        2571,
        2581
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "2374": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2375": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2376": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2377": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        16150
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "2378": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x100"
    },
    "2381": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xFF00"
    },
    "2384": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        16150
      ],
      "op": "NOT",
      "path": "14"
    },
    "2385": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2386": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2387": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "2388": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        16150
      ],
      "op": "OR",
      "path": "14"
    },
    "2389": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2390": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        16150
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "2391": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5017,
        5039
      ],
      "op": "MLOAD",
      "path": "14",
      "statement": 14
    },
    "2392": {
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2393": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2394": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2395": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2396": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2397": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5006,
        5051
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2398": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5006,
        5051
      ],
      "op": "ADD",
      "path": "14"
    },
    "2399": {
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "2400": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "2401": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x9AB"
    },
    "2404": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2405": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x96E"
    },
    "2408": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5006,
        5051
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2409": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5006,
        5051
      ],
      "op": "ADD",
      "path": "14"
    },
    "2410": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2882"
    },
    "2413": {
      "fn": "MasterNode._resmumeOperations",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2414": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2415": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "2416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2420": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2422": {
      "op": "SHL"
    },
    "2423": {
      "op": "SUB"
    },
    "2424": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "2426": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        16150
      ],
      "op": "SHL",
      "path": "14"
    },
    "2427": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        4993,
        5051
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9"
    },
    "2429": {
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2430": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "2431": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        16150
      ],
      "op": "OR",
      "path": "14"
    },
    "2432": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        4993,
        5051
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9"
    },
    "2434": {
      "offset": [
        783,
        16150
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "2435": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "2437": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5067,
        5093
      ],
      "op": "PUSH32",
      "path": "14",
      "statement": 15,
      "value": "0x8392741EF8E51329E7BD6D6010DB40081A08AD52773CFC62F82AC6626991CE83"
    },
    "2470": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5067,
        5093
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2471": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5067,
        5093
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2472": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5067,
        5093
      ],
      "op": "LOG2",
      "path": "14"
    },
    "2473": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2474": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        16150
      ],
      "op": "RETURN",
      "path": "14"
    },
    "2475": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2476": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2477": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2478": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        16150
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2479": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2480": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2481": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2482": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        16150
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2483": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8178,
        8401
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2484": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8266,
        8278
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2485": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8266,
        8278
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "2486": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8266,
        8278
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "2487": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8266,
        8278
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "2488": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8266,
        8278
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2489": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8277,
        8278
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "2491": {
      "branch": 81,
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8266,
        8278
      ],
      "op": "SUB",
      "path": "14"
    },
    "2492": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8277,
        8278
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAB6"
    },
    "2495": {
      "branch": 81,
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8277,
        8278
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2496": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6062,
        6082
      ],
      "op": "POP",
      "path": "14"
    },
    "2497": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6062,
        6082
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2498": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "2500": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2501": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2502": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2503": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6034,
        6157
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2504": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6034,
        6157
      ],
      "op": "ADD",
      "path": "14"
    },
    "2505": {
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "2506": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "2507": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAB2"
    },
    "2510": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2511": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x9D9"
    },
    "2514": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6034,
        6157
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2515": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6034,
        6157
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2516": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6034,
        6157
      ],
      "op": "ADD",
      "path": "14"
    },
    "2517": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2896"
    },
    "2520": {
      "fn": "MasterNode._nodeAaveFeed",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2521": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2522": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "2523": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2524": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2525": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "2526": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2527": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "2528": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "2530": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2531": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "2532": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2533": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "2535": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "2537": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2538": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "2539": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2540": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "2541": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "2542": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2543": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6190,
        6212
      ],
      "op": "SWAP8",
      "path": "14",
      "statement": 16
    },
    "2544": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6190,
        6212
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2545": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6190,
        6212
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2546": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP9",
      "path": "14"
    },
    "2547": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2548": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2549": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2550": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6179,
        6224
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2551": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6179,
        6224
      ],
      "op": "ADD",
      "path": "14"
    },
    "2552": {
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "2553": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "2554": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAAE"
    },
    "2557": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2558": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA09"
    },
    "2561": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6179,
        6224
      ],
      "op": "DUP10",
      "path": "14"
    },
    "2562": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6179,
        6224
      ],
      "op": "DUP9",
      "path": "14"
    },
    "2563": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6179,
        6224
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2564": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6179,
        6224
      ],
      "op": "ADD",
      "path": "14"
    },
    "2565": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2882"
    },
    "2568": {
      "fn": "MasterNode._nodeAaveFeed",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2569": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2570": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "2571": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "DUP11",
      "path": "14"
    },
    "2572": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2573": {
      "offset": [
        2571,
        2581
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "2575": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP9",
      "path": "14"
    },
    "2576": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2577": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6258,
        6273
      ],
      "op": "TIMESTAMP",
      "path": "14"
    },
    "2578": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "2580": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "DUP9",
      "path": "14"
    },
    "2581": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "DUP13",
      "path": "14"
    },
    "2582": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "2583": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6168,
        6255
      ],
      "op": "ADD",
      "path": "14"
    },
    "2584": {
      "offset": [
        783,
        16150
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "2585": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6305,
        6327
      ],
      "op": "DUP5",
      "path": "14",
      "statement": 17
    },
    "2586": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6305,
        6327
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2587": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP9",
      "path": "14"
    },
    "2588": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2589": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2590": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2591": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6294,
        6339
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2592": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6294,
        6339
      ],
      "op": "ADD",
      "path": "14"
    },
    "2593": {
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "2594": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "2595": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAAE"
    },
    "2598": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2599": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA32"
    },
    "2602": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6294,
        6339
      ],
      "op": "DUP10",
      "path": "14"
    },
    "2603": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6294,
        6339
      ],
      "op": "DUP9",
      "path": "14"
    },
    "2604": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6294,
        6339
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2605": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6294,
        6339
      ],
      "op": "ADD",
      "path": "14"
    },
    "2606": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2882"
    },
    "2609": {
      "fn": "MasterNode._nodeAaveFeed",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2610": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2611": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "2612": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "DUP11",
      "path": "14"
    },
    "2613": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2614": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8277,
        8278
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "2616": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP8",
      "path": "14"
    },
    "2617": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "DUP12",
      "path": "14"
    },
    "2618": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "2619": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6283,
        6369
      ],
      "op": "ADD",
      "path": "14"
    },
    "2620": {
      "offset": [
        783,
        16150
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "2621": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6419,
        6441
      ],
      "op": "DUP4",
      "path": "14",
      "statement": 18
    },
    "2622": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6419,
        6441
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2623": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP8",
      "path": "14"
    },
    "2624": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2625": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2626": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2627": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6408,
        6453
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2628": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6408,
        6453
      ],
      "op": "ADD",
      "path": "14"
    },
    "2629": {
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "2630": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "2631": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAAA"
    },
    "2634": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2635": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA56"
    },
    "2638": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6408,
        6453
      ],
      "op": "DUP9",
      "path": "14"
    },
    "2639": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6408,
        6453
      ],
      "op": "DUP8",
      "path": "14"
    },
    "2640": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6408,
        6453
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2641": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6408,
        6453
      ],
      "op": "ADD",
      "path": "14"
    },
    "2642": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2882"
    },
    "2645": {
      "fn": "MasterNode._nodeAaveFeed",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2646": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2647": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "2648": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "DUP10",
      "path": "14"
    },
    "2649": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2650": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "2652": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2653": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "DUP11",
      "path": "14"
    },
    "2654": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "2655": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6397,
        6483
      ],
      "op": "ADD",
      "path": "14"
    },
    "2656": {
      "offset": [
        783,
        16150
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "2657": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6533,
        6555
      ],
      "op": "DUP3",
      "path": "14",
      "statement": 19
    },
    "2658": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6533,
        6555
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2659": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2660": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2661": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2662": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2663": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6522,
        6567
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2664": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6522,
        6567
      ],
      "op": "ADD",
      "path": "14"
    },
    "2665": {
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "2666": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "2667": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAA6"
    },
    "2670": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2671": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA7A"
    },
    "2674": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6522,
        6567
      ],
      "op": "DUP8",
      "path": "14"
    },
    "2675": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6522,
        6567
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2676": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6522,
        6567
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2677": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6522,
        6567
      ],
      "op": "ADD",
      "path": "14"
    },
    "2678": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2882"
    },
    "2681": {
      "fn": "MasterNode._nodeAaveFeed",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2682": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2683": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "2684": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "DUP9",
      "path": "14"
    },
    "2685": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2686": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2687": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "DUP9",
      "path": "14"
    },
    "2688": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "2689": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6511,
        6592
      ],
      "op": "ADD",
      "path": "14"
    },
    "2690": {
      "offset": [
        783,
        16150
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "2691": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6637,
        6659
      ],
      "op": "MLOAD",
      "path": "14",
      "statement": 20
    },
    "2692": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2693": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2694": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2695": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2696": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6626,
        6671
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2697": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6626,
        6671
      ],
      "op": "ADD",
      "path": "14"
    },
    "2698": {
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "2699": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "2700": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x9AF"
    },
    "2703": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2704": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x5"
    },
    "2706": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6626,
        6671
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "2707": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA9C"
    },
    "2710": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6626,
        6671
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2711": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6626,
        6671
      ],
      "op": "ADD",
      "path": "14"
    },
    "2712": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2882"
    },
    "2715": {
      "fn": "MasterNode._nodeAaveFeed",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2716": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2717": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "2718": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2719": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2720": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2721": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "2722": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6615,
        6700
      ],
      "op": "ADD",
      "path": "14"
    },
    "2723": {
      "offset": [
        783,
        16150
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "2724": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2725": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "RETURN",
      "path": "14"
    },
    "2726": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2727": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "DUP9",
      "path": "14"
    },
    "2728": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2729": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2730": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2731": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "DUP10",
      "path": "14"
    },
    "2732": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2733": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2734": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2735": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "DUP11",
      "path": "14"
    },
    "2736": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2737": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2738": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2739": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2740": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2741": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        16150
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2742": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8262,
        8401
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2743": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2744": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x19"
    },
    "2746": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "2748": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2749": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "DUP9",
      "path": "14"
    },
    "2750": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "DUP9",
      "path": "14"
    },
    "2751": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2752": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "2753": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x461BCD"
    },
    "2757": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE5"
    },
    "2759": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "SHL",
      "path": "14"
    },
    "2760": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8355,
        8390
      ],
      "op": "DUP6",
      "path": "14",
      "statement": 21
    },
    "2761": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8355,
        8390
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2762": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8355,
        8390
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2763": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8355,
        8390
      ],
      "op": "ADD",
      "path": "14"
    },
    "2764": {
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2765": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2766": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "2767": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2768": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x696E76616C696420636F6D6D616E642066726F6D204E6F646500000000000000"
    },
    "2801": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "2803": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2804": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "2805": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2806": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8355,
        8390
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "14"
    },
    "2807": {
      "offset": [
        2566,
        2676
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2808": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2809": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2810": {
      "op": "PUSH4",
      "value": "0x6A9FF79F"
    },
    "2815": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2817": {
      "op": "SHL"
    },
    "2818": {
      "offset": [
        2629,
        2665
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2819": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2629,
        2665
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2820": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2629,
        2665
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2821": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2629,
        2665
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2822": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2629,
        2665
      ],
      "op": "ADD",
      "path": "14"
    },
    "2823": {
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2824": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2825": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2826": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2827": {
      "offset": [
        2629,
        2665
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2828": {
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2829": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "DUP10",
      "path": "14"
    },
    "2830": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2831": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "2832": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "2833": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "2834": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB4B"
    },
    "2837": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2838": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "DUP10",
      "path": "14"
    },
    "2839": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2840": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2841": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB21"
    },
    "2844": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2845": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x216C"
    },
    "2848": {
      "fn": "MasterNode._ccipReceive",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2849": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2850": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2851": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "2852": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2853": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "DUP13",
      "path": "14"
    },
    "2854": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2855": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "2856": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2857": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "2858": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB46"
    },
    "2861": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2862": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2863": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "DUP15",
      "path": "14"
    },
    "2864": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2865": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "DUP14",
      "path": "14"
    },
    "2866": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "2867": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2868": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2869": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2870": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "2871": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "2872": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2873": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2874": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "2875": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2876": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2877": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2878": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "2879": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2880": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "2881": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2882": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x84E"
    },
    "2885": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2886": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2887": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2889": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2890": {
      "first_revert": true,
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2891": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2892": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "DUP13",
      "path": "14"
    },
    "2893": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2894": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2895": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2896": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2897": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x41"
    },
    "2899": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2900": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x4E487B71"
    },
    "2905": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "2907": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "SHL",
      "path": "14"
    },
    "2908": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2910": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2911": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2912": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2914": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2915": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2916": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "DUP12",
      "path": "14"
    },
    "2917": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2918": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2919": {
      "offset": [
        2423,
        2496
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2920": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "2922": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2923": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2924": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2925": {
      "offset": [
        2471,
        2496
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2926": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2471,
        2496
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x35FDCCCD"
    },
    "2931": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2471,
        2496
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE2"
    },
    "2933": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2471,
        2496
      ],
      "op": "SHL",
      "path": "4"
    },
    "2934": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2471,
        2496
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2935": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2471,
        2496
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2936": {
      "offset": [
        2427,
        2437
      ],
      "op": "CALLER",
      "path": "4"
    },
    "2937": {
      "offset": [
        2471,
        2496
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2938": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2471,
        2496
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2939": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2471,
        2496
      ],
      "op": "ADD",
      "path": "4"
    },
    "2940": {
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2941": {
      "offset": [
        2471,
        2496
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2942": {
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2943": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "2944": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2945": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "2946": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x261"
    },
    "2949": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2950": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2951": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "2953": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "NOT",
      "path": "14"
    },
    "2954": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "2955": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "2956": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "2957": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x261"
    },
    "2960": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2961": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1142,
        1156
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 22,
      "value": "0x1"
    },
    "2963": {
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2964": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2965": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2969": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2971": {
      "op": "SHL"
    },
    "2972": {
      "op": "SUB"
    },
    "2973": {
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2974": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2975": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2976": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "2977": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1128,
        1138
      ],
      "op": "CALLER",
      "path": "9"
    },
    "2978": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1128,
        1156
      ],
      "op": "SUB",
      "path": "9"
    },
    "2979": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xBE9"
    },
    "2982": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2983": {
      "op": "POP"
    },
    "2984": {
      "op": "POP"
    },
    "2985": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2986": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2987": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2991": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2993": {
      "op": "SHL"
    },
    "2994": {
      "op": "SUB"
    },
    "2995": {
      "op": "NOT"
    },
    "2996": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2997": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2998": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "2999": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1128,
        1138
      ],
      "op": "CALLER",
      "path": "9"
    },
    "3000": {
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3001": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3002": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "OR",
      "path": "14"
    },
    "3003": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "3004": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "3005": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "3006": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "3007": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3009": {
      "offset": [
        783,
        16150
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "3010": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "3011": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1287,
        1329
      ],
      "op": "PUSH32",
      "path": "9",
      "statement": 23,
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "3044": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3045": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3046": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1287,
        1329
      ],
      "op": "LOG3",
      "path": "9"
    },
    "3047": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3048": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "RETURN",
      "path": "14"
    },
    "3049": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3050": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3051": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3053": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "3055": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3056": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3057": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3058": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x461BCD"
    },
    "3062": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE5"
    },
    "3064": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "SHL",
      "path": "14"
    },
    "3065": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3066": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3067": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3068": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "3069": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3070": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x16"
    },
    "3072": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "3074": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3075": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "3076": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3077": {
      "op": "PUSH22",
      "value": "0x26BAB9BA10313290383937B837B9B2B21037BBB732B9"
    },
    "3100": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "3102": {
      "op": "SHL"
    },
    "3103": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "3105": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3106": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "3107": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3108": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "REVERT",
      "path": "14"
    },
    "3109": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3110": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "3111": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "3112": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "3113": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "3116": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3117": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3119": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "3120": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "3122": {
      "op": "NOT"
    },
    "3123": {
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "3124": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "3125": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "3128": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3129": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3131": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3132": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3133": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3138": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3140": {
      "op": "SHL"
    },
    "3141": {
      "op": "SUB"
    },
    "3142": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC4D"
    },
    "3145": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2083"
    },
    "3148": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3149": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3150": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "3151": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3152": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3153": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3515
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 24,
      "value": "0x2"
    },
    "3155": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3156": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3157": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        16150
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3158": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3159": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3160": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3161": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3162": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3163": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3164": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        16150
      ],
      "op": "RETURN",
      "path": "14"
    },
    "3165": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3166": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3167": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        16150
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "3168": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4CE"
    },
    "3171": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3172": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3173": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "3175": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        16150
      ],
      "op": "NOT",
      "path": "14"
    },
    "3176": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "3177": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "3178": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "3179": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4CE"
    },
    "3182": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3183": {
      "offset": [
        2032,
        2091
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC76"
    },
    "3186": {
      "fn": "ERC20.balanceOf",
      "offset": [
        2032,
        2091
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2933"
    },
    "3189": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        2032,
        2091
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3190": {
      "fn": "ERC20.balanceOf",
      "offset": [
        2032,
        2091
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3191": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        2971,
        2993
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 25,
      "value": "0x7"
    },
    "3193": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3194": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3195": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3197": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "3199": {
      "op": "SHL"
    },
    "3200": {
      "op": "NOT"
    },
    "3201": {
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "3202": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3203": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "3204": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3205": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "RETURN",
      "path": "14"
    },
    "3206": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3207": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "3208": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "3209": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "3210": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "3213": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3214": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3215": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "3217": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "NOT",
      "path": "14"
    },
    "3218": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "3219": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "3220": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "3221": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "3224": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3225": {
      "offset": [
        1836,
        1861
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9"
    },
    "3227": {
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3228": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3229": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3234": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3236": {
      "op": "SHL"
    },
    "3237": {
      "op": "SUB"
    },
    "3238": {
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3239": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3240": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "3241": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3242": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3243": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3245": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3246": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "RETURN",
      "path": "14"
    },
    "3247": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3248": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "3249": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "3250": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "3251": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "3254": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3255": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3256": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "3258": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "NOT",
      "path": "14"
    },
    "3259": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "3260": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "3261": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "3262": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "3265": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3266": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3268": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3269": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "3271": {
      "offset": [
        1762,
        1795
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x7"
    },
    "3273": {
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3274": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA8"
    },
    "3276": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "SHR",
      "path": "14"
    },
    "3277": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "3278": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3279": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3280": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3281": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3282": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3283": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3284": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3285": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "RETURN",
      "path": "14"
    },
    "3286": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3287": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "3288": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "3289": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "3290": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "3293": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3294": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3295": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "3297": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "NOT",
      "path": "14"
    },
    "3298": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "3299": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "3300": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "3301": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "3304": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3305": {
      "offset": [
        1801,
        1830
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "3307": {
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3308": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3309": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3314": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3316": {
      "op": "SHL"
    },
    "3317": {
      "op": "SUB"
    },
    "3318": {
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3319": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3320": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "3321": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3322": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3323": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3325": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3326": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "RETURN",
      "path": "14"
    },
    "3327": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3328": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "3329": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3330": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "3331": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4CE"
    },
    "3334": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3335": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "3337": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "3338": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "3340": {
      "op": "NOT"
    },
    "3341": {
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "3342": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "3343": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4CE"
    },
    "3346": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3347": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3348": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "3349": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3354": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3356": {
      "op": "SHL"
    },
    "3357": {
      "op": "SUB"
    },
    "3358": {
      "offset": [
        783,
        16150
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "3359": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3360": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3361": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "3362": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3363": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "3364": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB46"
    },
    "3367": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3368": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xD2F"
    },
    "3371": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2099"
    },
    "3374": {
      "fn": "MasterNode.stopAddingNodes",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3375": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3380": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3382": {
      "op": "SHL"
    },
    "3383": {
      "op": "SUB"
    },
    "3384": {
      "offset": [
        783,
        16150
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "3385": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3386": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3387": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "3389": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "3390": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "3391": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3392": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "3393": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3394": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3395": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3396": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3397": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "3398": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB46"
    },
    "3401": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3402": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "3404": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "3405": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3406": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "DUP8",
      "path": "14"
    },
    "3407": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3408": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "3409": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3410": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "3411": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "3412": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB46"
    },
    "3415": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3416": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x84"
    },
    "3418": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "3419": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP9",
      "path": "14"
    },
    "3420": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "DUP10",
      "path": "14"
    },
    "3421": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "GT",
      "path": "14"
    },
    "3422": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAB2"
    },
    "3425": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3426": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xD74"
    },
    "3429": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xDF0"
    },
    "3432": {
      "offset": [
        783,
        16150
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "3433": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "3434": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP9",
      "path": "14"
    },
    "3435": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP10",
      "path": "14"
    },
    "3436": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "3437": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3438": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3439": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "3440": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x21C3"
    },
    "3443": {
      "fn": "UtilsMasterNode.getLinkFees",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3444": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3445": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "DUP8",
      "path": "14"
    },
    "3446": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3447": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "3448": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3450": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP11",
      "path": "14"
    },
    "3451": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "DUP12",
      "path": "14"
    },
    "3452": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "3453": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "3454": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        992,
        1012
      ],
      "op": "DUP8",
      "path": "15"
    },
    "3455": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        992,
        1012
      ],
      "op": "DUP8",
      "path": "15"
    },
    "3456": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        992,
        1012
      ],
      "op": "ADD",
      "path": "15"
    },
    "3457": {
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3458": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        992,
        1012
      ],
      "op": "DUP7",
      "path": "15"
    },
    "3459": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        992,
        1012
      ],
      "op": "DUP7",
      "path": "15"
    },
    "3460": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        992,
        1012
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3461": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        992,
        1012
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD8D"
    },
    "3464": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        992,
        1012
      ],
      "op": "DUP7",
      "path": "15"
    },
    "3465": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        992,
        1012
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x216C"
    },
    "3468": {
      "fn": "UtilsMasterNode.getLinkFees",
      "jump": "i",
      "offset": [
        992,
        1012
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3469": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        992,
        1012
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3470": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP9",
      "path": "14"
    },
    "3471": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3472": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xD98"
    },
    "3475": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3476": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x213E"
    },
    "3479": {
      "fn": "UtilsMasterNode.getLinkFees",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3480": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3481": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3483": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3484": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3485": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1226,
        1383
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xDB5"
    },
    "3488": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP11",
      "path": "14"
    },
    "3489": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3490": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xDAA"
    },
    "3493": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3494": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x213E"
    },
    "3497": {
      "fn": "UtilsMasterNode.getLinkFees",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3498": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3499": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1357,
        1366
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0xF4240"
    },
    "3503": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3504": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3505": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1226,
        1383
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x28A4"
    },
    "3508": {
      "fn": "UtilsMasterNode.getLinkFees",
      "jump": "i",
      "offset": [
        1226,
        1383
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3509": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1226,
        1383
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3510": {
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3511": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "DUP11",
      "path": "14"
    },
    "3512": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3513": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "3514": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xDC2"
    },
    "3517": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "DUP10",
      "path": "14"
    },
    "3518": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x210D"
    },
    "3521": {
      "fn": "UtilsMasterNode.getLinkFees",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3522": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3523": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "DUP9",
      "path": "14"
    },
    "3524": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3525": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        945,
        1519
      ],
      "op": "DUP9",
      "path": "15"
    },
    "3526": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        945,
        1519
      ],
      "op": "DUP9",
      "path": "15"
    },
    "3527": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        945,
        1519
      ],
      "op": "ADD",
      "path": "15"
    },
    "3528": {
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3529": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        945,
        1519
      ],
      "op": "DUP10",
      "path": "15"
    },
    "3530": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        945,
        1519
      ],
      "op": "DUP8",
      "path": "15"
    },
    "3531": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        945,
        1519
      ],
      "op": "ADD",
      "path": "15"
    },
    "3532": {
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3533": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "3535": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        945,
        1519
      ],
      "op": "DUP7",
      "path": "15"
    },
    "3536": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        945,
        1519
      ],
      "op": "ADD",
      "path": "15"
    },
    "3537": {
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3538": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "3540": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        945,
        1519
      ],
      "op": "DUP6",
      "path": "15"
    },
    "3541": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        945,
        1519
      ],
      "op": "ADD",
      "path": "15"
    },
    "3542": {
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3543": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "3544": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3545": {
      "op": "PUSH4",
      "value": "0x20487DED"
    },
    "3550": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3552": {
      "op": "SHL"
    },
    "3553": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3554": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3555": {
      "offset": [
        783,
        16150
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "3556": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "3557": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "3558": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "3559": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "3560": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3561": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "3562": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "DUP5",
      "path": "15"
    },
    "3563": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "ADD",
      "path": "15"
    },
    "3564": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2273"
    },
    "3567": {
      "fn": "UtilsMasterNode.getLinkFees",
      "jump": "i",
      "offset": [
        1662,
        1710
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3568": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3569": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "SUB",
      "path": "15"
    },
    "3570": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3571": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "GAS",
      "path": "15"
    },
    "3572": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "STATICCALL",
      "path": "15"
    },
    "3573": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3574": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3575": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3576": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE37"
    },
    "3579": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3580": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "3581": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE08"
    },
    "3584": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3585": {
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3586": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "3587": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3588": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3589": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3590": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3591": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "RETURN",
      "path": "14"
    },
    "3592": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3593": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3594": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "3595": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "POP",
      "path": "15"
    },
    "3596": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "DUP3",
      "path": "15"
    },
    "3597": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3598": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3599": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "3600": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3601": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "GT",
      "path": "15"
    },
    "3602": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE30"
    },
    "3605": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3606": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3607": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE20"
    },
    "3610": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3611": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "DUP4",
      "path": "15"
    },
    "3612": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x21A2"
    },
    "3615": {
      "fn": "UtilsMasterNode.getLinkFees",
      "jump": "i",
      "offset": [
        1662,
        1710
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3616": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3617": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3618": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "ADD",
      "path": "15"
    },
    "3619": {
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "3620": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "3621": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB46"
    },
    "3624": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3625": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3626": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3627": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "CODESIZE",
      "path": "15"
    },
    "3628": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE01"
    },
    "3631": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3632": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3633": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "POP",
      "path": "15"
    },
    "3634": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "3635": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE16"
    },
    "3638": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3639": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3640": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3641": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3642": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3643": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "3644": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3645": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3646": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "3647": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "3648": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3649": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "REVERT",
      "path": "14"
    },
    "3650": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3651": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "3652": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "3653": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "3654": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "3657": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3658": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3659": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "3661": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "NOT",
      "path": "14"
    },
    "3662": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "3663": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "3664": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "3665": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "3668": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3669": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6038,
        6076
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 26,
      "value": "0x421"
    },
    "3672": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3674": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3675": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3676": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE63"
    },
    "3679": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2083"
    },
    "3682": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3683": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3684": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3685": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "3686": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3687": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3688": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "3690": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "3691": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3692": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        16150
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3693": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "3695": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3696": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "3698": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        16150
      ],
      "op": "SHL",
      "path": "14"
    },
    "3699": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "3700": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3701": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "3702": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3704": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3705": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3706": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3707": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6038,
        6076
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE8A"
    },
    "3710": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "3712": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "3713": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3714": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3716": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3717": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3718": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6038,
        6076
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2357"
    },
    "3721": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6038,
        6076
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3722": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6038,
        6076
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3723": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3724": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "3725": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6038,
        6076
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2780"
    },
    "3728": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6038,
        6076
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3729": {
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3730": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "3731": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "3732": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "3733": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "3736": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3737": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3738": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "3740": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "NOT",
      "path": "14"
    },
    "3741": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "3742": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "3743": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "3744": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "3747": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3748": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3750": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3751": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3752": {
      "fn": "ERC20.decimals",
      "offset": [
        3173,
        3175
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 27,
      "value": "0x12"
    },
    "3754": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3755": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3756": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        16150
      ],
      "op": "RETURN",
      "path": "14"
    },
    "3757": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3758": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "3759": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3760": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        16150
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "3761": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x261"
    },
    "3764": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3765": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3767": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3768": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3769": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "3771": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        16150
      ],
      "op": "NOT",
      "path": "14"
    },
    "3772": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "3773": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "3774": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "3775": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x9AB"
    },
    "3778": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3779": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13775,
        13785
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 28,
      "value": "0x9"
    },
    "3781": {
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3786": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3788": {
      "op": "SHL"
    },
    "3789": {
      "op": "SUB"
    },
    "3790": {
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3791": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3792": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "3793": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "3794": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3795": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13764,
        13774
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "3797": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3798": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3799": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3800": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "3801": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3802": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3803": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3804": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "3805": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "3806": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3807": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "3809": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "SHR",
      "path": "14"
    },
    "3810": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "3812": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "3813": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3814": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1536"
    },
    "3817": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3818": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13861,
        13871
      ],
      "op": "CALLER",
      "path": "14",
      "statement": 29
    },
    "3819": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "3820": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3821": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3515
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3823": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3824": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3825": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3826": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "3827": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        16150
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3828": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3829": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13841,
        13872
      ],
      "op": "DUP6",
      "path": "14"
    },
    "3830": {
      "branch": 82,
      "fn": "MasterNode.withdraw",
      "offset": [
        13841,
        13872
      ],
      "op": "GT",
      "path": "14"
    },
    "3831": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x14FE"
    },
    "3834": {
      "branch": 82,
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3835": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3836": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3837": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13962,
        14008
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3838": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13962,
        14008
      ],
      "op": "DUP7",
      "path": "14"
    },
    "3839": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13962,
        14008
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3840": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13962,
        14008
      ],
      "op": "DUP6",
      "path": "14"
    },
    "3841": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13962,
        14008
      ],
      "op": "ADD",
      "path": "14"
    },
    "3842": {
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3843": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13861,
        13871
      ],
      "op": "CALLER",
      "path": "14"
    },
    "3844": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "3845": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "3846": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "3847": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3848": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "3850": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "3851": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3852": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "3853": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "3854": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3855": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13962,
        14008
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3856": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13962,
        14008
      ],
      "op": "DUP6",
      "path": "14"
    },
    "3857": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13962,
        14008
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3858": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13962,
        14008
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xF1A"
    },
    "3861": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13962,
        14008
      ],
      "op": "DUP6",
      "path": "14"
    },
    "3862": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13962,
        14008
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2187"
    },
    "3865": {
      "fn": "MasterNode.withdraw",
      "jump": "i",
      "offset": [
        13962,
        14008
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3866": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13962,
        14008
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3867": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13861,
        13871
      ],
      "op": "CALLER",
      "path": "14"
    },
    "3868": {
      "branch": 92,
      "fn": "ERC20._burn",
      "offset": [
        9505,
        9526
      ],
      "op": "ISZERO",
      "path": "0",
      "statement": 30
    },
    "3869": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x14B2"
    },
    "3872": {
      "fn": "ERC20._burn",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3873": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13861,
        13871
      ],
      "op": "CALLER",
      "path": "14"
    },
    "3874": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP9",
      "path": "14"
    },
    "3875": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3876": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3515
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3878": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3879": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3880": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "3881": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        16150
      ],
      "op": "DUP9",
      "path": "14"
    },
    "3882": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        16150
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3883": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3884": {
      "fn": "ERC20._burn",
      "offset": [
        9696,
        9720
      ],
      "op": "DUP8",
      "path": "0",
      "statement": 31
    },
    "3885": {
      "fn": "ERC20._burn",
      "offset": [
        9696,
        9720
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3886": {
      "branch": 93,
      "fn": "ERC20._burn",
      "offset": [
        9696,
        9720
      ],
      "op": "LT",
      "path": "0"
    },
    "3887": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1464"
    },
    "3890": {
      "fn": "ERC20._burn",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3891": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13861,
        13871
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3892": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13861,
        13871
      ],
      "op": "DUP8",
      "path": "14"
    },
    "3893": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13861,
        13871
      ],
      "op": "DUP10",
      "path": "14"
    },
    "3894": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13861,
        13871
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "3895": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13861,
        13871
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3896": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13861,
        13871
      ],
      "op": "CALLER",
      "path": "14"
    },
    "3897": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "3898": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3899": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3515
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3901": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "3902": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3903": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "3904": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        16150
      ],
      "op": "DUP8",
      "path": "14"
    },
    "3905": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3906": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        16150
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3907": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        16150
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "3908": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        16150
      ],
      "op": "DUP8",
      "path": "14"
    },
    "3909": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3910": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3911": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "3912": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3913": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        16150
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "3914": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3915": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        16150
      ],
      "op": "DUP8",
      "path": "14"
    },
    "3916": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3917": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        16150
      ],
      "op": "DUP10",
      "path": "14"
    },
    "3918": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3919": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3920": {
      "fn": "ERC20._burn",
      "offset": [
        9978,
        10015
      ],
      "op": "PUSH32",
      "path": "0",
      "statement": 32,
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "3953": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13861,
        13871
      ],
      "op": "DUP7",
      "path": "14"
    },
    "3954": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13861,
        13871
      ],
      "op": "CALLER",
      "path": "14"
    },
    "3955": {
      "fn": "ERC20._burn",
      "offset": [
        9978,
        10015
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3956": {
      "fn": "ERC20._burn",
      "offset": [
        9978,
        10015
      ],
      "op": "LOG3",
      "path": "0"
    },
    "3957": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3958": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13775,
        13785
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9"
    },
    "3960": {
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3961": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "3962": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3963": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3964": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3965": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3966": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13764,
        13774
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "3968": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "3969": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3970": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "DUP8",
      "path": "14"
    },
    "3971": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3972": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3973": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3978": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3980": {
      "op": "SHL"
    },
    "3981": {
      "op": "SUB"
    },
    "3982": {
      "offset": [
        783,
        16150
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "3983": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "DUP9",
      "path": "14"
    },
    "3984": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3985": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x10"
    },
    "3987": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "SHR",
      "path": "14"
    },
    "3988": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "3989": {
      "fn": "MasterNode.withdraw",
      "offset": [
        14097,
        14121
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3990": {
      "fn": "MasterNode.withdraw",
      "offset": [
        14097,
        14121
      ],
      "op": "DUP10",
      "path": "14"
    },
    "3991": {
      "fn": "MasterNode.withdraw",
      "offset": [
        14097,
        14121
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x0"
    },
    "4024": {
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "4025": {
      "fn": "MasterNode.withdraw",
      "offset": [
        14059,
        14121
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4026": {
      "branch": 83,
      "fn": "MasterNode.withdraw",
      "offset": [
        14059,
        14121
      ],
      "op": "EQ",
      "path": "14"
    },
    "4027": {
      "fn": "MasterNode.withdraw",
      "offset": [
        14055,
        14304
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4029": {
      "offset": [
        783,
        16150
      ],
      "op": "EQ",
      "path": "14"
    },
    "4030": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1064"
    },
    "4033": {
      "branch": 83,
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4034": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "4035": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "4036": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "4037": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "4038": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "4039": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4040": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13775,
        13785
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9"
    },
    "4042": {
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "4043": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "4044": {
      "fn": "MasterNode.withdraw",
      "offset": [
        14137,
        14196
      ],
      "op": "DUP1",
      "path": "14",
      "statement": 33
    },
    "4045": {
      "fn": "MasterNode.withdraw",
      "offset": [
        14137,
        14196
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "4046": {
      "fn": "MasterNode.withdraw",
      "offset": [
        14137,
        14196
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4047": {
      "fn": "MasterNode.withdraw",
      "offset": [
        14137,
        14196
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x261"
    },
    "4050": {
      "fn": "MasterNode.withdraw",
      "offset": [
        14137,
        14196
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4051": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "4052": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4053": {
      "op": "PUSH4",
      "value": "0x15E005B7"
    },
    "4058": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "4060": {
      "op": "SHL"
    },
    "4061": {
      "fn": "MasterNode.withdraw",
      "offset": [
        14137,
        14196
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4062": {
      "fn": "MasterNode.withdraw",
      "offset": [
        14137,
        14196
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4063": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13861,
        13871
      ],
      "op": "CALLER",
      "path": "14"
    },
    "4064": {
      "fn": "MasterNode.withdraw",
      "offset": [
        14137,
        14196
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4065": {
      "fn": "MasterNode.withdraw",
      "offset": [
        14137,
        14196
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4066": {
      "fn": "MasterNode.withdraw",
      "offset": [
        14137,
        14196
      ],
      "op": "ADD",
      "path": "14"
    },
    "4067": {
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4068": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4069": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4070": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4072": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4073": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "4074": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "DUP10",
      "path": "14"
    },
    "4075": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4076": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4077": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4078": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4079": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4080": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4081": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4082": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4083": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4084": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "4085": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4086": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4087": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4088": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4090": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "4091": {
      "fn": "MasterNode.withdraw",
      "offset": [
        14137,
        14196
      ],
      "op": "SUB",
      "path": "14"
    },
    "4092": {
      "fn": "MasterNode.withdraw",
      "offset": [
        14137,
        14196
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4093": {
      "fn": "MasterNode.withdraw",
      "offset": [
        14137,
        14196
      ],
      "op": "GAS",
      "path": "14"
    },
    "4094": {
      "fn": "MasterNode.withdraw",
      "offset": [
        14137,
        14196
      ],
      "op": "CALL",
      "path": "14"
    },
    "4095": {
      "fn": "MasterNode.withdraw",
      "offset": [
        14137,
        14196
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4096": {
      "fn": "MasterNode.withdraw",
      "offset": [
        14137,
        14196
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4097": {
      "fn": "MasterNode.withdraw",
      "offset": [
        14137,
        14196
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x105A"
    },
    "4100": {
      "fn": "MasterNode.withdraw",
      "offset": [
        14137,
        14196
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4101": {
      "fn": "MasterNode.withdraw",
      "offset": [
        14137,
        14196
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1046"
    },
    "4104": {
      "fn": "MasterNode.withdraw",
      "offset": [
        14137,
        14196
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4105": {
      "fn": "MasterNode.withdraw",
      "offset": [
        14055,
        14304
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4106": {
      "fn": "MasterNode.withdraw",
      "offset": [
        14055,
        14304
      ],
      "op": "POP",
      "path": "14"
    },
    "4107": {
      "fn": "MasterNode.withdraw",
      "offset": [
        14055,
        14304
      ],
      "op": "POP",
      "path": "14"
    },
    "4108": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13764,
        13774
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "4110": {
      "fn": "MasterNode.withdraw",
      "offset": [
        14055,
        14304
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4111": {
      "fn": "MasterNode.withdraw",
      "offset": [
        14055,
        14304
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4112": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13775,
        13785
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9"
    },
    "4114": {
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "4115": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "4116": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "4117": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4118": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4119": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13861,
        13871
      ],
      "op": "CALLER",
      "path": "14"
    },
    "4120": {
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4121": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "4122": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "4123": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "4124": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x10"
    },
    "4126": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "SHR",
      "path": "14"
    },
    "4127": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "4128": {
      "fn": "MasterNode.withdraw",
      "offset": [
        14319,
        14435
      ],
      "op": "PUSH32",
      "path": "14",
      "statement": 34,
      "value": "0xF3F4E036F86C1437E14FAC401835B304A1B76776B49E2E2A4D86C119433B80CF"
    },
    "4161": {
      "fn": "MasterNode.withdraw",
      "offset": [
        14319,
        14435
      ],
      "op": "DUP5",
      "path": "14"
    },
    "4162": {
      "fn": "MasterNode.withdraw",
      "offset": [
        14319,
        14435
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4163": {
      "fn": "MasterNode.withdraw",
      "offset": [
        14319,
        14435
      ],
      "op": "LOG4",
      "path": "14"
    },
    "4164": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4165": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "RETURN",
      "path": "14"
    },
    "4166": {
      "fn": "MasterNode.withdraw",
      "offset": [
        14137,
        14196
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4167": {
      "fn": "MasterNode.withdraw",
      "offset": [
        14137,
        14196
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x104F"
    },
    "4170": {
      "fn": "MasterNode.withdraw",
      "offset": [
        14137,
        14196
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4171": {
      "fn": "MasterNode.withdraw",
      "offset": [
        14137,
        14196
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2159"
    },
    "4174": {
      "fn": "MasterNode.withdraw",
      "jump": "i",
      "offset": [
        14137,
        14196
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4175": {
      "fn": "MasterNode.withdraw",
      "offset": [
        14137,
        14196
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4176": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x9AF"
    },
    "4179": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4180": {
      "fn": "MasterNode.withdraw",
      "offset": [
        14137,
        14196
      ],
      "op": "DUP6",
      "path": "14"
    },
    "4181": {
      "fn": "MasterNode.withdraw",
      "offset": [
        14137,
        14196
      ],
      "op": "CODESIZE",
      "path": "14"
    },
    "4182": {
      "fn": "MasterNode.withdraw",
      "offset": [
        14137,
        14196
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1009"
    },
    "4185": {
      "fn": "MasterNode.withdraw",
      "offset": [
        14137,
        14196
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4186": {
      "fn": "MasterNode.withdraw",
      "offset": [
        14137,
        14196
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4187": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "4188": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4189": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4190": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "4191": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4192": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "4193": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4194": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4195": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4196": {
      "fn": "MasterNode.withdraw",
      "offset": [
        14055,
        14304
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4197": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "4199": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4200": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4201": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "4202": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "4203": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "4204": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "4205": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4206": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "4207": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "4208": {
      "offset": [
        2570,
        2606
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4209": {
      "offset": [
        2566,
        2676
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x144D"
    },
    "4212": {
      "fn": "MasterNode.withdraw",
      "offset": [
        2566,
        2676
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4213": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP9",
      "path": "14"
    },
    "4214": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "4215": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4216": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "4218": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "DUP10",
      "path": "14"
    },
    "4219": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "DUP16",
      "path": "14"
    },
    "4220": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "DUP13",
      "path": "14"
    },
    "4221": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9291,
        9302
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x7"
    },
    "4223": {
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "4224": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "4226": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SHR",
      "path": "14"
    },
    "4227": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "4228": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP10",
      "path": "14"
    },
    "4229": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "4230": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4231": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP13",
      "path": "14"
    },
    "4232": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP9",
      "path": "14"
    },
    "4233": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4234": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "4235": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1093"
    },
    "4238": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "4239": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x210D"
    },
    "4242": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4243": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4244": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4245": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "4246": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4247": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "4248": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "4249": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4250": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4251": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "4252": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4253": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4254": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4255": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "4256": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4257": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "4258": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4259": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP11",
      "path": "14"
    },
    "4260": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4261": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11034,
        11055
      ],
      "op": "SWAP7",
      "path": "14",
      "statement": 35
    },
    "4262": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11034,
        11055
      ],
      "op": "DUP9",
      "path": "14"
    },
    "4263": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11034,
        11055
      ],
      "op": "DUP9",
      "path": "14"
    },
    "4264": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11034,
        11055
      ],
      "op": "ADD",
      "path": "14"
    },
    "4265": {
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4266": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11034,
        11055
      ],
      "op": "DUP8",
      "path": "14"
    },
    "4267": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11034,
        11055
      ],
      "op": "DUP8",
      "path": "14"
    },
    "4268": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11034,
        11055
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4269": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11034,
        11055
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x10B5"
    },
    "4272": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11034,
        11055
      ],
      "op": "DUP8",
      "path": "14"
    },
    "4273": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11034,
        11055
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x216C"
    },
    "4276": {
      "fn": "MasterNode._buildCCIPMessage",
      "jump": "i",
      "offset": [
        11034,
        11055
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4277": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11034,
        11055
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4278": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP11",
      "path": "14"
    },
    "4279": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4280": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x10C0"
    },
    "4283": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4284": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x213E"
    },
    "4287": {
      "fn": "MasterNode._buildCCIPMessage",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4288": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4289": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4291": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4292": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4293": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11279,
        11445
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x10DD"
    },
    "4296": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP13",
      "path": "14"
    },
    "4297": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4298": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x10D2"
    },
    "4301": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4302": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x213E"
    },
    "4305": {
      "fn": "MasterNode._buildCCIPMessage",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4306": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4307": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11416,
        11425
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x1E8480"
    },
    "4311": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4312": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4313": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11279,
        11445
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x28A4"
    },
    "4316": {
      "fn": "MasterNode._buildCCIPMessage",
      "jump": "i",
      "offset": [
        11279,
        11445
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4317": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11279,
        11445
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4318": {
      "offset": [
        783,
        16150
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "4319": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP13",
      "path": "14"
    },
    "4320": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4321": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP9",
      "path": "14"
    },
    "4322": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x10EA"
    },
    "4325": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP11",
      "path": "14"
    },
    "4326": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x210D"
    },
    "4329": {
      "fn": "MasterNode._buildCCIPMessage",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4330": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4331": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP10",
      "path": "14"
    },
    "4332": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4333": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10984,
        11610
      ],
      "op": "DUP10",
      "path": "14"
    },
    "4334": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10984,
        11610
      ],
      "op": "DUP10",
      "path": "14"
    },
    "4335": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10984,
        11610
      ],
      "op": "ADD",
      "path": "14"
    },
    "4336": {
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4337": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10984,
        11610
      ],
      "op": "DUP12",
      "path": "14"
    },
    "4338": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10984,
        11610
      ],
      "op": "DUP9",
      "path": "14"
    },
    "4339": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10984,
        11610
      ],
      "op": "ADD",
      "path": "14"
    },
    "4340": {
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4341": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10984,
        11610
      ],
      "op": "DUP7",
      "path": "14"
    },
    "4342": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10984,
        11610
      ],
      "op": "ADD",
      "path": "14"
    },
    "4343": {
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4344": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "4346": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10984,
        11610
      ],
      "op": "DUP6",
      "path": "14"
    },
    "4347": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10984,
        11610
      ],
      "op": "ADD",
      "path": "14"
    },
    "4348": {
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4349": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP8",
      "path": "14"
    },
    "4350": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4351": {
      "op": "PUSH4",
      "value": "0xB0F479A1"
    },
    "4356": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4358": {
      "op": "SHL"
    },
    "4359": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4360": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4361": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10984,
        11610
      ],
      "op": "DUP6",
      "path": "14"
    },
    "4362": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4363": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9448
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4364": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4365": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9448
      ],
      "op": "ADDRESS",
      "path": "14"
    },
    "4366": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "GAS",
      "path": "14"
    },
    "4367": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "4368": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4369": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4370": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4371": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1443"
    },
    "4374": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4375": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4376": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "DUP8",
      "path": "14"
    },
    "4377": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4378": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "DUP13",
      "path": "14"
    },
    "4379": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4380": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1409"
    },
    "4383": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4384": {
      "fn": "MasterNode.withdraw",
      "offset": [
        14055,
        14304
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4385": {
      "op": "POP"
    },
    "4386": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP10",
      "path": "14"
    },
    "4387": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4388": {
      "op": "PUSH4",
      "value": "0x20487DED"
    },
    "4393": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4395": {
      "op": "SHL"
    },
    "4396": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4397": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4398": {
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4399": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "4400": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "4401": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP12",
      "path": "14"
    },
    "4402": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4403": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "DUP8",
      "path": "14"
    },
    "4404": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4405": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4406": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1142"
    },
    "4409": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "DUP11",
      "path": "14"
    },
    "4410": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "DUP10",
      "path": "14"
    },
    "4411": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "DUP10",
      "path": "14"
    },
    "4412": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "DUP5",
      "path": "14"
    },
    "4413": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "ADD",
      "path": "14"
    },
    "4414": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2273"
    },
    "4417": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9544,
        9600
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4418": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4419": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "SUB",
      "path": "14"
    },
    "4420": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4421": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "DUP10",
      "path": "14"
    },
    "4422": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "GAS",
      "path": "14"
    },
    "4423": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "4424": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4425": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4426": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4427": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x13FF"
    },
    "4430": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4431": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4432": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "DUP9",
      "path": "14"
    },
    "4433": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4434": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4435": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "4436": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x13CD"
    },
    "4439": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4440": {
      "fn": "MasterNode.withdraw",
      "offset": [
        14055,
        14304
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4441": {
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "4442": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "4444": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "DUP13",
      "path": "14"
    },
    "4445": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4446": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4447": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "4448": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4449": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "4450": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x23B872DD"
    },
    "4455": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "4457": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "SHL",
      "path": "14"
    },
    "4458": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "DUP4",
      "path": "14",
      "statement": 36
    },
    "4459": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4460": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13861,
        13871
      ],
      "op": "CALLER",
      "path": "14"
    },
    "4461": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "DUP10",
      "path": "14"
    },
    "4462": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "DUP5",
      "path": "14"
    },
    "4463": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "ADD",
      "path": "14"
    },
    "4464": {
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4465": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9448
      ],
      "op": "ADDRESS",
      "path": "14"
    },
    "4466": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "4468": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "4469": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "4470": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4471": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP8",
      "path": "14"
    },
    "4472": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "4474": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "4475": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "4476": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4477": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "GAS",
      "path": "14"
    },
    "4478": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "CALL",
      "path": "14"
    },
    "4479": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4480": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4481": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4482": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x13C3"
    },
    "4485": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4486": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "DUP13",
      "path": "14"
    },
    "4487": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4488": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x13A6"
    },
    "4491": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4492": {
      "fn": "MasterNode.withdraw",
      "offset": [
        14055,
        14304
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4493": {
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "4494": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4495": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1363"
    },
    "4498": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4499": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "4500": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9291,
        9302
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x7"
    },
    "4502": {
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "4503": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "4505": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SHR",
      "path": "14"
    },
    "4506": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "4507": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4508": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP10",
      "path": "14"
    },
    "4509": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4510": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP13",
      "path": "14"
    },
    "4511": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x70A08231"
    },
    "4516": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "4518": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SHL",
      "path": "14"
    },
    "4519": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "SWAP2",
      "path": "14",
      "statement": 37
    },
    "4520": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4521": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4522": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4523": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9448
      ],
      "op": "ADDRESS",
      "path": "14"
    },
    "4524": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "DUP7",
      "path": "14"
    },
    "4525": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4526": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "ADD",
      "path": "14"
    },
    "4527": {
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4528": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "DUP10",
      "path": "14"
    },
    "4529": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4530": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "4532": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4533": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "DUP9",
      "path": "14"
    },
    "4534": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "GAS",
      "path": "14"
    },
    "4535": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "4536": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4537": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4538": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4539": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1358"
    },
    "4542": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4543": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4544": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x132B"
    },
    "4547": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4548": {
      "fn": "MasterNode.withdraw",
      "offset": [
        14055,
        14304
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4549": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9756,
        9799
      ],
      "op": "POP",
      "path": "14"
    },
    "4550": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9756,
        9799
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4551": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9756,
        9799
      ],
      "op": "GT",
      "path": "14"
    },
    "4552": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9880
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x12BA"
    },
    "4555": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9880
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4556": {
      "op": "POP"
    },
    "4557": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP10",
      "path": "14"
    },
    "4558": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4559": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "4564": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4566": {
      "op": "SHL"
    },
    "4567": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "DUP2",
      "path": "14",
      "statement": 38
    },
    "4568": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4573": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4575": {
      "op": "SHL"
    },
    "4576": {
      "op": "SUB"
    },
    "4577": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "4578": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "4579": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4580": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "DUP6",
      "path": "14"
    },
    "4581": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "ADD",
      "path": "14"
    },
    "4582": {
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4583": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4584": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4585": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4587": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4588": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "4589": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4590": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4591": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4592": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4593": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP13",
      "path": "14"
    },
    "4594": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "4595": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4596": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4597": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4598": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP9",
      "path": "14"
    },
    "4599": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4600": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4601": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4602": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4603": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4604": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP8",
      "path": "14"
    },
    "4605": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4606": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4607": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4608": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4610": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "4611": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "SUB",
      "path": "14"
    },
    "4612": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4613": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "GAS",
      "path": "14"
    },
    "4614": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "CALL",
      "path": "14"
    },
    "4615": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4616": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4617": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x12B0"
    },
    "4620": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4621": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4622": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "DUP8",
      "path": "14"
    },
    "4623": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "4624": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "4625": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4626": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 39,
      "value": "0x1237"
    },
    "4629": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "4630": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "4631": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "4632": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1283"
    },
    "4635": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4636": {
      "fn": "MasterNode.withdraw",
      "offset": [
        14055,
        14304
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4637": {
      "op": "POP"
    },
    "4638": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP11",
      "path": "14"
    },
    "4639": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4640": {
      "op": "PUSH4",
      "value": "0x96F4E9F9"
    },
    "4645": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4647": {
      "op": "SHL"
    },
    "4648": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4649": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4650": {
      "offset": [
        783,
        16150
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "4651": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP8",
      "path": "14"
    },
    "4652": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "4653": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "4654": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "4655": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "4656": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "4657": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "DUP5",
      "path": "14"
    },
    "4658": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "ADD",
      "path": "14"
    },
    "4659": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2273"
    },
    "4662": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        10144,
        10202
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4663": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4664": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "SUB",
      "path": "14"
    },
    "4665": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4666": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "GAS",
      "path": "14"
    },
    "4667": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "CALL",
      "path": "14"
    },
    "4668": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4669": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4670": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1279"
    },
    "4673": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4674": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x124F"
    },
    "4677": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4678": {
      "fn": "MasterNode.withdraw",
      "offset": [
        14055,
        14304
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4679": {
      "fn": "MasterNode.withdraw",
      "offset": [
        14055,
        14304
      ],
      "op": "POP",
      "path": "14"
    },
    "4680": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13764,
        13774
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "4682": {
      "fn": "MasterNode.withdraw",
      "offset": [
        14055,
        14304
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4683": {
      "fn": "MasterNode.withdraw",
      "offset": [
        14055,
        14304
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x100F"
    },
    "4686": {
      "fn": "MasterNode.withdraw",
      "offset": [
        14055,
        14304
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4687": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4688": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4689": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4690": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4691": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4692": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4693": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "GT",
      "path": "14"
    },
    "4694": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1272"
    },
    "4697": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4698": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4699": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1264"
    },
    "4702": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4703": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4704": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x21A2"
    },
    "4707": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        10144,
        10202
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4708": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4709": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4710": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "ADD",
      "path": "14"
    },
    "4711": {
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "4712": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "4713": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x9AF"
    },
    "4716": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4717": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "CODESIZE",
      "path": "14"
    },
    "4718": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1246"
    },
    "4721": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4722": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4723": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "POP",
      "path": "14"
    },
    "4724": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4725": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x125A"
    },
    "4728": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4729": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4730": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "4731": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4732": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4733": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP10",
      "path": "14"
    },
    "4734": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4735": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "4736": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4737": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4738": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4739": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4740": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x12A2"
    },
    "4743": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4744": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "DUP8",
      "path": "14"
    },
    "4745": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4746": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "DUP10",
      "path": "14"
    },
    "4747": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "GT",
      "path": "14"
    },
    "4748": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x12A9"
    },
    "4751": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4752": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4753": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x129A"
    },
    "4756": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4757": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4758": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x21A2"
    },
    "4761": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9998,
        10040
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4762": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4763": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4764": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "ADD",
      "path": "14"
    },
    "4765": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4766": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x233F"
    },
    "4769": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9998,
        10040
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4770": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4771": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "POP",
      "path": "14"
    },
    "4772": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "CODESIZE",
      "path": "14"
    },
    "4773": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x121C"
    },
    "4776": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4777": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4778": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "POP",
      "path": "14"
    },
    "4779": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4780": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1290"
    },
    "4783": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4784": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4785": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP11",
      "path": "14"
    },
    "4786": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4787": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4788": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "4789": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4790": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "4791": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4792": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4793": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4794": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9880
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4795": {
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4796": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP13",
      "path": "14"
    },
    "4797": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP12",
      "path": "14"
    },
    "4798": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP10",
      "path": "14"
    },
    "4799": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4800": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP8",
      "path": "14"
    },
    "4801": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "4802": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "4804": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "4805": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4806": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4807": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "SWAP10",
      "path": "14"
    },
    "4808": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4809": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "4810": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4811": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4812": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9448
      ],
      "op": "ADDRESS",
      "path": "14"
    },
    "4813": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "DUP11",
      "path": "14"
    },
    "4814": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4815": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "ADD",
      "path": "14"
    },
    "4816": {
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4817": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "GAS",
      "path": "14"
    },
    "4818": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "4819": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4820": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4821": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4822": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE37"
    },
    "4825": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4826": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4827": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x12FA"
    },
    "4830": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4831": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9880
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4832": {
      "op": "POP"
    },
    "4833": {
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4834": {
      "op": "PUSH4",
      "value": "0x4787A103"
    },
    "4839": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4841": {
      "op": "SHL"
    },
    "4842": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9820,
        9880
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4843": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9820,
        9880
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4844": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9820,
        9880
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4845": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9820,
        9880
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4846": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9820,
        9880
      ],
      "op": "ADD",
      "path": "14"
    },
    "4847": {
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4848": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "4850": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4851": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "4852": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4853": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "4855": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4856": {
      "op": "POP"
    },
    "4857": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9820,
        9880
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4858": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4859": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4860": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4861": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "POP",
      "path": "14"
    },
    "4862": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "DUP5",
      "path": "14"
    },
    "4863": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4864": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4865": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4866": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "GT",
      "path": "14"
    },
    "4867": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1324"
    },
    "4870": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4871": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4872": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1311"
    },
    "4875": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4876": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4877": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x21A2"
    },
    "4880": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9837,
        9873
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4881": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4882": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4883": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "ADD",
      "path": "14"
    },
    "4884": {
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "4885": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "4886": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB46"
    },
    "4889": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4890": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "4892": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "4893": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4894": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4895": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "DUP6",
      "path": "14"
    },
    "4896": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x12DF"
    },
    "4899": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4900": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4901": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "POP",
      "path": "14"
    },
    "4902": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4903": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1307"
    },
    "4906": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4907": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4908": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4909": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "POP",
      "path": "14"
    },
    "4910": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "DUP9",
      "path": "14"
    },
    "4911": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4912": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4913": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4914": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4915": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "GT",
      "path": "14"
    },
    "4916": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1351"
    },
    "4919": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4920": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4921": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1342"
    },
    "4924": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4925": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4926": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x21A2"
    },
    "4929": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9763,
        9799
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4930": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4931": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4932": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "ADD",
      "path": "14"
    },
    "4933": {
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "4934": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "4935": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB46"
    },
    "4938": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4939": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4940": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "CODESIZE",
      "path": "14"
    },
    "4941": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x11C4"
    },
    "4944": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4945": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4946": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "POP",
      "path": "14"
    },
    "4947": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4948": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1338"
    },
    "4951": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4952": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4953": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP14",
      "path": "14"
    },
    "4954": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4955": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4956": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4957": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4958": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4959": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "4960": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4961": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4962": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4963": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4964": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP9",
      "path": "14"
    },
    "4965": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4966": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4970": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4972": {
      "op": "SHL"
    },
    "4973": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4974": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4975": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4976": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4977": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "4978": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP8",
      "path": "14"
    },
    "4979": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4980": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4981": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1A"
    },
    "4983": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "4985": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4986": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "4987": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4988": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x4E6F742070726F7669646564204C696E6B20666F722066656573000000000000"
    },
    "5021": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "5023": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5024": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "5025": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5026": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "5028": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5029": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "REVERT",
      "path": "14"
    },
    "5030": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5031": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x13BD"
    },
    "5034": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5035": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "POP",
      "path": "14"
    },
    "5036": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "DUP8",
      "path": "14"
    },
    "5037": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "5038": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "DUP10",
      "path": "14"
    },
    "5039": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "GT",
      "path": "14"
    },
    "5040": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x12A9"
    },
    "5043": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5044": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x129A"
    },
    "5047": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5048": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5049": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x21A2"
    },
    "5052": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9632,
        9689
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5053": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5054": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "CODESIZE",
      "path": "14"
    },
    "5055": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x118C"
    },
    "5058": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5059": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5060": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP11",
      "path": "14"
    },
    "5061": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5062": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "5063": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP15",
      "path": "14"
    },
    "5064": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5065": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "5066": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "5067": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5068": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "REVERT",
      "path": "14"
    },
    "5069": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5070": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5071": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "POP",
      "path": "14"
    },
    "5072": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5073": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "POP",
      "path": "14"
    },
    "5074": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5075": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5076": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "5077": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5078": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "GT",
      "path": "14"
    },
    "5079": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x13F8"
    },
    "5082": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5083": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5084": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x13E5"
    },
    "5087": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5088": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5089": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x21A2"
    },
    "5092": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9544,
        9600
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5093": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5094": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5095": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "ADD",
      "path": "14"
    },
    "5096": {
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "5097": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "5098": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB46"
    },
    "5101": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5102": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "5103": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP13",
      "path": "14"
    },
    "5104": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5105": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5106": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5107": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "CODESIZE",
      "path": "14"
    },
    "5108": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1158"
    },
    "5111": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5112": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5113": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "POP",
      "path": "14"
    },
    "5114": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "5115": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x13DB"
    },
    "5118": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5119": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5120": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP12",
      "path": "14"
    },
    "5121": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5122": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "5123": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5124": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5125": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "5126": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "5127": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5128": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "REVERT",
      "path": "14"
    },
    "5129": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5130": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5131": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5132": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "POP",
      "path": "14"
    },
    "5133": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "DUP8",
      "path": "14"
    },
    "5134": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5135": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5136": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "POP",
      "path": "14"
    },
    "5137": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "5138": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5139": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "GT",
      "path": "14"
    },
    "5140": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x143C"
    },
    "5143": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5144": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5145": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1422"
    },
    "5148": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5149": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5150": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x21A2"
    },
    "5153": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9444,
        9460
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5154": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5155": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5156": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "ADD",
      "path": "14"
    },
    "5157": {
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "5158": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "5159": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAAE"
    },
    "5162": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5163": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5164": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "5165": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5166": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "5167": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5168": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "5169": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAAE"
    },
    "5172": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5173": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "DUP7",
      "path": "14"
    },
    "5174": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5175": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "CODESIZE",
      "path": "14"
    },
    "5176": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1120"
    },
    "5179": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5180": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5181": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "POP",
      "path": "14"
    },
    "5182": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "5183": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1418"
    },
    "5186": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5187": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5188": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP10",
      "path": "14"
    },
    "5189": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5190": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "5191": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP14",
      "path": "14"
    },
    "5192": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5193": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "5194": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "5195": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5196": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "REVERT",
      "path": "14"
    },
    "5197": {
      "offset": [
        2566,
        2676
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5198": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP9",
      "path": "14"
    },
    "5199": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5200": {
      "op": "PUSH4",
      "value": "0x6A9FF79F"
    },
    "5205": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "5207": {
      "op": "SHL"
    },
    "5208": {
      "offset": [
        2629,
        2665
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5209": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        2629,
        2665
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5210": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        2629,
        2665
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5211": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        2629,
        2665
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5212": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        2629,
        2665
      ],
      "op": "ADD",
      "path": "14"
    },
    "5213": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "5214": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5215": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5216": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "5218": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5219": {
      "offset": [
        2629,
        2665
      ],
      "op": "REVERT",
      "path": "14"
    },
    "5220": {
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5221": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "5222": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5223": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5227": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5229": {
      "op": "SHL"
    },
    "5230": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5231": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5232": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5233": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5234": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "5235": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "5236": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5237": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5238": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x22"
    },
    "5240": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "5242": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5243": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "5244": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5245": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
    },
    "5278": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "5280": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5281": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "5282": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5283": {
      "op": "PUSH2",
      "value": "0x6365"
    },
    "5286": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "5288": {
      "op": "SHL"
    },
    "5289": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "5291": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5292": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "5293": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5294": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x84"
    },
    "5296": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5297": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "REVERT",
      "path": "14"
    },
    "5298": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5299": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "5300": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x84"
    },
    "5302": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5303": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "5304": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5305": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5306": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x461BCD"
    },
    "5310": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE5"
    },
    "5312": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SHL",
      "path": "14"
    },
    "5313": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5314": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5315": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5316": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "5317": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5318": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x21"
    },
    "5320": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "5322": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5323": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "5324": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5325": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
    },
    "5358": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "5360": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5361": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "5362": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5363": {
      "op": "PUSH1",
      "value": "0x73"
    },
    "5365": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "5367": {
      "op": "SHL"
    },
    "5368": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "5370": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5371": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "5372": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5373": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "REVERT",
      "path": "14"
    },
    "5374": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5375": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5376": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "5377": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "5379": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5380": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5381": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5382": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x461BCD"
    },
    "5386": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE5"
    },
    "5388": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SHL",
      "path": "14"
    },
    "5389": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5390": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5391": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5392": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "5393": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5394": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x13"
    },
    "5396": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "5398": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5399": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "5400": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5401": {
      "op": "PUSH19",
      "value": "0x4E6F7420656E6F756768742062616C616E6365"
    },
    "5421": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "5423": {
      "op": "SHL"
    },
    "5424": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "5426": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5427": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "5428": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5429": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "REVERT",
      "path": "14"
    },
    "5430": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5431": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5432": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "5433": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "5435": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5436": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5437": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5438": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x461BCD"
    },
    "5442": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE5"
    },
    "5444": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SHL",
      "path": "14"
    },
    "5445": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5446": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5447": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5448": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "5449": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5450": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x12"
    },
    "5452": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "5454": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5455": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "5456": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5457": {
      "op": "PUSH18",
      "value": "0x4E6F6465206973206E6F7420416374697665"
    },
    "5476": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "5478": {
      "op": "SHL"
    },
    "5479": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "5481": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5482": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "5483": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5484": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "REVERT",
      "path": "14"
    },
    "5485": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5486": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "5487": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5488": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5489": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "5490": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "5493": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5494": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "5496": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "5497": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "5499": {
      "op": "NOT"
    },
    "5500": {
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "5501": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "5502": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "5505": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5506": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1589"
    },
    "5509": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2083"
    },
    "5512": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5513": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5514": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1591"
    },
    "5517": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2099"
    },
    "5520": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5521": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5522": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5523": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5524": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "5526": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "5527": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "5528": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "5530": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5531": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "5533": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SHL",
      "path": "14"
    },
    "5534": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "5535": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5536": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "5537": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5538": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5539": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "5541": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "5543": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5544": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "5545": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "5546": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "5548": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5549": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "5551": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5552": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5553": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "5555": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        16150
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "5556": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5557": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11371,
        11388
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5558": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11371,
        11388
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5560": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11371,
        11388
      ],
      "op": "NOT",
      "path": "0"
    },
    "5561": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11351,
        11388
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5562": {
      "branch": 94,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11351,
        11388
      ],
      "op": "SUB",
      "path": "0"
    },
    "5563": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15CD"
    },
    "5566": {
      "branch": 94,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5567": {
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5568": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "5570": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5441,
        5447
      ],
      "op": "DUP7",
      "path": "0",
      "statement": 40
    },
    "5571": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5441,
        5447
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x421"
    },
    "5574": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5441,
        5447
      ],
      "op": "DUP8",
      "path": "0"
    },
    "5575": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5441,
        5447
      ],
      "op": "DUP8",
      "path": "0"
    },
    "5576": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5441,
        5447
      ],
      "op": "DUP8",
      "path": "0"
    },
    "5577": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5441,
        5447
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x256C"
    },
    "5580": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5441,
        5447
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5581": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5582": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11412,
        11438
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 41
    },
    "5583": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11412,
        11438
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5584": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11412,
        11438
      ],
      "op": "LT",
      "path": "0"
    },
    "5585": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x15F6"
    },
    "5588": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5589": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "5590": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5591": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5592": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5593": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11539,
        11564
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 42,
      "value": "0x15EB"
    },
    "5596": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "5598": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "5599": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "5600": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5441,
        5447
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x421"
    },
    "5603": {
      "offset": [
        783,
        16150
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "5604": {
      "fn": "ERC20.transferFrom",
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "5605": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "5606": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11539,
        11564
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5607": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11539,
        11564
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2780"
    },
    "5610": {
      "fn": "ERC20._spendAllowance",
      "jump": "i",
      "offset": [
        11539,
        11564
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5611": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11539,
        11564
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5612": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5613": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "5614": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "5615": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5616": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "5617": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "POP",
      "path": "0"
    },
    "5618": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15BF"
    },
    "5621": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5622": {
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5623": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "5625": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5626": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "5628": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "DUP8",
      "path": "14"
    },
    "5629": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5630": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5631": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x461BCD"
    },
    "5635": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE5"
    },
    "5637": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "SHL",
      "path": "14"
    },
    "5638": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5639": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5640": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5641": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "5642": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5643": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1D"
    },
    "5645": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "5647": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5648": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "5649": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5650": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
    },
    "5683": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "5685": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5686": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "5687": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5688": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "REVERT",
      "path": "14"
    },
    "5689": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5690": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "5691": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "5692": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "5693": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "5696": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5697": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5698": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "5700": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "NOT",
      "path": "14"
    },
    "5701": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "5702": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "5703": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "5704": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "5707": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5708": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "5710": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5711": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1667"
    },
    "5714": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1659"
    },
    "5717": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2083"
    },
    "5720": {
      "fn": "ERC20._spendAllowance",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5721": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5722": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1661"
    },
    "5725": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2099"
    },
    "5728": {
      "fn": "ERC20._spendAllowance",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5729": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5730": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5731": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x237A"
    },
    "5734": {
      "fn": "ERC20._spendAllowance",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5735": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5736": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5737": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5738": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5739": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "5740": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "5741": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5742": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5743": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "RETURN",
      "path": "14"
    },
    "5744": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5745": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "5746": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "5747": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x261"
    },
    "5750": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5751": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5752": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "5754": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "NOT",
      "path": "14"
    },
    "5755": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "5756": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "5757": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "5758": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x261"
    },
    "5761": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5762": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "5764": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5765": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "5766": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5767": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5768": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5769": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5770": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5771": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5772": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "RETURN",
      "path": "14"
    },
    "5773": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5774": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "5775": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "5776": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "5777": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "5780": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5781": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5782": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "5784": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "NOT",
      "path": "14"
    },
    "5785": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "5786": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "5787": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "5788": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "5791": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5792": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "5794": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5795": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5797": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5799": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5801": {
      "op": "SHL"
    },
    "5802": {
      "op": "SUB"
    },
    "5803": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x16B2"
    },
    "5806": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2516"
    },
    "5809": {
      "fn": "ERC20._spendAllowance",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5810": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5811": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5812": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5813": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5814": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "5815": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5816": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5817": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "RETURN",
      "path": "14"
    },
    "5818": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5819": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "5820": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "5821": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x261"
    },
    "5824": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5825": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "5827": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "5828": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "5830": {
      "op": "NOT"
    },
    "5831": {
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "5832": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "5833": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x261"
    },
    "5836": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5837": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x16D4"
    },
    "5840": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2083"
    },
    "5843": {
      "fn": "ERC20._spendAllowance",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5844": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5845": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5846": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "5848": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "5849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5853": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5855": {
      "op": "SHL"
    },
    "5856": {
      "op": "SUB"
    },
    "5857": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5858": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "5859": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5860": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "5861": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB46"
    },
    "5864": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5865": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "5867": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "5868": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5869": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5870": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "5871": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "5872": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5873": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5874": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "5875": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "5876": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAB2"
    },
    "5879": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5880": {
      "offset": [
        2032,
        2091
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x16FF"
    },
    "5883": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        2032,
        2091
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2933"
    },
    "5886": {
      "fn": "ERC20._spendAllowance",
      "jump": "i",
      "offset": [
        2032,
        2091
      ],
      "op": "JUMP",
      "path": "9"
    },
    "5887": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        2032,
        2091
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5888": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "5890": {
      "branch": 84,
      "fn": "MasterNode.addValidNode",
      "offset": [
        3155,
        3169
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 43,
      "value": "0x7"
    },
    "5892": {
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5893": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA8"
    },
    "5895": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "SHR",
      "path": "14"
    },
    "5896": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "5897": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "5898": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x177A"
    },
    "5901": {
      "branch": 84,
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5902": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "5903": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5904": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "5906": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5907": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5908": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5909": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "5911": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "SHL",
      "path": "14"
    },
    "5912": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "5913": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "5914": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "5915": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "5916": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "DUP8",
      "path": "14"
    },
    "5917": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5918": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        3205,
        3215
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 44,
      "value": "0xB"
    },
    "5920": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "5922": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5923": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "5924": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "5925": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5926": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xFF00"
    },
    "5929": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH10",
      "path": "14",
      "value": "0xFFFFFFFFFFFFFFFF0000"
    },
    "5940": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "5941": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5942": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "5943": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x10"
    },
    "5945": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "SHL",
      "path": "14"
    },
    "5946": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "5947": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5948": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH10",
      "path": "14",
      "value": "0xFFFFFFFFFFFFFFFFFFFF"
    },
    "5959": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "NOT",
      "path": "14"
    },
    "5960": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "5961": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5962": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "5964": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "SHL",
      "path": "14"
    },
    "5965": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "5966": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "OR",
      "path": "14"
    },
    "5967": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "OR",
      "path": "14"
    },
    "5968": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "OR",
      "path": "14"
    },
    "5969": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5970": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "5971": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        3378,
        3487
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x175A"
    },
    "5974": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        3378,
        3487
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5975": {
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "5976": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5977": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "RETURN",
      "path": "14"
    },
    "5978": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        3378,
        3487
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5983": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5985": {
      "op": "SHL"
    },
    "5986": {
      "op": "SUB"
    },
    "5987": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "5989": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "SHL",
      "path": "14"
    },
    "5990": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5991": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5992": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "5994": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5995": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "5996": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "OR",
      "path": "14"
    },
    "5997": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "5999": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "6000": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        3452,
        3476
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 45,
      "value": "0x9"
    },
    "6002": {
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "6003": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "6004": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "OR",
      "path": "14"
    },
    "6005": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        3452,
        3476
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9"
    },
    "6007": {
      "offset": [
        783,
        16150
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "6008": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6009": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "RETURN",
      "path": "14"
    },
    "6010": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6011": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "6013": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6014": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "6016": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "DUP8",
      "path": "14"
    },
    "6017": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6018": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "6019": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x461BCD"
    },
    "6023": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE5"
    },
    "6025": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "SHL",
      "path": "14"
    },
    "6026": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6027": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6028": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6029": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "6030": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6031": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x15"
    },
    "6033": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "6035": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6036": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "6037": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6038": {
      "op": "PUSH21",
      "value": "0x139BC81B5BDC99481B9BD9195CC8185B1B1BDDD959"
    },
    "6060": {
      "op": "PUSH1",
      "value": "0x5A"
    },
    "6062": {
      "op": "SHL"
    },
    "6063": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "6065": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6066": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "6067": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6068": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "REVERT",
      "path": "14"
    },
    "6069": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6070": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "6071": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6072": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6073": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "6074": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "6077": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6078": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "6080": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "6081": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6082": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "6084": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "NOT",
      "path": "14"
    },
    "6085": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "6086": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "6087": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "6088": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x261"
    },
    "6091": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6092": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x17D3"
    },
    "6095": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2083"
    },
    "6098": {
      "fn": "MasterNode.addValidNode",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6099": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6100": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6102": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6104": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6106": {
      "op": "SHL"
    },
    "6107": {
      "op": "SUB"
    },
    "6108": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6109": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6110": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "6111": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6112": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "6113": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6114": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12244,
        12254
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 46,
      "value": "0xB"
    },
    "6116": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP8",
      "path": "14"
    },
    "6117": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6118": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6119": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "6120": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "6121": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "6122": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "6123": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "6124": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6125": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "6126": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "6128": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "6129": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "6130": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1D80"
    },
    "6133": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6134": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "6136": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12416,
        12436
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x7"
    },
    "6138": {
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "6139": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "6140": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12415,
        12436
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "6141": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12411,
        12601
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1D24"
    },
    "6144": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12411,
        12601
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6145": {
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6146": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "6147": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6148": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "6149": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6150": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12244,
        12254
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "6152": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "6153": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6158": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6160": {
      "op": "SHL"
    },
    "6161": {
      "op": "SUB"
    },
    "6162": {
      "offset": [
        783,
        16150
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "6163": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "6164": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "6165": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP8",
      "path": "14"
    },
    "6166": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "6167": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "6168": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x10"
    },
    "6170": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SHR",
      "path": "14"
    },
    "6171": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "6172": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6173": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "6174": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6175": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "6177": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12766,
        12886
      ],
      "op": "DUP10",
      "path": "14"
    },
    "6178": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12766,
        12886
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6179": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12766,
        12886
      ],
      "op": "ADD",
      "path": "14"
    },
    "6180": {
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6181": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6182": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "6183": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6184": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "6185": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6186": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "6188": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6189": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "6190": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6191": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6192": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "6193": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6194": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12766,
        12886
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6195": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12766,
        12886
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6196": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12766,
        12886
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6197": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12766,
        12886
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x183D"
    },
    "6200": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12766,
        12886
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6201": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12766,
        12886
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2187"
    },
    "6204": {
      "fn": "MasterNode.warpAssets",
      "jump": "i",
      "offset": [
        12766,
        12886
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6205": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12766,
        12886
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6206": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12907,
        12917
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 47,
      "value": "0x9"
    },
    "6208": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6209": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "6210": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP8",
      "path": "14"
    },
    "6211": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "6212": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP11",
      "path": "14"
    },
    "6213": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6214": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12244,
        12254
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "6216": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP12",
      "path": "14"
    },
    "6217": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6218": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP8",
      "path": "14"
    },
    "6219": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP11",
      "path": "14"
    },
    "6220": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "6221": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6222": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "6223": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "6226": {
      "op": "NOT"
    },
    "6227": {
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "6228": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6229": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "6230": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "6231": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "6232": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "6233": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6234": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP11",
      "path": "14"
    },
    "6235": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6236": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP8",
      "path": "14"
    },
    "6237": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP11",
      "path": "14"
    },
    "6238": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "6239": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "6240": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6241": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "6242": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x10"
    },
    "6244": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6245": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6246": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SHR",
      "path": "14"
    },
    "6247": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP11",
      "path": "14"
    },
    "6248": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "6249": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "6250": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12992,
        13016
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x0"
    },
    "6283": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP12",
      "path": "14"
    },
    "6284": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "6285": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12954,
        13016
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6286": {
      "branch": 85,
      "fn": "MasterNode.warpAssets",
      "offset": [
        12954,
        13016
      ],
      "op": "SUB",
      "path": "14"
    },
    "6287": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x194D"
    },
    "6290": {
      "branch": 85,
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6291": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "6292": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "6293": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "6294": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "6295": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "6296": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6297": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12907,
        12917
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9"
    },
    "6299": {
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "6300": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "6301": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        13032,
        13164
      ],
      "op": "DUP1",
      "path": "14",
      "statement": 48
    },
    "6302": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        13032,
        13164
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "6303": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        13032,
        13164
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "6304": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        13032,
        13164
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1949"
    },
    "6307": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        13032,
        13164
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6308": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP8",
      "path": "14"
    },
    "6309": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "6310": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "6311": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6312": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "6314": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "6315": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP9",
      "path": "14"
    },
    "6316": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6317": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "6318": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP8",
      "path": "14"
    },
    "6319": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "6320": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "6321": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "6322": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x4BB297FF"
    },
    "6327": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE1"
    },
    "6329": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SHL",
      "path": "14"
    },
    "6330": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        13032,
        13164
      ],
      "op": "DUP7",
      "path": "14"
    },
    "6331": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        13032,
        13164
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6332": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        13032,
        13164
      ],
      "op": "DUP6",
      "path": "14"
    },
    "6333": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        13032,
        13164
      ],
      "op": "ADD",
      "path": "14"
    },
    "6334": {
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6335": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "6337": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "6338": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "6339": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6340": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        13032,
        13164
      ],
      "op": "GAS",
      "path": "14"
    },
    "6341": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        13032,
        13164
      ],
      "op": "CALL",
      "path": "14"
    },
    "6342": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        13032,
        13164
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6343": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        13032,
        13164
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "6344": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        13032,
        13164
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x193F"
    },
    "6347": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        13032,
        13164
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6348": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        13032,
        13164
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x192B"
    },
    "6351": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        13032,
        13164
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6352": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12950,
        13272
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6353": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12950,
        13272
      ],
      "op": "POP",
      "path": "14"
    },
    "6354": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12950,
        13272
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6355": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12950,
        13272
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "6356": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12244,
        12254
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "6358": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12950,
        13272
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "6359": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12950,
        13272
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6360": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12907,
        12917
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9"
    },
    "6362": {
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "6363": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6367": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6369": {
      "op": "SHL"
    },
    "6370": {
      "op": "SUB"
    },
    "6371": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "6373": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SHL",
      "path": "14"
    },
    "6374": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "6375": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6376": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "6377": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6378": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "6380": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "6381": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "6382": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "OR",
      "path": "14"
    },
    "6383": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "6385": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "6386": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "6387": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12907,
        12917
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9"
    },
    "6389": {
      "offset": [
        783,
        16150
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "6390": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        13369,
        13384
      ],
      "op": "TIMESTAMP",
      "path": "14",
      "statement": 49
    },
    "6391": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        13352,
        13384
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA"
    },
    "6393": {
      "offset": [
        783,
        16150
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "6394": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "6395": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6396": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6397": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6398": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6399": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "6400": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "6401": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x10"
    },
    "6403": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SHR",
      "path": "14"
    },
    "6404": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "6405": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        13400,
        13458
      ],
      "op": "PUSH32",
      "path": "14",
      "statement": 50,
      "value": "0x985439828E84E84B426DC5FAD9DBE12249540A3A89D03B3B635F89B4FE1E1FF2"
    },
    "6438": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        13400,
        13458
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6439": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        13400,
        13458
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6440": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        13400,
        13458
      ],
      "op": "LOG3",
      "path": "14"
    },
    "6441": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6442": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "RETURN",
      "path": "14"
    },
    "6443": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        13032,
        13164
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6444": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        13032,
        13164
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "6445": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        13032,
        13164
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1938"
    },
    "6448": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12244,
        12254
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "6450": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        13032,
        13164
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "6451": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        13032,
        13164
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "6452": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        13032,
        13164
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2159"
    },
    "6455": {
      "fn": "MasterNode.warpAssets",
      "jump": "i",
      "offset": [
        13032,
        13164
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6456": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        13032,
        13164
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6457": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        13032,
        13164
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "6458": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        13032,
        13164
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6459": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        13032,
        13164
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x18D0"
    },
    "6462": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        13032,
        13164
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6463": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        13032,
        13164
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6464": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6465": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6466": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6467": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP8",
      "path": "14"
    },
    "6468": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6469": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "6470": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6471": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6472": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "REVERT",
      "path": "14"
    },
    "6473": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        13032,
        13164
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6474": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP8",
      "path": "14"
    },
    "6475": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6476": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "REVERT",
      "path": "14"
    },
    "6477": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12950,
        13272
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6478": {
      "offset": [
        783,
        16150
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "6479": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP12",
      "path": "14"
    },
    "6480": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "6481": {
      "op": "POP"
    },
    "6482": {
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "6483": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "6484": {
      "op": "POP"
    },
    "6485": {
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "6486": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "6488": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "6489": {
      "offset": [
        2570,
        2606
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "6490": {
      "offset": [
        2566,
        2676
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1D0D"
    },
    "6493": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        2566,
        2676
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6494": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "6495": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12416,
        12436
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x7"
    },
    "6497": {
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "6498": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "6500": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SHR",
      "path": "14"
    },
    "6501": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "6502": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP11",
      "path": "14"
    },
    "6503": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6504": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP12",
      "path": "14"
    },
    "6505": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "6507": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP11",
      "path": "14"
    },
    "6508": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6509": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1975"
    },
    "6512": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6513": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x210D"
    },
    "6516": {
      "fn": "MasterNode.warpAssets",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6517": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6518": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6519": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6520": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6521": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6522": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP11",
      "path": "14"
    },
    "6523": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6524": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "6525": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6526": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6527": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP13",
      "path": "14"
    },
    "6528": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6529": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "6530": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6531": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP14",
      "path": "14"
    },
    "6532": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6533": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6534": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "6535": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6536": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "6537": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6538": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP9",
      "path": "14"
    },
    "6539": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6540": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11034,
        11055
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "6541": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11034,
        11055
      ],
      "op": "DUP8",
      "path": "14"
    },
    "6542": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11034,
        11055
      ],
      "op": "DUP8",
      "path": "14"
    },
    "6543": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11034,
        11055
      ],
      "op": "ADD",
      "path": "14"
    },
    "6544": {
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6545": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11034,
        11055
      ],
      "op": "DUP7",
      "path": "14"
    },
    "6546": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11034,
        11055
      ],
      "op": "DUP7",
      "path": "14"
    },
    "6547": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11034,
        11055
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6548": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11034,
        11055
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x199C"
    },
    "6551": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11034,
        11055
      ],
      "op": "DUP7",
      "path": "14"
    },
    "6552": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11034,
        11055
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x216C"
    },
    "6555": {
      "fn": "MasterNode._buildCCIPMessage",
      "jump": "i",
      "offset": [
        11034,
        11055
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6556": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11034,
        11055
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6557": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP9",
      "path": "14"
    },
    "6558": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6559": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x19A7"
    },
    "6562": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6563": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x213E"
    },
    "6566": {
      "fn": "MasterNode._buildCCIPMessage",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6567": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6568": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP12",
      "path": "14"
    },
    "6569": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6570": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6571": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11279,
        11445
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x19B8"
    },
    "6574": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP11",
      "path": "14"
    },
    "6575": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6576": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x10D2"
    },
    "6579": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6580": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x213E"
    },
    "6583": {
      "fn": "MasterNode._buildCCIPMessage",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6584": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11279,
        11445
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6585": {
      "offset": [
        783,
        16150
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "6586": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP11",
      "path": "14"
    },
    "6587": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6588": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "6589": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x19C5"
    },
    "6592": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP10",
      "path": "14"
    },
    "6593": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x210D"
    },
    "6596": {
      "fn": "MasterNode._buildCCIPMessage",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6597": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6598": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP9",
      "path": "14"
    },
    "6599": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6600": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10984,
        11610
      ],
      "op": "DUP9",
      "path": "14"
    },
    "6601": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10984,
        11610
      ],
      "op": "DUP9",
      "path": "14"
    },
    "6602": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10984,
        11610
      ],
      "op": "ADD",
      "path": "14"
    },
    "6603": {
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6604": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10984,
        11610
      ],
      "op": "DUP10",
      "path": "14"
    },
    "6605": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10984,
        11610
      ],
      "op": "DUP8",
      "path": "14"
    },
    "6606": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10984,
        11610
      ],
      "op": "ADD",
      "path": "14"
    },
    "6607": {
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6608": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10984,
        11610
      ],
      "op": "DUP6",
      "path": "14"
    },
    "6609": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10984,
        11610
      ],
      "op": "ADD",
      "path": "14"
    },
    "6610": {
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6611": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "6613": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10984,
        11610
      ],
      "op": "DUP5",
      "path": "14"
    },
    "6614": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10984,
        11610
      ],
      "op": "ADD",
      "path": "14"
    },
    "6615": {
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6616": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "6617": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6618": {
      "op": "PUSH4",
      "value": "0xB0F479A1"
    },
    "6623": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6625": {
      "op": "SHL"
    },
    "6626": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6627": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6628": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10984,
        11610
      ],
      "op": "DUP5",
      "path": "14"
    },
    "6629": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6630": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9448
      ],
      "op": "DUP5",
      "path": "14"
    },
    "6631": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6632": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9448
      ],
      "op": "ADDRESS",
      "path": "14"
    },
    "6633": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "GAS",
      "path": "14"
    },
    "6634": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "6635": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6636": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6637": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "6638": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1D03"
    },
    "6641": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        9444,
        9460
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6642": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        9444,
        9460
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6643": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        9444,
        9460
      ],
      "op": "DUP7",
      "path": "14"
    },
    "6644": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        9444,
        9460
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "6645": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        9444,
        9460
      ],
      "op": "DUP11",
      "path": "14"
    },
    "6646": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        9444,
        9460
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "6647": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        9444,
        9460
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1CC9"
    },
    "6650": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        9444,
        9460
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6651": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12950,
        13272
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6652": {
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "6653": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "6654": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "6655": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "6656": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6657": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP10",
      "path": "14"
    },
    "6658": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x20487DED"
    },
    "6663": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "6665": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SHL",
      "path": "14"
    },
    "6666": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "DUP12",
      "path": "14"
    },
    "6667": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6668": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "DUP6",
      "path": "14"
    },
    "6669": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "DUP12",
      "path": "14"
    },
    "6670": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6671": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1A1B"
    },
    "6674": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "DUP9",
      "path": "14"
    },
    "6675": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "DUP8",
      "path": "14"
    },
    "6676": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "DUP8",
      "path": "14"
    },
    "6677": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "DUP5",
      "path": "14"
    },
    "6678": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "ADD",
      "path": "14"
    },
    "6679": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2273"
    },
    "6682": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9544,
        9600
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6683": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6684": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "SUB",
      "path": "14"
    },
    "6685": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6686": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "DUP8",
      "path": "14"
    },
    "6687": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "GAS",
      "path": "14"
    },
    "6688": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "6689": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "SWAP11",
      "path": "14"
    },
    "6690": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "DUP12",
      "path": "14"
    },
    "6691": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "6692": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1B79"
    },
    "6695": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6696": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "DUP11",
      "path": "14"
    },
    "6697": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "SWAP12",
      "path": "14"
    },
    "6698": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1C9A"
    },
    "6701": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6702": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12950,
        13272
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6703": {
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "6704": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "6705": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP11",
      "path": "14"
    },
    "6706": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "6707": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "6709": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP14",
      "path": "14"
    },
    "6710": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP12",
      "path": "14"
    },
    "6711": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6712": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "6713": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "6714": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "6715": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "6716": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "6717": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x23B872DD"
    },
    "6722": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "6724": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SHL",
      "path": "14"
    },
    "6725": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "DUP5",
      "path": "14"
    },
    "6726": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6727": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9657,
        9667
      ],
      "op": "CALLER",
      "path": "14"
    },
    "6728": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "DUP10",
      "path": "14"
    },
    "6729": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "DUP6",
      "path": "14"
    },
    "6730": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "ADD",
      "path": "14"
    },
    "6731": {
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6732": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9448
      ],
      "op": "ADDRESS",
      "path": "14"
    },
    "6733": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "6735": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "6736": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "6737": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6738": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "6740": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "6741": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "6742": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6743": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "GAS",
      "path": "14"
    },
    "6744": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "CALL",
      "path": "14"
    },
    "6745": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6746": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6747": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "6748": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1B79"
    },
    "6751": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6752": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "DUP11",
      "path": "14"
    },
    "6753": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "6754": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1C7D"
    },
    "6757": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6758": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12950,
        13272
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6759": {
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "6760": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "6761": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1C3A"
    },
    "6764": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6765": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP9",
      "path": "14"
    },
    "6766": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP10",
      "path": "14"
    },
    "6767": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "6768": {
      "branch": 86,
      "fn": "MasterNode.warpAssets",
      "offset": [
        12416,
        12436
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x7"
    },
    "6770": {
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "6771": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "6773": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SHR",
      "path": "14"
    },
    "6774": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "6775": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6776": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP9",
      "path": "14"
    },
    "6777": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6778": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x70A08231"
    },
    "6783": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "6785": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SHL",
      "path": "14"
    },
    "6786": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6787": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6788": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6789": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6790": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9448
      ],
      "op": "ADDRESS",
      "path": "14"
    },
    "6791": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "DUP6",
      "path": "14"
    },
    "6792": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6793": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "ADD",
      "path": "14"
    },
    "6794": {
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6795": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "DUP9",
      "path": "14"
    },
    "6796": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6797": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "6799": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6800": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "DUP8",
      "path": "14"
    },
    "6801": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "GAS",
      "path": "14"
    },
    "6802": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "6803": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6804": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6805": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "6806": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1C30"
    },
    "6809": {
      "branch": 86,
      "fn": "MasterNode.warpAssets",
      "offset": [
        9763,
        9799
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6810": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        9763,
        9799
      ],
      "op": "DUP14",
      "path": "14"
    },
    "6811": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        9763,
        9799
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "6812": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        9763,
        9799
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1C03"
    },
    "6815": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        9763,
        9799
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6816": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12950,
        13272
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6817": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9756,
        9799
      ],
      "op": "POP",
      "path": "14"
    },
    "6818": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9756,
        9799
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6819": {
      "branch": 87,
      "fn": "MasterNode._sendMessage",
      "offset": [
        9756,
        9799
      ],
      "op": "GT",
      "path": "14"
    },
    "6820": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9880
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1B83"
    },
    "6823": {
      "branch": 87,
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9880
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6824": {
      "op": "POP"
    },
    "6825": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP9",
      "path": "14"
    },
    "6826": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6827": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "6832": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6834": {
      "op": "SHL"
    },
    "6835": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6836": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6839": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6841": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6843": {
      "op": "SHL"
    },
    "6844": {
      "op": "SUB"
    },
    "6845": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "6846": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "6847": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "DUP5",
      "path": "14"
    },
    "6848": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6849": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "ADD",
      "path": "14"
    },
    "6850": {
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6851": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6852": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6853": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "6855": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6856": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "6857": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "6858": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6859": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "6860": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6861": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "6862": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP8",
      "path": "14"
    },
    "6863": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "6864": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6865": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "6866": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6867": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6868": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6869": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP15",
      "path": "14"
    },
    "6870": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6871": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6872": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6873": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "6875": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "6876": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "SUB",
      "path": "14"
    },
    "6877": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "6878": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "GAS",
      "path": "14"
    },
    "6879": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "CALL",
      "path": "14"
    },
    "6880": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6881": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "6882": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1B79"
    },
    "6885": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6886": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "DUP7",
      "path": "14"
    },
    "6887": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "6888": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "6889": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1B10"
    },
    "6892": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "6893": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "6894": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "6895": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "DUP13",
      "path": "14"
    },
    "6896": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "6897": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1B5C"
    },
    "6900": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6901": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12950,
        13272
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6902": {
      "op": "POP"
    },
    "6903": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP10",
      "path": "14"
    },
    "6904": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6905": {
      "op": "PUSH4",
      "value": "0x96F4E9F9"
    },
    "6910": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6912": {
      "op": "SHL"
    },
    "6913": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6914": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6915": {
      "offset": [
        783,
        16150
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "6916": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP8",
      "path": "14"
    },
    "6917": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "6918": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "6919": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "6920": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "6921": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "6922": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "DUP5",
      "path": "14"
    },
    "6923": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "ADD",
      "path": "14"
    },
    "6924": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2273"
    },
    "6927": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        10144,
        10202
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6928": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6929": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "SUB",
      "path": "14"
    },
    "6930": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "6931": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "GAS",
      "path": "14"
    },
    "6932": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "CALL",
      "path": "14"
    },
    "6933": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6934": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "6935": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1B52"
    },
    "6938": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6939": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1B28"
    },
    "6942": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6943": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12950,
        13272
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6944": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12950,
        13272
      ],
      "op": "POP",
      "path": "14"
    },
    "6945": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12244,
        12254
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "6947": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12950,
        13272
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "6948": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12950,
        13272
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x18D7"
    },
    "6951": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12950,
        13272
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6952": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6953": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6954": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6955": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6956": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6957": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6958": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "GT",
      "path": "14"
    },
    "6959": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1B4B"
    },
    "6962": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6963": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6964": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1B3D"
    },
    "6967": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6968": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6969": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x21A2"
    },
    "6972": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        10144,
        10202
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6973": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6974": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6975": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "ADD",
      "path": "14"
    },
    "6976": {
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "6977": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "6978": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x90E"
    },
    "6981": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6982": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "DUP7",
      "path": "14"
    },
    "6983": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1B1F"
    },
    "6986": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6987": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6988": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "POP",
      "path": "14"
    },
    "6989": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6990": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1B33"
    },
    "6993": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6994": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10144,
        10202
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6995": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "6996": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6997": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6998": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP9",
      "path": "14"
    },
    "6999": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7000": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "7001": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "7002": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7003": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "REVERT",
      "path": "14"
    },
    "7004": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7005": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1B72"
    },
    "7008": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7009": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "DUP8",
      "path": "14"
    },
    "7010": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "7011": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "DUP10",
      "path": "14"
    },
    "7012": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "GT",
      "path": "14"
    },
    "7013": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x12A9"
    },
    "7016": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7017": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x129A"
    },
    "7020": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7021": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "DUP4",
      "path": "14"
    },
    "7022": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x21A2"
    },
    "7025": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9998,
        10040
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7026": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7027": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "POP",
      "path": "14"
    },
    "7028": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "DUP14",
      "path": "14"
    },
    "7029": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1AF5"
    },
    "7032": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7033": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9998,
        10040
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7034": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP9",
      "path": "14"
    },
    "7035": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "7036": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "7037": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP13",
      "path": "14"
    },
    "7038": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7039": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "7040": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "7041": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7042": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "REVERT",
      "path": "14"
    },
    "7043": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9880
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7044": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP10",
      "path": "14"
    },
    "7045": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP13",
      "path": "14"
    },
    "7046": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "7047": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "7048": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP10",
      "path": "14"
    },
    "7049": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7050": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "7051": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "7053": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "7054": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "7055": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7056": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "7057": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7058": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "7059": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7060": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7061": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9448
      ],
      "op": "ADDRESS",
      "path": "14"
    },
    "7062": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "DUP11",
      "path": "14"
    },
    "7063": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "DUP4",
      "path": "14"
    },
    "7064": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "ADD",
      "path": "14"
    },
    "7065": {
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7066": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "GAS",
      "path": "14"
    },
    "7067": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "7068": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "7069": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "DUP4",
      "path": "14"
    },
    "7070": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "7071": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1BF9"
    },
    "7074": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7075": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "DUP7",
      "path": "14"
    },
    "7076": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "7077": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1BC5"
    },
    "7080": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7081": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9880
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7082": {
      "op": "POP"
    },
    "7083": {
      "op": "POP"
    },
    "7084": {
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "7085": {
      "op": "PUSH4",
      "value": "0x4787A103"
    },
    "7090": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "7092": {
      "op": "SHL"
    },
    "7093": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9820,
        9880
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7094": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9820,
        9880
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7095": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9820,
        9880
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "7096": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9820,
        9880
      ],
      "op": "DUP4",
      "path": "14"
    },
    "7097": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9820,
        9880
      ],
      "op": "ADD",
      "path": "14"
    },
    "7098": {
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7099": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "7101": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7102": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "7103": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7104": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "7106": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7107": {
      "op": "POP"
    },
    "7108": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9820,
        9880
      ],
      "op": "REVERT",
      "path": "14"
    },
    "7109": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7110": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7111": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7112": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "7113": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "7114": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "POP",
      "path": "14"
    },
    "7115": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7116": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "7117": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "DUP4",
      "path": "14"
    },
    "7118": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "GT",
      "path": "14"
    },
    "7119": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1BF2"
    },
    "7122": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7123": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7124": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1BDD"
    },
    "7127": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7128": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "DUP4",
      "path": "14"
    },
    "7129": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x21A2"
    },
    "7132": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9837,
        9873
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7133": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7134": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7135": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "ADD",
      "path": "14"
    },
    "7136": {
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "7137": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "7138": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x90E"
    },
    "7141": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7142": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "7144": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "7145": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "7146": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "7147": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7148": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "DUP6",
      "path": "14"
    },
    "7149": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7150": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1BA9"
    },
    "7153": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7154": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7155": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "POP",
      "path": "14"
    },
    "7156": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "7157": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1BD3"
    },
    "7160": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7161": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9837,
        9873
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7162": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7163": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "7164": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "7165": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP9",
      "path": "14"
    },
    "7166": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7167": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "7168": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "7169": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7170": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "REVERT",
      "path": "14"
    },
    "7171": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7172": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7173": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "POP",
      "path": "14"
    },
    "7174": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "DUP9",
      "path": "14"
    },
    "7175": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7176": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7177": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "7178": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "DUP4",
      "path": "14"
    },
    "7179": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "GT",
      "path": "14"
    },
    "7180": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1C29"
    },
    "7183": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7184": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7185": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1C1A"
    },
    "7188": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7189": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "DUP4",
      "path": "14"
    },
    "7190": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x21A2"
    },
    "7193": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9763,
        9799
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7194": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7195": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7196": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "ADD",
      "path": "14"
    },
    "7197": {
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "7198": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "7199": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB4B"
    },
    "7202": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7203": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "7204": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "DUP15",
      "path": "14"
    },
    "7205": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1AA0"
    },
    "7208": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7209": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7210": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "POP",
      "path": "14"
    },
    "7211": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "7212": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1C10"
    },
    "7215": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7216": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9763,
        9799
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7217": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP12",
      "path": "14"
    },
    "7218": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "7219": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "7220": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP16",
      "path": "14"
    },
    "7221": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7222": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "7223": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "7224": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7225": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "REVERT",
      "path": "14"
    },
    "7226": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7227": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "7228": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "7229": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7233": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7235": {
      "op": "SHL"
    },
    "7236": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7237": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7238": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7239": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7240": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "7241": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "7242": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7243": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7244": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1A"
    },
    "7246": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "7248": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7249": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "7250": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7251": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x4E6F742070726F7669646564204C696E6B20666F722066656573000000000000"
    },
    "7284": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "7286": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7287": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "7288": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7289": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "7291": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7292": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "REVERT",
      "path": "14"
    },
    "7293": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7294": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1C94"
    },
    "7297": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7298": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "POP",
      "path": "14"
    },
    "7299": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "DUP7",
      "path": "14"
    },
    "7300": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "7301": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "DUP9",
      "path": "14"
    },
    "7302": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "GT",
      "path": "14"
    },
    "7303": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x12A9"
    },
    "7306": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7307": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x129A"
    },
    "7310": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7311": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "DUP4",
      "path": "14"
    },
    "7312": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x21A2"
    },
    "7315": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9632,
        9689
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7316": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7317": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "DUP12",
      "path": "14"
    },
    "7318": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1A66"
    },
    "7321": {
      "branch": 88,
      "fn": "MasterNode._sendMessage",
      "offset": [
        9632,
        9689
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7322": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7323": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7324": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "SWAP11",
      "path": "14"
    },
    "7325": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "POP",
      "path": "14"
    },
    "7326": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "DUP6",
      "path": "14"
    },
    "7327": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7328": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7329": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "7330": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "DUP4",
      "path": "14"
    },
    "7331": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "GT",
      "path": "14"
    },
    "7332": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1CC2"
    },
    "7335": {
      "branch": 88,
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7336": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7337": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1CB2"
    },
    "7340": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7341": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "DUP4",
      "path": "14"
    },
    "7342": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x21A2"
    },
    "7345": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9544,
        9600
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7346": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7347": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7348": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "ADD",
      "path": "14"
    },
    "7349": {
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "7350": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "7351": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAAA"
    },
    "7354": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7355": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "7356": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP10",
      "path": "14"
    },
    "7357": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "7358": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1A2E"
    },
    "7361": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7362": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7363": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "POP",
      "path": "14"
    },
    "7364": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "7365": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1CA8"
    },
    "7368": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9600
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7369": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7370": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7371": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "7372": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "POP",
      "path": "14"
    },
    "7373": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "DUP7",
      "path": "14"
    },
    "7374": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7375": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "7376": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "POP",
      "path": "14"
    },
    "7377": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "7378": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "DUP4",
      "path": "14"
    },
    "7379": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "GT",
      "path": "14"
    },
    "7380": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1CFC"
    },
    "7383": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7384": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7385": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1CE2"
    },
    "7388": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7389": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "DUP4",
      "path": "14"
    },
    "7390": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x21A2"
    },
    "7393": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9444,
        9460
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7394": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7395": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7396": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "ADD",
      "path": "14"
    },
    "7397": {
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "7398": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "7399": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAA6"
    },
    "7402": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7403": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "7404": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "7405": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7406": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "7407": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7408": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "7409": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAA6"
    },
    "7412": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7413": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "DUP6",
      "path": "14"
    },
    "7414": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7415": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "DUP12",
      "path": "14"
    },
    "7416": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x19FB"
    },
    "7419": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7420": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7421": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "POP",
      "path": "14"
    },
    "7422": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "7423": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1CD8"
    },
    "7426": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7427": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9444,
        9460
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7428": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP8",
      "path": "14"
    },
    "7429": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "7430": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "7431": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP12",
      "path": "14"
    },
    "7432": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7433": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "7434": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "7435": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7436": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "REVERT",
      "path": "14"
    },
    "7437": {
      "offset": [
        2566,
        2676
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7438": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "7439": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "7440": {
      "op": "PUSH4",
      "value": "0x6A9FF79F"
    },
    "7445": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "7447": {
      "op": "SHL"
    },
    "7448": {
      "offset": [
        2629,
        2665
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7449": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        2629,
        2665
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7450": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        2629,
        2665
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7451": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        2629,
        2665
      ],
      "op": "DUP5",
      "path": "14"
    },
    "7452": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        2629,
        2665
      ],
      "op": "ADD",
      "path": "14"
    },
    "7453": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "7454": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7455": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7456": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "7458": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7459": {
      "offset": [
        2629,
        2665
      ],
      "op": "REVERT",
      "path": "14"
    },
    "7460": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12411,
        12601
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7461": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12477,
        12531
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 51,
      "value": "0x1D32"
    },
    "7464": {
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7465": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "7466": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12495,
        12505
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9"
    },
    "7468": {
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "7469": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "7470": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12477,
        12531
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x237A"
    },
    "7473": {
      "fn": "MasterNode.warpAssets",
      "jump": "i",
      "offset": [
        12477,
        12531
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7474": {
      "branch": 89,
      "fn": "MasterNode.warpAssets",
      "offset": [
        12477,
        12531
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7475": {
      "offset": [
        783,
        16150
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "7476": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1D3D"
    },
    "7479": {
      "branch": 89,
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7480": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12411,
        12601
      ],
      "op": "DUP7",
      "path": "14"
    },
    "7481": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12411,
        12601
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1801"
    },
    "7484": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12411,
        12601
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7485": {
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7486": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7487": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "7488": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7492": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7494": {
      "op": "SHL"
    },
    "7495": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7496": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7497": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7498": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "7499": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "7500": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP8",
      "path": "14"
    },
    "7501": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7502": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7503": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x19"
    },
    "7505": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "7507": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7508": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "7509": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7510": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x436F6E646974696F6E20746F2077617270206E6F74206D657400000000000000"
    },
    "7543": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "7545": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7546": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "7547": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7548": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "7550": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7551": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "REVERT",
      "path": "14"
    },
    "7552": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7553": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "7554": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "7555": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7559": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7561": {
      "op": "SHL"
    },
    "7562": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7563": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7564": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7565": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "7566": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "7567": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP9",
      "path": "14"
    },
    "7568": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7569": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7570": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1D"
    },
    "7572": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "7574": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7575": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "7576": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7577": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x44657374696E6174696F6E204E6F6465206973206E6F74207661696C64000000"
    },
    "7610": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "7612": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7613": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "7614": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7615": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "7617": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7618": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "REVERT",
      "path": "14"
    },
    "7619": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7620": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "7621": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "7622": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "7623": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "7626": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7627": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7628": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "7630": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "NOT",
      "path": "14"
    },
    "7631": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "7632": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "7633": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "7634": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "7637": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7638": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "7640": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7641": {
      "fn": "ERC20.approve",
      "offset": [
        4593,
        4599
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 52,
      "value": "0x421"
    },
    "7644": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1DE3"
    },
    "7647": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2083"
    },
    "7650": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7651": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7652": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "7654": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "7655": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7656": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "7657": {
      "fn": "ERC20.approve",
      "offset": [
        4593,
        4599
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2780"
    },
    "7660": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4593,
        4599
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7661": {
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7662": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "7663": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7664": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7665": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        16150
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "7666": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "7669": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7670": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1DFE"
    },
    "7673": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "7674": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x20EF"
    },
    "7677": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7678": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7679": {
      "offset": [
        2777,
        2787
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "7680": {
      "fn": "ERC20.approve",
      "offset": [
        2777,
        2787
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7681": {
      "fn": "ERC20.approve",
      "offset": [
        2777,
        2787
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7682": {
      "fn": "ERC20.approve",
      "offset": [
        2777,
        2787
      ],
      "op": "CALLER",
      "path": "14"
    },
    "7683": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "7684": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7685": {
      "offset": [
        2766,
        2776
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "7687": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "7689": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7690": {
      "offset": [
        2745,
        2891
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1E46"
    },
    "7693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7697": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7699": {
      "op": "SHL"
    },
    "7700": {
      "op": "SUB"
    },
    "7701": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7702": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        16150
      ],
      "op": "DUP10",
      "path": "14"
    },
    "7703": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        16150
      ],
      "op": "DUP10",
      "path": "14"
    },
    "7704": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        16150
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "7705": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "7706": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x10"
    },
    "7708": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        16150
      ],
      "op": "SHR",
      "path": "14"
    },
    "7709": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "7710": {
      "offset": [
        2804,
        2828
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7711": {
      "fn": "ERC20.approve",
      "offset": [
        2804,
        2828
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x0"
    },
    "7744": {
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "7745": {
      "offset": [
        2766,
        2828
      ],
      "op": "EQ",
      "path": "14"
    },
    "7746": {
      "offset": [
        2745,
        2891
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2219"
    },
    "7749": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        2745,
        2891
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7750": {
      "fn": "ERC20.approve",
      "offset": [
        2745,
        2891
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7751": {
      "offset": [
        2777,
        2787
      ],
      "op": "CALLER",
      "path": "14"
    },
    "7752": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "7753": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7754": {
      "offset": [
        2766,
        2776
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "7756": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "7758": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7759": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "7761": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        16150
      ],
      "op": "DUP8",
      "path": "14"
    },
    "7762": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        16150
      ],
      "op": "DUP8",
      "path": "14"
    },
    "7763": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        16150
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "7764": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "7765": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "7766": {
      "offset": [
        2570,
        2606
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "7767": {
      "offset": [
        2566,
        2676
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1E82"
    },
    "7770": {
      "offset": [
        2566,
        2676
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7771": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        7303,
        7340
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 53,
      "value": "0x5"
    },
    "7773": {
      "offset": [
        2777,
        2787
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "7774": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        2777,
        2787
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "7775": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        2777,
        2787
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "7776": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        2777,
        2787
      ],
      "op": "CALLER",
      "path": "14"
    },
    "7777": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP9",
      "path": "14"
    },
    "7778": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7779": {
      "offset": [
        2766,
        2776
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "7781": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "7783": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7784": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "DUP8",
      "path": "14"
    },
    "7785": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "7786": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        7090,
        7105
      ],
      "op": "SWAP4",
      "path": "14",
      "statement": 54
    },
    "7787": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        7090,
        7105
      ],
      "op": "TIMESTAMP",
      "path": "14"
    },
    "7788": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        7048,
        7087
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "7790": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        7048,
        7087
      ],
      "op": "DUP7",
      "path": "14"
    },
    "7791": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        7048,
        7087
      ],
      "op": "ADD",
      "path": "14"
    },
    "7792": {
      "offset": [
        783,
        16150
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "7793": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        7115,
        7153
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 55,
      "value": "0x2"
    },
    "7795": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        7115,
        7153
      ],
      "op": "DUP6",
      "path": "14"
    },
    "7796": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        7115,
        7153
      ],
      "op": "ADD",
      "path": "14"
    },
    "7797": {
      "offset": [
        783,
        16150
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "7798": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        7181,
        7219
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 56,
      "value": "0x3"
    },
    "7800": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        7181,
        7219
      ],
      "op": "DUP5",
      "path": "14"
    },
    "7801": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        7181,
        7219
      ],
      "op": "ADD",
      "path": "14"
    },
    "7802": {
      "offset": [
        783,
        16150
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "7803": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        7247,
        7280
      ],
      "op": "DUP3",
      "path": "14",
      "statement": 57
    },
    "7804": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        7247,
        7280
      ],
      "op": "ADD",
      "path": "14"
    },
    "7805": {
      "offset": [
        783,
        16150
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "7806": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        7303,
        7340
      ],
      "op": "ADD",
      "path": "14"
    },
    "7807": {
      "offset": [
        783,
        16150
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "7808": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7809": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "RETURN",
      "path": "14"
    },
    "7810": {
      "offset": [
        2566,
        2676
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7811": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "7812": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "7813": {
      "op": "PUSH4",
      "value": "0x6A9FF79F"
    },
    "7818": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "7820": {
      "op": "SHL"
    },
    "7821": {
      "offset": [
        2629,
        2665
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7822": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        2629,
        2665
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7823": {
      "offset": [
        2777,
        2787
      ],
      "op": "CALLER",
      "path": "14"
    },
    "7824": {
      "offset": [
        2629,
        2665
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7825": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        2629,
        2665
      ],
      "op": "DUP5",
      "path": "14"
    },
    "7826": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        2629,
        2665
      ],
      "op": "ADD",
      "path": "14"
    },
    "7827": {
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7828": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "7830": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7831": {
      "offset": [
        2629,
        2665
      ],
      "op": "REVERT",
      "path": "14"
    },
    "7832": {
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7833": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "7834": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7835": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "7836": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4CE"
    },
    "7839": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7840": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7841": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "7843": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "NOT",
      "path": "14"
    },
    "7844": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "7845": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "7846": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "7847": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4CE"
    },
    "7850": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7851": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7852": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "7853": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7854": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7855": {
      "fn": "ERC20.name",
      "offset": [
        2240,
        2245
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 58,
      "value": "0x5"
    },
    "7857": {
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "7858": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "7859": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "7861": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "7862": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7863": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "SHR",
      "path": "14"
    },
    "7864": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7865": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7866": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "7867": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "7868": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "7869": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "7870": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "7871": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F5B"
    },
    "7874": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7875": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7876": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "7878": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "7879": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "DUP8",
      "path": "14"
    },
    "7880": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "7881": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "LT",
      "path": "14"
    },
    "7882": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7883": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "EQ",
      "path": "14"
    },
    "7884": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x6A4"
    },
    "7887": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7888": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "DUP9",
      "path": "14"
    },
    "7889": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP10",
      "path": "14"
    },
    "7890": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "7891": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "7892": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "DUP9",
      "path": "14"
    },
    "7893": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "7894": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "7895": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "7896": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7897": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP11",
      "path": "14"
    },
    "7898": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7899": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7900": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7901": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "7903": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "EQ",
      "path": "14"
    },
    "7904": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x67D"
    },
    "7907": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7908": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "7909": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "7910": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "7912": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "EQ",
      "path": "14"
    },
    "7913": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1EFF"
    },
    "7916": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7917": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "7918": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "7919": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "7920": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x61D"
    },
    "7923": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "7924": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7925": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x60E"
    },
    "7928": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7929": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "7930": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "7931": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x21A2"
    },
    "7934": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7935": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7936": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7937": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7938": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "7939": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "7940": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "7941": {
      "fn": "ERC20.name",
      "offset": [
        2240,
        2245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "7943": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "7944": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7945": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0"
    },
    "7978": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7979": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7980": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "7981": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "LT",
      "path": "14"
    },
    "7982": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F43"
    },
    "7985": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7986": {
      "op": "POP"
    },
    "7987": {
      "op": "POP"
    },
    "7988": {
      "op": "POP"
    },
    "7989": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7990": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "7991": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "7992": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7993": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x60E"
    },
    "7996": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x61D"
    },
    "7999": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5FB"
    },
    "8002": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8003": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8004": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8005": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "8006": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "8007": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "DUP11",
      "path": "14"
    },
    "8008": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "8009": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "8010": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "8011": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8012": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "DUP9",
      "path": "14"
    },
    "8013": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "8014": {
      "op": "POP"
    },
    "8015": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP8",
      "path": "14"
    },
    "8016": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "8017": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8018": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "8019": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "8020": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "8021": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8022": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "8023": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F2A"
    },
    "8026": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8027": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8028": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "8029": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x7F"
    },
    "8031": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "8032": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "8033": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1EC3"
    },
    "8036": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8037": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8038": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "8039": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "8040": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x261"
    },
    "8043": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8044": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8045": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "8047": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "NOT",
      "path": "14"
    },
    "8048": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "8049": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "8050": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "8051": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x261"
    },
    "8054": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8055": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F7E"
    },
    "8058": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2083"
    },
    "8061": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8062": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8063": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8064": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "8066": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "8067": {
      "offset": [
        2777,
        2787
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "8068": {
      "fn": "ERC20.name",
      "offset": [
        2777,
        2787
      ],
      "op": "CALLER",
      "path": "14"
    },
    "8069": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "8070": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8071": {
      "offset": [
        2766,
        2776
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "8073": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8075": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8076": {
      "offset": [
        2745,
        2891
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FC8"
    },
    "8079": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8083": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8085": {
      "op": "SHL"
    },
    "8086": {
      "op": "SUB"
    },
    "8087": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8088": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8089": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "DUP9",
      "path": "14"
    },
    "8090": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "8091": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "8092": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x10"
    },
    "8094": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "SHR",
      "path": "14"
    },
    "8095": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "8096": {
      "offset": [
        2804,
        2828
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8097": {
      "fn": "ERC20.name",
      "offset": [
        2804,
        2828
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x0"
    },
    "8130": {
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "8131": {
      "offset": [
        2766,
        2828
      ],
      "op": "EQ",
      "path": "14"
    },
    "8132": {
      "offset": [
        2745,
        2891
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2219"
    },
    "8135": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2745,
        2891
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8136": {
      "fn": "ERC20.name",
      "offset": [
        2745,
        2891
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8137": {
      "offset": [
        2777,
        2787
      ],
      "op": "CALLER",
      "path": "14"
    },
    "8138": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "8139": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8140": {
      "offset": [
        2766,
        2776
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "8142": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8144": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8145": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "8147": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8148": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "8149": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "8150": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "8151": {
      "fn": "ERC20.name",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "8152": {
      "offset": [
        2570,
        2606
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "8153": {
      "offset": [
        2566,
        2676
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2018"
    },
    "8156": {
      "offset": [
        2566,
        2676
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8157": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        4414,
        4420
      ],
      "op": "POP",
      "path": "14",
      "statement": 59
    },
    "8158": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        4414,
        4420
      ],
      "op": "POP",
      "path": "14"
    },
    "8159": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        4414,
        4420
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FE8"
    },
    "8162": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        4414,
        4420
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8163": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        4414,
        4420
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8164": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        4414,
        4420
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x26DC"
    },
    "8167": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "jump": "i",
      "offset": [
        4414,
        4420
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8168": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        4414,
        4420
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8173": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8175": {
      "op": "SHL"
    },
    "8176": {
      "op": "SUB"
    },
    "8177": {
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "8178": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        4436,
        4465
      ],
      "op": "PUSH32",
      "path": "14",
      "statement": 60,
      "value": "0xB55160CC367B9CDF2289AF15A6163D786DE0A3D0722F78F652DEC347580C8564"
    },
    "8211": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        4436,
        4465
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8212": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        4436,
        4465
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8213": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        4436,
        4465
      ],
      "op": "LOG3",
      "path": "14"
    },
    "8214": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8215": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "RETURN",
      "path": "14"
    },
    "8216": {
      "offset": [
        2566,
        2676
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8217": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "8219": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "8220": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "8221": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8222": {
      "offset": [
        2629,
        2665
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8223": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        2629,
        2665
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x6A9FF79F"
    },
    "8228": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        2629,
        2665
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE1"
    },
    "8230": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        2629,
        2665
      ],
      "op": "SHL",
      "path": "14"
    },
    "8231": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        2629,
        2665
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8232": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        2629,
        2665
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8233": {
      "offset": [
        2777,
        2787
      ],
      "op": "CALLER",
      "path": "14"
    },
    "8234": {
      "offset": [
        2629,
        2665
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8235": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        2629,
        2665
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8236": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        2629,
        2665
      ],
      "op": "ADD",
      "path": "14"
    },
    "8237": {
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8238": {
      "offset": [
        2629,
        2665
      ],
      "op": "REVERT",
      "path": "14"
    },
    "8239": {
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8240": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "8241": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "8242": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "8243": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "8244": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x261"
    },
    "8247": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8248": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8250": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "8251": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "8253": {
      "op": "NOT"
    },
    "8254": {
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "8255": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "8256": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x261"
    },
    "8259": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8260": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "8261": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xFFFFFFFF"
    },
    "8266": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "8268": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "SHL",
      "path": "14"
    },
    "8269": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8270": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "8271": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8272": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "8273": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "8274": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x261"
    },
    "8277": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8278": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8280": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "8281": {
      "op": "POP"
    },
    "8282": {
      "op": "PUSH4",
      "value": "0x85572FFB"
    },
    "8287": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8289": {
      "op": "SHL"
    },
    "8290": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1565
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 61
    },
    "8291": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1565
      ],
      "op": "EQ",
      "path": "4"
    },
    "8292": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1565
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "8293": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1609
      ],
      "op": "DUP2",
      "path": "4"
    },
    "8294": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1609
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "8295": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1609
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2072"
    },
    "8298": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1609
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "8299": {
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8300": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "8301": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "8302": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "8303": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8304": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8305": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "RETURN",
      "path": "14"
    },
    "8306": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1609
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "8307": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "8312": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8314": {
      "op": "SHL"
    },
    "8315": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1569,
        1609
      ],
      "op": "EQ",
      "path": "4"
    },
    "8316": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1569,
        1609
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "8317": {
      "op": "POP"
    },
    "8318": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1609
      ],
      "op": "CODESIZE",
      "path": "4"
    },
    "8319": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1609
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x206B"
    },
    "8322": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1609
      ],
      "op": "JUMP",
      "path": "4"
    },
    "8323": {
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8324": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "8326": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "8327": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8332": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8334": {
      "op": "SHL"
    },
    "8335": {
      "op": "SUB"
    },
    "8336": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8337": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "8338": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8339": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "8340": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB46"
    },
    "8343": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8344": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8345": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8346": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "8348": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "8349": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8354": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8356": {
      "op": "SHL"
    },
    "8357": {
      "op": "SUB"
    },
    "8358": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8359": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "8360": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8361": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "8362": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB46"
    },
    "8365": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8366": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8367": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8368": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "8369": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8370": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8371": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8372": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "8373": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8374": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8375": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8376": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "8378": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8379": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "8380": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8381": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "LT",
      "path": "14"
    },
    "8382": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x20DB"
    },
    "8385": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8386": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "8387": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "8388": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8389": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "8391": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8393": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8394": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "8395": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "8396": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "8397": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "8398": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "8399": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8400": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "8402": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8403": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "NOT",
      "path": "14"
    },
    "8404": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "8405": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "8406": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "8407": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "8408": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "8409": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8410": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8411": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8412": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8414": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8415": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8416": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "8417": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8418": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "8419": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8420": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "8421": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8422": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "8423": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8424": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "8425": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8426": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "8427": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x20BA"
    },
    "8430": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8431": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8432": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "8434": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8435": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "8437": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "NOT",
      "path": "14"
    },
    "8438": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "8439": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "8440": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB46"
    },
    "8443": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8444": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "8446": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "8447": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8448": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "8450": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "8451": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8452": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "8454": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "8455": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8456": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "8458": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "8459": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8460": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8461": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8462": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "8464": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8465": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "8466": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8467": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8468": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "LT",
      "path": "14"
    },
    "8469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8473": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8475": {
      "op": "SHL"
    },
    "8476": {
      "op": "SUB"
    },
    "8477": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8478": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "GT",
      "path": "14"
    },
    "8479": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "OR",
      "path": "14"
    },
    "8480": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2128"
    },
    "8483": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8484": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8486": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8487": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8488": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8489": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x4E487B71"
    },
    "8494": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "8496": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SHL",
      "path": "14"
    },
    "8497": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "8499": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8500": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x41"
    },
    "8502": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "8504": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8505": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "8507": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "8509": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "REVERT",
      "path": "14"
    },
    "8510": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8511": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8513": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8514": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "8515": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8516": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8517": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "LT",
      "path": "14"
    },
    "8518": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8520": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8522": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8524": {
      "op": "SHL"
    },
    "8525": {
      "op": "SUB"
    },
    "8526": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8527": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "GT",
      "path": "14"
    },
    "8528": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "OR",
      "path": "14"
    },
    "8529": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2128"
    },
    "8532": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8533": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8535": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8536": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8537": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8542": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8544": {
      "op": "SHL"
    },
    "8545": {
      "op": "SUB"
    },
    "8546": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8547": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "GT",
      "path": "14"
    },
    "8548": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2128"
    },
    "8551": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8552": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8554": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8555": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8556": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8557": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8559": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8560": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "8561": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8562": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8563": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "LT",
      "path": "14"
    },
    "8564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8568": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8570": {
      "op": "SHL"
    },
    "8571": {
      "op": "SUB"
    },
    "8572": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8573": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "GT",
      "path": "14"
    },
    "8574": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "OR",
      "path": "14"
    },
    "8575": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2128"
    },
    "8578": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8579": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8581": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8582": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8583": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8584": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "8586": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8587": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "8588": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8589": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8590": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "LT",
      "path": "14"
    },
    "8591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8595": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8597": {
      "op": "SHL"
    },
    "8598": {
      "op": "SUB"
    },
    "8599": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8600": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "GT",
      "path": "14"
    },
    "8601": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "OR",
      "path": "14"
    },
    "8602": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2128"
    },
    "8605": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8606": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8608": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8609": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8610": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8611": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8612": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "8614": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8615": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "NOT",
      "path": "14"
    },
    "8616": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "8617": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "8618": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "8619": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8620": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "8621": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8622": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8623": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "LT",
      "path": "14"
    },
    "8624": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8628": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8630": {
      "op": "SHL"
    },
    "8631": {
      "op": "SUB"
    },
    "8632": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8633": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "GT",
      "path": "14"
    },
    "8634": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "OR",
      "path": "14"
    },
    "8635": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2128"
    },
    "8638": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8639": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8641": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8642": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8643": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8644": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8645": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "8647": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8648": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "8649": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "8650": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "8651": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB46"
    },
    "8654": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8655": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8656": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "8657": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8658": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8660": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8662": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8664": {
      "op": "SHL"
    },
    "8665": {
      "op": "SUB"
    },
    "8666": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8667": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "GT",
      "path": "14"
    },
    "8668": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2128"
    },
    "8671": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8672": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8674": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8675": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "8676": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x21F7"
    },
    "8679": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "8681": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "8682": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "8683": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8685": {
      "op": "NOT"
    },
    "8686": {
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "8687": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8689": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "8690": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "8691": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x21A2"
    },
    "8694": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8695": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8696": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8697": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "8698": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8699": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8701": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8702": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8703": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "8704": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "8705": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "GT",
      "path": "14"
    },
    "8706": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB46"
    },
    "8709": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8710": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8711": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8713": {
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "8714": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8716": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8717": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "8718": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "8719": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8720": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "8721": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "8722": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "CALLDATACOPY",
      "path": "14"
    },
    "8723": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8724": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "8725": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "8726": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8727": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8728": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8729": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8730": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "8731": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2220"
    },
    "8734": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8735": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8736": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8737": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8739": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8740": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8744": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8746": {
      "op": "SHL"
    },
    "8747": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8748": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8749": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8751": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "8753": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8754": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "8755": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8756": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x25"
    },
    "8758": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "8760": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8761": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "8762": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8763": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x52657175697265206D617374657220616E64206E6F646520696E2073616D6520"
    },
    "8796": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "8798": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8799": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "8800": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8801": {
      "op": "PUSH5",
      "value": "0x31B430B4B7"
    },
    "8807": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "8809": {
      "op": "SHL"
    },
    "8810": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "8812": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8813": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "8814": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8815": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x84"
    },
    "8817": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8818": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "REVERT",
      "path": "14"
    },
    "8819": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8820": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8823": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8825": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8827": {
      "op": "SHL"
    },
    "8828": {
      "op": "SUB"
    },
    "8829": {
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8830": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "8831": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "8832": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "8833": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "8834": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8835": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8836": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8838": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8840": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "8841": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8842": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8843": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8844": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "8845": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8846": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x22A2"
    },
    "8849": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "8850": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8851": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "8853": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "8854": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "8855": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "8856": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8857": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "8859": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8860": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "8861": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8862": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x20AF"
    },
    "8865": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8866": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8867": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "8868": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x22BE"
    },
    "8871": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "8872": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP8",
      "path": "14"
    },
    "8873": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "8874": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8875": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "8876": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3F"
    },
    "8878": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "NOT",
      "path": "14"
    },
    "8879": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "8880": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "8881": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "8882": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8883": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "8884": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "8885": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "8887": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "8888": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "8889": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8890": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x20AF"
    },
    "8893": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8894": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8895": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8896": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP8",
      "path": "14"
    },
    "8897": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "8898": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8899": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "8900": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "8901": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "8902": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8903": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "8904": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "8905": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "8907": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "8908": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "8909": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8910": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8911": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8912": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP8",
      "path": "14"
    },
    "8913": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8914": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "8915": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "8916": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8917": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8918": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "8919": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "8920": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "8921": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "8922": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "8924": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8925": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8926": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8927": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8928": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "LT",
      "path": "14"
    },
    "8929": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2316"
    },
    "8932": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8933": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "8934": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "8935": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "8936": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "8937": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "8938": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xC0"
    },
    "8940": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "8942": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2313"
    },
    "8945": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "8946": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "8947": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "8949": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8950": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "8952": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SHL",
      "path": "14"
    },
    "8953": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "8954": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "8956": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8957": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "8958": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8959": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "8960": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "8962": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "8963": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "8964": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8965": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "8966": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8967": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "8968": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8969": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "8970": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "8971": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "8972": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "8973": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "8974": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8975": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x20AF"
    },
    "8978": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "i",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8979": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8980": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8981": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8982": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8983": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "8984": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8985": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8986": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8987": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8991": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8993": {
      "op": "SHL"
    },
    "8994": {
      "op": "SUB"
    },
    "8995": {
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "8996": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP10",
      "path": "14"
    },
    "8997": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8998": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8999": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "9000": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "9001": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP9",
      "path": "14"
    },
    "9002": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "9003": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "9004": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9005": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "9006": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP8",
      "path": "14"
    },
    "9007": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "9008": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "9009": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "9010": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9011": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "9012": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "9013": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "9015": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9016": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "9017": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "9018": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9019": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x22DD"
    },
    "9022": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "9023": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9024": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9025": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9026": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "9028": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "9029": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "9030": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SLT",
      "path": "14"
    },
    "9031": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB46"
    },
    "9034": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "9035": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "9036": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "9037": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "9038": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "9039": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9040": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "9041": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB46"
    },
    "9044": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "9045": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9046": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "9047": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9048": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "9049": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9050": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9051": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "9052": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "9053": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "9054": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "GT",
      "path": "14"
    },
    "9055": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2364"
    },
    "9058": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "9059": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "9060": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9061": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x4E487B71"
    },
    "9066": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "9068": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "SHL",
      "path": "14"
    },
    "9069": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "9071": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9072": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x11"
    },
    "9074": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "9076": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9077": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "9079": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "9081": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        16150
      ],
      "op": "REVERT",
      "path": "14"
    },
    "9082": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14680,
        15784
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9083": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "9085": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "9086": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "9088": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "SHL",
      "path": "14"
    },
    "9089": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "9090": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "9091": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "9092": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "9093": {
      "op": "SWAP2"
    },
    "9094": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9096": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "9097": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9098": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9099": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14873,
        14883
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "9101": {
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9102": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "9104": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "9105": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "9106": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "9107": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9108": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9110": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "9111": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "9112": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "9113": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "9114": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14873,
        14916
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "9115": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14836,
        15091
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x23BA"
    },
    "9118": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14873,
        14916
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "9120": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14873,
        14916
      ],
      "op": "DUP8",
      "path": "14"
    },
    "9121": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14873,
        14916
      ],
      "op": "ADD",
      "path": "14"
    },
    "9122": {
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "9123": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14930,
        14973
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "9125": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14930,
        14973
      ],
      "op": "DUP9",
      "path": "14"
    },
    "9126": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14930,
        14973
      ],
      "op": "ADD",
      "path": "14"
    },
    "9127": {
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "9128": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14987,
        15025
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "9129": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14987,
        15025
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "9131": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14987,
        15025
      ],
      "op": "SWAP9",
      "path": "14"
    },
    "9132": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15039,
        15081
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x5"
    },
    "9134": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14987,
        15025
      ],
      "op": "DUP11",
      "path": "14"
    },
    "9135": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14987,
        15025
      ],
      "op": "DUP4",
      "path": "14"
    },
    "9136": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14987,
        15025
      ],
      "op": "ADD",
      "path": "14"
    },
    "9137": {
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "9138": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15039,
        15081
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "9139": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15039,
        15081
      ],
      "op": "ADD",
      "path": "14"
    },
    "9140": {
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "9141": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14836,
        15091
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "9142": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14836,
        15091
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x28DB"
    },
    "9145": {
      "fn": "MasterNode.checkApprovedWarp",
      "jump": "i",
      "offset": [
        14836,
        15091
      ],
      "op": "JUMP",
      "path": "14"
    },
    "9146": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14836,
        15091
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9147": {
      "offset": [
        783,
        16150
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "9148": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15135
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 62,
      "value": "0xA"
    },
    "9150": {
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "9151": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15139,
        15148
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x15180"
    },
    "9155": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9156": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "9157": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "9158": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "9159": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "GT",
      "path": "14"
    },
    "9160": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2492"
    },
    "9163": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "9164": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15152,
        15167
      ],
      "op": "TIMESTAMP",
      "path": "14"
    },
    "9165": {
      "op": "GT"
    },
    "9166": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15227
      ],
      "op": "SWAP9",
      "path": "14"
    },
    "9167": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15227
      ],
      "op": "DUP10",
      "path": "14"
    },
    "9168": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15227
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x24F8"
    },
    "9171": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15227
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "9172": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14680,
        15784
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9173": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15287
      ],
      "op": "DUP10",
      "path": "14"
    },
    "9174": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15287
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x24E0"
    },
    "9177": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15287
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "9178": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14680,
        15784
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9179": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15351
      ],
      "op": "DUP10",
      "path": "14"
    },
    "9180": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15351
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x24CA"
    },
    "9183": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15351
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "9184": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14680,
        15784
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9185": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15432
      ],
      "op": "DUP10",
      "path": "14"
    },
    "9186": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15432
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x24A5"
    },
    "9189": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15432
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "9190": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14680,
        15784
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9191": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15529
      ],
      "op": "DUP10",
      "path": "14"
    },
    "9192": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15529
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x246F"
    },
    "9195": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15529
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "9196": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14680,
        15784
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9197": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15592
      ],
      "op": "DUP10",
      "path": "14"
    },
    "9198": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15592
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2456"
    },
    "9201": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15592
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "9202": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14680,
        15784
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9203": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15657
      ],
      "op": "DUP10",
      "path": "14"
    },
    "9204": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15657
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x243E"
    },
    "9207": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15657
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "9208": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14680,
        15784
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9209": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15711
      ],
      "op": "POP",
      "path": "14"
    },
    "9210": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15711
      ],
      "op": "DUP9",
      "path": "14"
    },
    "9211": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15711
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2427"
    },
    "9214": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15711
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "9215": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14680,
        15784
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9216": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15777
      ],
      "op": "DUP9",
      "path": "14"
    },
    "9217": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15777
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2410"
    },
    "9220": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15777
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "9221": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14680,
        15784
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9222": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15102,
        15777
      ],
      "op": "POP",
      "path": "14"
    },
    "9223": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15102,
        15777
      ],
      "op": "POP",
      "path": "14"
    },
    "9224": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15102,
        15777
      ],
      "op": "POP",
      "path": "14"
    },
    "9225": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15102,
        15777
      ],
      "op": "POP",
      "path": "14"
    },
    "9226": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15102,
        15777
      ],
      "op": "POP",
      "path": "14"
    },
    "9227": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15102,
        15777
      ],
      "op": "POP",
      "path": "14"
    },
    "9228": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15102,
        15777
      ],
      "op": "POP",
      "path": "14"
    },
    "9229": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15102,
        15777
      ],
      "op": "POP",
      "path": "14"
    },
    "9230": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14680,
        15784
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9231": {
      "fn": "MasterNode.checkApprovedWarp",
      "jump": "o",
      "offset": [
        14680,
        15784
      ],
      "op": "JUMP",
      "path": "14"
    },
    "9232": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15777
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9233": {
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "9234": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "9235": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9236": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9237": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "9238": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15727,
        15761
      ],
      "op": "ADD",
      "path": "14"
    },
    "9239": {
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "9240": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15727,
        15777
      ],
      "op": "LT",
      "path": "14"
    },
    "9241": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15727,
        15777
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9242": {
      "op": "POP"
    },
    "9243": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15777
      ],
      "op": "CODESIZE",
      "path": "14"
    },
    "9244": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15777
      ],
      "op": "DUP1",
      "path": "14"
    },
    "9245": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15777
      ],
      "op": "DUP1",
      "path": "14"
    },
    "9246": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15777
      ],
      "op": "DUP1",
      "path": "14"
    },
    "9247": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15777
      ],
      "op": "DUP1",
      "path": "14"
    },
    "9248": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15777
      ],
      "op": "DUP1",
      "path": "14"
    },
    "9249": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15777
      ],
      "op": "DUP1",
      "path": "14"
    },
    "9250": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15777
      ],
      "op": "DUP1",
      "path": "14"
    },
    "9251": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15777
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2405"
    },
    "9254": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15777
      ],
      "op": "JUMP",
      "path": "14"
    },
    "9255": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15711
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9256": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9257": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9258": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "9259": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "9260": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9261": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "9262": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "9263": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9264": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "9265": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "9266": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "9267": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15673,
        15707
      ],
      "op": "DUP8",
      "path": "14"
    },
    "9268": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15673,
        15707
      ],
      "op": "ADD",
      "path": "14"
    },
    "9269": {
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "9270": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15673,
        15711
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "9271": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15673,
        15711
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "9272": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15673,
        15711
      ],
      "op": "SWAP9",
      "path": "14"
    },
    "9273": {
      "op": "POP"
    },
    "9274": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15711
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x23FF"
    },
    "9277": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15711
      ],
      "op": "JUMP",
      "path": "14"
    },
    "9278": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15657
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9279": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "9280": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9281": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "9282": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "9283": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9284": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "9285": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "9286": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "9287": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "9288": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "9290": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "SHR",
      "path": "14"
    },
    "9291": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "9293": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "9294": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "9295": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP9",
      "path": "14"
    },
    "9296": {
      "op": "POP"
    },
    "9297": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15657
      ],
      "op": "CODESIZE",
      "path": "14"
    },
    "9298": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15657
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x23F8"
    },
    "9301": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15657
      ],
      "op": "JUMP",
      "path": "14"
    },
    "9302": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15592
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9303": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "9304": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "9305": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9306": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "9307": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "9308": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9309": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "9310": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "9311": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "9312": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "9313": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "9315": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "9316": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "9317": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "9318": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "9320": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15545,
        15592
      ],
      "op": "EQ",
      "path": "14"
    },
    "9321": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15545,
        15592
      ],
      "op": "SWAP10",
      "path": "14"
    },
    "9322": {
      "op": "POP"
    },
    "9323": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15592
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x23F2"
    },
    "9326": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15592
      ],
      "op": "JUMP",
      "path": "14"
    },
    "9327": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15529
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9328": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "9329": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP10",
      "path": "14"
    },
    "9330": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "9331": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "9332": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9333": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "9334": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "9335": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9336": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "9338": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "9339": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "9340": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "9341": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15448,
        15492
      ],
      "op": "ADD",
      "path": "14"
    },
    "9342": {
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "9343": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15495,
        15499
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE10"
    },
    "9346": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9347": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "9348": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "9349": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "9350": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "GT",
      "path": "14"
    },
    "9351": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2492"
    },
    "9354": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "9355": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15152,
        15167
      ],
      "op": "TIMESTAMP",
      "path": "14"
    },
    "9356": {
      "op": "LT"
    },
    "9357": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15529
      ],
      "op": "SWAP9",
      "path": "14"
    },
    "9358": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15529
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x23EC"
    },
    "9361": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15529
      ],
      "op": "JUMP",
      "path": "14"
    },
    "9362": {
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9363": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9368": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9370": {
      "op": "SHL"
    },
    "9371": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "9372": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9373": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x11"
    },
    "9375": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP9",
      "path": "14"
    },
    "9376": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9377": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "9379": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "9380": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "REVERT",
      "path": "14"
    },
    "9381": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15432
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9382": {
      "offset": [
        783,
        16150
      ],
      "op": "SWAP9",
      "path": "14"
    },
    "9383": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "9384": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9385": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9386": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "9387": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "9388": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9389": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "9390": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "9391": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9392": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "9394": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "9395": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "9396": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "9397": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15367,
        15407
      ],
      "op": "ADD",
      "path": "14"
    },
    "9398": {
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "9399": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15410,
        15414
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE10"
    },
    "9402": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9403": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "9404": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "9405": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "9406": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "GT",
      "path": "14"
    },
    "9407": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2492"
    },
    "9410": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "9411": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15152,
        15167
      ],
      "op": "TIMESTAMP",
      "path": "14"
    },
    "9412": {
      "op": "LT"
    },
    "9413": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15432
      ],
      "op": "SWAP9",
      "path": "14"
    },
    "9414": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15432
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x23E6"
    },
    "9417": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15432
      ],
      "op": "JUMP",
      "path": "14"
    },
    "9418": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15351
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9419": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "9420": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "9421": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9422": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "9423": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "9424": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9425": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "9426": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "9427": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "9428": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "9430": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15303,
        15347
      ],
      "op": "ADD",
      "path": "14"
    },
    "9431": {
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "9432": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15303,
        15351
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "9433": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15303,
        15351
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "9434": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15303,
        15351
      ],
      "op": "SWAP10",
      "path": "14"
    },
    "9435": {
      "op": "POP"
    },
    "9436": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15351
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x23E0"
    },
    "9439": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15351
      ],
      "op": "JUMP",
      "path": "14"
    },
    "9440": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15287
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9441": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9442": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "9443": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "9444": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "9445": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9446": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "9447": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "9448": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9449": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "9450": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "9451": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "9452": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "9454": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15243,
        15283
      ],
      "op": "ADD",
      "path": "14"
    },
    "9455": {
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "9456": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15243,
        15287
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "9457": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15243,
        15287
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "9458": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15243,
        15287
      ],
      "op": "SWAP10",
      "path": "14"
    },
    "9459": {
      "op": "POP"
    },
    "9460": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15287
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x23DA"
    },
    "9463": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15287
      ],
      "op": "JUMP",
      "path": "14"
    },
    "9464": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15227
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9465": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9466": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "9467": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "9468": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "9469": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9470": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "9471": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "9472": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9473": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "9474": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "9475": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "9476": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "9477": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "9479": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "SHR",
      "path": "14"
    },
    "9480": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "9482": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "9483": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "9484": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "9485": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "9487": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15183,
        15227
      ],
      "op": "EQ",
      "path": "14"
    },
    "9488": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15183,
        15227
      ],
      "op": "SWAP10",
      "path": "14"
    },
    "9489": {
      "op": "POP"
    },
    "9490": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15227
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x23D4"
    },
    "9493": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15121,
        15227
      ],
      "op": "JUMP",
      "path": "14"
    },
    "9494": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        15913,
        16148
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9495": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        15994,
        16004
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9"
    },
    "9497": {
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "9498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9500": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9502": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9504": {
      "op": "SHL"
    },
    "9505": {
      "op": "SUB"
    },
    "9506": {
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9507": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9508": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "9509": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9510": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        15994,
        16018
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9511": {
      "branch": 90,
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        15994,
        16018
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "9512": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        15990,
        16090
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2549"
    },
    "9515": {
      "branch": 90,
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        15990,
        16090
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "9516": {
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "9517": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9519": {
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9520": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        16107,
        16117
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 63,
      "value": "0xB"
    },
    "9522": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "9524": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9529": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9531": {
      "op": "SHL"
    },
    "9532": {
      "op": "SUB"
    },
    "9533": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9535": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9537": {
      "offset": [
        783,
        16150
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "9538": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "9539": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x10"
    },
    "9541": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        16150
      ],
      "op": "SHR",
      "path": "14"
    },
    "9542": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "9543": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        15913,
        16148
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9544": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "jump": "o",
      "offset": [
        15913,
        16148
      ],
      "op": "JUMP",
      "path": "14"
    },
    "9545": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        15990,
        16090
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9546": {
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9547": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        16150
      ],
      "op": "POP",
      "path": "14"
    },
    "9548": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        16052,
        16066
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 64,
      "value": "0x8"
    },
    "9550": {
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "9551": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "9552": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9554": {
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9555": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        16041,
        16051
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "9557": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "9559": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9560": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9564": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9566": {
      "op": "SHL"
    },
    "9567": {
      "op": "SUB"
    },
    "9568": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9570": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9572": {
      "offset": [
        783,
        16150
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "9573": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "9574": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x10"
    },
    "9576": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        16150
      ],
      "op": "SHR",
      "path": "14"
    },
    "9577": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "9578": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        16034,
        16079
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9579": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "jump": "o",
      "offset": [
        16034,
        16079
      ],
      "op": "JUMP",
      "path": "14"
    },
    "9580": {
      "fn": "ERC20._transfer",
      "offset": [
        7473,
        8291
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9585": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9587": {
      "op": "SHL"
    },
    "9588": {
      "op": "SUB"
    },
    "9589": {
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9590": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9591": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "9592": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "9593": {
      "fn": "ERC20._transfer",
      "offset": [
        7599,
        7617
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 65
    },
    "9594": {
      "fn": "ERC20._transfer",
      "offset": [
        7599,
        7617
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9595": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2689"
    },
    "9598": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "9599": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "9600": {
      "fn": "ERC20._transfer",
      "offset": [
        7677,
        7693
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 66
    },
    "9601": {
      "fn": "ERC20._transfer",
      "offset": [
        7677,
        7693
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9602": {
      "fn": "ERC20._transfer",
      "offset": [
        7677,
        7693
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9603": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2638"
    },
    "9606": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "9607": {
      "fn": "ERC20._transfer",
      "offset": [
        7615,
        7616
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9609": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9610": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9611": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9612": {
      "fn": "ERC20._transfer",
      "offset": [
        7815,
        7824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "9614": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "9616": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9617": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9619": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9620": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "9621": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "9622": {
      "fn": "ERC20._transfer",
      "offset": [
        7848,
        7869
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 67
    },
    "9623": {
      "fn": "ERC20._transfer",
      "offset": [
        7848,
        7869
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9624": {
      "fn": "ERC20._transfer",
      "offset": [
        7848,
        7869
      ],
      "op": "DUP4",
      "path": "0"
    },
    "9625": {
      "fn": "ERC20._transfer",
      "offset": [
        7848,
        7869
      ],
      "op": "LT",
      "path": "0"
    },
    "9626": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x25E4"
    },
    "9629": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "9630": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9632": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9633": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9634": {
      "fn": "ERC20._transfer",
      "offset": [
        8210,
        8236
      ],
      "op": "PUSH32",
      "path": "0",
      "statement": 68,
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "9667": {
      "offset": [
        783,
        16150
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "9668": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "DUP8",
      "path": "14"
    },
    "9669": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "9671": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "9672": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9673": {
      "fn": "ERC20._transfer",
      "offset": [
        7815,
        7824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "9675": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "9676": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9677": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "9678": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9679": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9680": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "9681": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "9682": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "DUP7",
      "path": "14"
    },
    "9683": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9684": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9685": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "9686": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9687": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9688": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "9689": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "9690": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9691": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "9692": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9694": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "9695": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9696": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9697": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9698": {
      "fn": "ERC20._transfer",
      "offset": [
        8210,
        8236
      ],
      "op": "LOG3",
      "path": "0"
    },
    "9699": {
      "fn": "ERC20._transfer",
      "jump": "o",
      "offset": [
        7473,
        8291
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9700": {
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9701": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9703": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "9704": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9708": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9710": {
      "op": "SHL"
    },
    "9711": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9712": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9713": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "9715": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "9717": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9718": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "9719": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9720": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x26"
    },
    "9722": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "9724": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9725": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "9726": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9727": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "9760": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "9762": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9763": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "9764": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9765": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "9772": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "9774": {
      "op": "SHL"
    },
    "9775": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "9777": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9778": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "9779": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9780": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x84"
    },
    "9782": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9783": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "REVERT",
      "path": "14"
    },
    "9784": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9785": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9787": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "9788": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9792": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9794": {
      "op": "SHL"
    },
    "9795": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9796": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9797": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "9799": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "9801": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9802": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "9803": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9804": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x23"
    },
    "9806": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "9808": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9809": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "9810": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9811": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "9844": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "9846": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9847": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "9848": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9849": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "9853": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "9855": {
      "op": "SHL"
    },
    "9856": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "9858": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9859": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "9860": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9861": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x84"
    },
    "9863": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9864": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "REVERT",
      "path": "14"
    },
    "9865": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9866": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9868": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "9869": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9873": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9875": {
      "op": "SHL"
    },
    "9876": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9877": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9878": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "9880": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "9882": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9883": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "9884": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9885": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x25"
    },
    "9887": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "9889": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9890": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "9891": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9892": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "9925": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "9927": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9928": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "9929": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9930": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "9936": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "9938": {
      "op": "SHL"
    },
    "9939": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "9941": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9942": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "9943": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9944": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x84"
    },
    "9946": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9947": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        16150
      ],
      "op": "REVERT",
      "path": "14"
    },
    "9948": {
      "fn": "ERC20._mint",
      "offset": [
        8567,
        9102
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9953": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9955": {
      "op": "SHL"
    },
    "9956": {
      "op": "SUB"
    },
    "9957": {
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "9958": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9959": {
      "fn": "ERC20._mint",
      "offset": [
        8650,
        8671
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 69
    },
    "9960": {
      "fn": "ERC20._mint",
      "offset": [
        8650,
        8671
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9961": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x273B"
    },
    "9964": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "9965": {
      "fn": "ERC20._mint",
      "offset": [
        8999,
        9036
      ],
      "op": "PUSH32",
      "path": "0",
      "statement": 70,
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "9998": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "10000": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "10001": {
      "fn": "ERC20._mint",
      "offset": [
        8778,
        8800
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 71,
      "value": "0x271E"
    },
    "10004": {
      "fn": "ERC20._mint",
      "offset": [
        8669,
        8670
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10006": {
      "offset": [
        783,
        16150
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "10007": {
      "fn": "ERC20._mint",
      "offset": [
        8778,
        8800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "10009": {
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "10010": {
      "fn": "ERC20._mint",
      "offset": [
        8778,
        8800
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2357"
    },
    "10013": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8778,
        8800
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10014": {
      "fn": "ERC20._mint",
      "offset": [
        8778,
        8800
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10015": {
      "fn": "ERC20._mint",
      "offset": [
        8778,
        8800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "10017": {
      "offset": [
        783,
        16150
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "10018": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "10019": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "10020": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "10021": {
      "fn": "ERC20._mint",
      "offset": [
        8946,
        8955
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 72,
      "value": "0x2"
    },
    "10023": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "10024": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "10025": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "10027": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        16150
      ],
      "op": "DUP5",
      "path": "14"
    },
    "10028": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        16150
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "10029": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "10030": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "10031": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "10032": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "10033": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "10034": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        16150
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "10035": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "10037": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "10038": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "10039": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "10040": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "10041": {
      "fn": "ERC20._mint",
      "offset": [
        8999,
        9036
      ],
      "op": "LOG3",
      "path": "0"
    },
    "10042": {
      "fn": "ERC20._mint",
      "jump": "o",
      "offset": [
        8567,
        9102
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10043": {
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "10044": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "10046": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "10047": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10051": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10053": {
      "op": "SHL"
    },
    "10054": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "10055": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "10056": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "10058": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "10060": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "10061": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "10062": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "10063": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "10065": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "10067": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "10068": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "10069": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "10070": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "10103": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "10105": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "10106": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "10107": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "10108": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "10110": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "10111": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        16150
      ],
      "op": "REVERT",
      "path": "14"
    },
    "10112": {
      "fn": "ERC20._approve",
      "offset": [
        10504,
        10874
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10113": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10115": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10117": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10119": {
      "op": "SHL"
    },
    "10120": {
      "op": "SUB"
    },
    "10121": {
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "10122": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "10123": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "10124": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "10125": {
      "fn": "ERC20._approve",
      "offset": [
        10635,
        10654
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 73
    },
    "10126": {
      "fn": "ERC20._approve",
      "offset": [
        10635,
        10654
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10127": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2831"
    },
    "10130": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "10131": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "10132": {
      "fn": "ERC20._approve",
      "offset": [
        10713,
        10734
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 74
    },
    "10133": {
      "fn": "ERC20._approve",
      "offset": [
        10713,
        10734
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10134": {
      "fn": "ERC20._approve",
      "offset": [
        10713,
        10734
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10135": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x27E1"
    },
    "10138": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "10139": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "10141": {
      "fn": "ERC20._approve",
      "offset": [
        10835,
        10867
      ],
      "op": "PUSH32",
      "path": "0",
      "statement": 75,
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "10174": {
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "10175": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "10176": {
      "fn": "ERC20._approve",
      "offset": [
        10652,
        10653
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10178": {
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "10179": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10795
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 76,
      "value": "0x3"
    },
    "10181": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "10182": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "10183": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "10185": {
      "fn": "ERC20._approve",
      "offset": [
        10652,
        10653
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10187": {
      "offset": [
        783,
        16150
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "10188": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "10189": {
      "fn": "ERC20._approve",
      "offset": [
        10652,
        10653
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10191": {
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "10192": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "10193": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "10194": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "10195": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "10197": {
      "fn": "ERC20._approve",
      "offset": [
        10652,
        10653
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10199": {
      "offset": [
        783,
        16150
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "10200": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "10201": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "10203": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "10204": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "10205": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "10206": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "10207": {
      "fn": "ERC20._approve",
      "offset": [
        10835,
        10867
      ],
      "op": "LOG3",
      "path": "0"
    },
    "10208": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        10504,
        10874
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10209": {
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "10210": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "10212": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "10213": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10217": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10219": {
      "op": "SHL"
    },
    "10220": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "10221": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "10222": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "10224": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "10226": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "10227": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "10228": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "10229": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x22"
    },
    "10231": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "10233": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "10234": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "10235": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "10236": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "10269": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "10271": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "10272": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "10273": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "10274": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "10277": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "10279": {
      "op": "SHL"
    },
    "10280": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "10282": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "10283": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "10284": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "10285": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x84"
    },
    "10287": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "10288": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "REVERT",
      "path": "14"
    },
    "10289": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "10290": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "10292": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "10293": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10297": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10299": {
      "op": "SHL"
    },
    "10300": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "10301": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "10302": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "10304": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "10306": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "10307": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "10308": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "10309": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "10311": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "10312": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "10313": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "10314": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "10315": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "10348": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "10350": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "10351": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "10352": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "10353": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "10358": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10360": {
      "op": "SHL"
    },
    "10361": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "10363": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "10364": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "10365": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "10366": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x84"
    },
    "10368": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "10369": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "REVERT",
      "path": "14"
    },
    "10370": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "10371": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "10372": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "10373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10377": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10379": {
      "op": "SHL"
    },
    "10380": {
      "op": "SUB"
    },
    "10381": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "10382": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "10383": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "10384": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "10385": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB46"
    },
    "10388": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "10389": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "10390": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "10391": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "10392": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "10393": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "10395": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "10396": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "10397": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "10398": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "SUB",
      "path": "14"
    },
    "10399": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB46"
    },
    "10402": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "10403": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        783,
        16150
      ],
      "op": "JUMP",
      "path": "14"
    },
    "10404": {
      "fn": "Client._argsToBytes",
      "offset": [
        1285,
        1455
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10405": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "10407": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "10408": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "10409": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x97A657C9"
    },
    "10414": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "10416": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        16150
      ],
      "op": "SHL",
      "path": "14"
    },
    "10417": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 77,
      "value": "0x20"
    },
    "10419": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "DUP4",
      "path": "7"
    },
    "10420": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "ADD",
      "path": "7"
    },
    "10421": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10422": {
      "offset": [
        1218,
        1228
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "10423": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x24"
    },
    "10425": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "DUP3",
      "path": "7"
    },
    "10426": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "ADD",
      "path": "7"
    },
    "10427": {
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "10428": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x24"
    },
    "10430": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10431": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10432": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "10434": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "10435": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "10436": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "10437": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "10438": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        16150
      ],
      "op": "LT",
      "path": "14"
    },
    "10439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10443": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10445": {
      "op": "SHL"
    },
    "10446": {
      "op": "SUB"
    },
    "10447": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "10448": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        16150
      ],
      "op": "GT",
      "path": "14"
    },
    "10449": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        16150
      ],
      "op": "OR",
      "path": "14"
    },
    "10450": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2128"
    },
    "10453": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "10454": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "10456": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "10457": {
      "fn": "Client._argsToBytes",
      "offset": [
        1285,
        1455
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10458": {
      "fn": "Client._argsToBytes",
      "jump": "o",
      "offset": [
        1285,
        1455
      ],
      "op": "JUMP",
      "path": "7"
    },
    "10459": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        1748,
        2384
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10460": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        1748,
        2384
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "10461": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        2050,
        2078
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x28E6"
    },
    "10464": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        1748,
        2384
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "10465": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        1748,
        2384
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "10466": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        2050,
        2078
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2357"
    },
    "10469": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "jump": "i",
      "offset": [
        2050,
        2078
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10470": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        2050,
        2078
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10471": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        2186,
        2190
      ],
      "op": "PUSH8",
      "path": "15",
      "value": "0xDE0B6B3A7640000"
    },
    "10480": {
      "offset": [
        783,
        16150
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "10481": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "10482": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "10483": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        16150
      ],
      "op": "MUL",
      "path": "14"
    },
    "10484": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "10485": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        16150
      ],
      "op": "DUP1",
      "path": "14"
    },
    "10486": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "10487": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        16150
      ],
      "op": "DIV",
      "path": "14"
    },
    "10488": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        16150
      ],
      "op": "DUP6",
      "path": "14"
    },
    "10489": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        16150
      ],
      "op": "EQ",
      "path": "14"
    },
    "10490": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "10491": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        16150
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "10492": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        16150
      ],
      "op": "OR",
      "path": "14"
    },
    "10493": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        16150
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "10494": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2364"
    },
    "10497": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "10498": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "10499": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        16150
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "10500": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x291D"
    },
    "10503": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "10504": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        16150
      ],
      "op": "DIV",
      "path": "14"
    },
    "10505": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "10506": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "10507": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "10508": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        16150
      ],
      "op": "MUL",
      "path": "14"
    },
    "10509": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "10510": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "10511": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        16150
      ],
      "op": "DUP4",
      "path": "14"
    },
    "10512": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        16150
      ],
      "op": "DIV",
      "path": "14"
    },
    "10513": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        16150
      ],
      "op": "EQ",
      "path": "14"
    },
    "10514": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "10515": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        16150
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "10516": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        16150
      ],
      "op": "OR",
      "path": "14"
    },
    "10517": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        16150
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "10518": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2364"
    },
    "10521": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "10522": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        16150
      ],
      "op": "DIV",
      "path": "14"
    },
    "10523": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        1748,
        2384
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10524": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "jump": "o",
      "offset": [
        1748,
        2384
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10525": {
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "10526": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x4E487B71"
    },
    "10531": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "10533": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        16150
      ],
      "op": "SHL",
      "path": "14"
    },
    "10534": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10536": {
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "10537": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x12"
    },
    "10539": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "10541": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "10542": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "10544": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10546": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        16150
      ],
      "op": "REVERT",
      "path": "14"
    },
    "10547": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        1797,
        1955
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "10548": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        1916,
        1923
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 78,
      "value": "0x0"
    },
    "10550": {
      "offset": [
        783,
        16150
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "10551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10555": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10557": {
      "op": "SHL"
    },
    "10558": {
      "op": "SUB"
    },
    "10559": {
      "offset": [
        783,
        16150
      ],
      "op": "AND",
      "path": "14"
    },
    "10560": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        1902,
        1912
      ],
      "op": "CALLER",
      "path": "9"
    },
    "10561": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        1902,
        1923
      ],
      "op": "SUB",
      "path": "9"
    },
    "10562": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2947"
    },
    "10565": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "10566": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "jump": "o",
      "offset": [
        1797,
        1955
      ],
      "op": "JUMP",
      "path": "9"
    },
    "10567": {
      "offset": [
        783,
        16150
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "10568": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "10570": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "10571": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10575": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10577": {
      "op": "SHL"
    },
    "10578": {
      "offset": [
        783,
        16150
      ],
      "op": "DUP2",
      "path": "14"
    },
    "10579": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "10580": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "10582": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "10584": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "10585": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "10586": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "10587": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x16"
    },
    "10589": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "10591": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "10592": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "10593": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "10594": {
      "op": "PUSH22",
      "value": "0x27B7363C9031B0B63630B1363290313C9037BBB732B9"
    },
    "10617": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "10619": {
      "op": "SHL"
    },
    "10620": {
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "10622": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "DUP3",
      "path": "14"
    },
    "10623": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "ADD",
      "path": "14"
    },
    "10624": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "10625": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "10627": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "10628": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        16150
      ],
      "op": "REVERT",
      "path": "14"
    }
  },
  "sha1": "106d0322c22c577f5a59dc458136046be705a4cd",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.19;\n\nimport {IRouterClient} from \"@chainlink/contracts/src/v0.8/ccip/interfaces/IRouterClient.sol\";\nimport {OwnerIsCreator} from \"@chainlink/contracts/src/v0.8/shared/access/OwnerIsCreator.sol\";\nimport {Client} from \"@chainlink/contracts/src/v0.8/ccip/libraries/Client.sol\";\nimport {CCIPReceiver} from \"@chainlink/contracts/src/v0.8/ccip/applications/CCIPReceiver.sol\";\n\nimport {LinkTokenInterface} from \"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol\";\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"./utils_node/UtilsMasterNode.sol\";\n\n// Node interface\nimport \"../interfaces/INode.sol\";\n\n/// @title - A simple messenger contract for transferring/receiving tokens and data across chains.\ncontract MasterNode is CCIPReceiver, OwnerIsCreator, ERC20, UtilsMasterNode {\n    // Custom errors to provide more descriptive revert messages.\n    error NotEnoughBalance(uint256 currentBalance, uint256 calculatedFees); // Used to make sure contract has enough balance to cover the fees.\n    error DestinationNodeNotValid(address nodeAddress); // Used when the destination address has not been allowlisted by the contract owner.\n\n    event WarpAssets(\n        uint64 indexed detinationCCIPid,\n        address indexed destinationNodeAddress\n    );\n\n    event WithdrawAssets(\n        uint64 indexed detinationCCIPid,\n        address indexed userAddress,\n        uint256 indexed amount\n    );\n    event ResumeOperations(uint8 indexed commandResumeOperations);\n    event MintAwrp(address indexed userAddress, uint256 indexed amount);\n\n    bool public isProtocolInTestMode = true;\n\n    LinkTokenInterface private s_linkToken;\n    uint64 public immutable MASTER_CONTRACT_CHAIN_ID;\n    bool public allowMoreNodes = true;\n    address public lastActiveNode;\n    address public activeNode;\n    uint256 public lastTimeWarped;\n\n    struct ValidNodes {\n        bool isValidNode;\n        bool isActiveNode;\n        uint64 chainCCIPid;\n        uint256 lastDataFromAave;\n        uint256 totalUsdcSupply;\n        uint256 totalUsdcBorrow;\n        uint256 supplyRate;\n        uint256 totalAusdcNode;\n    }\n\n    mapping(address => ValidNodes) public validNodes;\n\n    constructor(\n        address _router,\n        address _link,\n        uint64 _MASTER_CONTRACT_CHAIN_ID\n    ) CCIPReceiver(_router) ERC20(\"WarpYield\", \"aWRP\") {\n        s_linkToken = LinkTokenInterface(_link);\n        MASTER_CONTRACT_CHAIN_ID = _MASTER_CONTRACT_CHAIN_ID;\n    }\n\n    modifier onlyValidNodes(address nodeAddress) {\n        if (!validNodes[nodeAddress].isValidNode) {\n            revert DestinationNodeNotValid(nodeAddress);\n        }\n        _;\n    }\n\n    modifier masterAndNodeInSameChain() {\n        require(\n            validNodes[msg.sender].chainCCIPid == MASTER_CONTRACT_CHAIN_ID,\n            \"Require master and node in same chain\"\n        );\n        _;\n    }\n\n    function stopAddingNodes() external onlyOwner {\n        allowMoreNodes = false;\n    }\n\n    function addValidNode(\n        address nodeAddress,\n        uint64 chainCCIPid,\n        bool isActiveNode\n    ) external onlyOwner {\n        require(allowMoreNodes, \"No more nodes allowed\");\n        validNodes[nodeAddress].isValidNode = true;\n        validNodes[nodeAddress].isActiveNode = isActiveNode;\n        validNodes[nodeAddress].chainCCIPid = chainCCIPid;\n\n        if (isActiveNode) {\n            lastActiveNode = nodeAddress;\n            activeNode = nodeAddress;\n        }\n    }\n\n    /////////////////////////////////////////////////////////////////////////\n    ////////////////////  INCOMING DEPOSIT => MINT aWRP  ///////////////////\n    ////////////////////////  COMMAND == 0  ///////////////////////////////\n    //////////////////////////////////////////////////////////////////////\n\n    function _aWarpTokenMinter(\n        Client.Any2EVMMessage memory _any2EvmMessage\n    ) internal {\n        (, address userAddress, uint256 shares) = abi.decode(\n            _any2EvmMessage.data,\n            (uint8, address, uint256)\n        );\n\n        _mint(userAddress, shares);\n\n        emit MintAwrp(userAddress, shares);\n    }\n\n    ///////////////////  DEPOSIT, MASTER AND NODE IN SAME CHAIN  /////////////////\n\n    function aWarpTokenMinterFromSameChain(\n        address userAddress,\n        uint256 shares\n    ) external masterAndNodeInSameChain onlyValidNodes(msg.sender) {\n        _mint(userAddress, shares);\n        emit MintAwrp(userAddress, shares);\n    }\n\n    /////////////////////////////////////////////////////////////////////////\n    //////////////////////  RESUME PROTOCOL OPERATIONS  ////////////////////\n    ////////////////////////  COMMAND == 1  ///////////////////////////////\n    //////////////////////////////////////////////////////////////////////\n\n    function _resmumeOperations(\n        Client.Any2EVMMessage memory _any2EvmMessage\n    ) internal {\n        validNodes[abi.decode(_any2EvmMessage.sender, (address))]\n            .isActiveNode = true;\n\n        activeNode = abi.decode(_any2EvmMessage.sender, (address));\n\n        emit ResumeOperations(uint8(1));\n    }\n\n    ///////////  RESUME OPERATIONS, MASTER AND NODE IN SAME CHAIN  //////////\n\n    function _resmumeOperationsFromSameChain()\n        external\n        masterAndNodeInSameChain\n        onlyValidNodes(msg.sender)\n    {\n        validNodes[msg.sender].isActiveNode = true;\n        activeNode = msg.sender;\n        emit ResumeOperations(uint8(1));\n    }\n\n    /////////////////////////////////////////////////////////////////////////\n    /////////////////////////  DATA AAVE FROM NODE  ////////////////////////\n    ////////////////////////  COMMAND == 2  ///////////////////////////////\n    //////////////////////////////////////////////////////////////////////\n\n    function _nodeAaveFeed(\n        Client.Any2EVMMessage memory _any2EvmMessage\n    ) internal {\n        (\n            ,\n            uint256 totalUsdcSupply,\n            uint256 totalUsdcBorrow,\n            uint256 supplyRate,\n            uint256 totalAusdcNode\n        ) = abi.decode(\n                _any2EvmMessage.data,\n                (uint8, uint256, uint256, uint256, uint256)\n            );\n\n        validNodes[abi.decode(_any2EvmMessage.sender, (address))]\n            .lastDataFromAave = block.timestamp;\n        validNodes[abi.decode(_any2EvmMessage.sender, (address))]\n            .totalUsdcSupply = totalUsdcSupply;\n        validNodes[abi.decode(_any2EvmMessage.sender, (address))]\n            .totalUsdcBorrow = totalUsdcBorrow;\n        validNodes[abi.decode(_any2EvmMessage.sender, (address))]\n            .supplyRate = supplyRate;\n        validNodes[abi.decode(_any2EvmMessage.sender, (address))]\n            .totalAusdcNode = totalAusdcNode;\n    }\n\n    ////////////////  DATA AAVE, MASTER AND NODE IN SAME CHAIN  //////////////\n\n    function nodeAaveFeedFromSameChain(\n        uint256 totalUsdcSupply,\n        uint256 totalUsdcBorrow,\n        uint256 supplyRate,\n        uint256 totalAusdcNode\n    ) external masterAndNodeInSameChain onlyValidNodes(msg.sender) {\n        validNodes[msg.sender].lastDataFromAave = block.timestamp;\n        validNodes[msg.sender].totalUsdcSupply = totalUsdcSupply;\n        validNodes[msg.sender].totalUsdcBorrow = totalUsdcBorrow;\n        validNodes[msg.sender].supplyRate = supplyRate;\n        validNodes[msg.sender].totalAusdcNode = totalAusdcNode;\n    }\n\n    //////////////////////////////////////////////////////////////////////////\n    /////////////////////////////////////////////////////////////////////////\n    ////////////////////////  INCOMING MESAGE HANDLER  /////////////////////\n    /////////////////  THIS FUNC IS CALLED BY CHAINLINK  //////////////////\n    //////////////////////////////////////////////////////////////////////\n    /////////////////////////////////////////////////////////////////////\n\n    function _ccipReceive(\n        Client.Any2EVMMessage memory _any2EvmMessage\n    )\n        internal\n        override\n        onlyValidNodes(abi.decode(_any2EvmMessage.sender, (address)))\n    {\n        uint8 command = _internalCommandRouter(_any2EvmMessage);\n        if (command == 0) {\n            _aWarpTokenMinter(_any2EvmMessage);\n        } else if (command == 1) {\n            _resmumeOperations(_any2EvmMessage);\n        } else if (command == 2) {\n            _nodeAaveFeed(_any2EvmMessage);\n        } else {\n            revert(\"invalid command from Node\");\n        }\n    }\n\n    /////////////////////////////////////////////////////////////////////////\n    ////////////////////////////////////////////////////////////////////////\n    ///////////////////////  OUTGOING MESAGES HANDLER  ////////////////////\n    //////////////////////////////////////////////////////////////////////\n    /////////////////////////////////////////////////////////////////////\n\n    function _sendMessage(\n        uint64 _destinationChainSelector,\n        address _receiver,\n        bytes memory _data\n    ) internal onlyValidNodes(_receiver) returns (bytes32 messageId) {\n        // Create an EVM2AnyMessage struct in memory with necessary information for sending a cross-chain message\n        // address(linkToken) means fees are paid in LINK\n        Client.EVM2AnyMessage memory evm2AnyMessage = _buildCCIPMessage(\n            _receiver,\n            _data,\n            address(s_linkToken)\n        );\n\n        // Initialize a router client instance to interact with cross-chain router\n        IRouterClient router = IRouterClient(this.getRouter());\n\n        // Get the fee required to send the CCIP message\n        uint256 fees = router.getFee(_destinationChainSelector, evm2AnyMessage);\n\n        require(\n            s_linkToken.transferFrom(msg.sender, address(this), fees),\n            \"Not provided Link for fees\"\n        );\n\n        if (fees > s_linkToken.balanceOf(address(this)))\n            revert NotEnoughBalance(s_linkToken.balanceOf(address(this)), fees);\n\n        // approve the Router to transfer LINK tokens on contract's behalf. It will spend the fees in LINK\n        s_linkToken.approve(address(router), fees);\n\n        // Send the message through the router and store the returned message ID\n        messageId = router.ccipSend(_destinationChainSelector, evm2AnyMessage);\n\n        // Return the message ID\n        return messageId;\n    }\n\n    /// @notice Construct a CCIP message.\n    /// @dev This function will create an EVM2AnyMessage struct with all the necessary information for programmable tokens transfer.\n    /// @param _receiver The address of the receiver.\n    /// @param _data The bytes data to be sent.\n    /// @param _feeTokenAddress The address of the token used for fees. Set address(0) for native gas.\n    /// @return Client.EVM2AnyMessage Returns an EVM2AnyMessage struct which contains information for sending a CCIP message.\n    function _buildCCIPMessage(\n        address _receiver,\n        bytes memory _data,\n        address _feeTokenAddress\n    ) private pure returns (Client.EVM2AnyMessage memory) {\n        return\n            Client.EVM2AnyMessage({\n                receiver: abi.encode(_receiver), // ABI-encoded receiver address\n                data: _data, // ABI-encoded string\n                tokenAmounts: new Client.EVMTokenAmount[](0), // The amount and type of token being transferred\n                extraArgs: Client._argsToBytes(\n                    // Additional arguments, setting gas limit\n                    Client.EVMExtraArgsV1({gasLimit: 2_000_000})\n                ),\n                // Set the feeToken to a feeTokenAddress, indicating specific asset will be used for fees\n                feeToken: _feeTokenAddress\n            });\n    }\n\n    /// @notice Fallback function to allow the contract to receive Ether.\n    /// @dev This function has no function body, making it a default function for receiving Ether.\n    /// It is automatically called when Ether is sent to the contract without any data.\n    receive() external payable {}\n\n    /////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////  WARP ASSETS  //////////////////////////\n    ///////////////////////////////////////////////////////////////////////\n\n    function warpAssets(address _destinationNodeAddress) external {\n        require(\n            validNodes[_destinationNodeAddress].isValidNode,\n            \"Destination Node is not vaild\"\n        );\n        // in test mode no requirements to warp assets\n        if (!isProtocolInTestMode) {\n            require(\n                checkApprovedWarp(activeNode, _destinationNodeAddress),\n                \"Condition to warp not met\"\n            );\n        }\n        uint64 _destinationCCIPid = validNodes[_destinationNodeAddress]\n            .chainCCIPid;\n        uint8 commandWarpAssets = 1;\n\n        bytes memory data = abi.encode(\n            commandWarpAssets,\n            _destinationCCIPid,\n            _destinationNodeAddress\n        );\n        validNodes[activeNode].isActiveNode = false;\n\n        if (validNodes[activeNode].chainCCIPid == MASTER_CONTRACT_CHAIN_ID) {\n            INode(activeNode).warpAssetsFromSameChain(\n                _destinationCCIPid,\n                _destinationNodeAddress\n            );\n        } else {\n            _sendMessage(validNodes[activeNode].chainCCIPid, activeNode, data);\n        }\n\n        lastActiveNode = activeNode;\n        activeNode = address(0);\n        lastTimeWarped = block.timestamp;\n\n        emit WarpAssets(validNodes[activeNode].chainCCIPid, activeNode);\n    }\n\n    /////////////////////////////////////////////////////////////////////////\n    /////////////////////////////  WITHDRAW  ///////////////////////////////\n    ///////////////////////////////////////////////////////////////////////\n\n    function withdraw(uint256 shares) external {\n        require(validNodes[activeNode].isActiveNode, \"Node is not Active\");\n\n        require(shares <= balanceOf(msg.sender), \"Not enought balance\");\n\n        uint8 commandWitdraw = 0;\n\n        bytes memory data = abi.encode(commandWitdraw, msg.sender, shares);\n\n        _burn(msg.sender, shares);\n\n        if (validNodes[activeNode].chainCCIPid == MASTER_CONTRACT_CHAIN_ID) {\n            INode(activeNode).withdrawFromSameChain(msg.sender, shares);\n        } else {\n            _sendMessage(validNodes[activeNode].chainCCIPid, activeNode, data);\n        }\n\n        emit WithdrawAssets(\n            validNodes[activeNode].chainCCIPid,\n            msg.sender,\n            shares\n        );\n    }\n\n    /////////////////////////////////////////////////////////////////////////\n    /////////////////////////////   UTILS   ////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////\n\n    function checkApprovedWarp(\n        address _activeNode,\n        address destinationNode\n    ) public view returns (bool) {\n        uint256 newSupplyRate = calculateNewSupplyRates(\n            validNodes[destinationNode].totalUsdcSupply,\n            validNodes[destinationNode].totalUsdcBorrow,\n            validNodes[destinationNode].supplyRate,\n            validNodes[destinationNode].totalAusdcNode\n        );\n\n        return\n            lastTimeWarped + (3600 * 24) < block.timestamp &&\n            validNodes[_activeNode].isActiveNode == true &&\n            validNodes[_activeNode].lastDataFromAave > 0 &&\n            validNodes[destinationNode].lastDataFromAave > 0 &&\n            validNodes[_activeNode].lastDataFromAave + 3600 > block.timestamp &&\n            validNodes[destinationNode].lastDataFromAave + 3600 >\n            block.timestamp &&\n            validNodes[destinationNode].isValidNode == true &&\n            validNodes[destinationNode].isActiveNode == false &&\n            validNodes[_activeNode].supplyRate > 0 &&\n            validNodes[_activeNode].supplyRate < newSupplyRate;\n    }\n\n    // get ChainId from active node or last active node in case vault is warping, only for frontend, no impact in contract\n    function getChainIdFromActiveNode() external view returns (uint64) {\n        if (activeNode == address(0)) {\n            return validNodes[lastActiveNode].chainCCIPid;\n        }\n\n        return validNodes[activeNode].chainCCIPid;\n    }\n}\n",
  "sourceMap": "783:15367:14:-:0;;;;;;;;;;;;;-1:-1:-1;;783:15367:14;;;;-1:-1:-1;;;;;783:15367:14;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;783:15367:14;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;783:15367:14;;;;;;:::i;:::-;;;;-1:-1:-1;;;783:15367:14;;;;;-1:-1:-1;;;;;783:15367:14;;542:20:4;538:58;;602:21;;291:10:10;594:22:9;783:15367:14;;-1:-1:-1;783:15367:14;;-1:-1:-1;;;;;;783:15367:14;291:10:10;783:15367:14;;;;;-1:-1:-1;;;;;783:15367:14;;;;2042:13:0;783:15367:14;;;;;;;;;;;-1:-1:-1;783:15367:14;;;;;;;;;;;-1:-1:-1;783:15367:14;;;;;;;;;;;;;;;;-1:-1:-1;783:15367:14;;;;;;;;;;;;;;;;;;;2042:13:0;783:15367:14;;;;;-1:-1:-1;;;;;783:15367:14;;;;2065:17:0;783:15367:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;783:15367:14;;;;;;;;;;;;;;;;;;;2065:17:0;783:15367:14;;1653:4;783:15367;;-1:-1:-1;;;;;;783:15367:14;;;;;;-1:-1:-1;;;;;783:15367:14;;;;;;;;;;;;2446:52;783:15367;;;;;;;;602:21:4;783:15367:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;783:15367:14;;;;;2065:17:0;-1:-1:-1;783:15367:14;;;-1:-1:-1;;;;;;;;;;;783:15367:14;;;-1:-1:-1;;783:15367:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2065:17:0;783:15367:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2065:17:0;-1:-1:-1;783:15367:14;-1:-1:-1;;;;;;;;;;;783:15367:14;;;2042:13:0;783:15367:14;;;;;;;;;;;;2042:13:0;783:15367:14;;;;;;;;;;;;;-1:-1:-1;783:15367:14;;;;;;;;;-1:-1:-1;783:15367:14;;;;;;;;-1:-1:-1;783:15367:14;;;;;-1:-1:-1;783:15367:14;;;;;;;;;;;;-1:-1:-1;783:15367:14;;;;;-1:-1:-1;783:15367:14;;;;;-1:-1:-1;783:15367:14;;;;;;;;;;2042:13:0;-1:-1:-1;783:15367:14;;-1:-1:-1;783:15367:14;;-1:-1:-1;783:15367:14;;;;;;;;;;;;;;;;;;;;;;;2042:13:0;783:15367:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2042:13:0;-1:-1:-1;783:15367:14;;-1:-1:-1;783:15367:14;;;;2042:13:0;783:15367:14;;;;;;;;;;;;2042:13:0;783:15367:14;;;;;;;;;;;;;-1:-1:-1;783:15367:14;;;;;;;;;-1:-1:-1;783:15367:14;;;;;;;;;;;;;;-1:-1:-1;;;783:15367:14;;;;;;;;;;;;;;;;;;;;538:58:4;783:15367:14;;-1:-1:-1;;;571:25:4;;-1:-1:-1;783:15367:14;571:25:4;;783:15367:14;;;571:25:4;783:15367:14;-1:-1:-1;783:15367:14;;;;;;;;;;-1:-1:-1;;;;;783:15367:14;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;783:15367:14;;;;;;:::o",
  "sourcePath": "contracts/MasterNode.sol",
  "type": "contract"
}