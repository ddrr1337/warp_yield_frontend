{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_router",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_link",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "_MASTER_CONTRACT_CHAIN_ID",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nodeAddress",
          "type": "address"
        }
      ],
      "name": "DestinationNodeNotValid",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "FailedToWithdrawEth",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidReceiverAddress",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "router",
          "type": "address"
        }
      ],
      "name": "InvalidRouter",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "currentBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "calculatedFees",
          "type": "uint256"
        }
      ],
      "name": "NotEnoughBalance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NothingToWithdraw",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "SenderNotAllowed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "sourceChainSelector",
          "type": "uint64"
        }
      ],
      "name": "SourceChainNotAllowed",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferRequested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MASTER_CONTRACT_CHAIN_ID",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_resmumeOperationsFromSameChain",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "aWarpTokenMinterFromSameChain",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "activeNode",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nodeAddress",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "chainCCIPid",
          "type": "uint64"
        },
        {
          "internalType": "bool",
          "name": "isActiveNode",
          "type": "bool"
        }
      ],
      "name": "addValidNode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allowMoreNodes",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "messageId",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "sourceChainSelector",
              "type": "uint64"
            },
            {
              "internalType": "bytes",
              "name": "sender",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Client.EVMTokenAmount[]",
              "name": "destTokenAmounts",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Client.Any2EVMMessage",
          "name": "message",
          "type": "tuple"
        }
      ],
      "name": "ccipReceive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_activeNode",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "destinationNode",
          "type": "address"
        }
      ],
      "name": "checkApprovedWarp",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getChainIdFromActiveNode",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "destinationCCIPid",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "s_linkTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "routerAddress",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "getLinkFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRouter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastActiveNode",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "totalUsdcSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalUsdcBorrow",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "supplyRate",
          "type": "uint256"
        }
      ],
      "name": "nodeAaveFeedFromSameChain",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stopAddingNodes",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "validNodes",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isValidNode",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isActiveNode",
          "type": "bool"
        },
        {
          "internalType": "uint64",
          "name": "chainCCIPid",
          "type": "uint64"
        },
        {
          "internalType": "uint256",
          "name": "lastDataFromAave",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalUsdcSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalUsdcBorrow",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "supplyRate",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "_destinationCCIPid",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "_destinationNodeAddress",
          "type": "address"
        }
      ],
      "name": "warpAssets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/incae/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.3/contracts/token/ERC20/ERC20.sol",
    "1": "C:/Users/incae/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.3/contracts/token/ERC20/IERC20.sol",
    "10": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/shared/access/OwnerIsCreator.sol",
    "11": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/shared/interfaces/IOwnable.sol",
    "12": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol",
    "13": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/vendor/openzeppelin-solidity/v4.8.3/contracts/utils/introspection/IERC165.sol",
    "14": "contracts/MasterNode.sol",
    "15": "contracts/utils_node/UtilsMasterNode.sol",
    "16": "interfaces/INode.sol",
    "2": "C:/Users/incae/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.3/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "3": "C:/Users/incae/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.3/contracts/utils/Context.sol",
    "4": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/ccip/applications/CCIPReceiver.sol",
    "5": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol",
    "6": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/ccip/interfaces/IRouterClient.sol",
    "7": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/ccip/libraries/Client.sol",
    "8": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/shared/access/ConfirmedOwner.sol",
    "9": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol"
  },
  "ast": {
    "absolutePath": "contracts/MasterNode.sol",
    "exportedSymbols": {
      "CCIPReceiver": [
        1601
      ],
      "Client": [
        1708
      ],
      "Context": [
        2051
      ],
      "ERC20": [
        1481
      ],
      "IERC20": [
        2004
      ],
      "IERC20Metadata": [
        2029
      ],
      "INode": [
        1926
      ],
      "IRouterClient": [
        1653
      ],
      "LinkTokenInterface": [
        1819
      ],
      "MasterNode": [
        894
      ],
      "OwnerIsCreator": [
        1724
      ],
      "UtilsMasterNode": [
        1909
      ]
    },
    "id": 895,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:14"
      },
      {
        "absolutePath": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/ccip/interfaces/IRouterClient.sol",
        "file": "@chainlink/contracts/src/v0.8/ccip/interfaces/IRouterClient.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 895,
        "sourceUnit": 1654,
        "src": "57:94:14",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2,
              "name": "IRouterClient",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1653,
              "src": "65:13:14",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/shared/access/OwnerIsCreator.sol",
        "file": "@chainlink/contracts/src/v0.8/shared/access/OwnerIsCreator.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 895,
        "sourceUnit": 1725,
        "src": "152:94:14",
        "symbolAliases": [
          {
            "foreign": {
              "id": 4,
              "name": "OwnerIsCreator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1724,
              "src": "160:14:14",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/ccip/libraries/Client.sol",
        "file": "@chainlink/contracts/src/v0.8/ccip/libraries/Client.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 895,
        "sourceUnit": 1709,
        "src": "247:79:14",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6,
              "name": "Client",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1708,
              "src": "255:6:14",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/ccip/applications/CCIPReceiver.sol",
        "file": "@chainlink/contracts/src/v0.8/ccip/applications/CCIPReceiver.sol",
        "id": 9,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 895,
        "sourceUnit": 1602,
        "src": "327:94:14",
        "symbolAliases": [
          {
            "foreign": {
              "id": 8,
              "name": "CCIPReceiver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1601,
              "src": "335:12:14",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol",
        "file": "@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol",
        "id": 11,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 895,
        "sourceUnit": 1820,
        "src": "423:106:14",
        "symbolAliases": [
          {
            "foreign": {
              "id": 10,
              "name": "LinkTokenInterface",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1819,
              "src": "431:18:14",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/incae/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.3/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 12,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 895,
        "sourceUnit": 1482,
        "src": "531:55:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/utils_node/UtilsMasterNode.sol",
        "file": "./utils_node/UtilsMasterNode.sol",
        "id": 13,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 895,
        "sourceUnit": 1910,
        "src": "587:42:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/INode.sol",
        "file": "../interfaces/INode.sol",
        "id": 14,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 895,
        "sourceUnit": 1927,
        "src": "649:33:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 16,
              "name": "CCIPReceiver",
              "nameLocations": [
                "806:12:14"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1601,
              "src": "806:12:14"
            },
            "id": 17,
            "nodeType": "InheritanceSpecifier",
            "src": "806:12:14"
          },
          {
            "baseName": {
              "id": 18,
              "name": "OwnerIsCreator",
              "nameLocations": [
                "820:14:14"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1724,
              "src": "820:14:14"
            },
            "id": 19,
            "nodeType": "InheritanceSpecifier",
            "src": "820:14:14"
          },
          {
            "baseName": {
              "id": 20,
              "name": "ERC20",
              "nameLocations": [
                "836:5:14"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1481,
              "src": "836:5:14"
            },
            "id": 21,
            "nodeType": "InheritanceSpecifier",
            "src": "836:5:14"
          },
          {
            "baseName": {
              "id": 22,
              "name": "UtilsMasterNode",
              "nameLocations": [
                "843:15:14"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1909,
              "src": "843:15:14"
            },
            "id": 23,
            "nodeType": "InheritanceSpecifier",
            "src": "843:15:14"
          }
        ],
        "canonicalName": "MasterNode",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 15,
          "nodeType": "StructuredDocumentation",
          "src": "684:99:14",
          "text": "@title - A simple messenger contract for transferring/receiving tokens and data across chains."
        },
        "fullyImplemented": true,
        "id": 894,
        "linearizedBaseContracts": [
          894,
          1909,
          1481,
          2029,
          2004,
          2051,
          1724,
          2097,
          2260,
          2276,
          1601,
          2076,
          2064
        ],
        "name": "MasterNode",
        "nameLocation": "792:10:14",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "errorSelector": "8f0f4206",
            "id": 29,
            "name": "NotEnoughBalance",
            "nameLocation": "937:16:14",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25,
                  "mutability": "mutable",
                  "name": "currentBalance",
                  "nameLocation": "962:14:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "954:22:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "954:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27,
                  "mutability": "mutable",
                  "name": "calculatedFees",
                  "nameLocation": "986:14:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "978:22:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "978:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "953:48:14"
            },
            "src": "931:71:14"
          },
          {
            "errorSelector": "d0d04f60",
            "id": 31,
            "name": "NothingToWithdraw",
            "nameLocation": "1081:17:14",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1098:2:14"
            },
            "src": "1075:26:14"
          },
          {
            "errorSelector": "9d11f563",
            "id": 39,
            "name": "FailedToWithdrawEth",
            "nameLocation": "1183:19:14",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1211:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "1203:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1203:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "1226:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "1218:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1218:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1242:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "1234:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1234:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1202:46:14"
            },
            "src": "1177:72:14"
          },
          {
            "errorSelector": "d53fef3e",
            "id": 43,
            "name": "DestinationNodeNotValid",
            "nameLocation": "1304:23:14",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41,
                  "mutability": "mutable",
                  "name": "nodeAddress",
                  "nameLocation": "1336:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "1328:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1328:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1327:21:14"
            },
            "src": "1298:51:14"
          },
          {
            "errorSelector": "213c2678",
            "id": 47,
            "name": "SourceChainNotAllowed",
            "nameLocation": "1445:21:14",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45,
                  "mutability": "mutable",
                  "name": "sourceChainSelector",
                  "nameLocation": "1474:19:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "1467:26:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1467:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1466:28:14"
            },
            "src": "1439:56:14"
          },
          {
            "errorSelector": "d0d25976",
            "id": 51,
            "name": "SenderNotAllowed",
            "nameLocation": "1584:16:14",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1609:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "1601:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1601:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1600:16:14"
            },
            "src": "1578:39:14"
          },
          {
            "errorSelector": "a05ff47e",
            "id": 53,
            "name": "InvalidReceiverAddress",
            "nameLocation": "1700:22:14",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1722:2:14"
            },
            "src": "1694:31:14"
          },
          {
            "constant": false,
            "id": 56,
            "mutability": "mutable",
            "name": "s_linkToken",
            "nameLocation": "1798:11:14",
            "nodeType": "VariableDeclaration",
            "scope": 894,
            "src": "1771:38:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LinkTokenInterface_$1819",
              "typeString": "contract LinkTokenInterface"
            },
            "typeName": {
              "id": 55,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 54,
                "name": "LinkTokenInterface",
                "nameLocations": [
                  "1771:18:14"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1819,
                "src": "1771:18:14"
              },
              "referencedDeclaration": 1819,
              "src": "1771:18:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LinkTokenInterface_$1819",
                "typeString": "contract LinkTokenInterface"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "8cf19d19",
            "id": 58,
            "mutability": "immutable",
            "name": "MASTER_CONTRACT_CHAIN_ID",
            "nameLocation": "1840:24:14",
            "nodeType": "VariableDeclaration",
            "scope": 894,
            "src": "1816:48:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 57,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "1816:6:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "MasterNode.ValidNodes",
            "id": 73,
            "members": [
              {
                "constant": false,
                "id": 60,
                "mutability": "mutable",
                "name": "isValidNode",
                "nameLocation": "1904:11:14",
                "nodeType": "VariableDeclaration",
                "scope": 73,
                "src": "1899:16:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 59,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1899:4:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 62,
                "mutability": "mutable",
                "name": "isActiveNode",
                "nameLocation": "1930:12:14",
                "nodeType": "VariableDeclaration",
                "scope": 73,
                "src": "1925:17:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 61,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1925:4:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 64,
                "mutability": "mutable",
                "name": "chainCCIPid",
                "nameLocation": "1959:11:14",
                "nodeType": "VariableDeclaration",
                "scope": 73,
                "src": "1952:18:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 63,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "1952:6:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 66,
                "mutability": "mutable",
                "name": "lastDataFromAave",
                "nameLocation": "1988:16:14",
                "nodeType": "VariableDeclaration",
                "scope": 73,
                "src": "1980:24:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 65,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1980:7:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 68,
                "mutability": "mutable",
                "name": "totalUsdcSupply",
                "nameLocation": "2022:15:14",
                "nodeType": "VariableDeclaration",
                "scope": 73,
                "src": "2014:23:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 67,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2014:7:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 70,
                "mutability": "mutable",
                "name": "totalUsdcBorrow",
                "nameLocation": "2055:15:14",
                "nodeType": "VariableDeclaration",
                "scope": 73,
                "src": "2047:23:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 69,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2047:7:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 72,
                "mutability": "mutable",
                "name": "supplyRate",
                "nameLocation": "2088:10:14",
                "nodeType": "VariableDeclaration",
                "scope": 73,
                "src": "2080:18:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 71,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2080:7:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ValidNodes",
            "nameLocation": "1878:10:14",
            "nodeType": "StructDefinition",
            "scope": 894,
            "src": "1871:234:14",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b2d92955",
            "id": 78,
            "mutability": "mutable",
            "name": "validNodes",
            "nameLocation": "2149:10:14",
            "nodeType": "VariableDeclaration",
            "scope": 894,
            "src": "2111:48:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
              "typeString": "mapping(address => struct MasterNode.ValidNodes)"
            },
            "typeName": {
              "id": 77,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 74,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2119:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2111:30:14",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                "typeString": "mapping(address => struct MasterNode.ValidNodes)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 76,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 75,
                  "name": "ValidNodes",
                  "nameLocations": [
                    "2130:10:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 73,
                  "src": "2130:10:14"
                },
                "referencedDeclaration": 73,
                "src": "2130:10:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ValidNodes_$73_storage_ptr",
                  "typeString": "struct MasterNode.ValidNodes"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "654e8e0c",
            "id": 81,
            "mutability": "mutable",
            "name": "allowMoreNodes",
            "nameLocation": "2178:14:14",
            "nodeType": "VariableDeclaration",
            "scope": 894,
            "src": "2166:33:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 79,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2166:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "74727565",
              "id": 80,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2195:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "true"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "61ac3f99",
            "id": 83,
            "mutability": "mutable",
            "name": "lastActiveNode",
            "nameLocation": "2220:14:14",
            "nodeType": "VariableDeclaration",
            "scope": 894,
            "src": "2205:29:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 82,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2205:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6c1dc077",
            "id": 85,
            "mutability": "mutable",
            "name": "activeNode",
            "nameLocation": "2255:10:14",
            "nodeType": "VariableDeclaration",
            "scope": 894,
            "src": "2240:25:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 84,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2240:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 112,
              "nodeType": "Block",
              "src": "2621:118:14",
              "statements": [
                {
                  "expression": {
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 102,
                      "name": "s_linkToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "2631:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LinkTokenInterface_$1819",
                        "typeString": "contract LinkTokenInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 104,
                          "name": "_link",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 90,
                          "src": "2664:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 103,
                        "name": "LinkTokenInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1819,
                        "src": "2645:18:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LinkTokenInterface_$1819_$",
                          "typeString": "type(contract LinkTokenInterface)"
                        }
                      },
                      "id": 105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2645:25:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LinkTokenInterface_$1819",
                        "typeString": "contract LinkTokenInterface"
                      }
                    },
                    "src": "2631:39:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LinkTokenInterface_$1819",
                      "typeString": "contract LinkTokenInterface"
                    }
                  },
                  "id": 107,
                  "nodeType": "ExpressionStatement",
                  "src": "2631:39:14"
                },
                {
                  "expression": {
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 108,
                      "name": "MASTER_CONTRACT_CHAIN_ID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58,
                      "src": "2680:24:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 109,
                      "name": "_MASTER_CONTRACT_CHAIN_ID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92,
                      "src": "2707:25:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "2680:52:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 111,
                  "nodeType": "ExpressionStatement",
                  "src": "2680:52:14"
                }
              ]
            },
            "documentation": {
              "id": 86,
              "nodeType": "StructuredDocumentation",
              "src": "2272:187:14",
              "text": "@notice Constructor initializes the contract with the router address.\n @param _router The address of the router contract.\n @param _link The address of the link contract."
            },
            "id": 113,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 95,
                    "name": "_router",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 88,
                    "src": "2585:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 96,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 94,
                  "name": "CCIPReceiver",
                  "nameLocations": [
                    "2572:12:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1601,
                  "src": "2572:12:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "2572:21:14"
              },
              {
                "arguments": [
                  {
                    "hexValue": "576172705969656c64",
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2600:11:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6e5bd3a7f1ed96a77cd5f67b9871f9bbaf8246a034059514102ca756c979a0ad",
                      "typeString": "literal_string \"WarpYield\""
                    },
                    "value": "WarpYield"
                  },
                  {
                    "hexValue": "61575250",
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2613:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_5c2aa465d21b20af1889df7f97d25d68ec9b8540df778db221765393d1ff7929",
                      "typeString": "literal_string \"aWRP\""
                    },
                    "value": "aWRP"
                  }
                ],
                "id": 100,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 97,
                  "name": "ERC20",
                  "nameLocations": [
                    "2594:5:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1481,
                  "src": "2594:5:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "2594:26:14"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88,
                  "mutability": "mutable",
                  "name": "_router",
                  "nameLocation": "2493:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 113,
                  "src": "2485:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2485:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 90,
                  "mutability": "mutable",
                  "name": "_link",
                  "nameLocation": "2518:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 113,
                  "src": "2510:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2510:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92,
                  "mutability": "mutable",
                  "name": "_MASTER_CONTRACT_CHAIN_ID",
                  "nameLocation": "2540:25:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 113,
                  "src": "2533:32:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2533:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2475:96:14"
            },
            "returnParameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2621:0:14"
            },
            "scope": 894,
            "src": "2464:275:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 129,
              "nodeType": "Block",
              "src": "2790:137:14",
              "statements": [
                {
                  "condition": {
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2804:36:14",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 117,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "2805:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 119,
                        "indexExpression": {
                          "id": 118,
                          "name": "nodeAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 115,
                          "src": "2816:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2805:23:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 120,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2829:11:14",
                      "memberName": "isValidNode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60,
                      "src": "2805:35:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 127,
                  "nodeType": "IfStatement",
                  "src": "2800:110:14",
                  "trueBody": {
                    "id": 126,
                    "nodeType": "Block",
                    "src": "2842:68:14",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 123,
                              "name": "nodeAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 115,
                              "src": "2887:11:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 122,
                            "name": "DestinationNodeNotValid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "2863:23:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                              "typeString": "function (address) pure"
                            }
                          },
                          "id": 124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2863:36:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 125,
                        "nodeType": "RevertStatement",
                        "src": "2856:43:14"
                      }
                    ]
                  }
                },
                {
                  "id": 128,
                  "nodeType": "PlaceholderStatement",
                  "src": "2919:1:14"
                }
              ]
            },
            "id": 130,
            "name": "onlyValidNodes",
            "nameLocation": "2754:14:14",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 115,
                  "mutability": "mutable",
                  "name": "nodeAddress",
                  "nameLocation": "2777:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "2769:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 114,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2769:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2768:21:14"
            },
            "src": "2745:182:14",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 144,
              "nodeType": "Block",
              "src": "2969:174:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 133,
                              "name": "validNodes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78,
                              "src": "3000:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                                "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                              }
                            },
                            "id": 136,
                            "indexExpression": {
                              "expression": {
                                "id": 134,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3011:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 135,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3015:6:14",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3011:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3000:22:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                              "typeString": "struct MasterNode.ValidNodes storage ref"
                            }
                          },
                          "id": 137,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3023:11:14",
                          "memberName": "chainCCIPid",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 64,
                          "src": "3000:34:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 138,
                          "name": "MASTER_CONTRACT_CHAIN_ID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58,
                          "src": "3038:24:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "3000:62:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52657175697265206d617374657220616e64206e6f646520696e2073616d6520636861696e",
                        "id": 140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3076:39:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5f03148fc98866fc88ba0b74aa8942ff4bdb75490412a503e1b1f86ebc254af6",
                          "typeString": "literal_string \"Require master and node in same chain\""
                        },
                        "value": "Require master and node in same chain"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5f03148fc98866fc88ba0b74aa8942ff4bdb75490412a503e1b1f86ebc254af6",
                          "typeString": "literal_string \"Require master and node in same chain\""
                        }
                      ],
                      "id": 132,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2979:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2979:146:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 142,
                  "nodeType": "ExpressionStatement",
                  "src": "2979:146:14"
                },
                {
                  "id": 143,
                  "nodeType": "PlaceholderStatement",
                  "src": "3135:1:14"
                }
              ]
            },
            "id": 145,
            "name": "masterAndNodeInSameChain",
            "nameLocation": "2942:24:14",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 131,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2966:2:14"
            },
            "src": "2933:210:14",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 154,
              "nodeType": "Block",
              "src": "3195:39:14",
              "statements": [
                {
                  "expression": {
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 150,
                      "name": "allowMoreNodes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81,
                      "src": "3205:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3222:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3205:22:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 153,
                  "nodeType": "ExpressionStatement",
                  "src": "3205:22:14"
                }
              ]
            },
            "functionSelector": "6c98d513",
            "id": 155,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 148,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 147,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3185:9:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2259,
                  "src": "3185:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "3185:9:14"
              }
            ],
            "name": "stopAddingNodes",
            "nameLocation": "3158:15:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3173:2:14"
            },
            "returnParameters": {
              "id": 149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3195:0:14"
            },
            "scope": 894,
            "src": "3149:85:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 203,
              "nodeType": "Block",
              "src": "3371:356:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 167,
                        "name": "allowMoreNodes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "3389:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f206d6f7265206e6f64657320616c6c6f776564",
                        "id": 168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3405:23:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_14986cb525690d9998a9e460f0aca8b42b9aa5faddc27699fe8d3c65ad4113cd",
                          "typeString": "literal_string \"No more nodes allowed\""
                        },
                        "value": "No more nodes allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_14986cb525690d9998a9e460f0aca8b42b9aa5faddc27699fe8d3c65ad4113cd",
                          "typeString": "literal_string \"No more nodes allowed\""
                        }
                      ],
                      "id": 166,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3381:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3381:48:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 170,
                  "nodeType": "ExpressionStatement",
                  "src": "3381:48:14"
                },
                {
                  "expression": {
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 171,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "3439:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 173,
                        "indexExpression": {
                          "id": 172,
                          "name": "nodeAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 157,
                          "src": "3450:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3439:23:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 174,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3463:11:14",
                      "memberName": "isValidNode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60,
                      "src": "3439:35:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3477:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3439:42:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 177,
                  "nodeType": "ExpressionStatement",
                  "src": "3439:42:14"
                },
                {
                  "expression": {
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 178,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "3491:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 180,
                        "indexExpression": {
                          "id": 179,
                          "name": "nodeAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 157,
                          "src": "3502:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3491:23:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 181,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3515:12:14",
                      "memberName": "isActiveNode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 62,
                      "src": "3491:36:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 182,
                      "name": "isActiveNode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 161,
                      "src": "3530:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3491:51:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 184,
                  "nodeType": "ExpressionStatement",
                  "src": "3491:51:14"
                },
                {
                  "expression": {
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 185,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "3552:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 187,
                        "indexExpression": {
                          "id": 186,
                          "name": "nodeAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 157,
                          "src": "3563:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3552:23:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 188,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3576:11:14",
                      "memberName": "chainCCIPid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64,
                      "src": "3552:35:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 189,
                      "name": "chainCCIPid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 159,
                      "src": "3590:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "3552:49:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 191,
                  "nodeType": "ExpressionStatement",
                  "src": "3552:49:14"
                },
                {
                  "condition": {
                    "id": 192,
                    "name": "isActiveNode",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 161,
                    "src": "3616:12:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 202,
                  "nodeType": "IfStatement",
                  "src": "3612:109:14",
                  "trueBody": {
                    "id": 201,
                    "nodeType": "Block",
                    "src": "3630:91:14",
                    "statements": [
                      {
                        "expression": {
                          "id": 195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 193,
                            "name": "lastActiveNode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83,
                            "src": "3644:14:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 194,
                            "name": "nodeAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 157,
                            "src": "3661:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3644:28:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 196,
                        "nodeType": "ExpressionStatement",
                        "src": "3644:28:14"
                      },
                      {
                        "expression": {
                          "id": 199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 197,
                            "name": "activeNode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85,
                            "src": "3686:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 198,
                            "name": "nodeAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 157,
                            "src": "3699:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3686:24:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 200,
                        "nodeType": "ExpressionStatement",
                        "src": "3686:24:14"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "10a78df8",
            "id": 204,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 164,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 163,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3361:9:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2259,
                  "src": "3361:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "3361:9:14"
              }
            ],
            "name": "addValidNode",
            "nameLocation": "3249:12:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 157,
                  "mutability": "mutable",
                  "name": "nodeAddress",
                  "nameLocation": "3279:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 204,
                  "src": "3271:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 156,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3271:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 159,
                  "mutability": "mutable",
                  "name": "chainCCIPid",
                  "nameLocation": "3307:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 204,
                  "src": "3300:18:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 158,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "3300:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 161,
                  "mutability": "mutable",
                  "name": "isActiveNode",
                  "nameLocation": "3333:12:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 204,
                  "src": "3328:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3328:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3261:90:14"
            },
            "returnParameters": {
              "id": 165,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3371:0:14"
            },
            "scope": 894,
            "src": "3240:487:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 232,
              "nodeType": "Block",
              "src": "4136:189:14",
              "statements": [
                {
                  "assignments": [
                    null,
                    211,
                    213
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 211,
                      "mutability": "mutable",
                      "name": "userAddress",
                      "nameLocation": "4157:11:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 232,
                      "src": "4149:19:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 210,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4149:7:14",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 213,
                      "mutability": "mutable",
                      "name": "shares",
                      "nameLocation": "4178:6:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 232,
                      "src": "4170:14:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 212,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4170:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 226,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 216,
                          "name": "_any2EvmMessage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 207,
                          "src": "4212:15:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Any2EVMMessage_$1673_memory_ptr",
                            "typeString": "struct Client.Any2EVMMessage memory"
                          }
                        },
                        "id": 217,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4228:4:14",
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1668,
                        "src": "4212:20:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 219,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4247:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": {
                              "id": 218,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "4247:5:14",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 221,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4254:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 220,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4254:7:14",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 223,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4263:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 222,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4263:7:14",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 224,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "4246:25:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint8_$_$_t_type$_t_address_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(uint8),type(address),type(uint256))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint8_$_$_t_type$_t_address_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(uint8),type(address),type(uint256))"
                        }
                      ],
                      "expression": {
                        "id": 214,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "4188:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "4192:6:14",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "4188:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4188:93:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_address_payable_$_t_uint256_$",
                      "typeString": "tuple(uint8,address payable,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4146:135:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 228,
                        "name": "userAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 211,
                        "src": "4298:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 229,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 213,
                        "src": "4311:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 227,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1298,
                      "src": "4292:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4292:26:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 231,
                  "nodeType": "ExpressionStatement",
                  "src": "4292:26:14"
                }
              ]
            },
            "id": 233,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_aWarpTokenMinter",
            "nameLocation": "4049:17:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 208,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 207,
                  "mutability": "mutable",
                  "name": "_any2EvmMessage",
                  "nameLocation": "4105:15:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 233,
                  "src": "4076:44:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Any2EVMMessage_$1673_memory_ptr",
                    "typeString": "struct Client.Any2EVMMessage"
                  },
                  "typeName": {
                    "id": 206,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 205,
                      "name": "Client.Any2EVMMessage",
                      "nameLocations": [
                        "4076:6:14",
                        "4083:14:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1673,
                      "src": "4076:21:14"
                    },
                    "referencedDeclaration": 1673,
                    "src": "4076:21:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Any2EVMMessage_$1673_storage_ptr",
                      "typeString": "struct Client.Any2EVMMessage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4066:60:14"
            },
            "returnParameters": {
              "id": 209,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4136:0:14"
            },
            "scope": 894,
            "src": "4040:285:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 251,
              "nodeType": "Block",
              "src": "4574:43:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 247,
                        "name": "userAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 235,
                        "src": "4590:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 248,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 237,
                        "src": "4603:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 246,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1298,
                      "src": "4584:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4584:26:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 250,
                  "nodeType": "ExpressionStatement",
                  "src": "4584:26:14"
                }
              ]
            },
            "functionSelector": "04783ea4",
            "id": 252,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 240,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 239,
                  "name": "masterAndNodeInSameChain",
                  "nameLocations": [
                    "4522:24:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 145,
                  "src": "4522:24:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "4522:24:14"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 242,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "4562:3:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4566:6:14",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "4562:10:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 244,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 241,
                  "name": "onlyValidNodes",
                  "nameLocations": [
                    "4547:14:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 130,
                  "src": "4547:14:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "4547:26:14"
              }
            ],
            "name": "aWarpTokenMinterFromSameChain",
            "nameLocation": "4424:29:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 235,
                  "mutability": "mutable",
                  "name": "userAddress",
                  "nameLocation": "4471:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 252,
                  "src": "4463:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 234,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4463:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 237,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "4500:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 252,
                  "src": "4492:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 236,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4492:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4453:59:14"
            },
            "returnParameters": {
              "id": 245,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4574:0:14"
            },
            "scope": 894,
            "src": "4415:202:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 283,
              "nodeType": "Block",
              "src": "5027:175:14",
              "statements": [
                {
                  "expression": {
                    "id": 270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 258,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "5037:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 267,
                        "indexExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 261,
                                "name": "_any2EvmMessage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 255,
                                "src": "5059:15:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Any2EVMMessage_$1673_memory_ptr",
                                  "typeString": "struct Client.Any2EVMMessage memory"
                                }
                              },
                              "id": 262,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5075:6:14",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1666,
                              "src": "5059:22:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 264,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5084:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 263,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5084:7:14",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 265,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5083:9:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            ],
                            "expression": {
                              "id": 259,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "5048:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "5052:6:14",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "5048:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5048:45:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5037:57:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 268,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "5108:12:14",
                      "memberName": "isActiveNode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 62,
                      "src": "5037:83:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5123:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5037:90:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 271,
                  "nodeType": "ExpressionStatement",
                  "src": "5037:90:14"
                },
                {
                  "expression": {
                    "id": 281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 272,
                      "name": "activeNode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85,
                      "src": "5137:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 275,
                            "name": "_any2EvmMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 255,
                            "src": "5161:15:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Any2EVMMessage_$1673_memory_ptr",
                              "typeString": "struct Client.Any2EVMMessage memory"
                            }
                          },
                          "id": 276,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5177:6:14",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1666,
                          "src": "5161:22:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "components": [
                            {
                              "id": 278,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5186:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 277,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5186:7:14",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "id": 279,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "5185:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          }
                        ],
                        "expression": {
                          "id": 273,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "5150:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "5154:6:14",
                        "memberName": "decode",
                        "nodeType": "MemberAccess",
                        "src": "5150:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5150:45:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "5137:58:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 282,
                  "nodeType": "ExpressionStatement",
                  "src": "5137:58:14"
                }
              ]
            },
            "id": 284,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_resmumeOperations",
            "nameLocation": "4939:18:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 255,
                  "mutability": "mutable",
                  "name": "_any2EvmMessage",
                  "nameLocation": "4996:15:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 284,
                  "src": "4967:44:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Any2EVMMessage_$1673_memory_ptr",
                    "typeString": "struct Client.Any2EVMMessage"
                  },
                  "typeName": {
                    "id": 254,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 253,
                      "name": "Client.Any2EVMMessage",
                      "nameLocations": [
                        "4967:6:14",
                        "4974:14:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1673,
                      "src": "4967:21:14"
                    },
                    "referencedDeclaration": 1673,
                    "src": "4967:21:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Any2EVMMessage_$1673_storage_ptr",
                      "typeString": "struct Client.Any2EVMMessage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4957:60:14"
            },
            "returnParameters": {
              "id": 257,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5027:0:14"
            },
            "scope": 894,
            "src": "4930:272:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 306,
              "nodeType": "Block",
              "src": "5419:92:14",
              "statements": [
                {
                  "expression": {
                    "id": 299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 293,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "5429:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 296,
                        "indexExpression": {
                          "expression": {
                            "id": 294,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5440:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5444:6:14",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5440:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5429:22:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 297,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "5452:12:14",
                      "memberName": "isActiveNode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 62,
                      "src": "5429:35:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 298,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5467:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5429:42:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 300,
                  "nodeType": "ExpressionStatement",
                  "src": "5429:42:14"
                },
                {
                  "expression": {
                    "id": 304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 301,
                      "name": "activeNode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85,
                      "src": "5481:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 302,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "5494:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 303,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5498:6:14",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5494:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5481:23:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 305,
                  "nodeType": "ExpressionStatement",
                  "src": "5481:23:14"
                }
              ]
            },
            "functionSelector": "995714ae",
            "id": 307,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 287,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 286,
                  "name": "masterAndNodeInSameChain",
                  "nameLocations": [
                    "5355:24:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 145,
                  "src": "5355:24:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "5355:24:14"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 289,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "5403:3:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "5407:6:14",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "5403:10:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 291,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 288,
                  "name": "onlyValidNodes",
                  "nameLocations": [
                    "5388:14:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 130,
                  "src": "5388:14:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "5388:26:14"
              }
            ],
            "name": "_resmumeOperationsFromSameChain",
            "nameLocation": "5296:31:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 285,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5327:2:14"
            },
            "returnParameters": {
              "id": 292,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5419:0:14"
            },
            "scope": 894,
            "src": "5287:224:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 391,
              "nodeType": "Block",
              "src": "5916:712:14",
              "statements": [
                {
                  "assignments": [
                    null,
                    314,
                    316,
                    318
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 314,
                      "mutability": "mutable",
                      "name": "totalUsdcSupply",
                      "nameLocation": "5962:15:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 391,
                      "src": "5954:23:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 313,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5954:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 316,
                      "mutability": "mutable",
                      "name": "totalUsdcBorrow",
                      "nameLocation": "5999:15:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 391,
                      "src": "5991:23:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 315,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5991:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 318,
                      "mutability": "mutable",
                      "name": "supplyRate",
                      "nameLocation": "6036:10:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 391,
                      "src": "6028:18:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 317,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6028:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 333,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 321,
                          "name": "_any2EvmMessage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 310,
                          "src": "6087:15:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Any2EVMMessage_$1673_memory_ptr",
                            "typeString": "struct Client.Any2EVMMessage memory"
                          }
                        },
                        "id": 322,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6103:4:14",
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1668,
                        "src": "6087:20:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 324,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6126:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": {
                              "id": 323,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "6126:5:14",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 326,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6133:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 325,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6133:7:14",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 328,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6142:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 327,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6142:7:14",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 330,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6151:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 329,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6151:7:14",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 331,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "6125:34:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint8_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(uint8),type(uint256),type(uint256),type(uint256))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint8_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(uint8),type(uint256),type(uint256),type(uint256))"
                        }
                      ],
                      "expression": {
                        "id": 319,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "6059:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "6063:6:14",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "6059:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6059:114:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint8,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5926:247:14"
                },
                {
                  "expression": {
                    "id": 347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 334,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "6184:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 343,
                        "indexExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 337,
                                "name": "_any2EvmMessage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 310,
                                "src": "6206:15:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Any2EVMMessage_$1673_memory_ptr",
                                  "typeString": "struct Client.Any2EVMMessage memory"
                                }
                              },
                              "id": 338,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6222:6:14",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1666,
                              "src": "6206:22:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 340,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6231:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 339,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6231:7:14",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 341,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "6230:9:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            ],
                            "expression": {
                              "id": 335,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "6195:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 336,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "6199:6:14",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "6195:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6195:45:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6184:57:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 344,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6255:16:14",
                      "memberName": "lastDataFromAave",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 66,
                      "src": "6184:87:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 345,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "6274:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 346,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6280:9:14",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "6274:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6184:105:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 348,
                  "nodeType": "ExpressionStatement",
                  "src": "6184:105:14"
                },
                {
                  "expression": {
                    "id": 361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 349,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "6299:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 358,
                        "indexExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 352,
                                "name": "_any2EvmMessage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 310,
                                "src": "6321:15:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Any2EVMMessage_$1673_memory_ptr",
                                  "typeString": "struct Client.Any2EVMMessage memory"
                                }
                              },
                              "id": 353,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6337:6:14",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1666,
                              "src": "6321:22:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 355,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6346:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 354,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6346:7:14",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 356,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "6345:9:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            ],
                            "expression": {
                              "id": 350,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "6310:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 351,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "6314:6:14",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "6310:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6310:45:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6299:57:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 359,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6370:15:14",
                      "memberName": "totalUsdcSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68,
                      "src": "6299:86:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 360,
                      "name": "totalUsdcSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 314,
                      "src": "6388:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6299:104:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 362,
                  "nodeType": "ExpressionStatement",
                  "src": "6299:104:14"
                },
                {
                  "expression": {
                    "id": 375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 363,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "6413:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 372,
                        "indexExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 366,
                                "name": "_any2EvmMessage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 310,
                                "src": "6435:15:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Any2EVMMessage_$1673_memory_ptr",
                                  "typeString": "struct Client.Any2EVMMessage memory"
                                }
                              },
                              "id": 367,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6451:6:14",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1666,
                              "src": "6435:22:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 369,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6460:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 368,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6460:7:14",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 370,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "6459:9:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            ],
                            "expression": {
                              "id": 364,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "6424:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 365,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "6428:6:14",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "6424:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6424:45:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6413:57:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 373,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6484:15:14",
                      "memberName": "totalUsdcBorrow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 70,
                      "src": "6413:86:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 374,
                      "name": "totalUsdcBorrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 316,
                      "src": "6502:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6413:104:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 376,
                  "nodeType": "ExpressionStatement",
                  "src": "6413:104:14"
                },
                {
                  "expression": {
                    "id": 389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 377,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "6527:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 386,
                        "indexExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 380,
                                "name": "_any2EvmMessage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 310,
                                "src": "6549:15:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Any2EVMMessage_$1673_memory_ptr",
                                  "typeString": "struct Client.Any2EVMMessage memory"
                                }
                              },
                              "id": 381,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6565:6:14",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1666,
                              "src": "6549:22:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 383,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6574:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 382,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6574:7:14",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 384,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "6573:9:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            ],
                            "expression": {
                              "id": 378,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "6538:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 379,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "6542:6:14",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "6538:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6538:45:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6527:57:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 387,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6598:10:14",
                      "memberName": "supplyRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72,
                      "src": "6527:81:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 388,
                      "name": "supplyRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 318,
                      "src": "6611:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6527:94:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 390,
                  "nodeType": "ExpressionStatement",
                  "src": "6527:94:14"
                }
              ]
            },
            "id": 392,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_nodeAaveFeed",
            "nameLocation": "5833:13:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 311,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 310,
                  "mutability": "mutable",
                  "name": "_any2EvmMessage",
                  "nameLocation": "5885:15:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 392,
                  "src": "5856:44:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Any2EVMMessage_$1673_memory_ptr",
                    "typeString": "struct Client.Any2EVMMessage"
                  },
                  "typeName": {
                    "id": 309,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 308,
                      "name": "Client.Any2EVMMessage",
                      "nameLocations": [
                        "5856:6:14",
                        "5863:14:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1673,
                      "src": "5856:21:14"
                    },
                    "referencedDeclaration": 1673,
                    "src": "5856:21:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Any2EVMMessage_$1673_storage_ptr",
                      "typeString": "struct Client.Any2EVMMessage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5846:60:14"
            },
            "returnParameters": {
              "id": 312,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5916:0:14"
            },
            "scope": 894,
            "src": "5824:804:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 440,
              "nodeType": "Block",
              "src": "6910:262:14",
              "statements": [
                {
                  "expression": {
                    "id": 414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 407,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "6920:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 410,
                        "indexExpression": {
                          "expression": {
                            "id": 408,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6931:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6935:6:14",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6931:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6920:22:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 411,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6943:16:14",
                      "memberName": "lastDataFromAave",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 66,
                      "src": "6920:39:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 412,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "6962:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 413,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6968:9:14",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "6962:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6920:57:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 415,
                  "nodeType": "ExpressionStatement",
                  "src": "6920:57:14"
                },
                {
                  "expression": {
                    "id": 422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 416,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "6987:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 419,
                        "indexExpression": {
                          "expression": {
                            "id": 417,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6998:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7002:6:14",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6998:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6987:22:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 420,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7010:15:14",
                      "memberName": "totalUsdcSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68,
                      "src": "6987:38:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 421,
                      "name": "totalUsdcSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 394,
                      "src": "7028:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6987:56:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 423,
                  "nodeType": "ExpressionStatement",
                  "src": "6987:56:14"
                },
                {
                  "expression": {
                    "id": 430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 424,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "7053:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 427,
                        "indexExpression": {
                          "expression": {
                            "id": 425,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7064:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7068:6:14",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7064:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7053:22:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 428,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7076:15:14",
                      "memberName": "totalUsdcBorrow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 70,
                      "src": "7053:38:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 429,
                      "name": "totalUsdcBorrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 396,
                      "src": "7094:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7053:56:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 431,
                  "nodeType": "ExpressionStatement",
                  "src": "7053:56:14"
                },
                {
                  "expression": {
                    "id": 438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 432,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "7119:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 435,
                        "indexExpression": {
                          "expression": {
                            "id": 433,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7130:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7134:6:14",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7130:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7119:22:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 436,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7142:10:14",
                      "memberName": "supplyRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72,
                      "src": "7119:33:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 437,
                      "name": "supplyRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 398,
                      "src": "7155:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7119:46:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 439,
                  "nodeType": "ExpressionStatement",
                  "src": "7119:46:14"
                }
              ]
            },
            "functionSelector": "9637120f",
            "id": 441,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 401,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 400,
                  "name": "masterAndNodeInSameChain",
                  "nameLocations": [
                    "6858:24:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 145,
                  "src": "6858:24:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "6858:24:14"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 403,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "6898:3:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "6902:6:14",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "6898:10:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 405,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 402,
                  "name": "onlyValidNodes",
                  "nameLocations": [
                    "6883:14:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 130,
                  "src": "6883:14:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "6883:26:14"
              }
            ],
            "name": "nodeAaveFeedFromSameChain",
            "nameLocation": "6723:25:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 399,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 394,
                  "mutability": "mutable",
                  "name": "totalUsdcSupply",
                  "nameLocation": "6766:15:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 441,
                  "src": "6758:23:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 393,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6758:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 396,
                  "mutability": "mutable",
                  "name": "totalUsdcBorrow",
                  "nameLocation": "6799:15:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 441,
                  "src": "6791:23:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 395,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6791:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 398,
                  "mutability": "mutable",
                  "name": "supplyRate",
                  "nameLocation": "6832:10:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 441,
                  "src": "6824:18:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 397,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6824:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6748:100:14"
            },
            "returnParameters": {
              "id": 406,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6910:0:14"
            },
            "scope": 894,
            "src": "6714:458:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1566
            ],
            "body": {
              "id": 511,
              "nodeType": "Block",
              "src": "7828:568:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 459,
                            "name": "validNodes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78,
                            "src": "7859:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                              "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                            }
                          },
                          "id": 468,
                          "indexExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 462,
                                  "name": "_any2EvmMessage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 444,
                                  "src": "7881:15:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Any2EVMMessage_$1673_memory_ptr",
                                    "typeString": "struct Client.Any2EVMMessage memory"
                                  }
                                },
                                "id": 463,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7897:6:14",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1666,
                                "src": "7881:22:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "components": [
                                  {
                                    "id": 465,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "7906:7:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 464,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "7906:7:14",
                                      "typeDescriptions": {}
                                    }
                                  }
                                ],
                                "id": 466,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "7905:9:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                }
                              ],
                              "expression": {
                                "id": 460,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "7870:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 461,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "7874:6:14",
                              "memberName": "decode",
                              "nodeType": "MemberAccess",
                              "src": "7870:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 467,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7870:45:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7859:57:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                            "typeString": "struct MasterNode.ValidNodes storage ref"
                          }
                        },
                        "id": 469,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7934:11:14",
                        "memberName": "isValidNode",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 60,
                        "src": "7859:86:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e636f6d696e67204d657373616765206e6f742066726f6d20612076616c6964206e6f6465",
                        "id": 470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7959:40:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a8f332cc663e3d3f7228bccc03769aa964f434a1289faa35cb4983b943c0d9cd",
                          "typeString": "literal_string \"Incoming Message not from a valid node\""
                        },
                        "value": "Incoming Message not from a valid node"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a8f332cc663e3d3f7228bccc03769aa964f434a1289faa35cb4983b943c0d9cd",
                          "typeString": "literal_string \"Incoming Message not from a valid node\""
                        }
                      ],
                      "id": 458,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7838:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7838:171:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 472,
                  "nodeType": "ExpressionStatement",
                  "src": "7838:171:14"
                },
                {
                  "assignments": [
                    474
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 474,
                      "mutability": "mutable",
                      "name": "command",
                      "nameLocation": "8025:7:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 511,
                      "src": "8019:13:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 473,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "8019:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 478,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 476,
                        "name": "_any2EvmMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 444,
                        "src": "8058:15:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Any2EVMMessage_$1673_memory_ptr",
                          "typeString": "struct Client.Any2EVMMessage memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Any2EVMMessage_$1673_memory_ptr",
                          "typeString": "struct Client.Any2EVMMessage memory"
                        }
                      ],
                      "id": 475,
                      "name": "_internalCommandRouter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1847,
                      "src": "8035:22:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Any2EVMMessage_$1673_memory_ptr_$returns$_t_uint8_$",
                        "typeString": "function (struct Client.Any2EVMMessage memory) returns (uint8)"
                      }
                    },
                    "id": 477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8035:39:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8019:55:14"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 479,
                      "name": "command",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 474,
                      "src": "8088:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 480,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8099:1:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8088:12:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 487,
                        "name": "command",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 474,
                        "src": "8171:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8182:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "8171:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 495,
                          "name": "command",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 474,
                          "src": "8255:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8266:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "8255:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 507,
                        "nodeType": "Block",
                        "src": "8330:60:14",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "696e76616c696420636f6d6d616e642066726f6d204e6f6465",
                                  "id": 504,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8351:27:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_5ae3160618806915eb95e7eff27bdd789150f31a91a3a3ee805c28ae74beda69",
                                    "typeString": "literal_string \"invalid command from Node\""
                                  },
                                  "value": "invalid command from Node"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_5ae3160618806915eb95e7eff27bdd789150f31a91a3a3ee805c28ae74beda69",
                                    "typeString": "literal_string \"invalid command from Node\""
                                  }
                                ],
                                "id": 503,
                                "name": "revert",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -19,
                                  -19
                                ],
                                "referencedDeclaration": -19,
                                "src": "8344:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (string memory) pure"
                                }
                              },
                              "id": 505,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8344:35:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 506,
                            "nodeType": "ExpressionStatement",
                            "src": "8344:35:14"
                          }
                        ]
                      },
                      "id": 508,
                      "nodeType": "IfStatement",
                      "src": "8251:139:14",
                      "trueBody": {
                        "id": 502,
                        "nodeType": "Block",
                        "src": "8269:55:14",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 499,
                                  "name": "_any2EvmMessage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 444,
                                  "src": "8297:15:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Any2EVMMessage_$1673_memory_ptr",
                                    "typeString": "struct Client.Any2EVMMessage memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_struct$_Any2EVMMessage_$1673_memory_ptr",
                                    "typeString": "struct Client.Any2EVMMessage memory"
                                  }
                                ],
                                "id": 498,
                                "name": "_nodeAaveFeed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 392,
                                "src": "8283:13:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Any2EVMMessage_$1673_memory_ptr_$returns$__$",
                                  "typeString": "function (struct Client.Any2EVMMessage memory)"
                                }
                              },
                              "id": 500,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8283:30:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 501,
                            "nodeType": "ExpressionStatement",
                            "src": "8283:30:14"
                          }
                        ]
                      }
                    },
                    "id": 509,
                    "nodeType": "IfStatement",
                    "src": "8167:223:14",
                    "trueBody": {
                      "id": 494,
                      "nodeType": "Block",
                      "src": "8185:60:14",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 491,
                                "name": "_any2EvmMessage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 444,
                                "src": "8218:15:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Any2EVMMessage_$1673_memory_ptr",
                                  "typeString": "struct Client.Any2EVMMessage memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Any2EVMMessage_$1673_memory_ptr",
                                  "typeString": "struct Client.Any2EVMMessage memory"
                                }
                              ],
                              "id": 490,
                              "name": "_resmumeOperations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 284,
                              "src": "8199:18:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Any2EVMMessage_$1673_memory_ptr_$returns$__$",
                                "typeString": "function (struct Client.Any2EVMMessage memory)"
                              }
                            },
                            "id": 492,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8199:35:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 493,
                          "nodeType": "ExpressionStatement",
                          "src": "8199:35:14"
                        }
                      ]
                    }
                  },
                  "id": 510,
                  "nodeType": "IfStatement",
                  "src": "8084:306:14",
                  "trueBody": {
                    "id": 486,
                    "nodeType": "Block",
                    "src": "8102:59:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 483,
                              "name": "_any2EvmMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 444,
                              "src": "8134:15:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Any2EVMMessage_$1673_memory_ptr",
                                "typeString": "struct Client.Any2EVMMessage memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Any2EVMMessage_$1673_memory_ptr",
                                "typeString": "struct Client.Any2EVMMessage memory"
                              }
                            ],
                            "id": 482,
                            "name": "_aWarpTokenMinter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 233,
                            "src": "8116:17:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Any2EVMMessage_$1673_memory_ptr_$returns$__$",
                              "typeString": "function (struct Client.Any2EVMMessage memory)"
                            }
                          },
                          "id": 484,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8116:34:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 485,
                        "nodeType": "ExpressionStatement",
                        "src": "8116:34:14"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 512,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "expression": {
                          "id": 450,
                          "name": "_any2EvmMessage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 444,
                          "src": "7788:15:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Any2EVMMessage_$1673_memory_ptr",
                            "typeString": "struct Client.Any2EVMMessage memory"
                          }
                        },
                        "id": 451,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7804:6:14",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1666,
                        "src": "7788:22:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 453,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7813:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 452,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7813:7:14",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 454,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "7812:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        }
                      ],
                      "expression": {
                        "id": 448,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "7777:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 449,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "7781:6:14",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "7777:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7777:45:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 456,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 447,
                  "name": "onlyValidNodes",
                  "nameLocations": [
                    "7762:14:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 130,
                  "src": "7762:14:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "7762:61:14"
              }
            ],
            "name": "_ccipReceive",
            "nameLocation": "7647:12:14",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 446,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7745:8:14"
            },
            "parameters": {
              "id": 445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 444,
                  "mutability": "mutable",
                  "name": "_any2EvmMessage",
                  "nameLocation": "7698:15:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 512,
                  "src": "7669:44:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Any2EVMMessage_$1673_memory_ptr",
                    "typeString": "struct Client.Any2EVMMessage"
                  },
                  "typeName": {
                    "id": 443,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 442,
                      "name": "Client.Any2EVMMessage",
                      "nameLocations": [
                        "7669:6:14",
                        "7676:14:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1673,
                      "src": "7669:21:14"
                    },
                    "referencedDeclaration": 1673,
                    "src": "7669:21:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Any2EVMMessage_$1673_storage_ptr",
                      "typeString": "struct Client.Any2EVMMessage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7659:60:14"
            },
            "returnParameters": {
              "id": 457,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7828:0:14"
            },
            "scope": 894,
            "src": "7638:758:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 612,
              "nodeType": "Block",
              "src": "8971:1287:14",
              "statements": [
                {
                  "assignments": [
                    530
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 530,
                      "mutability": "mutable",
                      "name": "evm2AnyMessage",
                      "nameLocation": "9182:14:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 612,
                      "src": "9153:43:14",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EVM2AnyMessage_$1686_memory_ptr",
                        "typeString": "struct Client.EVM2AnyMessage"
                      },
                      "typeName": {
                        "id": 529,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 528,
                          "name": "Client.EVM2AnyMessage",
                          "nameLocations": [
                            "9153:6:14",
                            "9160:14:14"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1686,
                          "src": "9153:21:14"
                        },
                        "referencedDeclaration": 1686,
                        "src": "9153:21:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EVM2AnyMessage_$1686_storage_ptr",
                          "typeString": "struct Client.EVM2AnyMessage"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 539,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 532,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 516,
                        "src": "9230:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 533,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 518,
                        "src": "9253:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 536,
                            "name": "s_linkToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "9280:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LinkTokenInterface_$1819",
                              "typeString": "contract LinkTokenInterface"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LinkTokenInterface_$1819",
                              "typeString": "contract LinkTokenInterface"
                            }
                          ],
                          "id": 535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9272:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 534,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9272:7:14",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9272:20:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 531,
                      "name": "_buildCCIPMessage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 650,
                      "src": "9199:17:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$_t_address_$returns$_t_struct$_EVM2AnyMessage_$1686_memory_ptr_$",
                        "typeString": "function (address,bytes memory,address) pure returns (struct Client.EVM2AnyMessage memory)"
                      }
                    },
                    "id": 538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9199:103:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EVM2AnyMessage_$1686_memory_ptr",
                      "typeString": "struct Client.EVM2AnyMessage memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9153:149:14"
                },
                {
                  "assignments": [
                    542
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 542,
                      "mutability": "mutable",
                      "name": "router",
                      "nameLocation": "9410:6:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 612,
                      "src": "9396:20:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRouterClient_$1653",
                        "typeString": "contract IRouterClient"
                      },
                      "typeName": {
                        "id": 541,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 540,
                          "name": "IRouterClient",
                          "nameLocations": [
                            "9396:13:14"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1653,
                          "src": "9396:13:14"
                        },
                        "referencedDeclaration": 1653,
                        "src": "9396:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRouterClient_$1653",
                          "typeString": "contract IRouterClient"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 548,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 544,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "9433:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MasterNode_$894",
                              "typeString": "contract MasterNode"
                            }
                          },
                          "id": 545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9438:9:14",
                          "memberName": "getRouter",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1578,
                          "src": "9433:14:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9433:16:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 543,
                      "name": "IRouterClient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1653,
                      "src": "9419:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IRouterClient_$1653_$",
                        "typeString": "type(contract IRouterClient)"
                      }
                    },
                    "id": 547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9419:31:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRouterClient_$1653",
                      "typeString": "contract IRouterClient"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9396:54:14"
                },
                {
                  "assignments": [
                    550
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 550,
                      "mutability": "mutable",
                      "name": "fees",
                      "nameLocation": "9526:4:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 612,
                      "src": "9518:12:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 549,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9518:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 556,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 553,
                        "name": "_destinationChainSelector",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 514,
                        "src": "9547:25:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 554,
                        "name": "evm2AnyMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 530,
                        "src": "9574:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EVM2AnyMessage_$1686_memory_ptr",
                          "typeString": "struct Client.EVM2AnyMessage memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_struct$_EVM2AnyMessage_$1686_memory_ptr",
                          "typeString": "struct Client.EVM2AnyMessage memory"
                        }
                      ],
                      "expression": {
                        "id": 551,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 542,
                        "src": "9533:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRouterClient_$1653",
                          "typeString": "contract IRouterClient"
                        }
                      },
                      "id": 552,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9540:6:14",
                      "memberName": "getFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1641,
                      "src": "9533:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint64_$_t_struct$_EVM2AnyMessage_$1686_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint64,struct Client.EVM2AnyMessage memory) view external returns (uint256)"
                      }
                    },
                    "id": 555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9533:56:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9518:71:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 560,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "9646:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 561,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9650:6:14",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "9646:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 564,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "9666:4:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MasterNode_$894",
                                  "typeString": "contract MasterNode"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MasterNode_$894",
                                  "typeString": "contract MasterNode"
                                }
                              ],
                              "id": 563,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9658:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 562,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9658:7:14",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 565,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9658:13:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 566,
                            "name": "fees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 550,
                            "src": "9673:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 558,
                            "name": "s_linkToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "9621:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LinkTokenInterface_$1819",
                              "typeString": "contract LinkTokenInterface"
                            }
                          },
                          "id": 559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9633:12:14",
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1818,
                          "src": "9621:24:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9621:57:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f742070726f7669646564204c696e6b20666f722066656573",
                        "id": 568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9692:28:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_afb0688769ed3833a956fba5ec2b64712f3f707f42b0b0fcc105794bfc66fab0",
                          "typeString": "literal_string \"Not provided Link for fees\""
                        },
                        "value": "Not provided Link for fees"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_afb0688769ed3833a956fba5ec2b64712f3f707f42b0b0fcc105794bfc66fab0",
                          "typeString": "literal_string \"Not provided Link for fees\""
                        }
                      ],
                      "id": 557,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9600:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9600:130:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 570,
                  "nodeType": "ExpressionStatement",
                  "src": "9600:130:14"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 571,
                      "name": "fees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 550,
                      "src": "9745:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 576,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "9782:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MasterNode_$894",
                                "typeString": "contract MasterNode"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MasterNode_$894",
                                "typeString": "contract MasterNode"
                              }
                            ],
                            "id": 575,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9774:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 574,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9774:7:14",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9774:13:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 572,
                          "name": "s_linkToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "9752:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LinkTokenInterface_$1819",
                            "typeString": "contract LinkTokenInterface"
                          }
                        },
                        "id": 573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9764:9:14",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1751,
                        "src": "9752:21:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 578,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9752:36:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9745:43:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 591,
                  "nodeType": "IfStatement",
                  "src": "9741:128:14",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 585,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "9856:4:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MasterNode_$894",
                                    "typeString": "contract MasterNode"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MasterNode_$894",
                                    "typeString": "contract MasterNode"
                                  }
                                ],
                                "id": 584,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9848:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 583,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9848:7:14",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 586,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9848:13:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 581,
                              "name": "s_linkToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 56,
                              "src": "9826:11:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LinkTokenInterface_$1819",
                                "typeString": "contract LinkTokenInterface"
                              }
                            },
                            "id": 582,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9838:9:14",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1751,
                            "src": "9826:21:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9826:36:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 588,
                          "name": "fees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 550,
                          "src": "9864:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 580,
                        "name": "NotEnoughBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "9809:16:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                          "typeString": "function (uint256,uint256) pure"
                        }
                      },
                      "id": 589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9809:60:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 590,
                    "nodeType": "RevertStatement",
                    "src": "9802:67:14"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 597,
                            "name": "router",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 542,
                            "src": "10015:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IRouterClient_$1653",
                              "typeString": "contract IRouterClient"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IRouterClient_$1653",
                              "typeString": "contract IRouterClient"
                            }
                          ],
                          "id": 596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10007:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 595,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10007:7:14",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10007:15:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 599,
                        "name": "fees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 550,
                        "src": "10024:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 592,
                        "name": "s_linkToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "9987:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LinkTokenInterface_$1819",
                          "typeString": "contract LinkTokenInterface"
                        }
                      },
                      "id": 594,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9999:7:14",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1744,
                      "src": "9987:19:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9987:42:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 601,
                  "nodeType": "ExpressionStatement",
                  "src": "9987:42:14"
                },
                {
                  "expression": {
                    "id": 608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 602,
                      "name": "messageId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 524,
                      "src": "10121:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 605,
                          "name": "_destinationChainSelector",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 514,
                          "src": "10149:25:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        {
                          "id": 606,
                          "name": "evm2AnyMessage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 530,
                          "src": "10176:14:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_EVM2AnyMessage_$1686_memory_ptr",
                            "typeString": "struct Client.EVM2AnyMessage memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          {
                            "typeIdentifier": "t_struct$_EVM2AnyMessage_$1686_memory_ptr",
                            "typeString": "struct Client.EVM2AnyMessage memory"
                          }
                        ],
                        "expression": {
                          "id": 603,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 542,
                          "src": "10133:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IRouterClient_$1653",
                            "typeString": "contract IRouterClient"
                          }
                        },
                        "id": 604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10140:8:14",
                        "memberName": "ccipSend",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1652,
                        "src": "10133:15:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint64_$_t_struct$_EVM2AnyMessage_$1686_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (uint64,struct Client.EVM2AnyMessage memory) payable external returns (bytes32)"
                        }
                      },
                      "id": 607,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10133:58:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "10121:70:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 609,
                  "nodeType": "ExpressionStatement",
                  "src": "10121:70:14"
                },
                {
                  "expression": {
                    "id": 610,
                    "name": "messageId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 524,
                    "src": "10242:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 525,
                  "id": 611,
                  "nodeType": "Return",
                  "src": "10235:16:14"
                }
              ]
            },
            "id": 613,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 521,
                    "name": "_receiver",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 516,
                    "src": "8932:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 522,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 520,
                  "name": "onlyValidNodes",
                  "nameLocations": [
                    "8917:14:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 130,
                  "src": "8917:14:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "8917:25:14"
              }
            ],
            "name": "_sendMessage",
            "nameLocation": "8792:12:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 519,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 514,
                  "mutability": "mutable",
                  "name": "_destinationChainSelector",
                  "nameLocation": "8821:25:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 613,
                  "src": "8814:32:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 513,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "8814:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 516,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "8864:9:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 613,
                  "src": "8856:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 515,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8856:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 518,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "8896:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 613,
                  "src": "8883:18:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 517,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8883:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8804:103:14"
            },
            "returnParameters": {
              "id": 525,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 524,
                  "mutability": "mutable",
                  "name": "messageId",
                  "nameLocation": "8960:9:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 613,
                  "src": "8952:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 523,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8952:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8951:19:14"
            },
            "scope": 894,
            "src": "8783:1475:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 649,
              "nodeType": "Block",
              "src": "10944:662:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 630,
                            "name": "_receiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 616,
                            "src": "11034:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 628,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "11023:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "11027:6:14",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "11023:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11023:21:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 632,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 618,
                        "src": "11100:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 637,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11187:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "11159:27:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_EVMTokenAmount_$1660_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (struct Client.EVMTokenAmount memory[] memory)"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 634,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 633,
                                "name": "Client.EVMTokenAmount",
                                "nameLocations": [
                                  "11163:6:14",
                                  "11170:14:14"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1660,
                                "src": "11163:21:14"
                              },
                              "referencedDeclaration": 1660,
                              "src": "11163:21:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_EVMTokenAmount_$1660_storage_ptr",
                                "typeString": "struct Client.EVMTokenAmount"
                              }
                            },
                            "id": 635,
                            "nodeType": "ArrayTypeName",
                            "src": "11163:23:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$1660_storage_$dyn_storage_ptr",
                              "typeString": "struct Client.EVMTokenAmount[]"
                            }
                          }
                        },
                        "id": 638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11159:30:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$1660_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Client.EVMTokenAmount memory[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "325f3030305f303030",
                                "id": 643,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11405:9:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2000000_by_1",
                                  "typeString": "int_const 2000000"
                                },
                                "value": "2_000_000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_2000000_by_1",
                                  "typeString": "int_const 2000000"
                                }
                              ],
                              "expression": {
                                "id": 641,
                                "name": "Client",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1708,
                                "src": "11372:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Client_$1708_$",
                                  "typeString": "type(library Client)"
                                }
                              },
                              "id": 642,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11379:14:14",
                              "memberName": "EVMExtraArgsV1",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1692,
                              "src": "11372:21:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_EVMExtraArgsV1_$1692_storage_ptr_$",
                                "typeString": "type(struct Client.EVMExtraArgsV1 storage pointer)"
                              }
                            },
                            "id": 644,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [
                              "11395:8:14"
                            ],
                            "names": [
                              "gasLimit"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "11372:44:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_EVMExtraArgsV1_$1692_memory_ptr",
                              "typeString": "struct Client.EVMExtraArgsV1 memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_EVMExtraArgsV1_$1692_memory_ptr",
                              "typeString": "struct Client.EVMExtraArgsV1 memory"
                            }
                          ],
                          "expression": {
                            "id": 639,
                            "name": "Client",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1708,
                            "src": "11268:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Client_$1708_$",
                              "typeString": "type(library Client)"
                            }
                          },
                          "id": 640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11275:12:14",
                          "memberName": "_argsToBytes",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1707,
                          "src": "11268:19:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_EVMExtraArgsV1_$1692_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (struct Client.EVMExtraArgsV1 memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11268:166:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 646,
                        "name": "_feeTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 620,
                        "src": "11568:16:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$1660_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Client.EVMTokenAmount memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 626,
                        "name": "Client",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1708,
                        "src": "10973:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Client_$1708_$",
                          "typeString": "type(library Client)"
                        }
                      },
                      "id": 627,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10980:14:14",
                      "memberName": "EVM2AnyMessage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1686,
                      "src": "10973:21:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_EVM2AnyMessage_$1686_storage_ptr_$",
                        "typeString": "type(struct Client.EVM2AnyMessage storage pointer)"
                      }
                    },
                    "id": 647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "11013:8:14",
                      "11094:4:14",
                      "11145:12:14",
                      "11257:9:14",
                      "11558:8:14"
                    ],
                    "names": [
                      "receiver",
                      "data",
                      "tokenAmounts",
                      "extraArgs",
                      "feeToken"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "10973:626:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EVM2AnyMessage_$1686_memory_ptr",
                      "typeString": "struct Client.EVM2AnyMessage memory"
                    }
                  },
                  "functionReturnParameters": 625,
                  "id": 648,
                  "nodeType": "Return",
                  "src": "10954:645:14"
                }
              ]
            },
            "documentation": {
              "id": 614,
              "nodeType": "StructuredDocumentation",
              "src": "10264:501:14",
              "text": "@notice Construct a CCIP message.\n @dev This function will create an EVM2AnyMessage struct with all the necessary information for programmable tokens transfer.\n @param _receiver The address of the receiver.\n @param _data The bytes data to be sent.\n @param _feeTokenAddress The address of the token used for fees. Set address(0) for native gas.\n @return Client.EVM2AnyMessage Returns an EVM2AnyMessage struct which contains information for sending a CCIP message."
            },
            "id": 650,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_buildCCIPMessage",
            "nameLocation": "10779:17:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 621,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 616,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "10814:9:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 650,
                  "src": "10806:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 615,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10806:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 618,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "10846:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 650,
                  "src": "10833:18:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 617,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10833:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 620,
                  "mutability": "mutable",
                  "name": "_feeTokenAddress",
                  "nameLocation": "10869:16:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 650,
                  "src": "10861:24:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 619,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10861:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10796:95:14"
            },
            "returnParameters": {
              "id": 625,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 624,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 650,
                  "src": "10914:28:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_EVM2AnyMessage_$1686_memory_ptr",
                    "typeString": "struct Client.EVM2AnyMessage"
                  },
                  "typeName": {
                    "id": 623,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 622,
                      "name": "Client.EVM2AnyMessage",
                      "nameLocations": [
                        "10914:6:14",
                        "10921:14:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1686,
                      "src": "10914:21:14"
                    },
                    "referencedDeclaration": 1686,
                    "src": "10914:21:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EVM2AnyMessage_$1686_storage_ptr",
                      "typeString": "struct Client.EVM2AnyMessage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10913:30:14"
            },
            "scope": 894,
            "src": "10770:836:14",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 654,
              "nodeType": "Block",
              "src": "11900:2:14",
              "statements": []
            },
            "documentation": {
              "id": 651,
              "nodeType": "StructuredDocumentation",
              "src": "11612:256:14",
              "text": "@notice Fallback function to allow the contract to receive Ether.\n @dev This function has no function body, making it a default function for receiving Ether.\n It is automatically called when Ether is sent to the contract without any data."
            },
            "id": 655,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 652,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11880:2:14"
            },
            "returnParameters": {
              "id": 653,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11900:0:14"
            },
            "scope": 894,
            "src": "11873:29:14",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 715,
              "nodeType": "Block",
              "src": "12251:614:14",
              "statements": [
                {
                  "assignments": [
                    663
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 663,
                      "mutability": "mutable",
                      "name": "commandWarpAssets",
                      "nameLocation": "12267:17:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 715,
                      "src": "12261:23:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 662,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "12261:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 665,
                  "initialValue": {
                    "hexValue": "31",
                    "id": 664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12287:1:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12261:27:14"
                },
                {
                  "assignments": [
                    667
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 667,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "12312:4:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 715,
                      "src": "12299:17:14",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 666,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "12299:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 674,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 670,
                        "name": "commandWarpAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 663,
                        "src": "12343:17:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 671,
                        "name": "_destinationCCIPid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 657,
                        "src": "12374:18:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 672,
                        "name": "_destinationNodeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 659,
                        "src": "12406:23:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 668,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "12319:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 669,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "12323:6:14",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "12319:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12319:120:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12299:140:14"
                },
                {
                  "expression": {
                    "id": 680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 675,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "12449:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 677,
                        "indexExpression": {
                          "id": 676,
                          "name": "activeNode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85,
                          "src": "12460:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12449:22:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 678,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "12472:12:14",
                      "memberName": "isActiveNode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 62,
                      "src": "12449:35:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 679,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12487:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "12449:43:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 681,
                  "nodeType": "ExpressionStatement",
                  "src": "12449:43:14"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    },
                    "id": 687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 682,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "12507:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 684,
                        "indexExpression": {
                          "id": 683,
                          "name": "activeNode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85,
                          "src": "12518:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12507:22:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 685,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12530:11:14",
                      "memberName": "chainCCIPid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64,
                      "src": "12507:34:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 686,
                      "name": "MASTER_CONTRACT_CHAIN_ID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58,
                      "src": "12545:24:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "12507:62:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 706,
                    "nodeType": "Block",
                    "src": "12734:91:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 698,
                                  "name": "validNodes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 78,
                                  "src": "12761:10:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                                    "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                                  }
                                },
                                "id": 700,
                                "indexExpression": {
                                  "id": 699,
                                  "name": "activeNode",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 85,
                                  "src": "12772:10:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "12761:22:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                                  "typeString": "struct MasterNode.ValidNodes storage ref"
                                }
                              },
                              "id": 701,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12784:11:14",
                              "memberName": "chainCCIPid",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 64,
                              "src": "12761:34:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            {
                              "id": 702,
                              "name": "activeNode",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 85,
                              "src": "12797:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 703,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 667,
                              "src": "12809:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 697,
                            "name": "_sendMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 613,
                            "src": "12748:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint64_$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (uint64,address,bytes memory) returns (bytes32)"
                            }
                          },
                          "id": 704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12748:66:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 705,
                        "nodeType": "ExpressionStatement",
                        "src": "12748:66:14"
                      }
                    ]
                  },
                  "id": 707,
                  "nodeType": "IfStatement",
                  "src": "12503:322:14",
                  "trueBody": {
                    "id": 696,
                    "nodeType": "Block",
                    "src": "12571:157:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 692,
                              "name": "_destinationCCIPid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 657,
                              "src": "12644:18:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            {
                              "id": 693,
                              "name": "_destinationNodeAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 659,
                              "src": "12680:23:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 689,
                                  "name": "activeNode",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 85,
                                  "src": "12591:10:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 688,
                                "name": "INode",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1926,
                                "src": "12585:5:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_INode_$1926_$",
                                  "typeString": "type(contract INode)"
                                }
                              },
                              "id": 690,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12585:17:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_INode_$1926",
                                "typeString": "contract INode"
                              }
                            },
                            "id": 691,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12603:23:14",
                            "memberName": "warpAssetsFromSameChain",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1925,
                            "src": "12585:41:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint64_$_t_address_$returns$__$",
                              "typeString": "function (uint64,address) external"
                            }
                          },
                          "id": 694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12585:132:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 695,
                        "nodeType": "ExpressionStatement",
                        "src": "12585:132:14"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 708,
                      "name": "activeNode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85,
                      "src": "12835:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12856:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "12848:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 709,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12848:7:14",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 712,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12848:10:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12835:23:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 714,
                  "nodeType": "ExpressionStatement",
                  "src": "12835:23:14"
                }
              ]
            },
            "functionSelector": "5c292be5",
            "id": 716,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "warpAssets",
            "nameLocation": "12149:10:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 657,
                  "mutability": "mutable",
                  "name": "_destinationCCIPid",
                  "nameLocation": "12176:18:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 716,
                  "src": "12169:25:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 656,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "12169:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 659,
                  "mutability": "mutable",
                  "name": "_destinationNodeAddress",
                  "nameLocation": "12212:23:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 716,
                  "src": "12204:31:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 658,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12204:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12159:82:14"
            },
            "returnParameters": {
              "id": 661,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12251:0:14"
            },
            "scope": 894,
            "src": "12140:725:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 786,
              "nodeType": "Block",
              "src": "13146:564:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 722,
                            "name": "validNodes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78,
                            "src": "13164:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                              "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                            }
                          },
                          "id": 724,
                          "indexExpression": {
                            "id": 723,
                            "name": "activeNode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85,
                            "src": "13175:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13164:22:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                            "typeString": "struct MasterNode.ValidNodes storage ref"
                          }
                        },
                        "id": 725,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13187:12:14",
                        "memberName": "isActiveNode",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 62,
                        "src": "13164:35:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f6465206973206e6f7420416374697665",
                        "id": 726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13201:20:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_036926b7eb2047bdf695035566f1e9989601a3dea1b4917f558eca27485e05b9",
                          "typeString": "literal_string \"Node is not Active\""
                        },
                        "value": "Node is not Active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_036926b7eb2047bdf695035566f1e9989601a3dea1b4917f558eca27485e05b9",
                          "typeString": "literal_string \"Node is not Active\""
                        }
                      ],
                      "id": 721,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13156:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13156:66:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 728,
                  "nodeType": "ExpressionStatement",
                  "src": "13156:66:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 730,
                          "name": "shares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 718,
                          "src": "13241:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 732,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "13261:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 733,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13265:6:14",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "13261:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 731,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 993,
                            "src": "13251:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 734,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13251:21:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13241:31:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f756768742062616c616e6365",
                        "id": 736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13274:21:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8b745e1e49bc3a21dc0e85a5fcefdac1a659905f53d03b0cfc0a9455e9c5156d",
                          "typeString": "literal_string \"Not enought balance\""
                        },
                        "value": "Not enought balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8b745e1e49bc3a21dc0e85a5fcefdac1a659905f53d03b0cfc0a9455e9c5156d",
                          "typeString": "literal_string \"Not enought balance\""
                        }
                      ],
                      "id": 729,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13233:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13233:63:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 738,
                  "nodeType": "ExpressionStatement",
                  "src": "13233:63:14"
                },
                {
                  "assignments": [
                    740
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 740,
                      "mutability": "mutable",
                      "name": "commandWitdraw",
                      "nameLocation": "13313:14:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 786,
                      "src": "13307:20:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 739,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "13307:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 742,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "13330:1:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13307:24:14"
                },
                {
                  "assignments": [
                    744
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 744,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "13355:4:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 786,
                      "src": "13342:17:14",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 743,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "13342:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 752,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 747,
                        "name": "commandWitdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 740,
                        "src": "13373:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "expression": {
                          "id": 748,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "13389:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13393:6:14",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "13389:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 750,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 718,
                        "src": "13401:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 745,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "13362:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 746,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "13366:6:14",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "13362:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13362:46:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13342:66:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 754,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "13425:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13429:6:14",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "13425:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 756,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 718,
                        "src": "13437:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 753,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1370,
                      "src": "13419:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13419:25:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 758,
                  "nodeType": "ExpressionStatement",
                  "src": "13419:25:14"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    },
                    "id": 764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 759,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "13459:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 761,
                        "indexExpression": {
                          "id": 760,
                          "name": "activeNode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85,
                          "src": "13470:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13459:22:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 762,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13482:11:14",
                      "memberName": "chainCCIPid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64,
                      "src": "13459:34:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 763,
                      "name": "MASTER_CONTRACT_CHAIN_ID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58,
                      "src": "13497:24:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "13459:62:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 784,
                    "nodeType": "Block",
                    "src": "13613:91:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 776,
                                  "name": "validNodes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 78,
                                  "src": "13640:10:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                                    "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                                  }
                                },
                                "id": 778,
                                "indexExpression": {
                                  "id": 777,
                                  "name": "activeNode",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 85,
                                  "src": "13651:10:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "13640:22:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                                  "typeString": "struct MasterNode.ValidNodes storage ref"
                                }
                              },
                              "id": 779,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13663:11:14",
                              "memberName": "chainCCIPid",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 64,
                              "src": "13640:34:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            {
                              "id": 780,
                              "name": "activeNode",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 85,
                              "src": "13676:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 781,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 744,
                              "src": "13688:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 775,
                            "name": "_sendMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 613,
                            "src": "13627:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint64_$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (uint64,address,bytes memory) returns (bytes32)"
                            }
                          },
                          "id": 782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13627:66:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 783,
                        "nodeType": "ExpressionStatement",
                        "src": "13627:66:14"
                      }
                    ]
                  },
                  "id": 785,
                  "nodeType": "IfStatement",
                  "src": "13455:249:14",
                  "trueBody": {
                    "id": 774,
                    "nodeType": "Block",
                    "src": "13523:84:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 769,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "13577:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 770,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13581:6:14",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "13577:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 771,
                              "name": "shares",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 718,
                              "src": "13589:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 766,
                                  "name": "activeNode",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 85,
                                  "src": "13543:10:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 765,
                                "name": "INode",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1926,
                                "src": "13537:5:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_INode_$1926_$",
                                  "typeString": "type(contract INode)"
                                }
                              },
                              "id": 767,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13537:17:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_INode_$1926",
                                "typeString": "contract INode"
                              }
                            },
                            "id": 768,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13555:21:14",
                            "memberName": "withdrawFromSameChain",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1918,
                            "src": "13537:39:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13537:59:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 773,
                        "nodeType": "ExpressionStatement",
                        "src": "13537:59:14"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "2e1a7d4d",
            "id": 787,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "13112:8:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 719,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 718,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "13129:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 787,
                  "src": "13121:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 717,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13121:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13120:16:14"
            },
            "returnParameters": {
              "id": 720,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13146:0:14"
            },
            "scope": 894,
            "src": "13103:607:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 868,
              "nodeType": "Block",
              "src": "14070:704:14",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 856,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 835,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 825,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 815,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 808,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 801,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 796,
                                          "name": "validNodes",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 78,
                                          "src": "14136:10:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                                          }
                                        },
                                        "id": 798,
                                        "indexExpression": {
                                          "id": 797,
                                          "name": "_activeNode",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 789,
                                          "src": "14147:11:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "14136:23:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                                          "typeString": "struct MasterNode.ValidNodes storage ref"
                                        }
                                      },
                                      "id": 799,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "14160:12:14",
                                      "memberName": "isActiveNode",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 62,
                                      "src": "14136:36:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "74727565",
                                      "id": 800,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "bool",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "14176:4:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "value": "true"
                                    },
                                    "src": "14136:44:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "&&",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 807,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 802,
                                          "name": "validNodes",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 78,
                                          "src": "14196:10:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                                          }
                                        },
                                        "id": 804,
                                        "indexExpression": {
                                          "id": 803,
                                          "name": "_activeNode",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 789,
                                          "src": "14207:11:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "14196:23:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                                          "typeString": "struct MasterNode.ValidNodes storage ref"
                                        }
                                      },
                                      "id": 805,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "14220:16:14",
                                      "memberName": "lastDataFromAave",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 66,
                                      "src": "14196:40:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 806,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "14239:1:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "14196:44:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "14136:104:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 814,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 809,
                                        "name": "validNodes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 78,
                                        "src": "14256:10:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                                          "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                                        }
                                      },
                                      "id": 811,
                                      "indexExpression": {
                                        "id": 810,
                                        "name": "destinationNode",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 791,
                                        "src": "14267:15:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "14256:27:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                                        "typeString": "struct MasterNode.ValidNodes storage ref"
                                      }
                                    },
                                    "id": 812,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "14284:16:14",
                                    "memberName": "lastDataFromAave",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 66,
                                    "src": "14256:44:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 813,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "14303:1:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "14256:48:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "14136:168:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 824,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 821,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 816,
                                        "name": "validNodes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 78,
                                        "src": "14320:10:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                                          "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                                        }
                                      },
                                      "id": 818,
                                      "indexExpression": {
                                        "id": 817,
                                        "name": "_activeNode",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 789,
                                        "src": "14331:11:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "14320:23:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                                        "typeString": "struct MasterNode.ValidNodes storage ref"
                                      }
                                    },
                                    "id": 819,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "14344:16:14",
                                    "memberName": "lastDataFromAave",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 66,
                                    "src": "14320:40:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "hexValue": "33363030",
                                    "id": 820,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "14363:4:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_3600_by_1",
                                      "typeString": "int_const 3600"
                                    },
                                    "value": "3600"
                                  },
                                  "src": "14320:47:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "expression": {
                                    "id": 822,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "14370:5:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 823,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "14376:9:14",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "14370:15:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "14320:65:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "14136:249:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 834,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 831,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 826,
                                      "name": "validNodes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 78,
                                      "src": "14401:10:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                                        "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                                      }
                                    },
                                    "id": 828,
                                    "indexExpression": {
                                      "id": 827,
                                      "name": "destinationNode",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 791,
                                      "src": "14412:15:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "14401:27:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                                      "typeString": "struct MasterNode.ValidNodes storage ref"
                                    }
                                  },
                                  "id": 829,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "14429:16:14",
                                  "memberName": "lastDataFromAave",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 66,
                                  "src": "14401:44:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "hexValue": "33363030",
                                  "id": 830,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "14448:4:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_3600_by_1",
                                    "typeString": "int_const 3600"
                                  },
                                  "value": "3600"
                                },
                                "src": "14401:51:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "expression": {
                                  "id": 832,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "14467:5:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 833,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "14473:9:14",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "14467:15:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "14401:81:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "14136:346:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 841,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 836,
                                  "name": "validNodes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 78,
                                  "src": "14498:10:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                                    "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                                  }
                                },
                                "id": 838,
                                "indexExpression": {
                                  "id": 837,
                                  "name": "destinationNode",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 791,
                                  "src": "14509:15:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "14498:27:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                                  "typeString": "struct MasterNode.ValidNodes storage ref"
                                }
                              },
                              "id": 839,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14526:11:14",
                              "memberName": "isValidNode",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 60,
                              "src": "14498:39:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "74727565",
                              "id": 840,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14541:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            "src": "14498:47:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "14136:409:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 848,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 843,
                                "name": "validNodes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 78,
                                "src": "14561:10:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                                  "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                                }
                              },
                              "id": 845,
                              "indexExpression": {
                                "id": 844,
                                "name": "destinationNode",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 791,
                                "src": "14572:15:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "14561:27:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                                "typeString": "struct MasterNode.ValidNodes storage ref"
                              }
                            },
                            "id": 846,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14589:12:14",
                            "memberName": "isActiveNode",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 62,
                            "src": "14561:40:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "66616c7365",
                            "id": 847,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14605:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "14561:49:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "14136:474:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 850,
                              "name": "validNodes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78,
                              "src": "14626:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                                "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                              }
                            },
                            "id": 852,
                            "indexExpression": {
                              "id": 851,
                              "name": "_activeNode",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 789,
                              "src": "14637:11:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14626:23:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                              "typeString": "struct MasterNode.ValidNodes storage ref"
                            }
                          },
                          "id": 853,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14650:10:14",
                          "memberName": "supplyRate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 72,
                          "src": "14626:34:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 854,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14663:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "14626:38:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "14136:528:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 865,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 857,
                            "name": "validNodes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78,
                            "src": "14680:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                              "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                            }
                          },
                          "id": 859,
                          "indexExpression": {
                            "id": 858,
                            "name": "_activeNode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 789,
                            "src": "14691:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14680:23:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                            "typeString": "struct MasterNode.ValidNodes storage ref"
                          }
                        },
                        "id": 860,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14704:10:14",
                        "memberName": "supplyRate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 72,
                        "src": "14680:34:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 861,
                            "name": "validNodes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78,
                            "src": "14729:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                              "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                            }
                          },
                          "id": 863,
                          "indexExpression": {
                            "id": 862,
                            "name": "destinationNode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 791,
                            "src": "14740:15:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14729:27:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                            "typeString": "struct MasterNode.ValidNodes storage ref"
                          }
                        },
                        "id": 864,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14757:10:14",
                        "memberName": "supplyRate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 72,
                        "src": "14729:38:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "14680:87:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "14136:631:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 795,
                  "id": 867,
                  "nodeType": "Return",
                  "src": "14117:650:14"
                }
              ]
            },
            "functionSelector": "1d880928",
            "id": 869,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkApprovedWarp",
            "nameLocation": "13957:17:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 792,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 789,
                  "mutability": "mutable",
                  "name": "_activeNode",
                  "nameLocation": "13992:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 869,
                  "src": "13984:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 788,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13984:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 791,
                  "mutability": "mutable",
                  "name": "destinationNode",
                  "nameLocation": "14021:15:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 869,
                  "src": "14013:23:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 790,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14013:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13974:68:14"
            },
            "returnParameters": {
              "id": 795,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 794,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 869,
                  "src": "14064:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 793,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14064:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14063:6:14"
            },
            "scope": 894,
            "src": "13948:826:14",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 892,
              "nodeType": "Block",
              "src": "14970:168:14",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 874,
                      "name": "activeNode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85,
                      "src": "14984:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15006:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "14998:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 875,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14998:7:14",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 878,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14998:10:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "14984:24:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 886,
                  "nodeType": "IfStatement",
                  "src": "14980:100:14",
                  "trueBody": {
                    "id": 885,
                    "nodeType": "Block",
                    "src": "15010:70:14",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 880,
                              "name": "validNodes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78,
                              "src": "15031:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                                "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                              }
                            },
                            "id": 882,
                            "indexExpression": {
                              "id": 881,
                              "name": "lastActiveNode",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 83,
                              "src": "15042:14:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15031:26:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                              "typeString": "struct MasterNode.ValidNodes storage ref"
                            }
                          },
                          "id": 883,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15058:11:14",
                          "memberName": "chainCCIPid",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 64,
                          "src": "15031:38:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "functionReturnParameters": 873,
                        "id": 884,
                        "nodeType": "Return",
                        "src": "15024:45:14"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 887,
                        "name": "validNodes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "15097:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                          "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                        }
                      },
                      "id": 889,
                      "indexExpression": {
                        "id": 888,
                        "name": "activeNode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85,
                        "src": "15108:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "15097:22:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                        "typeString": "struct MasterNode.ValidNodes storage ref"
                      }
                    },
                    "id": 890,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "15120:11:14",
                    "memberName": "chainCCIPid",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 64,
                    "src": "15097:34:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "functionReturnParameters": 873,
                  "id": 891,
                  "nodeType": "Return",
                  "src": "15090:41:14"
                }
              ]
            },
            "functionSelector": "1803c2f5",
            "id": 893,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getChainIdFromActiveNode",
            "nameLocation": "14912:24:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 870,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14936:2:14"
            },
            "returnParameters": {
              "id": 873,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 872,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 893,
                  "src": "14962:6:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 871,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "14962:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14961:8:14"
            },
            "scope": 894,
            "src": "14903:235:14",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 895,
        "src": "783:14357:14",
        "usedErrors": [
          29,
          31,
          39,
          43,
          47,
          51,
          53,
          1582
        ]
      }
    ],
    "src": "32:15109:14"
  },
  "bytecode": "60c0346200044557601f19906001600160401b0390601f9062002ae038819003838101861683019190858311848410176200044a578084926060946040528339810103126200044557620000538162000480565b9060209260406200006685840162000480565b92015194808616860362000445576200007e62000460565b91600983526815d85c9c165a595b1960ba1b868401526200009e62000460565b6004808252630615752560e41b88830152986001600160a01b0396808816156200042d576080523315620003e957600080546001600160a01b03199081163317825586519099919290868111620002f9576005908154986001998a81811c91168015620003de575b86821014620003ca5790818984931162000379575b508590898311600114620003185787926200030c575b5050600019600383901b1c191690891b1781555b8451968711620002f957600654908882811c92168015620002ee575b84831014620002da578798999a9b9c9d508682116200027d575b50508194861160011462000217575050926200020b575b5050600019600383901b1c191690821b176006555b60ff1960095416176009551690600754161760075560a05260405161264a90816200049682396080518181816103340152610763015260a05181818161046d01528181610523015281816106ff01528181610d96015281816114c50152611e700152f35b01519050388062000192565b600683528183208897909594939116915b82821062000263575050841162000249575b505050811b01600655620001a7565b015160001960f88460031b161c191690553880806200023a565b848401518655889790950194938401939081019062000228565b9091929394959650600685528385209087808a01821c830193868b10620002d0575b918a998c93999897969594929901901c01915b828110620002c157506200017b565b8581558998508a9101620002b2565b935082936200029f565b50634e487b7160e01b845260228d52602484fd5b91607f169162000161565b634e487b7160e01b845260418d52602484fd5b01519050388062000131565b90858c94169185895287892092895b8982821062000362575050841162000348575b505050811b01815562000145565b015160001960f88460031b161c191690553880806200033a565b8385015186558f9790950194938401930162000327565b90915083875285872089808501861c820192888610620003c0575b918d918695949301871c01915b828110620003b15750506200011b565b8981558594508d9101620003a1565b9250819262000394565b8f876022602492634e487b7160e01b835252fd5b90607f169062000106565b60405162461bcd60e51b8152808b01899052601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f00000000000000006044820152606490fd5b6040516335fdcccd60e21b81526000818d0152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b60408051919082016001600160401b038111838210176200044a57604052565b51906001600160a01b0382168203620004455756fe60806040818152600480361015610021575b505050361561001f57600080fd5b005b600092833560e01c90816301ffc9a714611eb75750806304783ea414611e3757806306fdde0314611d6a578063095ea7b314611d4057806310a78df814611c285780631803c2f514611bfb57806318160ddd14611bde5780631d88092814611a7457806323b872dd146119a85780632e1a7d4d146113d7578063313ce567146113bb578063395093511461136c578063544b17091461123a578381635c292be514610d0b5750806361ac3f9914610cde578063654e8e0c14610cba5780636c1dc07714610c915780636c98d51314610c6b57806370a0823114610c3357806379ba509714610b8c57806385572ffb146107235780638cf19d19146106df5780638da5cb5b146106b757806395d89b411461059c5780639637120f146104f1578063995714ae1461043d578063a457c2d714610394578063a9059cbb14610363578063b0f479a11461031f578063b2d9295514610298578063dd62ed3e146102465763f2fde38b036100115734610242576020366003190112610242576101a5611f0b565b906101ae6125c2565b6001600160a01b03918216923384146101ff575050600180546001600160a01b031916831790558254167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12788380a380f35b906020606492519162461bcd60e51b8352820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152fd5b8280fd5b505034610294578060031936011261029457602091610263611f0b565b8261026c611f21565b6001600160a01b03928316845260038652922091166000908152908352819020549051908152f35b5080fd5b5090346102425760203660031901126102425760e09281906001600160a01b036102c0611f0b565b16815260086020522080549260018201546002830154916003840154930154936001600160401b0381519660ff81161515885260ff8160081c161515602089015260101c16908601526060850152608084015260a083015260c0820152f35b505034610294578160031936011261029457517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50503461029457806003193601126102945760209061038d610383611f0b565b6024359033612253565b5160018152f35b50823461043a578260031936011261043a576103ae611f0b565b91836024359233815260036020522060018060a01b0384166000526020528360002054908282106103e95760208561038d8585038733612467565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b80fd5b503461024257826003193601126102425733835260086020526104936001600160401b03808486205460101c16907f00000000000000000000000000000000000000000000000000000000000000001614612099565b338352600860205260ff8284205416156104db57503382526008602052812061010061ff0019825416179055336bffffffffffffffffffffffff60a01b600a541617600a5580f35b6024915190636a9ff79f60e11b82523390820152fd5b5090346102425760603660031901126102425733835260086020526105496001600160401b03808386205460101c16907f00000000000000000000000000000000000000000000000000000000000000001614612099565b338352600860205260ff818420541615610585573383526008602052822042600182015581356002820155602435600382015560443591015580f35b602492505190636a9ff79f60e11b82523390820152fd5b50913461043a578060031936011261043a578151918160065492600184811c918186169586156106ad575b602096878510811461069a578899509688969785829a529182600014610673575050600114610617575b5050506106139291610604910385612022565b51928284938452830190611f37565b0390f35b9190869350600683527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f5b82841061065b57505050820101816106046106136105f1565b8054848a018601528895508794909301928101610642565b60ff19168782015293151560051b86019093019350849250610604915061061390506105f1565b634e487b7160e01b835260228a52602483fd5b92607f16926105c7565b505034610294578160031936011261029457905490516001600160a01b039091168152602090f35b505034610294578160031936011261029457602090516001600160401b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b50903461024257602091600319838136011261090c578135906001600160401b0390818311610a635760a090833603011261098e576001600160a01b03927f000000000000000000000000000000000000000000000000000000000000000084163303610b755784519161079683611f8d565b838201358352602490818501358181168103610b5057888501526044850135818111610a6b576107cb90843691880101612043565b938781019485526064860135828111610b6d576107ed90853691890101612043565b9560608201968752608481013590838211610b71570136602382011215610b6d5784810135928311610b595788519261082b8b8260051b0185612022565b808452848b85019160061b83010191368311610b55578501905b828210610b16575050506080015282518781805181010312610a675761086d88879201612569565b168089526008885260ff878a20541615610b01575082518781805181010312610a675761089c88879201612569565b1688526008875260ff868920541615610ab05783518781805181010312610a67576108ca8860ff920161257d565b16806109105750505050519160608380518101031261090c576108ff6060916108f761090996860161257d565b508401612569565b92015191166123c3565b80f35b8480fd5b600181989795939496981460001461099257505050508151838180518101031261098e5761094084869201612569565b16855260088352842061010061ff00198254161790555190808280518101031261098a5761096e9101612569565b166bffffffffffffffffffffffff60a01b600a541617600a5580f35b8380fd5b8580fd5b6002909794959796939614600014610a6f57505194608086805181010312610a63576109bf82870161257d565b508386015195608060608201519101519682518481805181010312610a6b576109ea85879201612569565b16895260088452426001878b20015582518481805181010312610a6b57610a1385879201612569565b1689526002868a20015581518381805181010312610a6757610a3784869201612569565b1688526003858920015551908082805181010312610a6357610a599101612569565b1684528320015580f35b8680fd5b8880fd5b8980fd5b8560196064928588519362461bcd60e51b85528401528201527f696e76616c696420636f6d6d616e642066726f6d204e6f6465000000000000006044820152fd5b855162461bcd60e51b81529182018790526026908201527f496e636f6d696e67204d657373616765206e6f742066726f6d20612076616c6960448201526564206e6f646560d01b6064820152608490fd5b8651636a9ff79f60e11b815280840191909152fd5b8a82360312610b55578a5190610b2b82611fec565b8235908b82168203610b5057828e928e94528285013583820152815201910190610845565b600080fd5b8c80fd5b83604186634e487b7160e01b600052526000fd5b8a80fd5b8b80fd5b6024908551906335fdcccd60e21b82523390820152fd5b509034610242578260031936011261024257600154916001600160a01b03918284163303610bf757505082546001600160a01b03198082163390811786559316600155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020606492519162461bcd60e51b8352820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b6044820152fd5b5050346102945760203660031901126102945760209181906001600160a01b03610c5b611f0b565b1681526002845220549051908152f35b833461043a578060031936011261043a57610c846125c2565b60ff196009541660095580f35b505034610294578160031936011261029457600a5490516001600160a01b039091168152602090f35b50503461029457816003193601126102945760209060ff6009541690519015158152f35b505034610294578160031936011261029457600954905160089190911c6001600160a01b03168152602090f35b92905034611236578060031936011261123657610d26611f77565b91610d2f611f21565b82519060206001818401526001600160401b0380961692838682015260018060a01b038093169660608881840152808352610d6983612007565b84600a54168a5260088452878a2061ff0019815416905584600a541692838b52888b2054838160101c16937f0000000000000000000000000000000000000000000000000000000000000000168414600014610e3157505050505050600a5416803b1561098e5785928360449286519788958694634bb297ff60e11b865285015260248401525af1908115610e285750610e14575b50505b600a80546001600160a01b031916905580f35b610e1d90611fd9565b61043a578038610dfe565b513d84823e3d90fd5b91949a509297985060ff919550959395161561121f57846007541682819360808a51610e5c81611f8d565b828152828d820152828c8201528d8382015201528851978a890152898852610e8388611fec565b8851610e8e81611fbe565b60008152610eab8a51610ea081611fbe565b621e8480815261258b565b938a5199610eb88b611f8d565b8a528b8a0152898901528701526080860152855163b0f479a160e01b815287818481305afa908115611215579085918a916111db575b501693888751926320487ded60e01b8452898480610f0f8b8a8a84016120f3565b03818a5afa9384156111d157908a91839561119f575b5060648a51809481936323b872dd60e01b8352338a8401523060248401528860448401525af1908115611195578a91611178575b501561113557600754169086516370a0823160e01b9081815230858201528981602481875afa90811561112b578b916110fe575b5082116110825750865163095ea7b360e01b81526001600160a01b038616818501908152602081019290925289939290918991839182908790829060400103925af180156110785791889593916110019897959361104b575b5086516396f4e9f960e01b81529788958694859384016120f3565b03925af19081156110425750611019575b5050610e01565b813d831161103b575b61102c8183612022565b8101031261043a573880611012565b503d611022565b513d85823e3d90fd5b61106a90873d8911611071575b6110628183612022565b8101906121bf565b5038610fe6565b503d611058565b87513d85823e3d90fd5b9089888a80879560248451809981938252308a8301525afa9283156110f357926110c2575b5051634787a10360e11b815292830152602482015260449150fd5b90915084813d83116110ec575b6110d98183612022565b81010312610b50576044935190856110a7565b503d6110cf565b8251903d90823e3d90fd5b90508981813d8311611124575b6111158183612022565b81010312610b50575138610f8d565b503d61110b565b89513d8d823e3d90fd5b865162461bcd60e51b8152808401899052601a60248201527f4e6f742070726f7669646564204c696e6b20666f7220666565730000000000006044820152606490fd5b61118f9150893d8b11611071576110628183612022565b38610f59565b88513d8c823e3d90fd5b9250935081813d83116111ca575b6111b78183612022565b81010312610b5057888a91519338610f25565b503d6111ad565b89513d84823e3d90fd5b809250898092503d831161120e575b6111f48183612022565b81010312610a6757518481168103610a6757849038610eee565b503d6111ea565b87513d8b823e3d90fd5b8651636a9ff79f60e11b8152808401879052602490fd5b5050fd5b50913461043a5760a036600319011261043a57611255611f77565b9161125e611f21565b6001600160a01b03936044358581169190829003610b505760643590868216809203610b5057608435976001600160401b038911610a63576112a96113259697989936908301612043565b87519460209a8b9716878701528686526112c286611fec565b88516112cd81611fbe565b600081526112ea8a516112df81611fbe565b620f4240815261258b565b928a51976112f789611f8d565b885288880152898701526060860152608085015286516320487ded60e01b81529586948593849384016120f3565b03915afa9283156110f3579261133d575b5051908152f35b9091508281813d8311611365575b6113558183612022565b81010312610b5057519038611336565b503d61134b565b50503461029457806003193601126102945761038d6020928261138d611f0b565b91338152600386522060018060a01b03821660005284526113b460243584600020546121d7565b9033612467565b5050346102945781600319360112610294576020905160128152f35b50829034610294576020928360031936011261024257600a546001600160a01b039081168452600880865282852054843592911c60ff1615611970573385526002865282852054821161193757825195858188015233848801526060838189015280885261144488612007565b33156118ea5733875260028252848720549784891061189c57848899989697983388526002855203878720558488540388558587518681527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef853392a383600a5416918287526008845287872054916001600160401b0392838160101c16937f000000000000000000000000000000000000000000000000000000000000000016841460001461154557505050505050600a5416803b156102425783516315e005b760e31b8152339581019586526020860192909252909384919082908490829060400103925af1908115610e28575061153c575080f35b61090990611fd9565b909295965060ff91939750989398161561121f57846007541682819360808a5161156e81611f8d565b828152828d820152828c8201528d8382015201528851978a89015289885261159588611fec565b88516115a081611fbe565b8b81526115b18a51610ea081611fbe565b938a51996115be8b611f8d565b8a528b8a0152898901528701526080860152855163b0f479a160e01b815287818481305afa908115611215579085918a91611862575b501693888751926320487ded60e01b84528984806116158b8a8a84016120f3565b03818a5afa9384156111d157908a918395611831575b5060648a51809481936323b872dd60e01b8352338a8401523060248401528860448401525af1908115611195578a91611814575b50156111355790889291600754169087516370a0823160e01b9081815230858201528a81602481875afa90811561180a5786916117dd575b50821161175e5750875163095ea7b360e01b81526001600160a01b038716848201908152602081019290925291899183919082908790829060400103925af1801561107857918895939161170798979593611741575086516396f4e9f960e01b81529788958694859384016120f3565b03925af1908115611042575061171c57505080f35b813d831161173a575b61172f8183612022565b8101031261043a5780f35b503d611725565b61175790873d8911611071576110628183612022565b508a610fe6565b899192828a9260248451809481938252308a8301525afa9283156117d357869361179f575b505051634787a10360e11b815292830152602482015260449150fd5b9080929350813d83116117cc575b6117b78183612022565b8101031261090c576044945051908580611783565b503d6117ad565b82513d88823e3d90fd5b90508a81813d8311611803575b6117f48183612022565b8101031261098e57518c611697565b503d6117ea565b8a513d88823e3d90fd5b61182b9150893d8b11611071576110628183612022565b8a61165f565b8281939296503d831161185b575b6118498183612022565b8101031261029457899051938c61162b565b503d61183f565b809250898092503d8311611895575b61187b8183612022565b81010312610a6757518481168103610a675784908a6115f4565b503d611871565b855162461bcd60e51b8152808801849052602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608490fd5b845162461bcd60e51b8152808701839052602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608490fd5b825162461bcd60e51b815280850187905260136024820152724e6f7420656e6f756768742062616c616e636560681b6044820152606490fd5b825162461bcd60e51b815280850187905260126024820152714e6f6465206973206e6f742041637469766560701b6044820152606490fd5b50829034610294576060366003190112610294576119c4611f0b565b6119cc611f21565b6001600160a01b03821684526003602090815285852033865290529284902054604435939260018201611a08575b60208661038d878787612253565b848210611a315750918391611a266020969561038d95033383612467565b9193948193506119fa565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b50913461043a578160031936011261043a57611a8e611f0b565b92611a97611f21565b9060018060a01b03809516928381526008956020968088528683209560018060ff8954851c161515149788611bd1575b5087611bbd575b87611b9e575b87611b67575b87611b4d575b5086611b34575b86611b1f575b86611afe575b888789519015158152f35b83528752858220830154931681528490200154119050388080808080611af3565b80845281895287842085015415159650611aed565b858316845281895287842054821c60ff16159650611ae7565b8684168552828a528885205460ff16151514965038611ae0565b96508286168452818952868885200154610e108101809111611b8b57421096611ada565b634e487b7160e01b855260118652602485fd5b9650808452868885200154610e108101809111611b8b57421096611ad4565b868416855288852081015415159750611ace565b8101541515975038611ac7565b503461024257826003193601126102425760209250549051908152f35b5050346102945781600319360112610294576020906001600160401b03611c206121fa565b915191168152f35b503461024257606036600319011261024257611c42611f0b565b90602435906001600160401b038216820361090c576044359182151591828403610a6357611c6e6125c2565b60ff6009541615611d055750600190818060a01b03851695868852600860205287209261ff0069ffffffffffffffff000085549360101b169269ffffffffffffffffffff19169160081b161717179055611cc6578280f35b60098054610100600160a81b03191660089290921b610100600160a81b0316919091179055600a80546001600160a01b03191691909117905538808280f35b606490602087519162461bcd60e51b83528201526015602482015274139bc81b5bdc99481b9bd9195cc8185b1b1bddd959605a1b6044820152fd5b50503461029457806003193601126102945760209061038d611d60611f0b565b6024359033612467565b50913461043a578060031936011261043a578151918160055492600184811c91818616958615611e2d575b602096878510811461069a578899509688969785829a529182600014610673575050600114611dd1575050506106139291610604910385612022565b9190869350600583527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db05b828410611e1557505050820101816106046106136105f1565b8054848a018601528895508794909301928101611dfc565b92607f1692611d95565b5034610242578160031936011261024257611e50611f0b565b913384526008602052611e966001600160401b03808387205460101c16907f00000000000000000000000000000000000000000000000000000000000000001614612099565b338452600860205260ff8185205416156105855783610909602435856123c3565b92505034610242576020366003190112610242573563ffffffff60e01b811680910361024257602092506385572ffb60e01b8114908115611efa575b5015158152f35b6301ffc9a760e01b14905038611ef3565b600435906001600160a01b0382168203610b5057565b602435906001600160a01b0382168203610b5057565b919082519283825260005b848110611f63575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611f42565b600435906001600160401b0382168203610b5057565b60a081019081106001600160401b03821117611fa857604052565b634e487b7160e01b600052604160045260246000fd5b602081019081106001600160401b03821117611fa857604052565b6001600160401b038111611fa857604052565b604081019081106001600160401b03821117611fa857604052565b608081019081106001600160401b03821117611fa857604052565b90601f801991011681019081106001600160401b03821117611fa857604052565b81601f82011215610b50578035906001600160401b038211611fa85760405192612077601f8401601f191660200185612022565b82845260208383010111610b5057816000926020809301838601378301015290565b156120a057565b60405162461bcd60e51b815260206004820152602560248201527f52657175697265206d617374657220616e64206e6f646520696e2073616d652060448201526431b430b4b760d91b6064820152608490fd5b906001600160401b039093929316815260406020918183820152612122855160a08484015260e0830190611f37565b9161213e8487015193603f199485858303016060860152611f37565b8187015194848483030160808501528080875193848152019601926000905b83821061219657505050505060c06080612193959660018060a01b0360608201511660a085015201519282850301910152611f37565b90565b845180516001600160a01b0316895283015188840152968701969382019360019091019061215d565b90816020910312610b5057518015158103610b505790565b919082018092116121e457565b634e487b7160e01b600052601160045260246000fd5b600a546001600160a01b0390811690811561222d575060005260086020526001600160401b0360406000205460101c1690565b905060095460081c1660005260086020526001600160401b0360406000205460101c1690565b6001600160a01b03908116918215612370571691821561231f57600082815260026020526040812054918083106122cb57604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef95876020965260028652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b0316908115612422577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6020826124056000946004546121d7565b6004558484526002825260408420818154019055604051908152a3565b60405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606490fd5b6001600160a01b0390811691821561251857169182156124c85760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260038252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b51906001600160a01b0382168203610b5057565b519060ff82168203610b5057565b604051906397a657c960e01b602083015251602482015260248152606081018181106001600160401b03821117611fa85760405290565b6000546001600160a01b031633036125d657565b60405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b6044820152606490fdfea264697066735822122035ea8df3c4d2759ab972cc81abf188b2b89dd34252ec8bacc82084e85be23acd64736f6c63430008130033",
  "bytecodeSha1": "733703cc11a109161d314e59be56fba23731046f",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.19+commit.7dd6d404"
  },
  "contractName": "MasterNode",
  "coverageMap": {
    "branches": {
      "0": {
        "ERC20._burn": {
          "79": [
            9505,
            9526,
            true
          ],
          "80": [
            9696,
            9720,
            true
          ]
        },
        "ERC20._spendAllowance": {
          "81": [
            11351,
            11388,
            false
          ]
        },
        "ERC20.decreaseAllowance": {
          "78": [
            6809,
            6844,
            true
          ]
        }
      },
      "1": {},
      "10": {},
      "11": {},
      "12": {},
      "13": {},
      "14": {
        "MasterNode._ccipReceive": {
          "68": [
            8088,
            8100,
            false
          ],
          "69": [
            8171,
            8183,
            false
          ],
          "70": [
            8255,
            8267,
            false
          ]
        },
        "MasterNode._sendMessage": {
          "74": [
            9745,
            9788,
            false
          ],
          "75": [
            9621,
            9678,
            true
          ]
        },
        "MasterNode.addValidNode": {
          "76": [
            3389,
            3403,
            true
          ]
        },
        "MasterNode.getChainIdFromActiveNode": {
          "77": [
            14984,
            15008,
            false
          ]
        },
        "MasterNode.warpAssets": {
          "71": [
            12507,
            12569,
            false
          ]
        },
        "MasterNode.withdraw": {
          "72": [
            13241,
            13272,
            true
          ],
          "73": [
            13459,
            13521,
            false
          ]
        }
      },
      "15": {},
      "16": {},
      "2": {},
      "3": {},
      "4": {},
      "5": {},
      "6": {},
      "7": {},
      "8": {},
      "9": {}
    },
    "statements": {
      "0": {
        "ERC20._approve": {
          "62": [
            10627,
            10695
          ],
          "63": [
            10705,
            10773
          ],
          "64": [
            10830,
            10867
          ],
          "65": [
            10784,
            10820
          ]
        },
        "ERC20._burn": {
          "37": [
            9497,
            9564
          ],
          "38": [
            9688,
            9759
          ],
          "39": [
            9973,
            10015
          ]
        },
        "ERC20._mint": {
          "58": [
            8642,
            8707
          ],
          "59": [
            8994,
            9036
          ],
          "60": [
            8778,
            8800
          ],
          "61": [
            8946,
            8974
          ]
        },
        "ERC20._spendAllowance": {
          "42": [
            11404,
            11472
          ],
          "43": [
            11514,
            11565
          ]
        },
        "ERC20._transfer": {
          "54": [
            7591,
            7659
          ],
          "55": [
            7669,
            7733
          ],
          "56": [
            7840,
            7912
          ],
          "57": [
            8205,
            8236
          ]
        },
        "ERC20.approve": {
          "48": [
            4568,
            4600
          ]
        },
        "ERC20.balanceOf": {
          "24": [
            3499,
            3524
          ]
        },
        "ERC20.decimals": {
          "34": [
            3166,
            3175
          ]
        },
        "ERC20.decreaseAllowance": {
          "5": [
            6801,
            6886
          ],
          "6": [
            6920,
            6980
          ]
        },
        "ERC20.increaseAllowance": {
          "33": [
            6013,
            6077
          ]
        },
        "ERC20.name": {
          "49": [
            2233,
            2245
          ]
        },
        "ERC20.symbol": {
          "12": [
            2446,
            2460
          ]
        },
        "ERC20.transfer": {
          "3": [
            3860,
            3888
          ]
        },
        "ERC20.transferFrom": {
          "41": [
            5421,
            5448
          ]
        }
      },
      "1": {},
      "10": {},
      "11": {},
      "12": {},
      "13": {},
      "14": {
        "MasterNode._aWarpTokenMinter": {
          "14": [
            4292,
            4318
          ]
        },
        "MasterNode._buildCCIPMessage": {
          "28": [
            10954,
            11599
          ]
        },
        "MasterNode._ccipReceive": {
          "13": [
            7838,
            8009
          ],
          "21": [
            8344,
            8379
          ]
        },
        "MasterNode._nodeAaveFeed": {
          "17": [
            6184,
            6289
          ],
          "18": [
            6299,
            6403
          ],
          "19": [
            6413,
            6517
          ],
          "20": [
            6527,
            6621
          ]
        },
        "MasterNode._resmumeOperations": {
          "15": [
            5037,
            5127
          ],
          "16": [
            5137,
            5195
          ]
        },
        "MasterNode._resmumeOperationsFromSameChain": {
          "7": [
            5481,
            5504
          ]
        },
        "MasterNode._sendMessage": {
          "29": [
            9600,
            9730
          ],
          "30": [
            9741,
            9869
          ],
          "31": [
            9987,
            10029
          ],
          "32": [
            10121,
            10191
          ]
        },
        "MasterNode.aWarpTokenMinterFromSameChain": {
          "50": [
            4584,
            4610
          ]
        },
        "MasterNode.addValidNode": {
          "45": [
            3381,
            3429
          ],
          "46": [
            3439,
            3481
          ],
          "47": [
            3686,
            3710
          ]
        },
        "MasterNode.checkApprovedWarp": {
          "44": [
            14117,
            14767
          ]
        },
        "MasterNode.getChainIdFromActiveNode": {
          "52": [
            15090,
            15131
          ],
          "53": [
            15024,
            15069
          ]
        },
        "MasterNode.nodeAaveFeedFromSameChain": {
          "8": [
            6920,
            6977
          ],
          "9": [
            6987,
            7043
          ],
          "10": [
            7053,
            7109
          ],
          "11": [
            7119,
            7165
          ]
        },
        "MasterNode.stopAddingNodes": {
          "25": [
            3205,
            3227
          ]
        },
        "MasterNode.warpAssets": {
          "26": [
            12449,
            12492
          ],
          "27": [
            12585,
            12717
          ]
        },
        "MasterNode.withdraw": {
          "35": [
            13156,
            13222
          ],
          "36": [
            13233,
            13296
          ],
          "40": [
            13537,
            13596
          ]
        }
      },
      "15": {},
      "16": {},
      "2": {},
      "3": {
        "Context._msgSender": {
          "4": [
            712,
            729
          ]
        }
      },
      "4": {
        "CCIPReceiver.getRouter": {
          "2": [
            2262,
            2290
          ]
        },
        "CCIPReceiver.supportsInterface": {
          "51": [
            1502,
            1609
          ]
        }
      },
      "5": {},
      "6": {},
      "7": {
        "Client._argsToBytes": {
          "66": [
            1387,
            1450
          ]
        }
      },
      "8": {},
      "9": {
        "ConfirmedOwnerWithProposal._transferOwnership": {
          "0": [
            1629,
            1681
          ],
          "1": [
            1714,
            1758
          ]
        },
        "ConfirmedOwnerWithProposal._validateOwnership": {
          "67": [
            1894,
            1950
          ]
        },
        "ConfirmedOwnerWithProposal.acceptOwnership": {
          "22": [
            1120,
            1183
          ],
          "23": [
            1282,
            1329
          ]
        }
      }
    }
  },
  "dependencies": [
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/CCIPReceiver",
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/Client",
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/ConfirmedOwner",
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/ConfirmedOwnerWithProposal",
    "OpenZeppelin/openzeppelin-contracts@4.8.3/Context",
    "OpenZeppelin/openzeppelin-contracts@4.8.3/ERC20",
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/IAny2EVMMessageReceiver",
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.8.3/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.8.3/IERC20Metadata",
    "INode",
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/IOwnable",
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/IRouterClient",
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/LinkTokenInterface",
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/OwnerIsCreator",
    "UtilsMasterNode"
  ],
  "deployedBytecode": "60806040818152600480361015610021575b505050361561001f57600080fd5b005b600092833560e01c90816301ffc9a714611eb75750806304783ea414611e3757806306fdde0314611d6a578063095ea7b314611d4057806310a78df814611c285780631803c2f514611bfb57806318160ddd14611bde5780631d88092814611a7457806323b872dd146119a85780632e1a7d4d146113d7578063313ce567146113bb578063395093511461136c578063544b17091461123a578381635c292be514610d0b5750806361ac3f9914610cde578063654e8e0c14610cba5780636c1dc07714610c915780636c98d51314610c6b57806370a0823114610c3357806379ba509714610b8c57806385572ffb146107235780638cf19d19146106df5780638da5cb5b146106b757806395d89b411461059c5780639637120f146104f1578063995714ae1461043d578063a457c2d714610394578063a9059cbb14610363578063b0f479a11461031f578063b2d9295514610298578063dd62ed3e146102465763f2fde38b036100115734610242576020366003190112610242576101a5611f0b565b906101ae6125c2565b6001600160a01b03918216923384146101ff575050600180546001600160a01b031916831790558254167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12788380a380f35b906020606492519162461bcd60e51b8352820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152fd5b8280fd5b505034610294578060031936011261029457602091610263611f0b565b8261026c611f21565b6001600160a01b03928316845260038652922091166000908152908352819020549051908152f35b5080fd5b5090346102425760203660031901126102425760e09281906001600160a01b036102c0611f0b565b16815260086020522080549260018201546002830154916003840154930154936001600160401b0381519660ff81161515885260ff8160081c161515602089015260101c16908601526060850152608084015260a083015260c0820152f35b505034610294578160031936011261029457517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50503461029457806003193601126102945760209061038d610383611f0b565b6024359033612253565b5160018152f35b50823461043a578260031936011261043a576103ae611f0b565b91836024359233815260036020522060018060a01b0384166000526020528360002054908282106103e95760208561038d8585038733612467565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b80fd5b503461024257826003193601126102425733835260086020526104936001600160401b03808486205460101c16907f00000000000000000000000000000000000000000000000000000000000000001614612099565b338352600860205260ff8284205416156104db57503382526008602052812061010061ff0019825416179055336bffffffffffffffffffffffff60a01b600a541617600a5580f35b6024915190636a9ff79f60e11b82523390820152fd5b5090346102425760603660031901126102425733835260086020526105496001600160401b03808386205460101c16907f00000000000000000000000000000000000000000000000000000000000000001614612099565b338352600860205260ff818420541615610585573383526008602052822042600182015581356002820155602435600382015560443591015580f35b602492505190636a9ff79f60e11b82523390820152fd5b50913461043a578060031936011261043a578151918160065492600184811c918186169586156106ad575b602096878510811461069a578899509688969785829a529182600014610673575050600114610617575b5050506106139291610604910385612022565b51928284938452830190611f37565b0390f35b9190869350600683527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f5b82841061065b57505050820101816106046106136105f1565b8054848a018601528895508794909301928101610642565b60ff19168782015293151560051b86019093019350849250610604915061061390506105f1565b634e487b7160e01b835260228a52602483fd5b92607f16926105c7565b505034610294578160031936011261029457905490516001600160a01b039091168152602090f35b505034610294578160031936011261029457602090516001600160401b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b50903461024257602091600319838136011261090c578135906001600160401b0390818311610a635760a090833603011261098e576001600160a01b03927f000000000000000000000000000000000000000000000000000000000000000084163303610b755784519161079683611f8d565b838201358352602490818501358181168103610b5057888501526044850135818111610a6b576107cb90843691880101612043565b938781019485526064860135828111610b6d576107ed90853691890101612043565b9560608201968752608481013590838211610b71570136602382011215610b6d5784810135928311610b595788519261082b8b8260051b0185612022565b808452848b85019160061b83010191368311610b55578501905b828210610b16575050506080015282518781805181010312610a675761086d88879201612569565b168089526008885260ff878a20541615610b01575082518781805181010312610a675761089c88879201612569565b1688526008875260ff868920541615610ab05783518781805181010312610a67576108ca8860ff920161257d565b16806109105750505050519160608380518101031261090c576108ff6060916108f761090996860161257d565b508401612569565b92015191166123c3565b80f35b8480fd5b600181989795939496981460001461099257505050508151838180518101031261098e5761094084869201612569565b16855260088352842061010061ff00198254161790555190808280518101031261098a5761096e9101612569565b166bffffffffffffffffffffffff60a01b600a541617600a5580f35b8380fd5b8580fd5b6002909794959796939614600014610a6f57505194608086805181010312610a63576109bf82870161257d565b508386015195608060608201519101519682518481805181010312610a6b576109ea85879201612569565b16895260088452426001878b20015582518481805181010312610a6b57610a1385879201612569565b1689526002868a20015581518381805181010312610a6757610a3784869201612569565b1688526003858920015551908082805181010312610a6357610a599101612569565b1684528320015580f35b8680fd5b8880fd5b8980fd5b8560196064928588519362461bcd60e51b85528401528201527f696e76616c696420636f6d6d616e642066726f6d204e6f6465000000000000006044820152fd5b855162461bcd60e51b81529182018790526026908201527f496e636f6d696e67204d657373616765206e6f742066726f6d20612076616c6960448201526564206e6f646560d01b6064820152608490fd5b8651636a9ff79f60e11b815280840191909152fd5b8a82360312610b55578a5190610b2b82611fec565b8235908b82168203610b5057828e928e94528285013583820152815201910190610845565b600080fd5b8c80fd5b83604186634e487b7160e01b600052526000fd5b8a80fd5b8b80fd5b6024908551906335fdcccd60e21b82523390820152fd5b509034610242578260031936011261024257600154916001600160a01b03918284163303610bf757505082546001600160a01b03198082163390811786559316600155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020606492519162461bcd60e51b8352820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b6044820152fd5b5050346102945760203660031901126102945760209181906001600160a01b03610c5b611f0b565b1681526002845220549051908152f35b833461043a578060031936011261043a57610c846125c2565b60ff196009541660095580f35b505034610294578160031936011261029457600a5490516001600160a01b039091168152602090f35b50503461029457816003193601126102945760209060ff6009541690519015158152f35b505034610294578160031936011261029457600954905160089190911c6001600160a01b03168152602090f35b92905034611236578060031936011261123657610d26611f77565b91610d2f611f21565b82519060206001818401526001600160401b0380961692838682015260018060a01b038093169660608881840152808352610d6983612007565b84600a54168a5260088452878a2061ff0019815416905584600a541692838b52888b2054838160101c16937f0000000000000000000000000000000000000000000000000000000000000000168414600014610e3157505050505050600a5416803b1561098e5785928360449286519788958694634bb297ff60e11b865285015260248401525af1908115610e285750610e14575b50505b600a80546001600160a01b031916905580f35b610e1d90611fd9565b61043a578038610dfe565b513d84823e3d90fd5b91949a509297985060ff919550959395161561121f57846007541682819360808a51610e5c81611f8d565b828152828d820152828c8201528d8382015201528851978a890152898852610e8388611fec565b8851610e8e81611fbe565b60008152610eab8a51610ea081611fbe565b621e8480815261258b565b938a5199610eb88b611f8d565b8a528b8a0152898901528701526080860152855163b0f479a160e01b815287818481305afa908115611215579085918a916111db575b501693888751926320487ded60e01b8452898480610f0f8b8a8a84016120f3565b03818a5afa9384156111d157908a91839561119f575b5060648a51809481936323b872dd60e01b8352338a8401523060248401528860448401525af1908115611195578a91611178575b501561113557600754169086516370a0823160e01b9081815230858201528981602481875afa90811561112b578b916110fe575b5082116110825750865163095ea7b360e01b81526001600160a01b038616818501908152602081019290925289939290918991839182908790829060400103925af180156110785791889593916110019897959361104b575b5086516396f4e9f960e01b81529788958694859384016120f3565b03925af19081156110425750611019575b5050610e01565b813d831161103b575b61102c8183612022565b8101031261043a573880611012565b503d611022565b513d85823e3d90fd5b61106a90873d8911611071575b6110628183612022565b8101906121bf565b5038610fe6565b503d611058565b87513d85823e3d90fd5b9089888a80879560248451809981938252308a8301525afa9283156110f357926110c2575b5051634787a10360e11b815292830152602482015260449150fd5b90915084813d83116110ec575b6110d98183612022565b81010312610b50576044935190856110a7565b503d6110cf565b8251903d90823e3d90fd5b90508981813d8311611124575b6111158183612022565b81010312610b50575138610f8d565b503d61110b565b89513d8d823e3d90fd5b865162461bcd60e51b8152808401899052601a60248201527f4e6f742070726f7669646564204c696e6b20666f7220666565730000000000006044820152606490fd5b61118f9150893d8b11611071576110628183612022565b38610f59565b88513d8c823e3d90fd5b9250935081813d83116111ca575b6111b78183612022565b81010312610b5057888a91519338610f25565b503d6111ad565b89513d84823e3d90fd5b809250898092503d831161120e575b6111f48183612022565b81010312610a6757518481168103610a6757849038610eee565b503d6111ea565b87513d8b823e3d90fd5b8651636a9ff79f60e11b8152808401879052602490fd5b5050fd5b50913461043a5760a036600319011261043a57611255611f77565b9161125e611f21565b6001600160a01b03936044358581169190829003610b505760643590868216809203610b5057608435976001600160401b038911610a63576112a96113259697989936908301612043565b87519460209a8b9716878701528686526112c286611fec565b88516112cd81611fbe565b600081526112ea8a516112df81611fbe565b620f4240815261258b565b928a51976112f789611f8d565b885288880152898701526060860152608085015286516320487ded60e01b81529586948593849384016120f3565b03915afa9283156110f3579261133d575b5051908152f35b9091508281813d8311611365575b6113558183612022565b81010312610b5057519038611336565b503d61134b565b50503461029457806003193601126102945761038d6020928261138d611f0b565b91338152600386522060018060a01b03821660005284526113b460243584600020546121d7565b9033612467565b5050346102945781600319360112610294576020905160128152f35b50829034610294576020928360031936011261024257600a546001600160a01b039081168452600880865282852054843592911c60ff1615611970573385526002865282852054821161193757825195858188015233848801526060838189015280885261144488612007565b33156118ea5733875260028252848720549784891061189c57848899989697983388526002855203878720558488540388558587518681527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef853392a383600a5416918287526008845287872054916001600160401b0392838160101c16937f000000000000000000000000000000000000000000000000000000000000000016841460001461154557505050505050600a5416803b156102425783516315e005b760e31b8152339581019586526020860192909252909384919082908490829060400103925af1908115610e28575061153c575080f35b61090990611fd9565b909295965060ff91939750989398161561121f57846007541682819360808a5161156e81611f8d565b828152828d820152828c8201528d8382015201528851978a89015289885261159588611fec565b88516115a081611fbe565b8b81526115b18a51610ea081611fbe565b938a51996115be8b611f8d565b8a528b8a0152898901528701526080860152855163b0f479a160e01b815287818481305afa908115611215579085918a91611862575b501693888751926320487ded60e01b84528984806116158b8a8a84016120f3565b03818a5afa9384156111d157908a918395611831575b5060648a51809481936323b872dd60e01b8352338a8401523060248401528860448401525af1908115611195578a91611814575b50156111355790889291600754169087516370a0823160e01b9081815230858201528a81602481875afa90811561180a5786916117dd575b50821161175e5750875163095ea7b360e01b81526001600160a01b038716848201908152602081019290925291899183919082908790829060400103925af1801561107857918895939161170798979593611741575086516396f4e9f960e01b81529788958694859384016120f3565b03925af1908115611042575061171c57505080f35b813d831161173a575b61172f8183612022565b8101031261043a5780f35b503d611725565b61175790873d8911611071576110628183612022565b508a610fe6565b899192828a9260248451809481938252308a8301525afa9283156117d357869361179f575b505051634787a10360e11b815292830152602482015260449150fd5b9080929350813d83116117cc575b6117b78183612022565b8101031261090c576044945051908580611783565b503d6117ad565b82513d88823e3d90fd5b90508a81813d8311611803575b6117f48183612022565b8101031261098e57518c611697565b503d6117ea565b8a513d88823e3d90fd5b61182b9150893d8b11611071576110628183612022565b8a61165f565b8281939296503d831161185b575b6118498183612022565b8101031261029457899051938c61162b565b503d61183f565b809250898092503d8311611895575b61187b8183612022565b81010312610a6757518481168103610a675784908a6115f4565b503d611871565b855162461bcd60e51b8152808801849052602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608490fd5b845162461bcd60e51b8152808701839052602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608490fd5b825162461bcd60e51b815280850187905260136024820152724e6f7420656e6f756768742062616c616e636560681b6044820152606490fd5b825162461bcd60e51b815280850187905260126024820152714e6f6465206973206e6f742041637469766560701b6044820152606490fd5b50829034610294576060366003190112610294576119c4611f0b565b6119cc611f21565b6001600160a01b03821684526003602090815285852033865290529284902054604435939260018201611a08575b60208661038d878787612253565b848210611a315750918391611a266020969561038d95033383612467565b9193948193506119fa565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b50913461043a578160031936011261043a57611a8e611f0b565b92611a97611f21565b9060018060a01b03809516928381526008956020968088528683209560018060ff8954851c161515149788611bd1575b5087611bbd575b87611b9e575b87611b67575b87611b4d575b5086611b34575b86611b1f575b86611afe575b888789519015158152f35b83528752858220830154931681528490200154119050388080808080611af3565b80845281895287842085015415159650611aed565b858316845281895287842054821c60ff16159650611ae7565b8684168552828a528885205460ff16151514965038611ae0565b96508286168452818952868885200154610e108101809111611b8b57421096611ada565b634e487b7160e01b855260118652602485fd5b9650808452868885200154610e108101809111611b8b57421096611ad4565b868416855288852081015415159750611ace565b8101541515975038611ac7565b503461024257826003193601126102425760209250549051908152f35b5050346102945781600319360112610294576020906001600160401b03611c206121fa565b915191168152f35b503461024257606036600319011261024257611c42611f0b565b90602435906001600160401b038216820361090c576044359182151591828403610a6357611c6e6125c2565b60ff6009541615611d055750600190818060a01b03851695868852600860205287209261ff0069ffffffffffffffff000085549360101b169269ffffffffffffffffffff19169160081b161717179055611cc6578280f35b60098054610100600160a81b03191660089290921b610100600160a81b0316919091179055600a80546001600160a01b03191691909117905538808280f35b606490602087519162461bcd60e51b83528201526015602482015274139bc81b5bdc99481b9bd9195cc8185b1b1bddd959605a1b6044820152fd5b50503461029457806003193601126102945760209061038d611d60611f0b565b6024359033612467565b50913461043a578060031936011261043a578151918160055492600184811c91818616958615611e2d575b602096878510811461069a578899509688969785829a529182600014610673575050600114611dd1575050506106139291610604910385612022565b9190869350600583527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db05b828410611e1557505050820101816106046106136105f1565b8054848a018601528895508794909301928101611dfc565b92607f1692611d95565b5034610242578160031936011261024257611e50611f0b565b913384526008602052611e966001600160401b03808387205460101c16907f00000000000000000000000000000000000000000000000000000000000000001614612099565b338452600860205260ff8185205416156105855783610909602435856123c3565b92505034610242576020366003190112610242573563ffffffff60e01b811680910361024257602092506385572ffb60e01b8114908115611efa575b5015158152f35b6301ffc9a760e01b14905038611ef3565b600435906001600160a01b0382168203610b5057565b602435906001600160a01b0382168203610b5057565b919082519283825260005b848110611f63575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611f42565b600435906001600160401b0382168203610b5057565b60a081019081106001600160401b03821117611fa857604052565b634e487b7160e01b600052604160045260246000fd5b602081019081106001600160401b03821117611fa857604052565b6001600160401b038111611fa857604052565b604081019081106001600160401b03821117611fa857604052565b608081019081106001600160401b03821117611fa857604052565b90601f801991011681019081106001600160401b03821117611fa857604052565b81601f82011215610b50578035906001600160401b038211611fa85760405192612077601f8401601f191660200185612022565b82845260208383010111610b5057816000926020809301838601378301015290565b156120a057565b60405162461bcd60e51b815260206004820152602560248201527f52657175697265206d617374657220616e64206e6f646520696e2073616d652060448201526431b430b4b760d91b6064820152608490fd5b906001600160401b039093929316815260406020918183820152612122855160a08484015260e0830190611f37565b9161213e8487015193603f199485858303016060860152611f37565b8187015194848483030160808501528080875193848152019601926000905b83821061219657505050505060c06080612193959660018060a01b0360608201511660a085015201519282850301910152611f37565b90565b845180516001600160a01b0316895283015188840152968701969382019360019091019061215d565b90816020910312610b5057518015158103610b505790565b919082018092116121e457565b634e487b7160e01b600052601160045260246000fd5b600a546001600160a01b0390811690811561222d575060005260086020526001600160401b0360406000205460101c1690565b905060095460081c1660005260086020526001600160401b0360406000205460101c1690565b6001600160a01b03908116918215612370571691821561231f57600082815260026020526040812054918083106122cb57604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef95876020965260028652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b0316908115612422577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6020826124056000946004546121d7565b6004558484526002825260408420818154019055604051908152a3565b60405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606490fd5b6001600160a01b0390811691821561251857169182156124c85760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260038252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b51906001600160a01b0382168203610b5057565b519060ff82168203610b5057565b604051906397a657c960e01b602083015251602482015260248152606081018181106001600160401b03821117611fa85760405290565b6000546001600160a01b031633036125d657565b60405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b6044820152606490fdfea264697066735822122035ea8df3c4d2759ab972cc81abf188b2b89dd34252ec8bacc82084e85be23acd64736f6c63430008130033",
  "deployedSourceMap": "783:14357:14:-:0;;;;;;;;;;;;-1:-1:-1;783:14357:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;783:14357:14;;;;;;:::i;:::-;2032:59:9;;;:::i;:::-;-1:-1:-1;;;;;783:14357:14;;;;1643:10:9;1637:16;;783:14357:14;;-1:-1:-1;;783:14357:14;;;-1:-1:-1;;;;;;783:14357:14;;;;;;;;1719:39:9;783:14357:14;;1719:39:9;783:14357:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;-1:-1:-1;;;;;783:14357:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;783:14357:14;;;;;;;;-1:-1:-1;;;;;783:14357:14;;:::i;:::-;;;;2111:48;783:14357;;;;;2111:48;783:14357;2111:48;;783:14357;2111:48;;;783:14357;2111:48;783:14357;2111:48;;783:14357;2111:48;;783:14357;;-1:-1:-1;;;;;783:14357:14;;;;;;;;;;;;2111:48;783:14357;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2277:12:4;-1:-1:-1;;;;;783:14357:14;;;;;;;;;;;;;;;;;;;;;;3881:6:0;783:14357:14;;:::i;:::-;;;719:10:3;;3881:6:0;:::i;:::-;783:14357:14;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;719:10:3;;783:14357:14;;;;;;;;;;;;;;;;;;;;;6809:35:0;;;;783:14357:14;;;;6945:34:0;783:14357:14;;;;719:10:3;6945:34:0;:::i;783:14357:14:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:14357:14;;;;;;;;;;;;;;;;;;;;;3011:10;783:14357;;3000:10;783:14357;;2979:146;-1:-1:-1;;;;;783:14357:14;;;;;;;;3038:24;;783:14357;3000:62;2979:146;:::i;:::-;3011:10;783:14357;;3000:10;783:14357;;;;;;;;2804:36;2800:110;;3011:10;;783:14357;;3000:10;783:14357;;;;;;;;;;;;;3011:10;783:14357;;;5481:23;783:14357;;;5481:23;783:14357;;;2800:110;783:14357;;;2863:36;;;;;;3011:10;2863:36;;;783:14357;2863:36;783:14357;;;;;;;;-1:-1:-1;;783:14357:14;;;;3011:10;783:14357;;3000:10;783:14357;;2979:146;-1:-1:-1;;;;;783:14357:14;;;;;;;;3038:24;;783:14357;3000:62;2979:146;:::i;:::-;3011:10;783:14357;;3000:10;783:14357;;;;;;;;2804:36;2800:110;;3011:10;783:14357;;3000:10;783:14357;;;;6962:15;783:14357;6920:39;;783:14357;;;6987:38;;;783:14357;;;;7053:38;;783:14357;;;7119:33;;783:14357;;;2800:110;783:14357;;;;2863:36;;;;;;3011:10;2863:36;;;783:14357;2863:36;783:14357;;;;;;;;;;;;;;;;;;2453:7:0;783:14357:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;2453:7:0;783:14357:14;;;;;;;;;-1:-1:-1;;;783:14357:14;;;;;;;;;;;;;;;;;;;-1:-1:-1;783:14357:14;;;;;;;;;;;-1:-1:-1;;783:14357:14;;;;;;;;;;;;;;;;-1:-1:-1;783:14357:14;;-1:-1:-1;783:14357:14;;-1:-1:-1;783:14357:14;;-1:-1:-1;783:14357:14;;;-1:-1:-1;;;783:14357:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;783:14357:14;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1816:48:14;783:14357;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;783:14357:14;;;;;;;;;;;;;;;-1:-1:-1;;;;;783:14357:14;2449:12:4;783:14357:14;;2427:10:4;:35;2423:73;;783:14357:14;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7788:22;;783:14357;;;;7777:45;;783:14357;;;;;7777:45;;;;783:14357;:::i;:::-;;;;;2805:10;783:14357;;;;;;;;2804:36;2800:110;;7881:22;;;783:14357;;;;7870:45;;783:14357;;;;;7870:45;;;;783:14357;:::i;:::-;;;;2805:10;783:14357;;;;;;;;;;;429:20:15;;783:14357:14;;;;418:41:15;;783:14357:14;;;;;418:41:15;783:14357:14;418:41:15;;783:14357:14;:::i;:::-;;8088:12;;;4212:20;;;;;783:14357;;;;;4188:93;;783:14357;;;;;;4188:93;783:14357;4311:6;4188:93;;;783:14357;:::i;:::-;;;;;:::i;:::-;;;;;;4311:6;:::i;:::-;783:14357;;;;;;8084:306;783:14357;8171:12;;;;;;;;;8167:223;783:14357;;;5059:22;;;;;;783:14357;;;;5048:45;;783:14357;;;;;5048:45;;;;783:14357;:::i;:::-;;;;2805:10;783:14357;;;;;;;;;;;;;5161:22;783:14357;;;;;5150:45;;783:14357;;;;;5150:45;;783:14357;:::i;:::-;;;;;5137:58;783:14357;;;5137:58;783:14357;;;;;;;;;;;8167:223;8266:1;8255:12;;;;;;;;;8251:139;8266:1;;;6087:20;;783:14357;;;;;6059:114;;783:14357;;;;;6059:114;;;783:14357;:::i;:::-;;;;;;;;;;;;;;;6206:22;;;783:14357;;;;6195:45;;783:14357;;;;;6195:45;;;;783:14357;:::i;:::-;;;;2805:10;783:14357;;6274:15;783:14357;;;;6184:87;783:14357;6321:22;;783:14357;;;;6310:45;;783:14357;;;;;6310:45;;;;783:14357;:::i;:::-;;;;8266:1;783:14357;;;6299:86;783:14357;6435:22;;783:14357;;;;6424:45;;783:14357;;;;;6424:45;;;;783:14357;:::i;:::-;;;;;;;;6413:86;783:14357;6549:22;783:14357;;;;;6538:45;;783:14357;;;;;6538:45;;783:14357;:::i;:::-;;;;;;6527:81;783:14357;;;;;;;;;;;;;;;8251:139;783:14357;;;;;;;;;;;8344:35;;;;783:14357;;;;;;;;;8344:35;783:14357;;;-1:-1:-1;;;783:14357:14;;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:14357:14;;;;;;;2800:110;783:14357;;-1:-1:-1;;;2863:36:14;;;;;783:14357;;;;2863:36;783:14357;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2423:73:4;783:14357:14;;;;2471:25:4;;;;;;2427:10;2471:25;;;783:14357:14;2471:25:4;783:14357:14;;;;;;;;;;;;;;1142:14:9;783:14357:14;;-1:-1:-1;;;;;783:14357:14;;;;1128:10:9;:28;783:14357:14;;-1:-1:-1;;783:14357:14;;-1:-1:-1;;;;;;783:14357:14;;;1128:10:9;783:14357:14;;;;;;;-1:-1:-1;783:14357:14;;1287:42:9;783:14357:14;;1287:42:9;783:14357:14;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:14357:14;;;;;;;;;;;;;-1:-1:-1;;783:14357:14;;;;;;;;-1:-1:-1;;;;;783:14357:14;;:::i;:::-;;;;3506:9:0;783:14357:14;;;;;;;;;;;;;;;;;;;;;;;2032:59:9;;:::i;:::-;783:14357:14;;3205:22;783:14357;;3205:22;783:14357;;;;;;;;;;;;;;;;;2240:25;783:14357;;;-1:-1:-1;;;;;783:14357:14;;;;;;;;;;;;;;;;;;;;;;;;;2166:33;783:14357;;;;;;;;;;;;;;;;;;;;;;;;2205:29;783:14357;;;;;;;;-1:-1:-1;;;;;783:14357:14;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;12287:1;12319:120;;;783:14357;-1:-1:-1;;;;;783:14357:14;;;;;;;;;;;;;;;;;;;;;;;;12319:120;;;;;;:::i;:::-;783:14357;12460:10;783:14357;;;;12449:10;783:14357;;;;;;;;;;;;;12460:10;783:14357;;;;;;;;;;;;;;;12545:24;;783:14357;12507:62;;12503:322;783:14357;;;;;;;;;12460:10;783:14357;;12585:132;;;;;783:14357;;;;;;;;;;;;;;;12585:132;;;;783:14357;;;;;12585:132;;;;;;;;;;12503:322;;;;12460:10;783:14357;;-1:-1:-1;;;;;;783:14357:14;;;;;12585:132;;;;:::i;:::-;783:14357;;12585:132;;;;;783:14357;;;;;;;;12503:322;783:14357;;;;;;;;;;;;;;;;2804:36;2800:110;;783:14357;9280:11;783:14357;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;11023:21;;;;783:14357;11023:21;;;;;;:::i;:::-;783:14357;;;;;:::i;:::-;;;;11268:166;783:14357;;;;;:::i;:::-;11405:9;783:14357;;11268:166;:::i;:::-;783:14357;;;;;;;:::i;:::-;;;10973:626;;;783:14357;10973:626;;;783:14357;10973:626;;783:14357;;10973:626;;783:14357;;;-1:-1:-1;;;9433:16:14;;10973:626;783:14357;9433:4;783:14357;9433:4;:16;;;;;;;;;;;;;;12503:322;783:14357;;;;;;;;;;9533:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;12503:322;783:14357;;;;;;;;;;;9621:57;;9646:10;9621:57;;;783:14357;9433:4;783:14357;;;;;;;;;9621:57;;;;;;;;;;;12503:322;783:14357;;;;9280:11;783:14357;;;;;;;;9752:36;;;;9433:4;9752:36;;;783:14357;9752:36;;783:14357;9752:36;;;;;;;;;;;;;12503:322;9745:43;;;9741:128;;-1:-1:-1;783:14357:14;;-1:-1:-1;;;9987:42:14;;-1:-1:-1;;;;;783:14357:14;;9987:42;;;783:14357;;;;;;;;;;;;;;;;;;;;;;;;;;;9987:42;;;;;;;;;;;;;10133:58;9987:42;;;;;;12503:322;-1:-1:-1;783:14357:14;;-1:-1:-1;;;10133:58:14;;783:14357;;;;;;;10133:58;;;:::i;:::-;;;;;;;;;;;;;12503:322;;;;;10133:58;;;;;;;;;;;;:::i;:::-;;;783:14357;;;;10133:58;;;;;;;;;;783:14357;;;;;;;;9987:42;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;783:14357;;;;;;;;;9741:128;783:14357;;;;;;;;;;9826:36;;;;;;9433:4;9826:36;;;783:14357;9826:36;;;;;;;;;;9741:128;-1:-1:-1;783:14357:14;-1:-1:-1;;;9809:60:14;;;;;783:14357;;;;;;;-1:-1:-1;9809:60:14;9826:36;;;;;;;;;;;;;;;;:::i;:::-;;;783:14357;;;;;;;9826:36;;;;;;;;;;783:14357;;;;;;;;;;9752:36;;;;;;;;;;;;;;;;:::i;:::-;;;783:14357;;;;;9752:36;;;;;;;;;783:14357;;;;;;;;;;;;-1:-1:-1;;;783:14357:14;;;;;;;;;;;;;;;;;;;;;9621:57;;;;;;;;;;;;;;:::i;:::-;;;;;783:14357;;;;;;;;;9533:56;;;;;;;;;;;;;;;;;:::i;:::-;;;783:14357;;;;;;;;9533:56;;;;;;;;;;783:14357;;;;;;;;;9433:16;;;;;;;;;;;;;;;;;;:::i;:::-;;;783:14357;;;;;;;;;;;;9433:16;;;;;;;;;;;783:14357;;;;;;;;;2800:110;783:14357;;-1:-1:-1;;;2863:36:14;;;;;783:14357;;;;;2863:36;783:14357;;;;;;;;;;;;-1:-1:-1;;783:14357:14;;;;;;:::i;:::-;;;;:::i;:::-;-1:-1:-1;;;;;783:14357:14;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;783:14357:14;;;;;1612:48:15;783:14357:14;;;;;;;;;:::i;:::-;;;;;;;;;942:20:15;;;783:14357:14;942:20:15;;;;;;:::i;:::-;783:14357:14;;;;;:::i;:::-;;;;1176:157:15;783:14357:14;;;;;:::i;:::-;1307:9:15;783:14357:14;;1176:157:15;:::i;:::-;783:14357:14;;;;;;;:::i;:::-;;;895:574:15;;;783:14357:14;895:574:15;;;783:14357:14;;895:574:15;;783:14357:14;;895:574:15;;783:14357:14;;;-1:-1:-1;;;1612:48:15;;783:14357:14;;;;;;;1612:48:15;;;:::i;:::-;;;;;;;;;;;;;783:14357:14;;;;;;;1612:48:15;;;;;;;;;;;;;;;;;:::i;:::-;;;783:14357:14;;;;;1612:48:15;;;;;;;;;783:14357:14;;;;;;;;;;;;;;6038:38:0;783:14357:14;;;;;:::i;:::-;719:10:3;;783:14357:14;;;;;;;;;;;;;;;;;6038:38:0;783:14357:14;;;;;;6038:38:0;:::i;:::-;719:10:3;;6038:38:0;:::i;783:14357:14:-;;;;;;;;;;;;;;;;;3173:2:0;783:14357:14;;;;;;;;;;;;;;;;;;;;13175:10;783:14357;-1:-1:-1;;;;;783:14357:14;;;;;13164:10;783:14357;;;;;;;;;;;;;;;;;13261:10;783:14357;;3506:9:0;783:14357:14;;;;;;13241:31;;783:14357;;;;13362:46;;;;;783:14357;13261:10;783:14357;;;;;;;;;;13362:46;;;;;;:::i;:::-;13261:10;9505:21:0;783:14357:14;;13261:10;783:14357;;3506:9:0;783:14357:14;;;;;;9696:24:0;;;;783:14357:14;;13261:10;;;;;;;;783:14357;;3506:9:0;783:14357:14;;;;;;;;;;;;;;;;;;;9978:37:0;13261:10:14;;9978:37:0;;783:14357:14;13175:10;783:14357;;;;;;13164:10;783:14357;;;;;;;-1:-1:-1;;;;;783:14357:14;;;;;;13497:24;;783:14357;13459:62;;13455:249;783:14357;;;;;;;;;13175:10;783:14357;;13537:59;;;;;783:14357;;-1:-1:-1;;;13537:59:14;;13261:10;13537:59;;;783:14357;;;;;;;;;;;;;;-1:-1:-1;783:14357:14;;;;;;;;13537:59;;;;;;;;;;;;13455:249;783:14357;;13537:59;;;;:::i;13455:249::-;783:14357;;;;;;;;;;;;;;2804:36;2800:110;;783:14357;9280:11;783:14357;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;11023:21;;;;783:14357;11023:21;;;;;;:::i;:::-;783:14357;;;;;:::i;:::-;;;;11268:166;783:14357;;;;;:::i;11268:166::-;783:14357;;;;;;;:::i;:::-;;;10973:626;;;783:14357;10973:626;;;783:14357;10973:626;;783:14357;;10973:626;;783:14357;;;-1:-1:-1;;;9433:16:14;;10973:626;783:14357;9433:4;783:14357;9433:4;:16;;;;;;;;;;;;;;13455:249;783:14357;;;;;;;;;;9533:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;13455:249;783:14357;;;;;;;;;;;9621:57;;13261:10;9621:57;;;783:14357;9433:4;783:14357;;;;;;;;;9621:57;;;;;;;;;;;13455:249;783:14357;;;;;;;;9280:11;783:14357;;;;;;;;9752:36;;;;9433:4;9752:36;;;783:14357;9752:36;;783:14357;9752:36;;;;;;;;;;;;;13455:249;9745:43;;;9741:128;;-1:-1:-1;783:14357:14;;-1:-1:-1;;;9987:42:14;;-1:-1:-1;;;;;783:14357:14;;9987:42;;;783:14357;;;;;;;;;;;;;;;;;;;;;;;;9987:42;;;;;;;;;;;;;10133:58;9987:42;;;;;;-1:-1:-1;783:14357:14;;-1:-1:-1;;;10133:58:14;;783:14357;;;;;;;10133:58;;;:::i;:::-;;;;;;;;;;;;;13455:249;;783:14357;;10133:58;;;;;;;;;;;;:::i;:::-;;;783:14357;;;;;;10133:58;;;;;9987:42;;;;;;;;;;;;;:::i;:::-;;;;;9741:128;783:14357;;;;;;;;;9826:36;;;;;;9433:4;9826:36;;;783:14357;9826:36;;;;;;;;;;;9741:128;-1:-1:-1;;783:14357:14;-1:-1:-1;;;9809:60:14;;;;;783:14357;;;;;;;-1:-1:-1;9809:60:14;9826:36;;;;;;;;;;;;;;;;;:::i;:::-;;;783:14357;;;;;;;;9826:36;;;;;;;;;;;783:14357;;;;;;;;;9752:36;;;;;;;;;;;;;;;;:::i;:::-;;;783:14357;;;;;9752:36;;;;;;;;;783:14357;;;;;;;;;9621:57;;;;;;;;;;;;;;:::i;:::-;;;;9533:56;;;;;;;;;;;;;;;;;:::i;:::-;;;783:14357;;;;;;;9533:56;;;;;;;;;9433:16;;;;;;;;;;;;;;;;;;:::i;:::-;;;783:14357;;;;;;;;;;;;9433:16;;;;;;;;;;783:14357;;;-1:-1:-1;;;783:14357:14;;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:14357:14;;;;;;;;;;-1:-1:-1;;;783:14357:14;;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:14357:14;;;;;;;;;;-1:-1:-1;;;783:14357:14;;;;;;;;;;;;;-1:-1:-1;;;783:14357:14;;;;;;;;;;-1:-1:-1;;;783:14357:14;;;;;;;;;;;;;-1:-1:-1;;;783:14357:14;;;;;;;;;;;;;;;;-1:-1:-1;;783:14357:14;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;783:14357:14;;;;;;;;;;;;719:10:3;783:14357:14;;;;;;;;;;;;;;11351:37:0;;11347:243;;783:14357:14;;5441:6:0;;;;;;:::i;11347:243::-;11412:26;;;783:14357:14;;;;;;11539:25:0;783:14357:14;;;5441:6:0;783:14357:14;;719:10:3;11539:25:0;;:::i;:::-;11347:243;;;;;;;;783:14357:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;14136:10;783:14357;;;;;;;;;;;;;;;;;;;;14136:44;:104;;;;783:14357;14136:168;;;;783:14357;14136:249;;;783:14357;14136:346;;;783:14357;14136:409;;;783:14357;14136:474;;;;783:14357;14136:528;;;783:14357;14136:631;;;783:14357;;;;;;;;;;;14136:631;783:14357;;;;;;;14680:34;;783:14357;;;;;;;;14729:38;783:14357;-1:-1:-1;;;14136:631:14;;;;;;;;:528;783:14357;;;;;;;;;14626:34;;783:14357;14626:38;;;-1:-1:-1;14136:528:14;;:474;783:14357;;;;;;;;;;;;;;;;;;-1:-1:-1;14136:474:14;;:409;783:14357;;;;;;;;;;;;;;;;14498:47;;-1:-1:-1;14136:409:14;;;:346;783:14357;;;;;;;;;;;;;;14401:44;783:14357;14448:4;783:14357;;;;;;;14467:15;-1:-1:-1;14136:346:14;;;783:14357;-1:-1:-1;;;783:14357:14;;;;;;;;14136:249;783:14357;;;;;;;;;14320:40;783:14357;14363:4;783:14357;;;;;;;14370:15;-1:-1:-1;14136:249:14;;;:168;783:14357;;;;;;;;14256:44;;783:14357;14256:48;;;-1:-1:-1;14136:168:14;;:104;14196:40;;783:14357;14196:44;;;-1:-1:-1;14136:104:14;;;783:14357;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;783:14357:14;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;783:14357:14;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;783:14357:14;;;;;;;;;;;;;;;;;;2032:59:9;;:::i;:::-;783:14357:14;3389:14;783:14357;;;;;;;;;;;;;;;;;;;3439:10;783:14357;;;;;;;;;;;;;;;;;;3439:10;783:14357;;;;;;;3612:109;;783:14357;;;3612:109;3389:14;783:14357;;-1:-1:-1;;;;;;783:14357:14;3439:10;783:14357;;;;-1:-1:-1;;;;;783:14357:14;;;;;;;3686:24;783:14357;;-1:-1:-1;;;;;;783:14357:14;;;;;;;3612:109;;783:14357;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:14357:14;;;;;;;;;;;;;;;;;;;;;4593:6:0;783:14357:14;;:::i;:::-;;;719:10:3;;4593:6:0;:::i;783:14357:14:-;;;;;;;;;;;;;;;;;;2240:5:0;783:14357:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;2240:5:0;783:14357:14;;;;;;;;;-1:-1:-1;;;783:14357:14;;;;;;;;;;;;;;;;;;;-1:-1:-1;783:14357:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3011:10;;783:14357;;3000:10;783:14357;;2979:146;-1:-1:-1;;;;;783:14357:14;;;;;;;;3038:24;;783:14357;3000:62;2979:146;:::i;:::-;3011:10;783:14357;;3000:10;783:14357;;;;;;;;2804:36;2800:110;;783:14357;4603:6;783:14357;;;4603:6;:::i;783:14357::-;;;;;;;;;-1:-1:-1;;783:14357:14;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1509:56:4;;;:100;;;;783:14357:14;;;;;;;1509:100:4;-1:-1:-1;;;1569:40:4;;-1:-1:-1;1509:100:4;;;783:14357:14;;;;-1:-1:-1;;;;;783:14357:14;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;783:14357:14;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;783:14357:14;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;783:14357:14;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;783:14357:14;;;;;;;:::o;:::-;-1:-1:-1;;;;;783:14357:14;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;783:14357:14;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;783:14357:14;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;783:14357:14;;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;;;;783:14357:14;;;;;;;;;;;-1:-1:-1;;783:14357:14;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;783:14357:14;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;783:14357:14;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:14357:14;;;;;;;;;-1:-1:-1;;;;;783:14357:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;-1:-1:-1;;;;;783:14357:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;14903:235;14984:10;783:14357;-1:-1:-1;;;;;783:14357:14;;;;14984:24;;14980:100;;783:14357;-1:-1:-1;783:14357:14;15097:10;783:14357;;-1:-1:-1;;;;;783:14357:14;-1:-1:-1;783:14357:14;;;;;14903:235;:::o;14980:100::-;783:14357;;15042:14;783:14357;;;;-1:-1:-1;783:14357:14;;;;-1:-1:-1;;;;;783:14357:14;-1:-1:-1;783:14357:14;;;;;15024:45;:::o;7473:818:0:-;-1:-1:-1;;;;;783:14357:14;;;;7599:18:0;;783:14357:14;;;7677:16:0;;;783:14357:14;;7615:1:0;783:14357:14;;;7815:9:0;783:14357:14;;;;;;7848:21:0;;;;783:14357:14;;;;;8210:26:0;783:14357:14;;;;;7815:9:0;783:14357:14;;;;;;;;;;;;;;;;;;;;;;8210:26:0;7473:818::o;783:14357:14:-;;;-1:-1:-1;;;783:14357:14;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:14357:14;;;;;;;;;;-1:-1:-1;;;783:14357:14;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:14357:14;;;;;;;;;;-1:-1:-1;;;783:14357:14;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:14357:14;;;;;;;8567:535:0;-1:-1:-1;;;;;783:14357:14;;8650:21:0;;783:14357:14;;8999:37:0;783:14357:14;;8778:22:0;8669:1;783:14357:14;8778:22:0;783:14357:14;8778:22:0;:::i;:::-;;783:14357:14;;;;8946:9:0;783:14357:14;;;;;;;;;;;;;;;;8999:37:0;8567:535::o;783:14357:14:-;;;-1:-1:-1;;;783:14357:14;;;;;;;;;;;;;;;;;;;;10504:370:0;-1:-1:-1;;;;;783:14357:14;;;;10635:19:0;;783:14357:14;;;10713:21:0;;;783:14357:14;;;10835:32:0;783:14357:14;;10652:1:0;783:14357:14;10784:11:0;783:14357:14;;;10652:1:0;783:14357:14;;10652:1:0;783:14357:14;;;;;10652:1:0;783:14357:14;;;;;;;10835:32:0;10504:370::o;783:14357:14:-;;;-1:-1:-1;;;783:14357:14;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:14357:14;;;;;;;;;;-1:-1:-1;;;783:14357:14;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:14357:14;;;;;;;;;;-1:-1:-1;;;;;783:14357:14;;;;;;:::o;:::-;;;;;;;;;;:::o;1285:170:7:-;783:14357:14;;;;;;1394:56:7;;;;1218:10;1394:56;;;783:14357:14;1394:56:7;;;783:14357:14;;;;;;-1:-1:-1;;;;;783:14357:14;;;;;;;1285:170:7;:::o;1797:158:9:-;1916:7;783:14357:14;-1:-1:-1;;;;;783:14357:14;1902:10:9;:21;783:14357:14;;1797:158:9:o;783:14357:14:-;;;-1:-1:-1;;;783:14357:14;;;;;;;;;;;;-1:-1:-1;;;783:14357:14;;;;;;",
  "language": "Solidity",
  "natspec": {
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "acceptOwnership()": {
        "notice": "Allows an ownership transfer to be completed by the recipient."
      },
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))": {
        "details": "Note ensure you check the msg.sender is the OffRampRouter",
        "notice": "Called by the Router to deliver a message. If this reverts, any token transfers also revert. The message will move to a FAILED state and become available for manual execution.",
        "params": {
          "message": "CCIP Message"
        }
      },
      "constructor": {
        "notice": "Constructor initializes the contract with the router address.",
        "params": {
          "_link": "The address of the link contract.",
          "_router": "The address of the router contract."
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "getRouter()": {
        "notice": "Return the current router",
        "returns": {
          "_0": "CCIP router address"
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "notice": "Get the current owner"
      },
      "supportsInterface(bytes4)": {
        "details": "Should indicate whether the contract implements IAny2EVMMessageReceiver e.g. return interfaceId == type(IAny2EVMMessageReceiver).interfaceId || interfaceId == type(IERC165).interfaceId This allows CCIP to check if ccipReceive is available before calling it. If this returns false or reverts, only tokens are transferred to the receiver. If this returns true, tokens are transferred and ccipReceive is called atomically. Additionally, if the receiver address does not have code associated with it at the time of execution (EXTCODESIZE returns 0), only tokens will be transferred.",
        "notice": "IERC165 supports an interfaceId",
        "params": {
          "interfaceId": "The interfaceId to check"
        },
        "returns": {
          "_0": "true if the interfaceId is supported"
        }
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "notice": "Allows an owner to begin transferring ownership to a new address."
      }
    },
    "title": "- A simple messenger contract for transferring/receiving tokens and data across chains.",
    "version": 1
  },
  "offset": [
    783,
    15140
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x21 JUMPI JUMPDEST POP POP POP CALLDATASIZE ISZERO PUSH2 0x1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x1EB7 JUMPI POP DUP1 PUSH4 0x4783EA4 EQ PUSH2 0x1E37 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1D6A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1D40 JUMPI DUP1 PUSH4 0x10A78DF8 EQ PUSH2 0x1C28 JUMPI DUP1 PUSH4 0x1803C2F5 EQ PUSH2 0x1BFB JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1BDE JUMPI DUP1 PUSH4 0x1D880928 EQ PUSH2 0x1A74 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19A8 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x13D7 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x13BB JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x136C JUMPI DUP1 PUSH4 0x544B1709 EQ PUSH2 0x123A JUMPI DUP4 DUP2 PUSH4 0x5C292BE5 EQ PUSH2 0xD0B JUMPI POP DUP1 PUSH4 0x61AC3F99 EQ PUSH2 0xCDE JUMPI DUP1 PUSH4 0x654E8E0C EQ PUSH2 0xCBA JUMPI DUP1 PUSH4 0x6C1DC077 EQ PUSH2 0xC91 JUMPI DUP1 PUSH4 0x6C98D513 EQ PUSH2 0xC6B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xC33 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0xB8C JUMPI DUP1 PUSH4 0x85572FFB EQ PUSH2 0x723 JUMPI DUP1 PUSH4 0x8CF19D19 EQ PUSH2 0x6DF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x6B7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x59C JUMPI DUP1 PUSH4 0x9637120F EQ PUSH2 0x4F1 JUMPI DUP1 PUSH4 0x995714AE EQ PUSH2 0x43D JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0xB0F479A1 EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0xB2D92955 EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH4 0xF2FDE38B SUB PUSH2 0x11 JUMPI CALLVALUE PUSH2 0x242 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x242 JUMPI PUSH2 0x1A5 PUSH2 0x1F0B JUMP JUMPDEST SWAP1 PUSH2 0x1AE PUSH2 0x25C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 CALLER DUP5 EQ PUSH2 0x1FF JUMPI POP POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP4 OR SWAP1 SSTORE DUP3 SLOAD AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x263 PUSH2 0x1F0B JUMP JUMPDEST DUP3 PUSH2 0x26C PUSH2 0x1F21 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP5 MSTORE PUSH1 0x3 DUP7 MSTORE SWAP3 KECCAK256 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 DUP4 MSTORE DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x242 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x242 JUMPI PUSH1 0xE0 SWAP3 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2C0 PUSH2 0x1F0B JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE KECCAK256 DUP1 SLOAD SWAP3 PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD SWAP2 PUSH1 0x3 DUP5 ADD SLOAD SWAP4 ADD SLOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 MLOAD SWAP7 PUSH1 0xFF DUP2 AND ISZERO ISZERO DUP9 MSTORE PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND ISZERO ISZERO PUSH1 0x20 DUP10 ADD MSTORE PUSH1 0x10 SHR AND SWAP1 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x294 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x38D PUSH2 0x383 PUSH2 0x1F0B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x2253 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP DUP3 CALLVALUE PUSH2 0x43A JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x43A JUMPI PUSH2 0x3AE PUSH2 0x1F0B JUMP JUMPDEST SWAP2 DUP4 PUSH1 0x24 CALLDATALOAD SWAP3 CALLER DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP4 PUSH1 0x0 KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0x3E9 JUMPI PUSH1 0x20 DUP6 PUSH2 0x38D DUP6 DUP6 SUB DUP8 CALLER PUSH2 0x2467 JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x242 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x242 JUMPI CALLER DUP4 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH2 0x493 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP5 DUP7 KECCAK256 SLOAD PUSH1 0x10 SHR AND SWAP1 PUSH32 0x0 AND EQ PUSH2 0x2099 JUMP JUMPDEST CALLER DUP4 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0xFF DUP3 DUP5 KECCAK256 SLOAD AND ISZERO PUSH2 0x4DB JUMPI POP CALLER DUP3 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE DUP2 KECCAK256 PUSH2 0x100 PUSH2 0xFF00 NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0xA SLOAD AND OR PUSH1 0xA SSTORE DUP1 RETURN JUMPDEST PUSH1 0x24 SWAP2 MLOAD SWAP1 PUSH4 0x6A9FF79F PUSH1 0xE1 SHL DUP3 MSTORE CALLER SWAP1 DUP3 ADD MSTORE REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x242 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x242 JUMPI CALLER DUP4 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH2 0x549 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP4 DUP7 KECCAK256 SLOAD PUSH1 0x10 SHR AND SWAP1 PUSH32 0x0 AND EQ PUSH2 0x2099 JUMP JUMPDEST CALLER DUP4 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0xFF DUP2 DUP5 KECCAK256 SLOAD AND ISZERO PUSH2 0x585 JUMPI CALLER DUP4 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE DUP3 KECCAK256 TIMESTAMP PUSH1 0x1 DUP3 ADD SSTORE DUP2 CALLDATALOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x44 CALLDATALOAD SWAP2 ADD SSTORE DUP1 RETURN JUMPDEST PUSH1 0x24 SWAP3 POP MLOAD SWAP1 PUSH4 0x6A9FF79F PUSH1 0xE1 SHL DUP3 MSTORE CALLER SWAP1 DUP3 ADD MSTORE REVERT JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x43A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x43A JUMPI DUP2 MLOAD SWAP2 DUP2 PUSH1 0x6 SLOAD SWAP3 PUSH1 0x1 DUP5 DUP2 SHR SWAP2 DUP2 DUP7 AND SWAP6 DUP7 ISZERO PUSH2 0x6AD JUMPI JUMPDEST PUSH1 0x20 SWAP7 DUP8 DUP6 LT DUP2 EQ PUSH2 0x69A JUMPI DUP9 SWAP10 POP SWAP7 DUP9 SWAP7 SWAP8 DUP6 DUP3 SWAP11 MSTORE SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x673 JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x617 JUMPI JUMPDEST POP POP POP PUSH2 0x613 SWAP3 SWAP2 PUSH2 0x604 SWAP2 SUB DUP6 PUSH2 0x2022 JUMP JUMPDEST MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x1F37 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP1 DUP7 SWAP4 POP PUSH1 0x6 DUP4 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F JUMPDEST DUP3 DUP5 LT PUSH2 0x65B JUMPI POP POP POP DUP3 ADD ADD DUP2 PUSH2 0x604 PUSH2 0x613 PUSH2 0x5F1 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP11 ADD DUP7 ADD MSTORE DUP9 SWAP6 POP DUP8 SWAP5 SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x642 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP3 ADD MSTORE SWAP4 ISZERO ISZERO PUSH1 0x5 SHL DUP7 ADD SWAP1 SWAP4 ADD SWAP4 POP DUP5 SWAP3 POP PUSH2 0x604 SWAP2 POP PUSH2 0x613 SWAP1 POP PUSH2 0x5F1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x22 DUP11 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x5C7 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x294 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI SWAP1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x294 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x242 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x3 NOT DUP4 DUP2 CALLDATASIZE ADD SLT PUSH2 0x90C JUMPI DUP2 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 DUP4 GT PUSH2 0xA63 JUMPI PUSH1 0xA0 SWAP1 DUP4 CALLDATASIZE SUB ADD SLT PUSH2 0x98E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 PUSH32 0x0 DUP5 AND CALLER SUB PUSH2 0xB75 JUMPI DUP5 MLOAD SWAP2 PUSH2 0x796 DUP4 PUSH2 0x1F8D JUMP JUMPDEST DUP4 DUP3 ADD CALLDATALOAD DUP4 MSTORE PUSH1 0x24 SWAP1 DUP2 DUP6 ADD CALLDATALOAD DUP2 DUP2 AND DUP2 SUB PUSH2 0xB50 JUMPI DUP9 DUP6 ADD MSTORE PUSH1 0x44 DUP6 ADD CALLDATALOAD DUP2 DUP2 GT PUSH2 0xA6B JUMPI PUSH2 0x7CB SWAP1 DUP5 CALLDATASIZE SWAP2 DUP9 ADD ADD PUSH2 0x2043 JUMP JUMPDEST SWAP4 DUP8 DUP2 ADD SWAP5 DUP6 MSTORE PUSH1 0x64 DUP7 ADD CALLDATALOAD DUP3 DUP2 GT PUSH2 0xB6D JUMPI PUSH2 0x7ED SWAP1 DUP6 CALLDATASIZE SWAP2 DUP10 ADD ADD PUSH2 0x2043 JUMP JUMPDEST SWAP6 PUSH1 0x60 DUP3 ADD SWAP7 DUP8 MSTORE PUSH1 0x84 DUP2 ADD CALLDATALOAD SWAP1 DUP4 DUP3 GT PUSH2 0xB71 JUMPI ADD CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0xB6D JUMPI DUP5 DUP2 ADD CALLDATALOAD SWAP3 DUP4 GT PUSH2 0xB59 JUMPI DUP9 MLOAD SWAP3 PUSH2 0x82B DUP12 DUP3 PUSH1 0x5 SHL ADD DUP6 PUSH2 0x2022 JUMP JUMPDEST DUP1 DUP5 MSTORE DUP5 DUP12 DUP6 ADD SWAP2 PUSH1 0x6 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0xB55 JUMPI DUP6 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xB16 JUMPI POP POP POP PUSH1 0x80 ADD MSTORE DUP3 MLOAD DUP8 DUP2 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0xA67 JUMPI PUSH2 0x86D DUP9 DUP8 SWAP3 ADD PUSH2 0x2569 JUMP JUMPDEST AND DUP1 DUP10 MSTORE PUSH1 0x8 DUP9 MSTORE PUSH1 0xFF DUP8 DUP11 KECCAK256 SLOAD AND ISZERO PUSH2 0xB01 JUMPI POP DUP3 MLOAD DUP8 DUP2 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0xA67 JUMPI PUSH2 0x89C DUP9 DUP8 SWAP3 ADD PUSH2 0x2569 JUMP JUMPDEST AND DUP9 MSTORE PUSH1 0x8 DUP8 MSTORE PUSH1 0xFF DUP7 DUP10 KECCAK256 SLOAD AND ISZERO PUSH2 0xAB0 JUMPI DUP4 MLOAD DUP8 DUP2 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0xA67 JUMPI PUSH2 0x8CA DUP9 PUSH1 0xFF SWAP3 ADD PUSH2 0x257D JUMP JUMPDEST AND DUP1 PUSH2 0x910 JUMPI POP POP POP POP MLOAD SWAP2 PUSH1 0x60 DUP4 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0x90C JUMPI PUSH2 0x8FF PUSH1 0x60 SWAP2 PUSH2 0x8F7 PUSH2 0x909 SWAP7 DUP7 ADD PUSH2 0x257D JUMP JUMPDEST POP DUP5 ADD PUSH2 0x2569 JUMP JUMPDEST SWAP3 ADD MLOAD SWAP2 AND PUSH2 0x23C3 JUMP JUMPDEST DUP1 RETURN JUMPDEST DUP5 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 SWAP9 SWAP8 SWAP6 SWAP4 SWAP5 SWAP7 SWAP9 EQ PUSH1 0x0 EQ PUSH2 0x992 JUMPI POP POP POP POP DUP2 MLOAD DUP4 DUP2 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0x98E JUMPI PUSH2 0x940 DUP5 DUP7 SWAP3 ADD PUSH2 0x2569 JUMP JUMPDEST AND DUP6 MSTORE PUSH1 0x8 DUP4 MSTORE DUP5 KECCAK256 PUSH2 0x100 PUSH2 0xFF00 NOT DUP3 SLOAD AND OR SWAP1 SSTORE MLOAD SWAP1 DUP1 DUP3 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0x98A JUMPI PUSH2 0x96E SWAP2 ADD PUSH2 0x2569 JUMP JUMPDEST AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0xA SLOAD AND OR PUSH1 0xA SSTORE DUP1 RETURN JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST PUSH1 0x2 SWAP1 SWAP8 SWAP5 SWAP6 SWAP8 SWAP7 SWAP4 SWAP7 EQ PUSH1 0x0 EQ PUSH2 0xA6F JUMPI POP MLOAD SWAP5 PUSH1 0x80 DUP7 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0xA63 JUMPI PUSH2 0x9BF DUP3 DUP8 ADD PUSH2 0x257D JUMP JUMPDEST POP DUP4 DUP7 ADD MLOAD SWAP6 PUSH1 0x80 PUSH1 0x60 DUP3 ADD MLOAD SWAP2 ADD MLOAD SWAP7 DUP3 MLOAD DUP5 DUP2 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0xA6B JUMPI PUSH2 0x9EA DUP6 DUP8 SWAP3 ADD PUSH2 0x2569 JUMP JUMPDEST AND DUP10 MSTORE PUSH1 0x8 DUP5 MSTORE TIMESTAMP PUSH1 0x1 DUP8 DUP12 KECCAK256 ADD SSTORE DUP3 MLOAD DUP5 DUP2 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0xA6B JUMPI PUSH2 0xA13 DUP6 DUP8 SWAP3 ADD PUSH2 0x2569 JUMP JUMPDEST AND DUP10 MSTORE PUSH1 0x2 DUP7 DUP11 KECCAK256 ADD SSTORE DUP2 MLOAD DUP4 DUP2 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0xA67 JUMPI PUSH2 0xA37 DUP5 DUP7 SWAP3 ADD PUSH2 0x2569 JUMP JUMPDEST AND DUP9 MSTORE PUSH1 0x3 DUP6 DUP10 KECCAK256 ADD SSTORE MLOAD SWAP1 DUP1 DUP3 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0xA63 JUMPI PUSH2 0xA59 SWAP2 ADD PUSH2 0x2569 JUMP JUMPDEST AND DUP5 MSTORE DUP4 KECCAK256 ADD SSTORE DUP1 RETURN JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST DUP10 DUP1 REVERT JUMPDEST DUP6 PUSH1 0x19 PUSH1 0x64 SWAP3 DUP6 DUP9 MLOAD SWAP4 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x696E76616C696420636F6D6D616E642066726F6D204E6F646500000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x496E636F6D696E67204D657373616765206E6F742066726F6D20612076616C69 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x64206E6F6465 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP7 MLOAD PUSH4 0x6A9FF79F PUSH1 0xE1 SHL DUP2 MSTORE DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE REVERT JUMPDEST DUP11 DUP3 CALLDATASIZE SUB SLT PUSH2 0xB55 JUMPI DUP11 MLOAD SWAP1 PUSH2 0xB2B DUP3 PUSH2 0x1FEC JUMP JUMPDEST DUP3 CALLDATALOAD SWAP1 DUP12 DUP3 AND DUP3 SUB PUSH2 0xB50 JUMPI DUP3 DUP15 SWAP3 DUP15 SWAP5 MSTORE DUP3 DUP6 ADD CALLDATALOAD DUP4 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x845 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP13 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x41 DUP7 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x0 REVERT JUMPDEST DUP11 DUP1 REVERT JUMPDEST DUP12 DUP1 REVERT JUMPDEST PUSH1 0x24 SWAP1 DUP6 MLOAD SWAP1 PUSH4 0x35FDCCCD PUSH1 0xE2 SHL DUP3 MSTORE CALLER SWAP1 DUP3 ADD MSTORE REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x242 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x242 JUMPI PUSH1 0x1 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 DUP5 AND CALLER SUB PUSH2 0xBF7 JUMPI POP POP DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP3 AND CALLER SWAP1 DUP2 OR DUP7 SSTORE SWAP4 AND PUSH1 0x1 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x26BAB9BA10313290383937B837B9B2B21037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xC5B PUSH2 0x1F0B JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x2 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x43A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x43A JUMPI PUSH2 0xC84 PUSH2 0x25C2 JUMP JUMPDEST PUSH1 0xFF NOT PUSH1 0x9 SLOAD AND PUSH1 0x9 SSTORE DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x294 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0xA SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x294 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x9 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x294 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0x9 SLOAD SWAP1 MLOAD PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP3 SWAP1 POP CALLVALUE PUSH2 0x1236 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1236 JUMPI PUSH2 0xD26 PUSH2 0x1F77 JUMP JUMPDEST SWAP2 PUSH2 0xD2F PUSH2 0x1F21 JUMP JUMPDEST DUP3 MLOAD SWAP1 PUSH1 0x20 PUSH1 0x1 DUP2 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 SWAP7 AND SWAP3 DUP4 DUP7 DUP3 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP4 AND SWAP7 PUSH1 0x60 DUP9 DUP2 DUP5 ADD MSTORE DUP1 DUP4 MSTORE PUSH2 0xD69 DUP4 PUSH2 0x2007 JUMP JUMPDEST DUP5 PUSH1 0xA SLOAD AND DUP11 MSTORE PUSH1 0x8 DUP5 MSTORE DUP8 DUP11 KECCAK256 PUSH2 0xFF00 NOT DUP2 SLOAD AND SWAP1 SSTORE DUP5 PUSH1 0xA SLOAD AND SWAP3 DUP4 DUP12 MSTORE DUP9 DUP12 KECCAK256 SLOAD DUP4 DUP2 PUSH1 0x10 SHR AND SWAP4 PUSH32 0x0 AND DUP5 EQ PUSH1 0x0 EQ PUSH2 0xE31 JUMPI POP POP POP POP POP POP PUSH1 0xA SLOAD AND DUP1 EXTCODESIZE ISZERO PUSH2 0x98E JUMPI DUP6 SWAP3 DUP4 PUSH1 0x44 SWAP3 DUP7 MLOAD SWAP8 DUP9 SWAP6 DUP7 SWAP5 PUSH4 0x4BB297FF PUSH1 0xE1 SHL DUP7 MSTORE DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xE28 JUMPI POP PUSH2 0xE14 JUMPI JUMPDEST POP POP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE DUP1 RETURN JUMPDEST PUSH2 0xE1D SWAP1 PUSH2 0x1FD9 JUMP JUMPDEST PUSH2 0x43A JUMPI DUP1 CODESIZE PUSH2 0xDFE JUMP JUMPDEST MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 SWAP5 SWAP11 POP SWAP3 SWAP8 SWAP9 POP PUSH1 0xFF SWAP2 SWAP6 POP SWAP6 SWAP4 SWAP6 AND ISZERO PUSH2 0x121F JUMPI DUP5 PUSH1 0x7 SLOAD AND DUP3 DUP2 SWAP4 PUSH1 0x80 DUP11 MLOAD PUSH2 0xE5C DUP2 PUSH2 0x1F8D JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 DUP14 DUP3 ADD MSTORE DUP3 DUP13 DUP3 ADD MSTORE DUP14 DUP4 DUP3 ADD MSTORE ADD MSTORE DUP9 MLOAD SWAP8 DUP11 DUP10 ADD MSTORE DUP10 DUP9 MSTORE PUSH2 0xE83 DUP9 PUSH2 0x1FEC JUMP JUMPDEST DUP9 MLOAD PUSH2 0xE8E DUP2 PUSH2 0x1FBE JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH2 0xEAB DUP11 MLOAD PUSH2 0xEA0 DUP2 PUSH2 0x1FBE JUMP JUMPDEST PUSH3 0x1E8480 DUP2 MSTORE PUSH2 0x258B JUMP JUMPDEST SWAP4 DUP11 MLOAD SWAP10 PUSH2 0xEB8 DUP12 PUSH2 0x1F8D JUMP JUMPDEST DUP11 MSTORE DUP12 DUP11 ADD MSTORE DUP10 DUP10 ADD MSTORE DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD MSTORE DUP6 MLOAD PUSH4 0xB0F479A1 PUSH1 0xE0 SHL DUP2 MSTORE DUP8 DUP2 DUP5 DUP2 ADDRESS GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1215 JUMPI SWAP1 DUP6 SWAP2 DUP11 SWAP2 PUSH2 0x11DB JUMPI JUMPDEST POP AND SWAP4 DUP9 DUP8 MLOAD SWAP3 PUSH4 0x20487DED PUSH1 0xE0 SHL DUP5 MSTORE DUP10 DUP5 DUP1 PUSH2 0xF0F DUP12 DUP11 DUP11 DUP5 ADD PUSH2 0x20F3 JUMP JUMPDEST SUB DUP2 DUP11 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x11D1 JUMPI SWAP1 DUP11 SWAP2 DUP4 SWAP6 PUSH2 0x119F JUMPI JUMPDEST POP PUSH1 0x64 DUP11 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP4 MSTORE CALLER DUP11 DUP5 ADD MSTORE ADDRESS PUSH1 0x24 DUP5 ADD MSTORE DUP9 PUSH1 0x44 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x1195 JUMPI DUP11 SWAP2 PUSH2 0x1178 JUMPI JUMPDEST POP ISZERO PUSH2 0x1135 JUMPI PUSH1 0x7 SLOAD AND SWAP1 DUP7 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL SWAP1 DUP2 DUP2 MSTORE ADDRESS DUP6 DUP3 ADD MSTORE DUP10 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x112B JUMPI DUP12 SWAP2 PUSH2 0x10FE JUMPI JUMPDEST POP DUP3 GT PUSH2 0x1082 JUMPI POP DUP7 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 DUP6 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP10 SWAP4 SWAP3 SWAP1 SWAP2 DUP10 SWAP2 DUP4 SWAP2 DUP3 SWAP1 DUP8 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x1078 JUMPI SWAP2 DUP9 SWAP6 SWAP4 SWAP2 PUSH2 0x1001 SWAP9 SWAP8 SWAP6 SWAP4 PUSH2 0x104B JUMPI JUMPDEST POP DUP7 MLOAD PUSH4 0x96F4E9F9 PUSH1 0xE0 SHL DUP2 MSTORE SWAP8 DUP9 SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 ADD PUSH2 0x20F3 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x1042 JUMPI POP PUSH2 0x1019 JUMPI JUMPDEST POP POP PUSH2 0xE01 JUMP JUMPDEST DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x103B JUMPI JUMPDEST PUSH2 0x102C DUP2 DUP4 PUSH2 0x2022 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x43A JUMPI CODESIZE DUP1 PUSH2 0x1012 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1022 JUMP JUMPDEST MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x106A SWAP1 DUP8 RETURNDATASIZE DUP10 GT PUSH2 0x1071 JUMPI JUMPDEST PUSH2 0x1062 DUP2 DUP4 PUSH2 0x2022 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x21BF JUMP JUMPDEST POP CODESIZE PUSH2 0xFE6 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1058 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 DUP10 DUP9 DUP11 DUP1 DUP8 SWAP6 PUSH1 0x24 DUP5 MLOAD DUP1 SWAP10 DUP2 SWAP4 DUP3 MSTORE ADDRESS DUP11 DUP4 ADD MSTORE GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x10F3 JUMPI SWAP3 PUSH2 0x10C2 JUMPI JUMPDEST POP MLOAD PUSH4 0x4787A103 PUSH1 0xE1 SHL DUP2 MSTORE SWAP3 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP2 POP REVERT JUMPDEST SWAP1 SWAP2 POP DUP5 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x10EC JUMPI JUMPDEST PUSH2 0x10D9 DUP2 DUP4 PUSH2 0x2022 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xB50 JUMPI PUSH1 0x44 SWAP4 MLOAD SWAP1 DUP6 PUSH2 0x10A7 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x10CF JUMP JUMPDEST DUP3 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP DUP10 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1124 JUMPI JUMPDEST PUSH2 0x1115 DUP2 DUP4 PUSH2 0x2022 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xB50 JUMPI MLOAD CODESIZE PUSH2 0xF8D JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x110B JUMP JUMPDEST DUP10 MLOAD RETURNDATASIZE DUP14 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP10 SWAP1 MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F742070726F7669646564204C696E6B20666F722066656573000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x118F SWAP2 POP DUP10 RETURNDATASIZE DUP12 GT PUSH2 0x1071 JUMPI PUSH2 0x1062 DUP2 DUP4 PUSH2 0x2022 JUMP JUMPDEST CODESIZE PUSH2 0xF59 JUMP JUMPDEST DUP9 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP3 POP SWAP4 POP DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x11CA JUMPI JUMPDEST PUSH2 0x11B7 DUP2 DUP4 PUSH2 0x2022 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xB50 JUMPI DUP9 DUP11 SWAP2 MLOAD SWAP4 CODESIZE PUSH2 0xF25 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x11AD JUMP JUMPDEST DUP10 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP DUP10 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x120E JUMPI JUMPDEST PUSH2 0x11F4 DUP2 DUP4 PUSH2 0x2022 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xA67 JUMPI MLOAD DUP5 DUP2 AND DUP2 SUB PUSH2 0xA67 JUMPI DUP5 SWAP1 CODESIZE PUSH2 0xEEE JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x11EA JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP7 MLOAD PUSH4 0x6A9FF79F PUSH1 0xE1 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP8 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP POP REVERT JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x43A JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x43A JUMPI PUSH2 0x1255 PUSH2 0x1F77 JUMP JUMPDEST SWAP2 PUSH2 0x125E PUSH2 0x1F21 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 PUSH1 0x44 CALLDATALOAD DUP6 DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0xB50 JUMPI PUSH1 0x64 CALLDATALOAD SWAP1 DUP7 DUP3 AND DUP1 SWAP3 SUB PUSH2 0xB50 JUMPI PUSH1 0x84 CALLDATALOAD SWAP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP10 GT PUSH2 0xA63 JUMPI PUSH2 0x12A9 PUSH2 0x1325 SWAP7 SWAP8 SWAP9 SWAP10 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x2043 JUMP JUMPDEST DUP8 MLOAD SWAP5 PUSH1 0x20 SWAP11 DUP12 SWAP8 AND DUP8 DUP8 ADD MSTORE DUP7 DUP7 MSTORE PUSH2 0x12C2 DUP7 PUSH2 0x1FEC JUMP JUMPDEST DUP9 MLOAD PUSH2 0x12CD DUP2 PUSH2 0x1FBE JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH2 0x12EA DUP11 MLOAD PUSH2 0x12DF DUP2 PUSH2 0x1FBE JUMP JUMPDEST PUSH3 0xF4240 DUP2 MSTORE PUSH2 0x258B JUMP JUMPDEST SWAP3 DUP11 MLOAD SWAP8 PUSH2 0x12F7 DUP10 PUSH2 0x1F8D JUMP JUMPDEST DUP9 MSTORE DUP9 DUP9 ADD MSTORE DUP10 DUP8 ADD MSTORE PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD MSTORE DUP7 MLOAD PUSH4 0x20487DED PUSH1 0xE0 SHL DUP2 MSTORE SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 DUP5 ADD PUSH2 0x20F3 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x10F3 JUMPI SWAP3 PUSH2 0x133D JUMPI JUMPDEST POP MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 POP DUP3 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1365 JUMPI JUMPDEST PUSH2 0x1355 DUP2 DUP4 PUSH2 0x2022 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xB50 JUMPI MLOAD SWAP1 CODESIZE PUSH2 0x1336 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x134B JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH2 0x38D PUSH1 0x20 SWAP3 DUP3 PUSH2 0x138D PUSH2 0x1F0B JUMP JUMPDEST SWAP2 CALLER DUP2 MSTORE PUSH1 0x3 DUP7 MSTORE KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 MSTORE DUP5 MSTORE PUSH2 0x13B4 PUSH1 0x24 CALLDATALOAD DUP5 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x21D7 JUMP JUMPDEST SWAP1 CALLER PUSH2 0x2467 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x294 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x20 SWAP3 DUP4 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x242 JUMPI PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 MSTORE PUSH1 0x8 DUP1 DUP7 MSTORE DUP3 DUP6 KECCAK256 SLOAD DUP5 CALLDATALOAD SWAP3 SWAP2 SHR PUSH1 0xFF AND ISZERO PUSH2 0x1970 JUMPI CALLER DUP6 MSTORE PUSH1 0x2 DUP7 MSTORE DUP3 DUP6 KECCAK256 SLOAD DUP3 GT PUSH2 0x1937 JUMPI DUP3 MLOAD SWAP6 DUP6 DUP2 DUP9 ADD MSTORE CALLER DUP5 DUP9 ADD MSTORE PUSH1 0x60 DUP4 DUP2 DUP10 ADD MSTORE DUP1 DUP9 MSTORE PUSH2 0x1444 DUP9 PUSH2 0x2007 JUMP JUMPDEST CALLER ISZERO PUSH2 0x18EA JUMPI CALLER DUP8 MSTORE PUSH1 0x2 DUP3 MSTORE DUP5 DUP8 KECCAK256 SLOAD SWAP8 DUP5 DUP10 LT PUSH2 0x189C JUMPI DUP5 DUP9 SWAP10 SWAP9 SWAP7 SWAP8 SWAP9 CALLER DUP9 MSTORE PUSH1 0x2 DUP6 MSTORE SUB DUP8 DUP8 KECCAK256 SSTORE DUP5 DUP9 SLOAD SUB DUP9 SSTORE DUP6 DUP8 MLOAD DUP7 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 CALLER SWAP3 LOG3 DUP4 PUSH1 0xA SLOAD AND SWAP2 DUP3 DUP8 MSTORE PUSH1 0x8 DUP5 MSTORE DUP8 DUP8 KECCAK256 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 DUP4 DUP2 PUSH1 0x10 SHR AND SWAP4 PUSH32 0x0 AND DUP5 EQ PUSH1 0x0 EQ PUSH2 0x1545 JUMPI POP POP POP POP POP POP PUSH1 0xA SLOAD AND DUP1 EXTCODESIZE ISZERO PUSH2 0x242 JUMPI DUP4 MLOAD PUSH4 0x15E005B7 PUSH1 0xE3 SHL DUP2 MSTORE CALLER SWAP6 DUP2 ADD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP4 DUP5 SWAP2 SWAP1 DUP3 SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xE28 JUMPI POP PUSH2 0x153C JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x909 SWAP1 PUSH2 0x1FD9 JUMP JUMPDEST SWAP1 SWAP3 SWAP6 SWAP7 POP PUSH1 0xFF SWAP2 SWAP4 SWAP8 POP SWAP9 SWAP4 SWAP9 AND ISZERO PUSH2 0x121F JUMPI DUP5 PUSH1 0x7 SLOAD AND DUP3 DUP2 SWAP4 PUSH1 0x80 DUP11 MLOAD PUSH2 0x156E DUP2 PUSH2 0x1F8D JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 DUP14 DUP3 ADD MSTORE DUP3 DUP13 DUP3 ADD MSTORE DUP14 DUP4 DUP3 ADD MSTORE ADD MSTORE DUP9 MLOAD SWAP8 DUP11 DUP10 ADD MSTORE DUP10 DUP9 MSTORE PUSH2 0x1595 DUP9 PUSH2 0x1FEC JUMP JUMPDEST DUP9 MLOAD PUSH2 0x15A0 DUP2 PUSH2 0x1FBE JUMP JUMPDEST DUP12 DUP2 MSTORE PUSH2 0x15B1 DUP11 MLOAD PUSH2 0xEA0 DUP2 PUSH2 0x1FBE JUMP JUMPDEST SWAP4 DUP11 MLOAD SWAP10 PUSH2 0x15BE DUP12 PUSH2 0x1F8D JUMP JUMPDEST DUP11 MSTORE DUP12 DUP11 ADD MSTORE DUP10 DUP10 ADD MSTORE DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD MSTORE DUP6 MLOAD PUSH4 0xB0F479A1 PUSH1 0xE0 SHL DUP2 MSTORE DUP8 DUP2 DUP5 DUP2 ADDRESS GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1215 JUMPI SWAP1 DUP6 SWAP2 DUP11 SWAP2 PUSH2 0x1862 JUMPI JUMPDEST POP AND SWAP4 DUP9 DUP8 MLOAD SWAP3 PUSH4 0x20487DED PUSH1 0xE0 SHL DUP5 MSTORE DUP10 DUP5 DUP1 PUSH2 0x1615 DUP12 DUP11 DUP11 DUP5 ADD PUSH2 0x20F3 JUMP JUMPDEST SUB DUP2 DUP11 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x11D1 JUMPI SWAP1 DUP11 SWAP2 DUP4 SWAP6 PUSH2 0x1831 JUMPI JUMPDEST POP PUSH1 0x64 DUP11 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP4 MSTORE CALLER DUP11 DUP5 ADD MSTORE ADDRESS PUSH1 0x24 DUP5 ADD MSTORE DUP9 PUSH1 0x44 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x1195 JUMPI DUP11 SWAP2 PUSH2 0x1814 JUMPI JUMPDEST POP ISZERO PUSH2 0x1135 JUMPI SWAP1 DUP9 SWAP3 SWAP2 PUSH1 0x7 SLOAD AND SWAP1 DUP8 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL SWAP1 DUP2 DUP2 MSTORE ADDRESS DUP6 DUP3 ADD MSTORE DUP11 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x180A JUMPI DUP7 SWAP2 PUSH2 0x17DD JUMPI JUMPDEST POP DUP3 GT PUSH2 0x175E JUMPI POP DUP8 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 DUP10 SWAP2 DUP4 SWAP2 SWAP1 DUP3 SWAP1 DUP8 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x1078 JUMPI SWAP2 DUP9 SWAP6 SWAP4 SWAP2 PUSH2 0x1707 SWAP9 SWAP8 SWAP6 SWAP4 PUSH2 0x1741 JUMPI POP DUP7 MLOAD PUSH4 0x96F4E9F9 PUSH1 0xE0 SHL DUP2 MSTORE SWAP8 DUP9 SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 ADD PUSH2 0x20F3 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x1042 JUMPI POP PUSH2 0x171C JUMPI POP POP DUP1 RETURN JUMPDEST DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x173A JUMPI JUMPDEST PUSH2 0x172F DUP2 DUP4 PUSH2 0x2022 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x43A JUMPI DUP1 RETURN JUMPDEST POP RETURNDATASIZE PUSH2 0x1725 JUMP JUMPDEST PUSH2 0x1757 SWAP1 DUP8 RETURNDATASIZE DUP10 GT PUSH2 0x1071 JUMPI PUSH2 0x1062 DUP2 DUP4 PUSH2 0x2022 JUMP JUMPDEST POP DUP11 PUSH2 0xFE6 JUMP JUMPDEST DUP10 SWAP2 SWAP3 DUP3 DUP11 SWAP3 PUSH1 0x24 DUP5 MLOAD DUP1 SWAP5 DUP2 SWAP4 DUP3 MSTORE ADDRESS DUP11 DUP4 ADD MSTORE GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x17D3 JUMPI DUP7 SWAP4 PUSH2 0x179F JUMPI JUMPDEST POP POP MLOAD PUSH4 0x4787A103 PUSH1 0xE1 SHL DUP2 MSTORE SWAP3 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP2 POP REVERT JUMPDEST SWAP1 DUP1 SWAP3 SWAP4 POP DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x17CC JUMPI JUMPDEST PUSH2 0x17B7 DUP2 DUP4 PUSH2 0x2022 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x90C JUMPI PUSH1 0x44 SWAP5 POP MLOAD SWAP1 DUP6 DUP1 PUSH2 0x1783 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x17AD JUMP JUMPDEST DUP3 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP DUP11 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1803 JUMPI JUMPDEST PUSH2 0x17F4 DUP2 DUP4 PUSH2 0x2022 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x98E JUMPI MLOAD DUP13 PUSH2 0x1697 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x17EA JUMP JUMPDEST DUP11 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x182B SWAP2 POP DUP10 RETURNDATASIZE DUP12 GT PUSH2 0x1071 JUMPI PUSH2 0x1062 DUP2 DUP4 PUSH2 0x2022 JUMP JUMPDEST DUP11 PUSH2 0x165F JUMP JUMPDEST DUP3 DUP2 SWAP4 SWAP3 SWAP7 POP RETURNDATASIZE DUP4 GT PUSH2 0x185B JUMPI JUMPDEST PUSH2 0x1849 DUP2 DUP4 PUSH2 0x2022 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x294 JUMPI DUP10 SWAP1 MLOAD SWAP4 DUP13 PUSH2 0x162B JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x183F JUMP JUMPDEST DUP1 SWAP3 POP DUP10 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x1895 JUMPI JUMPDEST PUSH2 0x187B DUP2 DUP4 PUSH2 0x2022 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xA67 JUMPI MLOAD DUP5 DUP2 AND DUP2 SUB PUSH2 0xA67 JUMPI DUP5 SWAP1 DUP11 PUSH2 0x15F4 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1871 JUMP JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP9 ADD DUP5 SWAP1 MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP8 ADD DUP4 SWAP1 MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP6 ADD DUP8 SWAP1 MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E6F7420656E6F756768742062616C616E6365 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP6 ADD DUP8 SWAP1 MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4E6F6465206973206E6F7420416374697665 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x294 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x294 JUMPI PUSH2 0x19C4 PUSH2 0x1F0B JUMP JUMPDEST PUSH2 0x19CC PUSH2 0x1F21 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP5 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP6 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 MSTORE SWAP3 DUP5 SWAP1 KECCAK256 SLOAD PUSH1 0x44 CALLDATALOAD SWAP4 SWAP3 PUSH1 0x1 DUP3 ADD PUSH2 0x1A08 JUMPI JUMPDEST PUSH1 0x20 DUP7 PUSH2 0x38D DUP8 DUP8 DUP8 PUSH2 0x2253 JUMP JUMPDEST DUP5 DUP3 LT PUSH2 0x1A31 JUMPI POP SWAP2 DUP4 SWAP2 PUSH2 0x1A26 PUSH1 0x20 SWAP7 SWAP6 PUSH2 0x38D SWAP6 SUB CALLER DUP4 PUSH2 0x2467 JUMP JUMPDEST SWAP2 SWAP4 SWAP5 DUP2 SWAP4 POP PUSH2 0x19FA JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x43A JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x43A JUMPI PUSH2 0x1A8E PUSH2 0x1F0B JUMP JUMPDEST SWAP3 PUSH2 0x1A97 PUSH2 0x1F21 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP6 AND SWAP3 DUP4 DUP2 MSTORE PUSH1 0x8 SWAP6 PUSH1 0x20 SWAP7 DUP1 DUP9 MSTORE DUP7 DUP4 KECCAK256 SWAP6 PUSH1 0x1 DUP1 PUSH1 0xFF DUP10 SLOAD DUP6 SHR AND ISZERO ISZERO EQ SWAP8 DUP9 PUSH2 0x1BD1 JUMPI JUMPDEST POP DUP8 PUSH2 0x1BBD JUMPI JUMPDEST DUP8 PUSH2 0x1B9E JUMPI JUMPDEST DUP8 PUSH2 0x1B67 JUMPI JUMPDEST DUP8 PUSH2 0x1B4D JUMPI JUMPDEST POP DUP7 PUSH2 0x1B34 JUMPI JUMPDEST DUP7 PUSH2 0x1B1F JUMPI JUMPDEST DUP7 PUSH2 0x1AFE JUMPI JUMPDEST DUP9 DUP8 DUP10 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP4 MSTORE DUP8 MSTORE DUP6 DUP3 KECCAK256 DUP4 ADD SLOAD SWAP4 AND DUP2 MSTORE DUP5 SWAP1 KECCAK256 ADD SLOAD GT SWAP1 POP CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x1AF3 JUMP JUMPDEST DUP1 DUP5 MSTORE DUP2 DUP10 MSTORE DUP8 DUP5 KECCAK256 DUP6 ADD SLOAD ISZERO ISZERO SWAP7 POP PUSH2 0x1AED JUMP JUMPDEST DUP6 DUP4 AND DUP5 MSTORE DUP2 DUP10 MSTORE DUP8 DUP5 KECCAK256 SLOAD DUP3 SHR PUSH1 0xFF AND ISZERO SWAP7 POP PUSH2 0x1AE7 JUMP JUMPDEST DUP7 DUP5 AND DUP6 MSTORE DUP3 DUP11 MSTORE DUP9 DUP6 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ SWAP7 POP CODESIZE PUSH2 0x1AE0 JUMP JUMPDEST SWAP7 POP DUP3 DUP7 AND DUP5 MSTORE DUP2 DUP10 MSTORE DUP7 DUP9 DUP6 KECCAK256 ADD SLOAD PUSH2 0xE10 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x1B8B JUMPI TIMESTAMP LT SWAP7 PUSH2 0x1ADA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x11 DUP7 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST SWAP7 POP DUP1 DUP5 MSTORE DUP7 DUP9 DUP6 KECCAK256 ADD SLOAD PUSH2 0xE10 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x1B8B JUMPI TIMESTAMP LT SWAP7 PUSH2 0x1AD4 JUMP JUMPDEST DUP7 DUP5 AND DUP6 MSTORE DUP9 DUP6 KECCAK256 DUP2 ADD SLOAD ISZERO ISZERO SWAP8 POP PUSH2 0x1ACE JUMP JUMPDEST DUP2 ADD SLOAD ISZERO ISZERO SWAP8 POP CODESIZE PUSH2 0x1AC7 JUMP JUMPDEST POP CALLVALUE PUSH2 0x242 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x242 JUMPI PUSH1 0x20 SWAP3 POP SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x294 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x1C20 PUSH2 0x21FA JUMP JUMPDEST SWAP2 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x242 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x242 JUMPI PUSH2 0x1C42 PUSH2 0x1F0B JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x90C JUMPI PUSH1 0x44 CALLDATALOAD SWAP2 DUP3 ISZERO ISZERO SWAP2 DUP3 DUP5 SUB PUSH2 0xA63 JUMPI PUSH2 0x1C6E PUSH2 0x25C2 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x9 SLOAD AND ISZERO PUSH2 0x1D05 JUMPI POP PUSH1 0x1 SWAP1 DUP2 DUP1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP6 DUP7 DUP9 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE DUP8 KECCAK256 SWAP3 PUSH2 0xFF00 PUSH10 0xFFFFFFFFFFFFFFFF0000 DUP6 SLOAD SWAP4 PUSH1 0x10 SHL AND SWAP3 PUSH10 0xFFFFFFFFFFFFFFFFFFFF NOT AND SWAP2 PUSH1 0x8 SHL AND OR OR OR SWAP1 SSTORE PUSH2 0x1CC6 JUMPI DUP3 DUP1 RETURN JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH1 0x8 SWAP3 SWAP1 SWAP3 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE CODESIZE DUP1 DUP3 DUP1 RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x139BC81B5BDC99481B9BD9195CC8185B1B1BDDD959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x294 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x294 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x38D PUSH2 0x1D60 PUSH2 0x1F0B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x2467 JUMP JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x43A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x43A JUMPI DUP2 MLOAD SWAP2 DUP2 PUSH1 0x5 SLOAD SWAP3 PUSH1 0x1 DUP5 DUP2 SHR SWAP2 DUP2 DUP7 AND SWAP6 DUP7 ISZERO PUSH2 0x1E2D JUMPI JUMPDEST PUSH1 0x20 SWAP7 DUP8 DUP6 LT DUP2 EQ PUSH2 0x69A JUMPI DUP9 SWAP10 POP SWAP7 DUP9 SWAP7 SWAP8 DUP6 DUP3 SWAP11 MSTORE SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x673 JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x1DD1 JUMPI POP POP POP PUSH2 0x613 SWAP3 SWAP2 PUSH2 0x604 SWAP2 SUB DUP6 PUSH2 0x2022 JUMP JUMPDEST SWAP2 SWAP1 DUP7 SWAP4 POP PUSH1 0x5 DUP4 MSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 JUMPDEST DUP3 DUP5 LT PUSH2 0x1E15 JUMPI POP POP POP DUP3 ADD ADD DUP2 PUSH2 0x604 PUSH2 0x613 PUSH2 0x5F1 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP11 ADD DUP7 ADD MSTORE DUP9 SWAP6 POP DUP8 SWAP5 SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x1DFC JUMP JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x1D95 JUMP JUMPDEST POP CALLVALUE PUSH2 0x242 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x242 JUMPI PUSH2 0x1E50 PUSH2 0x1F0B JUMP JUMPDEST SWAP2 CALLER DUP5 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH2 0x1E96 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP4 DUP8 KECCAK256 SLOAD PUSH1 0x10 SHR AND SWAP1 PUSH32 0x0 AND EQ PUSH2 0x2099 JUMP JUMPDEST CALLER DUP5 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0xFF DUP2 DUP6 KECCAK256 SLOAD AND ISZERO PUSH2 0x585 JUMPI DUP4 PUSH2 0x909 PUSH1 0x24 CALLDATALOAD DUP6 PUSH2 0x23C3 JUMP JUMPDEST SWAP3 POP POP CALLVALUE PUSH2 0x242 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x242 JUMPI CALLDATALOAD PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 AND DUP1 SWAP2 SUB PUSH2 0x242 JUMPI PUSH1 0x20 SWAP3 POP PUSH4 0x85572FFB PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x1EFA JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP CODESIZE PUSH2 0x1EF3 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xB50 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xB50 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x1F63 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1F42 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xB50 JUMPI JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1FA8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1FA8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1FA8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1FA8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1FA8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1FA8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0xB50 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1FA8 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x2077 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x2022 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0xB50 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x20A0 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52657175697265206D617374657220616E64206E6F646520696E2073616D6520 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x31B430B4B7 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP4 SWAP3 SWAP4 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 SWAP2 DUP2 DUP4 DUP3 ADD MSTORE PUSH2 0x2122 DUP6 MLOAD PUSH1 0xA0 DUP5 DUP5 ADD MSTORE PUSH1 0xE0 DUP4 ADD SWAP1 PUSH2 0x1F37 JUMP JUMPDEST SWAP2 PUSH2 0x213E DUP5 DUP8 ADD MLOAD SWAP4 PUSH1 0x3F NOT SWAP5 DUP6 DUP6 DUP4 SUB ADD PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x1F37 JUMP JUMPDEST DUP2 DUP8 ADD MLOAD SWAP5 DUP5 DUP5 DUP4 SUB ADD PUSH1 0x80 DUP6 ADD MSTORE DUP1 DUP1 DUP8 MLOAD SWAP4 DUP5 DUP2 MSTORE ADD SWAP7 ADD SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0x2196 JUMPI POP POP POP POP POP PUSH1 0xC0 PUSH1 0x80 PUSH2 0x2193 SWAP6 SWAP7 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x60 DUP3 ADD MLOAD AND PUSH1 0xA0 DUP6 ADD MSTORE ADD MLOAD SWAP3 DUP3 DUP6 SUB ADD SWAP2 ADD MSTORE PUSH2 0x1F37 JUMP JUMPDEST SWAP1 JUMP JUMPDEST DUP5 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 MSTORE DUP4 ADD MLOAD DUP9 DUP5 ADD MSTORE SWAP7 DUP8 ADD SWAP7 SWAP4 DUP3 ADD SWAP4 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x215D JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xB50 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0xB50 JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x21E4 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x222D JUMPI POP PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x10 SHR AND SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x9 SLOAD PUSH1 0x8 SHR AND PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x10 SHR AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x2370 JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x231F JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 DUP1 DUP4 LT PUSH2 0x22CB JUMPI PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE PUSH1 0x2 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x2422 JUMPI PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP3 PUSH2 0x2405 PUSH1 0x0 SWAP5 PUSH1 0x4 SLOAD PUSH2 0x21D7 JUMP JUMPDEST PUSH1 0x4 SSTORE DUP5 DUP5 MSTORE PUSH1 0x2 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x2518 JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x24C8 JUMPI PUSH1 0x20 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x3 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xB50 JUMPI JUMP JUMPDEST MLOAD SWAP1 PUSH1 0xFF DUP3 AND DUP3 SUB PUSH2 0xB50 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH4 0x97A657C9 PUSH1 0xE0 SHL PUSH1 0x20 DUP4 ADD MSTORE MLOAD PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x60 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1FA8 JUMPI PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x25D6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27B7363C9031B0B63630B1363290313C9037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD 0xEA DUP14 RETURN 0xC4 0xD2 PUSH22 0x9AB972CC81ABF188B2B89DD34252EC8BACC82084E85B 0xE2 GASPRICE 0xCD PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "9": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "10": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "11": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "LT",
      "path": "14"
    },
    "12": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "13": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x21"
    },
    "16": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "17": {
      "op": "JUMPDEST"
    },
    "18": {
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "19": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "20": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "21": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "22": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "23": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F"
    },
    "26": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "27": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "29": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "30": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "REVERT",
      "path": "14"
    },
    "31": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "32": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "STOP",
      "path": "14"
    },
    "33": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "34": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "36": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "37": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "38": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "39": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "41": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "SHR",
      "path": "14"
    },
    "42": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "43": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "44": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x1FFC9A7"
    },
    "49": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "EQ",
      "path": "14"
    },
    "50": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1EB7"
    },
    "53": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "54": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "55": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "56": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x4783EA4"
    },
    "61": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "EQ",
      "path": "14"
    },
    "62": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1E37"
    },
    "65": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "66": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "67": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x6FDDE03"
    },
    "72": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "EQ",
      "path": "14"
    },
    "73": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1D6A"
    },
    "76": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "77": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "78": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x95EA7B3"
    },
    "83": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "EQ",
      "path": "14"
    },
    "84": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1D40"
    },
    "87": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "88": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "89": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x10A78DF8"
    },
    "94": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "EQ",
      "path": "14"
    },
    "95": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1C28"
    },
    "98": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "99": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "100": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x1803C2F5"
    },
    "105": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "EQ",
      "path": "14"
    },
    "106": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1BFB"
    },
    "109": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "110": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "111": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x18160DDD"
    },
    "116": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "EQ",
      "path": "14"
    },
    "117": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1BDE"
    },
    "120": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "121": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "122": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x1D880928"
    },
    "127": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "EQ",
      "path": "14"
    },
    "128": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1A74"
    },
    "131": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "132": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "133": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x23B872DD"
    },
    "138": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "EQ",
      "path": "14"
    },
    "139": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x19A8"
    },
    "142": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "143": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "144": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x2E1A7D4D"
    },
    "149": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "EQ",
      "path": "14"
    },
    "150": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x13D7"
    },
    "153": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "154": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "155": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x313CE567"
    },
    "160": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "EQ",
      "path": "14"
    },
    "161": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x13BB"
    },
    "164": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "165": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "166": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x39509351"
    },
    "171": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "EQ",
      "path": "14"
    },
    "172": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x136C"
    },
    "175": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "176": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "177": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x544B1709"
    },
    "182": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "EQ",
      "path": "14"
    },
    "183": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x123A"
    },
    "186": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "187": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "188": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "189": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x5C292BE5"
    },
    "194": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "EQ",
      "path": "14"
    },
    "195": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xD0B"
    },
    "198": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "199": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "200": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "201": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x61AC3F99"
    },
    "206": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "EQ",
      "path": "14"
    },
    "207": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xCDE"
    },
    "210": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "211": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "212": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x654E8E0C"
    },
    "217": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "EQ",
      "path": "14"
    },
    "218": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xCBA"
    },
    "221": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "222": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "223": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x6C1DC077"
    },
    "228": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "EQ",
      "path": "14"
    },
    "229": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC91"
    },
    "232": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "233": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "234": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x6C98D513"
    },
    "239": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "EQ",
      "path": "14"
    },
    "240": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC6B"
    },
    "243": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "244": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "245": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x70A08231"
    },
    "250": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "EQ",
      "path": "14"
    },
    "251": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC33"
    },
    "254": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "255": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "256": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x79BA5097"
    },
    "261": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "EQ",
      "path": "14"
    },
    "262": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB8C"
    },
    "265": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "266": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "267": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x85572FFB"
    },
    "272": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "EQ",
      "path": "14"
    },
    "273": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x723"
    },
    "276": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "277": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "278": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x8CF19D19"
    },
    "283": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "EQ",
      "path": "14"
    },
    "284": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x6DF"
    },
    "287": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "288": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "289": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x8DA5CB5B"
    },
    "294": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "EQ",
      "path": "14"
    },
    "295": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x6B7"
    },
    "298": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "299": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "300": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x95D89B41"
    },
    "305": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "EQ",
      "path": "14"
    },
    "306": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x59C"
    },
    "309": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "310": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "311": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x9637120F"
    },
    "316": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "EQ",
      "path": "14"
    },
    "317": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4F1"
    },
    "320": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "321": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "322": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x995714AE"
    },
    "327": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "EQ",
      "path": "14"
    },
    "328": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x43D"
    },
    "331": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "332": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "333": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xA457C2D7"
    },
    "338": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "EQ",
      "path": "14"
    },
    "339": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x394"
    },
    "342": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "343": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "344": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xA9059CBB"
    },
    "349": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "EQ",
      "path": "14"
    },
    "350": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x363"
    },
    "353": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "354": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "355": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xB0F479A1"
    },
    "360": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "EQ",
      "path": "14"
    },
    "361": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x31F"
    },
    "364": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "365": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "366": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xB2D92955"
    },
    "371": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "EQ",
      "path": "14"
    },
    "372": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x298"
    },
    "375": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "376": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "377": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xDD62ED3E"
    },
    "382": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "EQ",
      "path": "14"
    },
    "383": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x246"
    },
    "386": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "387": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xF2FDE38B"
    },
    "392": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "393": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x11"
    },
    "396": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "397": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "398": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x242"
    },
    "401": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "402": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "404": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "405": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "407": {
      "op": "NOT"
    },
    "408": {
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "409": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "410": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x242"
    },
    "413": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "414": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1A5"
    },
    "417": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F0B"
    },
    "420": {
      "fn": null,
      "jump": "i",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "421": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "422": {
      "offset": [
        2032,
        2091
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "423": {
      "fn": null,
      "offset": [
        2032,
        2091
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1AE"
    },
    "426": {
      "fn": null,
      "offset": [
        2032,
        2091
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x25C2"
    },
    "429": {
      "fn": null,
      "jump": "i",
      "offset": [
        2032,
        2091
      ],
      "op": "JUMP",
      "path": "9"
    },
    "430": {
      "fn": null,
      "offset": [
        2032,
        2091
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "435": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "437": {
      "op": "SHL"
    },
    "438": {
      "op": "SUB"
    },
    "439": {
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "440": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "441": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "442": {
      "fn": null,
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "443": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1643,
        1653
      ],
      "op": "CALLER",
      "path": "9",
      "statement": 0
    },
    "444": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1637,
        1653
      ],
      "op": "DUP5",
      "path": "9"
    },
    "445": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1637,
        1653
      ],
      "op": "EQ",
      "path": "9"
    },
    "446": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FF"
    },
    "449": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "450": {
      "op": "POP"
    },
    "451": {
      "op": "POP"
    },
    "452": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "454": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "455": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "458": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "460": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "462": {
      "op": "SHL"
    },
    "463": {
      "op": "SUB"
    },
    "464": {
      "op": "NOT"
    },
    "465": {
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "466": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "467": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "OR",
      "path": "14"
    },
    "468": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "469": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "470": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "471": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "472": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "473": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1719,
        1758
      ],
      "op": "PUSH32",
      "path": "9",
      "statement": 1,
      "value": "0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278"
    },
    "506": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "507": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "508": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1719,
        1758
      ],
      "op": "LOG3",
      "path": "9"
    },
    "509": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "510": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "RETURN",
      "path": "14"
    },
    "511": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "512": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "513": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "515": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "517": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "518": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "519": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "520": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x461BCD"
    },
    "524": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE5"
    },
    "526": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "SHL",
      "path": "14"
    },
    "527": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "528": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "529": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "530": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "531": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "532": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x17"
    },
    "534": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "536": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "537": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "538": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "539": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000"
    },
    "572": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "574": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "575": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "576": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "577": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "REVERT",
      "path": "14"
    },
    "578": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "579": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "580": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "581": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "REVERT",
      "path": "14"
    },
    "582": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "583": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "584": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "585": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "586": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x294"
    },
    "589": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "590": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "591": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "593": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "NOT",
      "path": "14"
    },
    "594": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "595": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "596": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "597": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x294"
    },
    "600": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "601": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "603": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "604": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x263"
    },
    "607": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F0B"
    },
    "610": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "jump": "i",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "611": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "612": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "613": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x26C"
    },
    "616": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F21"
    },
    "619": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "jump": "i",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "620": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "625": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "627": {
      "op": "SHL"
    },
    "628": {
      "op": "SUB"
    },
    "629": {
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "630": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "631": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "632": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "633": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "634": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "636": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "637": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "638": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "639": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "640": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "641": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "642": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "644": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "645": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "646": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "647": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "648": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "649": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "650": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "651": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "652": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "653": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "654": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "655": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "656": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "657": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "658": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "659": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "RETURN",
      "path": "14"
    },
    "660": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "661": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "662": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "663": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "REVERT",
      "path": "14"
    },
    "664": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "665": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "666": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "667": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "668": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x242"
    },
    "671": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "672": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "674": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "675": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "677": {
      "op": "NOT"
    },
    "678": {
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "679": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "680": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x242"
    },
    "683": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "684": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "686": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "687": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "688": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "689": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "693": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "695": {
      "op": "SHL"
    },
    "696": {
      "op": "SUB"
    },
    "697": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2C0"
    },
    "700": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F0B"
    },
    "703": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "jump": "i",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "704": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "705": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "706": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "707": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "708": {
      "offset": [
        2111,
        2159
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "710": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "712": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "713": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "714": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "715": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "716": {
      "offset": [
        2111,
        2159
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "717": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "719": {
      "offset": [
        2111,
        2159
      ],
      "op": "DUP3",
      "path": "14"
    },
    "720": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        2111,
        2159
      ],
      "op": "ADD",
      "path": "14"
    },
    "721": {
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "722": {
      "offset": [
        2111,
        2159
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "724": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        2111,
        2159
      ],
      "op": "DUP4",
      "path": "14"
    },
    "725": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        2111,
        2159
      ],
      "op": "ADD",
      "path": "14"
    },
    "726": {
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "727": {
      "offset": [
        2111,
        2159
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "728": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "730": {
      "offset": [
        2111,
        2159
      ],
      "op": "DUP5",
      "path": "14"
    },
    "731": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        2111,
        2159
      ],
      "op": "ADD",
      "path": "14"
    },
    "732": {
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "733": {
      "offset": [
        2111,
        2159
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "734": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        2111,
        2159
      ],
      "op": "ADD",
      "path": "14"
    },
    "735": {
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "736": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "741": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "743": {
      "op": "SHL"
    },
    "744": {
      "op": "SUB"
    },
    "745": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "746": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "747": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "748": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "750": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "751": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "752": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "753": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "754": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "DUP9",
      "path": "14"
    },
    "755": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "756": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "758": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "759": {
      "offset": [
        2111,
        2159
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "761": {
      "offset": [
        783,
        15140
      ],
      "op": "SHR",
      "path": "14"
    },
    "762": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "763": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "764": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "765": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "767": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "DUP10",
      "path": "14"
    },
    "768": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "769": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "770": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x10"
    },
    "772": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "SHR",
      "path": "14"
    },
    "773": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "774": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "775": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "776": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "777": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "778": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "780": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "781": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "782": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "783": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "785": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "786": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "787": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "788": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "790": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "791": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "792": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "793": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xC0"
    },
    "795": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "796": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "797": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "798": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "RETURN",
      "path": "14"
    },
    "799": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "800": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "801": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "802": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "803": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x294"
    },
    "806": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "807": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "808": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "810": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "NOT",
      "path": "14"
    },
    "811": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "812": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "813": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "814": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x294"
    },
    "817": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "818": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "819": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        2277,
        2289
      ],
      "op": "PUSH32",
      "path": "4",
      "statement": 2,
      "value": "0x0"
    },
    "852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "856": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "858": {
      "op": "SHL"
    },
    "859": {
      "op": "SUB"
    },
    "860": {
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "861": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "862": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "863": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "865": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "866": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15140
      ],
      "op": "RETURN",
      "path": "14"
    },
    "867": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "868": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "869": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "870": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15140
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "871": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x294"
    },
    "874": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "875": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "876": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "878": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15140
      ],
      "op": "NOT",
      "path": "14"
    },
    "879": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "880": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "881": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "882": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x294"
    },
    "885": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "886": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "888": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "889": {
      "fn": "ERC20.transfer",
      "offset": [
        3881,
        3887
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 3,
      "value": "0x38D"
    },
    "892": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x383"
    },
    "895": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F0B"
    },
    "898": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "899": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "900": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "902": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "903": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "3",
      "statement": 4
    },
    "904": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "905": {
      "fn": "ERC20.transfer",
      "offset": [
        3881,
        3887
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2253"
    },
    "908": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3881,
        3887
      ],
      "op": "JUMP",
      "path": "0"
    },
    "909": {
      "fn": "ERC20.transfer",
      "offset": [
        3881,
        3887
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "910": {
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "911": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "913": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "914": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "915": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15140
      ],
      "op": "RETURN",
      "path": "14"
    },
    "916": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "917": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "918": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "919": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15140
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "920": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x43A"
    },
    "923": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "924": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "925": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "927": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15140
      ],
      "op": "NOT",
      "path": "14"
    },
    "928": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "929": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "930": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "931": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x43A"
    },
    "934": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "935": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3AE"
    },
    "938": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F0B"
    },
    "941": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "942": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "943": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "944": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "945": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "947": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "948": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "949": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "950": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "951": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "952": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "954": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "956": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "957": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15140
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "958": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "960": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "961": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "963": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15140
      ],
      "op": "SHL",
      "path": "14"
    },
    "964": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "965": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "966": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "967": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "969": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "970": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "972": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "973": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "974": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "976": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15140
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "977": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "978": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6809,
        6844
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 5
    },
    "979": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6809,
        6844
      ],
      "op": "DUP3",
      "path": "0"
    },
    "980": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6809,
        6844
      ],
      "op": "DUP3",
      "path": "0"
    },
    "981": {
      "branch": 78,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6809,
        6844
      ],
      "op": "LT",
      "path": "0"
    },
    "982": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3E9"
    },
    "985": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "986": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "988": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "989": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6945,
        6979
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 6,
      "value": "0x38D"
    },
    "992": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "993": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "994": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "995": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "DUP8",
      "path": "14"
    },
    "996": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "997": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6945,
        6979
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2467"
    },
    "1000": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6945,
        6979
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1001": {
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1002": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x84"
    },
    "1004": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1005": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1007": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "1008": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1009": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1010": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x461BCD"
    },
    "1014": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE5"
    },
    "1016": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "SHL",
      "path": "14"
    },
    "1017": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1018": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1019": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1020": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "1021": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1022": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x25"
    },
    "1024": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "1026": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1027": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "1028": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1029": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "1062": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "1064": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1065": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "1066": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1067": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "1073": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "1075": {
      "op": "SHL"
    },
    "1076": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "1078": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1079": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "1080": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1081": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1082": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1083": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1084": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1085": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1086": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "1087": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "1088": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x242"
    },
    "1091": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1092": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1093": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "1095": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "NOT",
      "path": "14"
    },
    "1096": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "1097": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "1098": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "1099": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x242"
    },
    "1102": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1103": {
      "offset": [
        3011,
        3021
      ],
      "op": "CALLER",
      "path": "14"
    },
    "1104": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1105": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1106": {
      "offset": [
        3000,
        3010
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "1108": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1110": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1111": {
      "offset": [
        2979,
        3125
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x493"
    },
    "1114": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1116": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1118": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1120": {
      "op": "SHL"
    },
    "1121": {
      "op": "SUB"
    },
    "1122": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1123": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1124": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "1125": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1126": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1127": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x10"
    },
    "1129": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "SHR",
      "path": "14"
    },
    "1130": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "1131": {
      "offset": [
        3038,
        3062
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1132": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        3038,
        3062
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x0"
    },
    "1165": {
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "1166": {
      "offset": [
        3000,
        3062
      ],
      "op": "EQ",
      "path": "14"
    },
    "1167": {
      "offset": [
        2979,
        3125
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2099"
    },
    "1170": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        2979,
        3125
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1171": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        2979,
        3125
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1172": {
      "offset": [
        3011,
        3021
      ],
      "op": "CALLER",
      "path": "14"
    },
    "1173": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1174": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1175": {
      "offset": [
        3000,
        3010
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "1177": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1179": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1180": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "1182": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1183": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1184": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1185": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1186": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "1187": {
      "offset": [
        2804,
        2840
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1188": {
      "offset": [
        2800,
        2910
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4DB"
    },
    "1191": {
      "offset": [
        2800,
        2910
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1192": {
      "offset": [
        3011,
        3021
      ],
      "op": "POP",
      "path": "14"
    },
    "1193": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        3011,
        3021
      ],
      "op": "CALLER",
      "path": "14"
    },
    "1194": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1195": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1196": {
      "offset": [
        3000,
        3010
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "1198": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1200": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1201": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1202": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1203": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x100"
    },
    "1206": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xFF00"
    },
    "1209": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "NOT",
      "path": "14"
    },
    "1210": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1211": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1212": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "1213": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "OR",
      "path": "14"
    },
    "1214": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1215": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "1216": {
      "offset": [
        3011,
        3021
      ],
      "op": "CALLER",
      "path": "14"
    },
    "1217": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH12",
      "path": "14",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "1230": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "1232": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "SHL",
      "path": "14"
    },
    "1233": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        5481,
        5504
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 7,
      "value": "0xA"
    },
    "1235": {
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1236": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "1237": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "OR",
      "path": "14"
    },
    "1238": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        5481,
        5504
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA"
    },
    "1240": {
      "offset": [
        783,
        15140
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "1241": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1242": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "RETURN",
      "path": "14"
    },
    "1243": {
      "offset": [
        2800,
        2910
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1244": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "1246": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1247": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1248": {
      "offset": [
        2863,
        2899
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1249": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        2863,
        2899
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x6A9FF79F"
    },
    "1254": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        2863,
        2899
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE1"
    },
    "1256": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        2863,
        2899
      ],
      "op": "SHL",
      "path": "14"
    },
    "1257": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        2863,
        2899
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1258": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        2863,
        2899
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1259": {
      "offset": [
        3011,
        3021
      ],
      "op": "CALLER",
      "path": "14"
    },
    "1260": {
      "offset": [
        2863,
        2899
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1261": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        2863,
        2899
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1262": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        2863,
        2899
      ],
      "op": "ADD",
      "path": "14"
    },
    "1263": {
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1264": {
      "offset": [
        2863,
        2899
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1265": {
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1266": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "1267": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1268": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "1269": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x242"
    },
    "1272": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1273": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "1275": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "1276": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "1278": {
      "op": "NOT"
    },
    "1279": {
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "1280": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "1281": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x242"
    },
    "1284": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1285": {
      "offset": [
        3011,
        3021
      ],
      "op": "CALLER",
      "path": "14"
    },
    "1286": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1287": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1288": {
      "offset": [
        3000,
        3010
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "1290": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1292": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1293": {
      "offset": [
        2979,
        3125
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x549"
    },
    "1296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1300": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1302": {
      "op": "SHL"
    },
    "1303": {
      "op": "SUB"
    },
    "1304": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1305": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1306": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "1307": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1308": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1309": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x10"
    },
    "1311": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "SHR",
      "path": "14"
    },
    "1312": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "1313": {
      "offset": [
        3038,
        3062
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1314": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        3038,
        3062
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x0"
    },
    "1347": {
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "1348": {
      "offset": [
        3000,
        3062
      ],
      "op": "EQ",
      "path": "14"
    },
    "1349": {
      "offset": [
        2979,
        3125
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2099"
    },
    "1352": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "jump": "i",
      "offset": [
        2979,
        3125
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1353": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        2979,
        3125
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1354": {
      "offset": [
        3011,
        3021
      ],
      "op": "CALLER",
      "path": "14"
    },
    "1355": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1356": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1357": {
      "offset": [
        3000,
        3010
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "1359": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1361": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1362": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "1364": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1365": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1366": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1367": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1368": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "1369": {
      "offset": [
        2804,
        2840
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1370": {
      "offset": [
        2800,
        2910
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x585"
    },
    "1373": {
      "offset": [
        2800,
        2910
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1374": {
      "offset": [
        3011,
        3021
      ],
      "op": "CALLER",
      "path": "14"
    },
    "1375": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1376": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1377": {
      "offset": [
        3000,
        3010
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "1379": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1381": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1382": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1383": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1384": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        6962,
        6977
      ],
      "op": "TIMESTAMP",
      "path": "14",
      "statement": 8
    },
    "1385": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "1387": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        6920,
        6959
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1388": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        6920,
        6959
      ],
      "op": "ADD",
      "path": "14"
    },
    "1389": {
      "offset": [
        783,
        15140
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "1390": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1391": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "1392": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        6987,
        7025
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 9,
      "value": "0x2"
    },
    "1394": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        6987,
        7025
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1395": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        6987,
        7025
      ],
      "op": "ADD",
      "path": "14"
    },
    "1396": {
      "offset": [
        783,
        15140
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "1397": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "1399": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "1400": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "1402": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        7053,
        7091
      ],
      "op": "DUP3",
      "path": "14",
      "statement": 10
    },
    "1403": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        7053,
        7091
      ],
      "op": "ADD",
      "path": "14"
    },
    "1404": {
      "offset": [
        783,
        15140
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "1405": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "1407": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "1408": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        7119,
        7152
      ],
      "op": "SWAP2",
      "path": "14",
      "statement": 11
    },
    "1409": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        7119,
        7152
      ],
      "op": "ADD",
      "path": "14"
    },
    "1410": {
      "offset": [
        783,
        15140
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "1411": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1412": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "RETURN",
      "path": "14"
    },
    "1413": {
      "offset": [
        2800,
        2910
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1414": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "1416": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1417": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "1418": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1419": {
      "offset": [
        2863,
        2899
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1420": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        2863,
        2899
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x6A9FF79F"
    },
    "1425": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        2863,
        2899
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE1"
    },
    "1427": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        2863,
        2899
      ],
      "op": "SHL",
      "path": "14"
    },
    "1428": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        2863,
        2899
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1429": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        2863,
        2899
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1430": {
      "offset": [
        3011,
        3021
      ],
      "op": "CALLER",
      "path": "14"
    },
    "1431": {
      "offset": [
        2863,
        2899
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1432": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        2863,
        2899
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1433": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        2863,
        2899
      ],
      "op": "ADD",
      "path": "14"
    },
    "1434": {
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1435": {
      "offset": [
        2863,
        2899
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1436": {
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1437": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "1438": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1439": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "1440": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x43A"
    },
    "1443": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1444": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1445": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "1447": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "NOT",
      "path": "14"
    },
    "1448": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "1449": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "1450": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "1451": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x43A"
    },
    "1454": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1455": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1456": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1457": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1458": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1459": {
      "fn": "ERC20.symbol",
      "offset": [
        2453,
        2460
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 12,
      "value": "0x6"
    },
    "1461": {
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1462": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1463": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "1465": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1466": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1467": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SHR",
      "path": "14"
    },
    "1468": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1469": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1470": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "1471": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "1472": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "1473": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "1474": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1475": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x6AD"
    },
    "1478": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1479": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1480": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1482": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "1483": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP8",
      "path": "14"
    },
    "1484": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1485": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "LT",
      "path": "14"
    },
    "1486": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1487": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "EQ",
      "path": "14"
    },
    "1488": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x69A"
    },
    "1491": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1492": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP9",
      "path": "14"
    },
    "1493": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP10",
      "path": "14"
    },
    "1494": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "1495": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "1496": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP9",
      "path": "14"
    },
    "1497": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "1498": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "1499": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1500": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1501": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP11",
      "path": "14"
    },
    "1502": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1503": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1504": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1505": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1507": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "EQ",
      "path": "14"
    },
    "1508": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x673"
    },
    "1511": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1512": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "1513": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "1514": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "1516": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "EQ",
      "path": "14"
    },
    "1517": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x617"
    },
    "1520": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1521": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1522": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "1523": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "1524": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "1525": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x613"
    },
    "1528": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1529": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1530": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x604"
    },
    "1533": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1534": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "1535": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1536": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2022"
    },
    "1539": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1540": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1541": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1542": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1543": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1544": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1545": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1546": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1547": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1548": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1549": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "1550": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1551": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F37"
    },
    "1554": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1555": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1556": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "1557": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1558": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "RETURN",
      "path": "14"
    },
    "1559": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1560": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1561": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1562": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "1563": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1564": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "1565": {
      "fn": "ERC20.symbol",
      "offset": [
        2453,
        2460
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "1567": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1568": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1569": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F"
    },
    "1602": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1603": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1604": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1605": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "LT",
      "path": "14"
    },
    "1606": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x65B"
    },
    "1609": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1610": {
      "op": "POP"
    },
    "1611": {
      "op": "POP"
    },
    "1612": {
      "op": "POP"
    },
    "1613": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1614": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "1615": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "1616": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1617": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x604"
    },
    "1620": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x613"
    },
    "1623": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5F1"
    },
    "1626": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1627": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1628": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1629": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1630": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1631": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP11",
      "path": "14"
    },
    "1632": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "1633": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "1634": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "1635": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1636": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP9",
      "path": "14"
    },
    "1637": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "1638": {
      "op": "POP"
    },
    "1639": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP8",
      "path": "14"
    },
    "1640": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "1641": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1642": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1643": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "1644": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1645": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1646": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "1647": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x642"
    },
    "1650": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1651": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1652": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1654": {
      "op": "NOT"
    },
    "1655": {
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "1656": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP8",
      "path": "14"
    },
    "1657": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1658": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "1659": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1660": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1661": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1662": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1663": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x5"
    },
    "1665": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SHL",
      "path": "14"
    },
    "1666": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "1667": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "1668": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1669": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1670": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "1671": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1672": {
      "op": "POP"
    },
    "1673": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1674": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1675": {
      "op": "POP"
    },
    "1676": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x604"
    },
    "1679": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1680": {
      "op": "POP"
    },
    "1681": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x613"
    },
    "1684": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1685": {
      "op": "POP"
    },
    "1686": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5F1"
    },
    "1689": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1690": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1691": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1696": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1698": {
      "op": "SHL"
    },
    "1699": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1700": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1701": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x22"
    },
    "1703": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP11",
      "path": "14"
    },
    "1704": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1705": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "1707": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1708": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1709": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1710": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1711": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x7F"
    },
    "1713": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "1714": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1715": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5C7"
    },
    "1718": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1719": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1720": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "1721": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "1722": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "1723": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x294"
    },
    "1726": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1727": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1728": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "1730": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "NOT",
      "path": "14"
    },
    "1731": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "1732": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "1733": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "1734": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x294"
    },
    "1737": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1738": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1739": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1740": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1741": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1742": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1746": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1748": {
      "op": "SHL"
    },
    "1749": {
      "op": "SUB"
    },
    "1750": {
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1751": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1752": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "1753": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1754": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1755": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1757": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1758": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "RETURN",
      "path": "14"
    },
    "1759": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1760": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "1761": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "1762": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "1763": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x294"
    },
    "1766": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1767": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1768": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "1770": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "NOT",
      "path": "14"
    },
    "1771": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "1772": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "1773": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "1774": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x294"
    },
    "1777": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1778": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1780": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1781": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1786": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1788": {
      "op": "SHL"
    },
    "1789": {
      "op": "SUB"
    },
    "1790": {
      "offset": [
        1816,
        1864
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x0"
    },
    "1823": {
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "1824": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1825": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1826": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "RETURN",
      "path": "14"
    },
    "1827": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1828": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "1829": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1830": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "1831": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x242"
    },
    "1834": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1835": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1837": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1838": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "1840": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "NOT",
      "path": "14"
    },
    "1841": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1842": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1843": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "1844": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "1845": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "1846": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x90C"
    },
    "1849": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1850": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1851": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "1852": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1855": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1857": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1859": {
      "op": "SHL"
    },
    "1860": {
      "op": "SUB"
    },
    "1861": {
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1862": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1863": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1864": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "GT",
      "path": "14"
    },
    "1865": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA63"
    },
    "1868": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1869": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "1871": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1872": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1873": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "1874": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "1875": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "1876": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "1877": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x98E"
    },
    "1880": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1883": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1885": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1887": {
      "op": "SHL"
    },
    "1888": {
      "op": "SUB"
    },
    "1889": {
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1890": {
      "offset": [
        2449,
        2461
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x0"
    },
    "1923": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1924": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "1925": {
      "offset": [
        2427,
        2437
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1926": {
      "offset": [
        2427,
        2462
      ],
      "op": "SUB",
      "path": "4"
    },
    "1927": {
      "offset": [
        2423,
        2496
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB75"
    },
    "1930": {
      "offset": [
        2423,
        2496
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1931": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1932": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1933": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1934": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x796"
    },
    "1937": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1938": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F8D"
    },
    "1941": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1942": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1943": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1944": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1945": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "1946": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "1947": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1948": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1949": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "1951": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1952": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1953": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1954": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "1955": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "1956": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1957": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1958": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "1959": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1960": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "1961": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB50"
    },
    "1964": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1965": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP9",
      "path": "14"
    },
    "1966": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1967": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "1968": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1969": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "1971": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1972": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "1973": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "1974": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1975": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1976": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "GT",
      "path": "14"
    },
    "1977": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA6B"
    },
    "1980": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1981": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x7CB"
    },
    "1984": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1985": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1986": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "1987": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1988": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP9",
      "path": "14"
    },
    "1989": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "1990": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "1991": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2043"
    },
    "1994": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1995": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1996": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1997": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP8",
      "path": "14"
    },
    "1998": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1999": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "2000": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "2001": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2002": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2003": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "2005": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2006": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "2007": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "2008": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2009": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2010": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "GT",
      "path": "14"
    },
    "2011": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB6D"
    },
    "2014": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2015": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x7ED"
    },
    "2018": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2019": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2020": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "2021": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2022": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP10",
      "path": "14"
    },
    "2023": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "2024": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "2025": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2043"
    },
    "2028": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2029": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2030": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "2031": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "2033": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2034": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "2035": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "2036": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP8",
      "path": "14"
    },
    "2037": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2038": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x84"
    },
    "2040": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2041": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "2042": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "2043": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2044": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2045": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2046": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "GT",
      "path": "14"
    },
    "2047": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB71"
    },
    "2050": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2051": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "2052": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "2053": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x23"
    },
    "2055": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2056": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "2057": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "2058": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2059": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB6D"
    },
    "2062": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2063": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2064": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2065": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "2066": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "2067": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2068": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2069": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "GT",
      "path": "14"
    },
    "2070": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB59"
    },
    "2073": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2074": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP9",
      "path": "14"
    },
    "2075": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2076": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2077": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x82B"
    },
    "2080": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP12",
      "path": "14"
    },
    "2081": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2082": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x5"
    },
    "2084": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SHL",
      "path": "14"
    },
    "2085": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "2086": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2087": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2022"
    },
    "2090": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2091": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2092": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2093": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2094": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2095": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2096": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP12",
      "path": "14"
    },
    "2097": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2098": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "2099": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2100": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x6"
    },
    "2102": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SHL",
      "path": "14"
    },
    "2103": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2104": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "2105": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "2106": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2107": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "2108": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2109": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "GT",
      "path": "14"
    },
    "2110": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB55"
    },
    "2113": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2114": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2115": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "2116": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2117": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2118": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2119": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2120": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "LT",
      "path": "14"
    },
    "2121": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB16"
    },
    "2124": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2125": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "2126": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "2127": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "2128": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "2130": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "2131": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2132": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7788,
        7810
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2133": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7788,
        7810
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2134": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP8",
      "path": "14"
    },
    "2135": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2136": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2137": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2138": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7777,
        7822
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2139": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7777,
        7822
      ],
      "op": "ADD",
      "path": "14"
    },
    "2140": {
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "2141": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "2142": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA67"
    },
    "2145": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2146": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x86D"
    },
    "2149": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7777,
        7822
      ],
      "op": "DUP9",
      "path": "14"
    },
    "2150": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7777,
        7822
      ],
      "op": "DUP8",
      "path": "14"
    },
    "2151": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7777,
        7822
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2152": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7777,
        7822
      ],
      "op": "ADD",
      "path": "14"
    },
    "2153": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2569"
    },
    "2156": {
      "fn": "MasterNode._ccipReceive",
      "jump": "i",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2157": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2158": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "2159": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2160": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "DUP10",
      "path": "14"
    },
    "2161": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2162": {
      "offset": [
        2805,
        2815
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "2164": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP9",
      "path": "14"
    },
    "2165": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2166": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "2168": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "DUP8",
      "path": "14"
    },
    "2169": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "DUP11",
      "path": "14"
    },
    "2170": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "2171": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2172": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "2173": {
      "offset": [
        2804,
        2840
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2174": {
      "offset": [
        2800,
        2910
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB01"
    },
    "2177": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2800,
        2910
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2178": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7881,
        7903
      ],
      "op": "POP",
      "path": "14",
      "statement": 13
    },
    "2179": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7881,
        7903
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2180": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7881,
        7903
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2181": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP8",
      "path": "14"
    },
    "2182": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2183": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2184": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2185": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7870,
        7915
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2186": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7870,
        7915
      ],
      "op": "ADD",
      "path": "14"
    },
    "2187": {
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "2188": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "2189": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA67"
    },
    "2192": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2193": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x89C"
    },
    "2196": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7870,
        7915
      ],
      "op": "DUP9",
      "path": "14"
    },
    "2197": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7870,
        7915
      ],
      "op": "DUP8",
      "path": "14"
    },
    "2198": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7870,
        7915
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2199": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7870,
        7915
      ],
      "op": "ADD",
      "path": "14"
    },
    "2200": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2569"
    },
    "2203": {
      "fn": "MasterNode._ccipReceive",
      "jump": "i",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2204": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2205": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "2206": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "DUP9",
      "path": "14"
    },
    "2207": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2208": {
      "offset": [
        2805,
        2815
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "2210": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP8",
      "path": "14"
    },
    "2211": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2212": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "2214": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2215": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "DUP10",
      "path": "14"
    },
    "2216": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "2217": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2218": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "2219": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2220": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAB0"
    },
    "2223": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2224": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        429,
        449
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2225": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        429,
        449
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2226": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP8",
      "path": "14"
    },
    "2227": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2228": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2229": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2230": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        418,
        459
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2231": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        418,
        459
      ],
      "op": "ADD",
      "path": "15"
    },
    "2232": {
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "2233": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "2234": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA67"
    },
    "2237": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2238": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x8CA"
    },
    "2241": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        418,
        459
      ],
      "op": "DUP9",
      "path": "15"
    },
    "2242": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "2244": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        418,
        459
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2245": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        418,
        459
      ],
      "op": "ADD",
      "path": "15"
    },
    "2246": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x257D"
    },
    "2249": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "jump": "i",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2250": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2251": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "2252": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8088,
        8100
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2253": {
      "branch": 68,
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8088,
        8100
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x910"
    },
    "2256": {
      "branch": 68,
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8088,
        8100
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2257": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4212,
        4232
      ],
      "op": "POP",
      "path": "14"
    },
    "2258": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4212,
        4232
      ],
      "op": "POP",
      "path": "14"
    },
    "2259": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4212,
        4232
      ],
      "op": "POP",
      "path": "14"
    },
    "2260": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4212,
        4232
      ],
      "op": "POP",
      "path": "14"
    },
    "2261": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4212,
        4232
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2262": {
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2263": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "2265": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2266": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2267": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2268": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4188,
        4281
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2269": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4188,
        4281
      ],
      "op": "ADD",
      "path": "14"
    },
    "2270": {
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "2271": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "2272": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x90C"
    },
    "2275": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2276": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x8FF"
    },
    "2279": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "2281": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4188,
        4281
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2282": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x8F7"
    },
    "2285": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4311,
        4317
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 14,
      "value": "0x909"
    },
    "2288": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4188,
        4281
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "2289": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4188,
        4281
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2290": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4188,
        4281
      ],
      "op": "ADD",
      "path": "14"
    },
    "2291": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x257D"
    },
    "2294": {
      "fn": "MasterNode._aWarpTokenMinter",
      "jump": "i",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2295": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2296": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "2297": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2298": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "2299": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2569"
    },
    "2302": {
      "fn": "MasterNode._aWarpTokenMinter",
      "jump": "i",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2303": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2304": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2305": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "2306": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2307": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2308": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "2309": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4311,
        4317
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x23C3"
    },
    "2312": {
      "fn": "MasterNode._aWarpTokenMinter",
      "jump": "i",
      "offset": [
        4311,
        4317
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2313": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4311,
        4317
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2314": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2315": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15140
      ],
      "op": "RETURN",
      "path": "14"
    },
    "2316": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2317": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2318": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2319": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15140
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2320": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8084,
        8390
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2321": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "2323": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8171,
        8183
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2324": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8171,
        8183
      ],
      "op": "SWAP9",
      "path": "14"
    },
    "2325": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8171,
        8183
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "2326": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8171,
        8183
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "2327": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8171,
        8183
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "2328": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8171,
        8183
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "2329": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8171,
        8183
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "2330": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8171,
        8183
      ],
      "op": "SWAP9",
      "path": "14"
    },
    "2331": {
      "branch": 69,
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8171,
        8183
      ],
      "op": "EQ",
      "path": "14"
    },
    "2332": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8167,
        8390
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2334": {
      "offset": [
        783,
        15140
      ],
      "op": "EQ",
      "path": "14"
    },
    "2335": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x992"
    },
    "2338": {
      "branch": 69,
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2339": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5059,
        5081
      ],
      "op": "POP",
      "path": "14",
      "statement": 15
    },
    "2340": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5059,
        5081
      ],
      "op": "POP",
      "path": "14"
    },
    "2341": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5059,
        5081
      ],
      "op": "POP",
      "path": "14"
    },
    "2342": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5059,
        5081
      ],
      "op": "POP",
      "path": "14"
    },
    "2343": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5059,
        5081
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2344": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5059,
        5081
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2345": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2346": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2347": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2348": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2349": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5048,
        5093
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2350": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5048,
        5093
      ],
      "op": "ADD",
      "path": "14"
    },
    "2351": {
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "2352": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "2353": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x98E"
    },
    "2356": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2357": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x940"
    },
    "2360": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5048,
        5093
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2361": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5048,
        5093
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2362": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5048,
        5093
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2363": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5048,
        5093
      ],
      "op": "ADD",
      "path": "14"
    },
    "2364": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2569"
    },
    "2367": {
      "fn": "MasterNode._resmumeOperations",
      "jump": "i",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2368": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2369": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "2370": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2371": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2372": {
      "offset": [
        2805,
        2815
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "2374": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2375": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2376": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2377": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15140
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "2378": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x100"
    },
    "2381": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xFF00"
    },
    "2384": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15140
      ],
      "op": "NOT",
      "path": "14"
    },
    "2385": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2386": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2387": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "2388": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15140
      ],
      "op": "OR",
      "path": "14"
    },
    "2389": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2390": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15140
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "2391": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5161,
        5183
      ],
      "op": "MLOAD",
      "path": "14",
      "statement": 16
    },
    "2392": {
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2393": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2394": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2395": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2396": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2397": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5150,
        5195
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2398": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5150,
        5195
      ],
      "op": "ADD",
      "path": "14"
    },
    "2399": {
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "2400": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "2401": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x98A"
    },
    "2404": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2405": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x96E"
    },
    "2408": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5150,
        5195
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2409": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5150,
        5195
      ],
      "op": "ADD",
      "path": "14"
    },
    "2410": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2569"
    },
    "2413": {
      "fn": "MasterNode._resmumeOperations",
      "jump": "i",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2414": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2415": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "2416": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH12",
      "path": "14",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "2429": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "2431": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15140
      ],
      "op": "SHL",
      "path": "14"
    },
    "2432": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5137,
        5195
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA"
    },
    "2434": {
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2435": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "2436": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15140
      ],
      "op": "OR",
      "path": "14"
    },
    "2437": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5137,
        5195
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA"
    },
    "2439": {
      "offset": [
        783,
        15140
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "2440": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2441": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15140
      ],
      "op": "RETURN",
      "path": "14"
    },
    "2442": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2443": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2444": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2445": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15140
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2446": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2447": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2448": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2449": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15140
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2450": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8167,
        8390
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2451": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8266,
        8267
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "2453": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8255,
        8267
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2454": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8255,
        8267
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "2455": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8255,
        8267
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "2456": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8255,
        8267
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "2457": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8255,
        8267
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "2458": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8255,
        8267
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "2459": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8255,
        8267
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "2460": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8255,
        8267
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "2461": {
      "branch": 70,
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8255,
        8267
      ],
      "op": "EQ",
      "path": "14"
    },
    "2462": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8251,
        8390
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2464": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8266,
        8267
      ],
      "op": "EQ",
      "path": "14"
    },
    "2465": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8266,
        8267
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA6F"
    },
    "2468": {
      "branch": 70,
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8266,
        8267
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2469": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6087,
        6107
      ],
      "op": "POP",
      "path": "14"
    },
    "2470": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6087,
        6107
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2471": {
      "offset": [
        783,
        15140
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "2472": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "2474": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2475": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2476": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2477": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6059,
        6173
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2478": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6059,
        6173
      ],
      "op": "ADD",
      "path": "14"
    },
    "2479": {
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "2480": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "2481": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA63"
    },
    "2484": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2485": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x9BF"
    },
    "2488": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6059,
        6173
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2489": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6059,
        6173
      ],
      "op": "DUP8",
      "path": "14"
    },
    "2490": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6059,
        6173
      ],
      "op": "ADD",
      "path": "14"
    },
    "2491": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x257D"
    },
    "2494": {
      "fn": "MasterNode._nodeAaveFeed",
      "jump": "i",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2495": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2496": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "2497": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2498": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2499": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "2500": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2501": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "2502": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "2504": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "2506": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2507": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "2508": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2509": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2510": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "2511": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2512": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6206,
        6228
      ],
      "op": "SWAP7",
      "path": "14",
      "statement": 17
    },
    "2513": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6206,
        6228
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2514": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6206,
        6228
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2515": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2516": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2517": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2518": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2519": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6195,
        6240
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2520": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6195,
        6240
      ],
      "op": "ADD",
      "path": "14"
    },
    "2521": {
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "2522": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "2523": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA6B"
    },
    "2526": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2527": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x9EA"
    },
    "2530": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6195,
        6240
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2531": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6195,
        6240
      ],
      "op": "DUP8",
      "path": "14"
    },
    "2532": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6195,
        6240
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2533": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6195,
        6240
      ],
      "op": "ADD",
      "path": "14"
    },
    "2534": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2569"
    },
    "2537": {
      "fn": "MasterNode._nodeAaveFeed",
      "jump": "i",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2538": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2539": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "2540": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "DUP10",
      "path": "14"
    },
    "2541": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2542": {
      "offset": [
        2805,
        2815
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "2544": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2545": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2546": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6274,
        6289
      ],
      "op": "TIMESTAMP",
      "path": "14"
    },
    "2547": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "2549": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "DUP8",
      "path": "14"
    },
    "2550": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "DUP12",
      "path": "14"
    },
    "2551": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "2552": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6184,
        6271
      ],
      "op": "ADD",
      "path": "14"
    },
    "2553": {
      "offset": [
        783,
        15140
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "2554": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6321,
        6343
      ],
      "op": "DUP3",
      "path": "14",
      "statement": 18
    },
    "2555": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6321,
        6343
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2556": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2557": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2558": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2559": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2560": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6310,
        6355
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2561": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6310,
        6355
      ],
      "op": "ADD",
      "path": "14"
    },
    "2562": {
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "2563": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "2564": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA6B"
    },
    "2567": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2568": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA13"
    },
    "2571": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6310,
        6355
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2572": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6310,
        6355
      ],
      "op": "DUP8",
      "path": "14"
    },
    "2573": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6310,
        6355
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2574": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6310,
        6355
      ],
      "op": "ADD",
      "path": "14"
    },
    "2575": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2569"
    },
    "2578": {
      "fn": "MasterNode._nodeAaveFeed",
      "jump": "i",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2579": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2580": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "2581": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "DUP10",
      "path": "14"
    },
    "2582": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2583": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8266,
        8267
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "2585": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2586": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "DUP11",
      "path": "14"
    },
    "2587": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "2588": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6299,
        6385
      ],
      "op": "ADD",
      "path": "14"
    },
    "2589": {
      "offset": [
        783,
        15140
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "2590": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6435,
        6457
      ],
      "op": "DUP2",
      "path": "14",
      "statement": 19
    },
    "2591": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6435,
        6457
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2592": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2593": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2594": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2595": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2596": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6424,
        6469
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2597": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6424,
        6469
      ],
      "op": "ADD",
      "path": "14"
    },
    "2598": {
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "2599": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "2600": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA67"
    },
    "2603": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2604": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA37"
    },
    "2607": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6424,
        6469
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2608": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6424,
        6469
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2609": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6424,
        6469
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2610": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6424,
        6469
      ],
      "op": "ADD",
      "path": "14"
    },
    "2611": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2569"
    },
    "2614": {
      "fn": "MasterNode._nodeAaveFeed",
      "jump": "i",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2615": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2616": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "2617": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "DUP9",
      "path": "14"
    },
    "2618": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2619": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "2621": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2622": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "DUP10",
      "path": "14"
    },
    "2623": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "2624": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6413,
        6499
      ],
      "op": "ADD",
      "path": "14"
    },
    "2625": {
      "offset": [
        783,
        15140
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "2626": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6549,
        6571
      ],
      "op": "MLOAD",
      "path": "14",
      "statement": 20
    },
    "2627": {
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2628": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2629": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2630": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2631": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2632": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6538,
        6583
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2633": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6538,
        6583
      ],
      "op": "ADD",
      "path": "14"
    },
    "2634": {
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "2635": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "2636": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA63"
    },
    "2639": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2640": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA59"
    },
    "2643": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6538,
        6583
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2644": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6538,
        6583
      ],
      "op": "ADD",
      "path": "14"
    },
    "2645": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2569"
    },
    "2648": {
      "fn": "MasterNode._nodeAaveFeed",
      "jump": "i",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2649": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2650": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "2651": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2652": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2653": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2654": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "2655": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6527,
        6608
      ],
      "op": "ADD",
      "path": "14"
    },
    "2656": {
      "offset": [
        783,
        15140
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "2657": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2658": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "RETURN",
      "path": "14"
    },
    "2659": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2660": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2661": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2662": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2663": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2664": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "DUP9",
      "path": "14"
    },
    "2665": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2666": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2667": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2668": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "DUP10",
      "path": "14"
    },
    "2669": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2670": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15140
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2671": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8251,
        8390
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2672": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2673": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x19"
    },
    "2675": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "2677": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2678": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2679": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "DUP9",
      "path": "14"
    },
    "2680": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2681": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "2682": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x461BCD"
    },
    "2686": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE5"
    },
    "2688": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "SHL",
      "path": "14"
    },
    "2689": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8344,
        8379
      ],
      "op": "DUP6",
      "path": "14",
      "statement": 21
    },
    "2690": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8344,
        8379
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2691": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8344,
        8379
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2692": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8344,
        8379
      ],
      "op": "ADD",
      "path": "14"
    },
    "2693": {
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2694": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2695": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "2696": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2697": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x696E76616C696420636F6D6D616E642066726F6D204E6F646500000000000000"
    },
    "2730": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "2732": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2733": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "2734": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2735": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8344,
        8379
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "14"
    },
    "2736": {
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2737": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2738": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2739": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2743": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2745": {
      "op": "SHL"
    },
    "2746": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2747": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2748": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2749": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2750": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "2751": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "DUP8",
      "path": "14"
    },
    "2752": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2753": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2754": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x26"
    },
    "2756": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2757": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2758": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "2759": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2760": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x496E636F6D696E67204D657373616765206E6F742066726F6D20612076616C69"
    },
    "2793": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "2795": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2796": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "2797": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2798": {
      "op": "PUSH6",
      "value": "0x64206E6F6465"
    },
    "2805": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2807": {
      "op": "SHL"
    },
    "2808": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "2810": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2811": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "2812": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2813": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x84"
    },
    "2815": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2816": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2817": {
      "offset": [
        2800,
        2910
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2818": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2819": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2820": {
      "op": "PUSH4",
      "value": "0x6A9FF79F"
    },
    "2825": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2827": {
      "op": "SHL"
    },
    "2828": {
      "offset": [
        2863,
        2899
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2829": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2863,
        2899
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2830": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2863,
        2899
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2831": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2863,
        2899
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2832": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2863,
        2899
      ],
      "op": "ADD",
      "path": "14"
    },
    "2833": {
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2834": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2835": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2836": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2837": {
      "offset": [
        2863,
        2899
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2838": {
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2839": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "DUP11",
      "path": "14"
    },
    "2840": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2841": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "2842": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "2843": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "2844": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB55"
    },
    "2847": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2848": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "DUP11",
      "path": "14"
    },
    "2849": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2850": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2851": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB2B"
    },
    "2854": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2855": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FEC"
    },
    "2858": {
      "fn": "MasterNode._ccipReceive",
      "jump": "i",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2859": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2860": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2861": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "2862": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2863": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "DUP12",
      "path": "14"
    },
    "2864": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2865": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "2866": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2867": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "2868": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB50"
    },
    "2871": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2872": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2873": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "DUP15",
      "path": "14"
    },
    "2874": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2875": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "DUP15",
      "path": "14"
    },
    "2876": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "2877": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2878": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2879": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2880": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "2881": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "2882": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2883": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2884": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "2885": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2886": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2887": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2888": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "2889": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2890": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "2891": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2892": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x845"
    },
    "2895": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2896": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2897": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2899": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2900": {
      "first_revert": true,
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2901": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2902": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "DUP13",
      "path": "14"
    },
    "2903": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2904": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2905": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2906": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2907": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x41"
    },
    "2909": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2910": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x4E487B71"
    },
    "2915": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "2917": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "SHL",
      "path": "14"
    },
    "2918": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2920": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2921": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2922": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2924": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2925": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2926": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "DUP11",
      "path": "14"
    },
    "2927": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2928": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2929": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2930": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "DUP12",
      "path": "14"
    },
    "2931": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2932": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2933": {
      "offset": [
        2423,
        2496
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2934": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "2936": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2937": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2938": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2939": {
      "offset": [
        2471,
        2496
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2940": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2471,
        2496
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x35FDCCCD"
    },
    "2945": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2471,
        2496
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE2"
    },
    "2947": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2471,
        2496
      ],
      "op": "SHL",
      "path": "4"
    },
    "2948": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2471,
        2496
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2949": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2471,
        2496
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2950": {
      "offset": [
        2427,
        2437
      ],
      "op": "CALLER",
      "path": "4"
    },
    "2951": {
      "offset": [
        2471,
        2496
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2952": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2471,
        2496
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2953": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2471,
        2496
      ],
      "op": "ADD",
      "path": "4"
    },
    "2954": {
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2955": {
      "offset": [
        2471,
        2496
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2956": {
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2957": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "2958": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2959": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "2960": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x242"
    },
    "2963": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2964": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2965": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "2967": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "NOT",
      "path": "14"
    },
    "2968": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "2969": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "2970": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "2971": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x242"
    },
    "2974": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2975": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1142,
        1156
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 22,
      "value": "0x1"
    },
    "2977": {
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2978": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2983": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2985": {
      "op": "SHL"
    },
    "2986": {
      "op": "SUB"
    },
    "2987": {
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2988": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2989": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2990": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "2991": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1128,
        1138
      ],
      "op": "CALLER",
      "path": "9"
    },
    "2992": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1128,
        1156
      ],
      "op": "SUB",
      "path": "9"
    },
    "2993": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xBF7"
    },
    "2996": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2997": {
      "op": "POP"
    },
    "2998": {
      "op": "POP"
    },
    "2999": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3000": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3003": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3005": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3007": {
      "op": "SHL"
    },
    "3008": {
      "op": "SUB"
    },
    "3009": {
      "op": "NOT"
    },
    "3010": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3011": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3012": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "3013": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1128,
        1138
      ],
      "op": "CALLER",
      "path": "9"
    },
    "3014": {
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3015": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3016": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "OR",
      "path": "14"
    },
    "3017": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "3018": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "3019": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "3020": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "3021": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3023": {
      "offset": [
        783,
        15140
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "3024": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "3025": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1287,
        1329
      ],
      "op": "PUSH32",
      "path": "9",
      "statement": 23,
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "3058": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3059": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3060": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1287,
        1329
      ],
      "op": "LOG3",
      "path": "9"
    },
    "3061": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3062": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "RETURN",
      "path": "14"
    },
    "3063": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3064": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3065": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3067": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "3069": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3070": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3071": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3072": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x461BCD"
    },
    "3076": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE5"
    },
    "3078": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "SHL",
      "path": "14"
    },
    "3079": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3080": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3081": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3082": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "3083": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3084": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x16"
    },
    "3086": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "3088": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3089": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "3090": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3091": {
      "op": "PUSH22",
      "value": "0x26BAB9BA10313290383937B837B9B2B21037BBB732B9"
    },
    "3114": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "3116": {
      "op": "SHL"
    },
    "3117": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "3119": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3120": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "3121": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3122": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "REVERT",
      "path": "14"
    },
    "3123": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3124": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "3125": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "3126": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "3127": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x294"
    },
    "3130": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3131": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3133": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "3134": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "3136": {
      "op": "NOT"
    },
    "3137": {
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "3138": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "3139": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x294"
    },
    "3142": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3143": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3145": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3146": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3147": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3152": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3154": {
      "op": "SHL"
    },
    "3155": {
      "op": "SUB"
    },
    "3156": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC5B"
    },
    "3159": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F0B"
    },
    "3162": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "jump": "i",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3163": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3164": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "3165": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3166": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3167": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3515
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 24,
      "value": "0x2"
    },
    "3169": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3170": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3171": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15140
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3172": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3173": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3174": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3175": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3176": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3177": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3178": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15140
      ],
      "op": "RETURN",
      "path": "14"
    },
    "3179": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3180": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3181": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15140
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "3182": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x43A"
    },
    "3185": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3186": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3187": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "3189": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15140
      ],
      "op": "NOT",
      "path": "14"
    },
    "3190": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "3191": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "3192": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "3193": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x43A"
    },
    "3196": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3197": {
      "offset": [
        2032,
        2091
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC84"
    },
    "3200": {
      "fn": "ERC20.balanceOf",
      "offset": [
        2032,
        2091
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x25C2"
    },
    "3203": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        2032,
        2091
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3204": {
      "fn": "ERC20.balanceOf",
      "offset": [
        2032,
        2091
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3205": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "3207": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15140
      ],
      "op": "NOT",
      "path": "14"
    },
    "3208": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        3205,
        3227
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 25,
      "value": "0x9"
    },
    "3210": {
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3211": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "3212": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        3205,
        3227
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9"
    },
    "3214": {
      "offset": [
        783,
        15140
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "3215": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3216": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "RETURN",
      "path": "14"
    },
    "3217": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3218": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "3219": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "3220": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "3221": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x294"
    },
    "3224": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3225": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3226": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "3228": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "NOT",
      "path": "14"
    },
    "3229": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "3230": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "3231": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "3232": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x294"
    },
    "3235": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3236": {
      "offset": [
        2240,
        2265
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA"
    },
    "3238": {
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3239": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3240": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3245": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3247": {
      "op": "SHL"
    },
    "3248": {
      "op": "SUB"
    },
    "3249": {
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3250": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3251": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "3252": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3253": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3254": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3256": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3257": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "RETURN",
      "path": "14"
    },
    "3258": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3259": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "3260": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "3261": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "3262": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x294"
    },
    "3265": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3266": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3267": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "3269": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "NOT",
      "path": "14"
    },
    "3270": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "3271": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "3272": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "3273": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x294"
    },
    "3276": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3277": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3279": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3280": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "3282": {
      "offset": [
        2166,
        2199
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9"
    },
    "3284": {
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3285": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "3286": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3287": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3288": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3289": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3290": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3291": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3292": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3293": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "RETURN",
      "path": "14"
    },
    "3294": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3295": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "3296": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "3297": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "3298": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x294"
    },
    "3301": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3302": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3303": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "3305": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "NOT",
      "path": "14"
    },
    "3306": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "3307": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "3308": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "3309": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x294"
    },
    "3312": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3313": {
      "offset": [
        2205,
        2234
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9"
    },
    "3315": {
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3316": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3317": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3318": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "3320": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3321": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3322": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3323": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "SHR",
      "path": "14"
    },
    "3324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3328": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3330": {
      "op": "SHL"
    },
    "3331": {
      "op": "SUB"
    },
    "3332": {
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "3333": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3334": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3335": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3337": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3338": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "RETURN",
      "path": "14"
    },
    "3339": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3340": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3341": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3342": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "3343": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "3344": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1236"
    },
    "3347": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3348": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3349": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "3351": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "NOT",
      "path": "14"
    },
    "3352": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "3353": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "3354": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "3355": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1236"
    },
    "3358": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3359": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xD26"
    },
    "3362": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F77"
    },
    "3365": {
      "fn": "MasterNode.stopAddingNodes",
      "jump": "i",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3366": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3367": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3368": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xD2F"
    },
    "3371": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F21"
    },
    "3374": {
      "fn": "MasterNode.stopAddingNodes",
      "jump": "i",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3375": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3376": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3377": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3378": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3379": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3381": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12287,
        12288
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "3383": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12319,
        12439
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3384": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12319,
        12439
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3385": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12319,
        12439
      ],
      "op": "ADD",
      "path": "14"
    },
    "3386": {
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3391": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3393": {
      "op": "SHL"
    },
    "3394": {
      "op": "SUB"
    },
    "3395": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3396": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "3397": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "3398": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3399": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3400": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "3401": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3402": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "3403": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3404": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "3406": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3407": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "3409": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "SHL",
      "path": "14"
    },
    "3410": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "3411": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3412": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "3413": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "3414": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "3415": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "3417": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "DUP9",
      "path": "14"
    },
    "3418": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3419": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3420": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "3421": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3422": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12319,
        12439
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3423": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12319,
        12439
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3424": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12319,
        12439
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3425": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12319,
        12439
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xD69"
    },
    "3428": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12319,
        12439
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3429": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12319,
        12439
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2007"
    },
    "3432": {
      "fn": "MasterNode.warpAssets",
      "jump": "i",
      "offset": [
        12319,
        12439
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3433": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12319,
        12439
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3434": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3435": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12460,
        12470
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 26,
      "value": "0xA"
    },
    "3437": {
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3438": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "3439": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "DUP11",
      "path": "14"
    },
    "3440": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3441": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12449,
        12459
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "3443": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3444": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3445": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "DUP8",
      "path": "14"
    },
    "3446": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "DUP11",
      "path": "14"
    },
    "3447": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3448": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xFF00"
    },
    "3451": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "NOT",
      "path": "14"
    },
    "3452": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3453": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3454": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "3455": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3456": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "3457": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3458": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12460,
        12470
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA"
    },
    "3460": {
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3461": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "3462": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3463": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3464": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "DUP12",
      "path": "14"
    },
    "3465": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3466": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "DUP9",
      "path": "14"
    },
    "3467": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "DUP12",
      "path": "14"
    },
    "3468": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3469": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3470": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3471": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3472": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x10"
    },
    "3474": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "SHR",
      "path": "14"
    },
    "3475": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "3476": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12545,
        12569
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "3477": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12545,
        12569
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x0"
    },
    "3510": {
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "3511": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12507,
        12569
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3512": {
      "branch": 71,
      "fn": "MasterNode.warpAssets",
      "offset": [
        12507,
        12569
      ],
      "op": "EQ",
      "path": "14"
    },
    "3513": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12503,
        12825
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3515": {
      "offset": [
        783,
        15140
      ],
      "op": "EQ",
      "path": "14"
    },
    "3516": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE31"
    },
    "3519": {
      "branch": 71,
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3520": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "3521": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "3522": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "3523": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "3524": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "3525": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "3526": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12460,
        12470
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA"
    },
    "3528": {
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3529": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "3530": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12585,
        12717
      ],
      "op": "DUP1",
      "path": "14",
      "statement": 27
    },
    "3531": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12585,
        12717
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "3532": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12585,
        12717
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3533": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12585,
        12717
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x98E"
    },
    "3536": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12585,
        12717
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3537": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "3538": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3539": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3540": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "3542": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3543": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "3544": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3545": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "3546": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "DUP9",
      "path": "14"
    },
    "3547": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "3548": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "3549": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "3550": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x4BB297FF"
    },
    "3555": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE1"
    },
    "3557": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "SHL",
      "path": "14"
    },
    "3558": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12585,
        12717
      ],
      "op": "DUP7",
      "path": "14"
    },
    "3559": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12585,
        12717
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3560": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12585,
        12717
      ],
      "op": "DUP6",
      "path": "14"
    },
    "3561": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12585,
        12717
      ],
      "op": "ADD",
      "path": "14"
    },
    "3562": {
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3563": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "3565": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3566": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "3567": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3568": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12585,
        12717
      ],
      "op": "GAS",
      "path": "14"
    },
    "3569": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12585,
        12717
      ],
      "op": "CALL",
      "path": "14"
    },
    "3570": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12585,
        12717
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3571": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12585,
        12717
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3572": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12585,
        12717
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3573": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12585,
        12717
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE28"
    },
    "3576": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12585,
        12717
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3577": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12585,
        12717
      ],
      "op": "POP",
      "path": "14"
    },
    "3578": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12585,
        12717
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE14"
    },
    "3581": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12585,
        12717
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3582": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12503,
        12825
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3583": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12503,
        12825
      ],
      "op": "POP",
      "path": "14"
    },
    "3584": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12503,
        12825
      ],
      "op": "POP",
      "path": "14"
    },
    "3585": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12503,
        12825
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3586": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12460,
        12470
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA"
    },
    "3588": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3589": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3594": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3596": {
      "op": "SHL"
    },
    "3597": {
      "op": "SUB"
    },
    "3598": {
      "op": "NOT"
    },
    "3599": {
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "3600": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3601": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "3602": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3603": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "RETURN",
      "path": "14"
    },
    "3604": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12585,
        12717
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3605": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12585,
        12717
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE1D"
    },
    "3608": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12585,
        12717
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3609": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12585,
        12717
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FD9"
    },
    "3612": {
      "fn": "MasterNode.warpAssets",
      "jump": "i",
      "offset": [
        12585,
        12717
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3613": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12585,
        12717
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3614": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x43A"
    },
    "3617": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3618": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12585,
        12717
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3619": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12585,
        12717
      ],
      "op": "CODESIZE",
      "path": "14"
    },
    "3620": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12585,
        12717
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xDFE"
    },
    "3623": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12585,
        12717
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3624": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12585,
        12717
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3625": {
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3626": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "3627": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3628": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3629": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "3630": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "3631": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3632": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "REVERT",
      "path": "14"
    },
    "3633": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12503,
        12825
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3634": {
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3635": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "3636": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP11",
      "path": "14"
    },
    "3637": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "3638": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3639": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "3640": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP9",
      "path": "14"
    },
    "3641": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "3642": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "3644": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3645": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "3646": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "3647": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "3648": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "3649": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "3650": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "3651": {
      "offset": [
        2804,
        2840
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3652": {
      "offset": [
        2800,
        2910
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x121F"
    },
    "3655": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        2800,
        2910
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3656": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3657": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9280,
        9291
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x7"
    },
    "3659": {
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3660": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "3661": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3662": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3663": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "3664": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "3666": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP11",
      "path": "14"
    },
    "3667": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3668": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE5C"
    },
    "3671": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3672": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F8D"
    },
    "3675": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3676": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3677": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3678": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3679": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3680": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3681": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP14",
      "path": "14"
    },
    "3682": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3683": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "3684": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3685": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3686": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP13",
      "path": "14"
    },
    "3687": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3688": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "3689": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3690": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP14",
      "path": "14"
    },
    "3691": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3692": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3693": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "3694": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3695": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "3696": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3697": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP9",
      "path": "14"
    },
    "3698": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3699": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11023,
        11044
      ],
      "op": "SWAP8",
      "path": "14",
      "statement": 28
    },
    "3700": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11023,
        11044
      ],
      "op": "DUP11",
      "path": "14"
    },
    "3701": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11023,
        11044
      ],
      "op": "DUP10",
      "path": "14"
    },
    "3702": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11023,
        11044
      ],
      "op": "ADD",
      "path": "14"
    },
    "3703": {
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3704": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11023,
        11044
      ],
      "op": "DUP10",
      "path": "14"
    },
    "3705": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11023,
        11044
      ],
      "op": "DUP9",
      "path": "14"
    },
    "3706": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11023,
        11044
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3707": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11023,
        11044
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE83"
    },
    "3710": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11023,
        11044
      ],
      "op": "DUP9",
      "path": "14"
    },
    "3711": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11023,
        11044
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FEC"
    },
    "3714": {
      "fn": "MasterNode._buildCCIPMessage",
      "jump": "i",
      "offset": [
        11023,
        11044
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3715": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11023,
        11044
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3716": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP9",
      "path": "14"
    },
    "3717": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3718": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE8E"
    },
    "3721": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3722": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FBE"
    },
    "3725": {
      "fn": "MasterNode._buildCCIPMessage",
      "jump": "i",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3726": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3727": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3729": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3730": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3731": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11268,
        11434
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xEAB"
    },
    "3734": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP11",
      "path": "14"
    },
    "3735": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3736": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xEA0"
    },
    "3739": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3740": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FBE"
    },
    "3743": {
      "fn": "MasterNode._buildCCIPMessage",
      "jump": "i",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3744": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3745": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11405,
        11414
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x1E8480"
    },
    "3749": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3750": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3751": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11268,
        11434
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x258B"
    },
    "3754": {
      "fn": "MasterNode._buildCCIPMessage",
      "jump": "i",
      "offset": [
        11268,
        11434
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3755": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11268,
        11434
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3756": {
      "offset": [
        783,
        15140
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "3757": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP11",
      "path": "14"
    },
    "3758": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3759": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP10",
      "path": "14"
    },
    "3760": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xEB8"
    },
    "3763": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP12",
      "path": "14"
    },
    "3764": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F8D"
    },
    "3767": {
      "fn": "MasterNode._buildCCIPMessage",
      "jump": "i",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3768": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3769": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP11",
      "path": "14"
    },
    "3770": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3771": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10973,
        11599
      ],
      "op": "DUP12",
      "path": "14"
    },
    "3772": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10973,
        11599
      ],
      "op": "DUP11",
      "path": "14"
    },
    "3773": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10973,
        11599
      ],
      "op": "ADD",
      "path": "14"
    },
    "3774": {
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3775": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10973,
        11599
      ],
      "op": "DUP10",
      "path": "14"
    },
    "3776": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10973,
        11599
      ],
      "op": "DUP10",
      "path": "14"
    },
    "3777": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10973,
        11599
      ],
      "op": "ADD",
      "path": "14"
    },
    "3778": {
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3779": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10973,
        11599
      ],
      "op": "DUP8",
      "path": "14"
    },
    "3780": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10973,
        11599
      ],
      "op": "ADD",
      "path": "14"
    },
    "3781": {
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3782": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "3784": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10973,
        11599
      ],
      "op": "DUP7",
      "path": "14"
    },
    "3785": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10973,
        11599
      ],
      "op": "ADD",
      "path": "14"
    },
    "3786": {
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3787": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "3788": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3789": {
      "op": "PUSH4",
      "value": "0xB0F479A1"
    },
    "3794": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3796": {
      "op": "SHL"
    },
    "3797": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3798": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3799": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10973,
        11599
      ],
      "op": "DUP8",
      "path": "14"
    },
    "3800": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3801": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9437
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3802": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3803": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9437
      ],
      "op": "ADDRESS",
      "path": "14"
    },
    "3804": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "GAS",
      "path": "14"
    },
    "3805": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "3806": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3807": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3808": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3809": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1215"
    },
    "3812": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3813": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3814": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "DUP6",
      "path": "14"
    },
    "3815": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3816": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "DUP11",
      "path": "14"
    },
    "3817": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3818": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x11DB"
    },
    "3821": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3822": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12503,
        12825
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3823": {
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "3824": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "3825": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "3826": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "DUP9",
      "path": "14"
    },
    "3827": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "DUP8",
      "path": "14"
    },
    "3828": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3829": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3830": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x20487DED"
    },
    "3835": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "3837": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "SHL",
      "path": "14"
    },
    "3838": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3839": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3840": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "DUP10",
      "path": "14"
    },
    "3841": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3842": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3843": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xF0F"
    },
    "3846": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "DUP12",
      "path": "14"
    },
    "3847": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "DUP11",
      "path": "14"
    },
    "3848": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "DUP11",
      "path": "14"
    },
    "3849": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3850": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "ADD",
      "path": "14"
    },
    "3851": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x20F3"
    },
    "3854": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9533,
        9589
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3855": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3856": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "SUB",
      "path": "14"
    },
    "3857": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3858": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "DUP11",
      "path": "14"
    },
    "3859": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "GAS",
      "path": "14"
    },
    "3860": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "3861": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "3862": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3863": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3864": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x11D1"
    },
    "3867": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3868": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3869": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "DUP11",
      "path": "14"
    },
    "3870": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3871": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3872": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "3873": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x119F"
    },
    "3876": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3877": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12503,
        12825
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3878": {
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "3879": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "3881": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "DUP11",
      "path": "14"
    },
    "3882": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3883": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3884": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "3885": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3886": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "3887": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x23B872DD"
    },
    "3892": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "3894": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "SHL",
      "path": "14"
    },
    "3895": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "DUP4",
      "path": "14",
      "statement": 29
    },
    "3896": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3897": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9646,
        9656
      ],
      "op": "CALLER",
      "path": "14"
    },
    "3898": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "DUP11",
      "path": "14"
    },
    "3899": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3900": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "ADD",
      "path": "14"
    },
    "3901": {
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3902": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9437
      ],
      "op": "ADDRESS",
      "path": "14"
    },
    "3903": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "3905": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3906": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "3907": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3908": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP9",
      "path": "14"
    },
    "3909": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "3911": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3912": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "3913": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3914": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "GAS",
      "path": "14"
    },
    "3915": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "CALL",
      "path": "14"
    },
    "3916": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3917": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3918": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3919": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1195"
    },
    "3922": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3923": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "DUP11",
      "path": "14"
    },
    "3924": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3925": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1178"
    },
    "3928": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3929": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12503,
        12825
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3930": {
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "3931": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3932": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1135"
    },
    "3935": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3936": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9280,
        9291
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x7"
    },
    "3938": {
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3939": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "3940": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3941": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "3942": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3943": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x70A08231"
    },
    "3948": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "3950": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SHL",
      "path": "14"
    },
    "3951": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "SWAP1",
      "path": "14",
      "statement": 30
    },
    "3952": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3953": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3954": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3955": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9437
      ],
      "op": "ADDRESS",
      "path": "14"
    },
    "3956": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "DUP6",
      "path": "14"
    },
    "3957": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3958": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "ADD",
      "path": "14"
    },
    "3959": {
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3960": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "DUP10",
      "path": "14"
    },
    "3961": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3962": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "3964": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3965": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "DUP8",
      "path": "14"
    },
    "3966": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "GAS",
      "path": "14"
    },
    "3967": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "3968": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3969": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3970": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3971": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x112B"
    },
    "3974": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3975": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "DUP12",
      "path": "14"
    },
    "3976": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3977": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x10FE"
    },
    "3980": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3981": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12503,
        12825
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3982": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9745,
        9788
      ],
      "op": "POP",
      "path": "14"
    },
    "3983": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9745,
        9788
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3984": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9745,
        9788
      ],
      "op": "GT",
      "path": "14"
    },
    "3985": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9741,
        9869
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1082"
    },
    "3988": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9741,
        9869
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3989": {
      "op": "POP"
    },
    "3990": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "3991": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3992": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "3997": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3999": {
      "op": "SHL"
    },
    "4000": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "DUP2",
      "path": "14",
      "statement": 31
    },
    "4001": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4002": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4004": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4006": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4008": {
      "op": "SHL"
    },
    "4009": {
      "op": "SUB"
    },
    "4010": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "4011": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "4012": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4013": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "DUP6",
      "path": "14"
    },
    "4014": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "ADD",
      "path": "14"
    },
    "4015": {
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4016": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4017": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4018": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4020": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4021": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "4022": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4023": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4024": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4025": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4026": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP10",
      "path": "14"
    },
    "4027": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "4028": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4029": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4030": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4031": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP10",
      "path": "14"
    },
    "4032": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4033": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4034": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4035": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4036": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4037": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP8",
      "path": "14"
    },
    "4038": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4039": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4040": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4041": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4043": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "4044": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "SUB",
      "path": "14"
    },
    "4045": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4046": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "GAS",
      "path": "14"
    },
    "4047": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "CALL",
      "path": "14"
    },
    "4048": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4049": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4050": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1078"
    },
    "4053": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4054": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4055": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "DUP9",
      "path": "14"
    },
    "4056": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "4057": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "4058": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4059": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 32,
      "value": "0x1001"
    },
    "4062": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "SWAP9",
      "path": "14"
    },
    "4063": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "4064": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "4065": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "4066": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x104B"
    },
    "4069": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4070": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12503,
        12825
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4071": {
      "op": "POP"
    },
    "4072": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "4073": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4074": {
      "op": "PUSH4",
      "value": "0x96F4E9F9"
    },
    "4079": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4081": {
      "op": "SHL"
    },
    "4082": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4083": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4084": {
      "offset": [
        783,
        15140
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "4085": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP9",
      "path": "14"
    },
    "4086": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "4087": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "4088": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "4089": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "4090": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "4091": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "DUP5",
      "path": "14"
    },
    "4092": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "ADD",
      "path": "14"
    },
    "4093": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x20F3"
    },
    "4096": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        10133,
        10191
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4097": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4098": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "SUB",
      "path": "14"
    },
    "4099": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4100": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "GAS",
      "path": "14"
    },
    "4101": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "CALL",
      "path": "14"
    },
    "4102": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4103": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4104": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4105": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1042"
    },
    "4108": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4109": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "POP",
      "path": "14"
    },
    "4110": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1019"
    },
    "4113": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4114": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12503,
        12825
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4115": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12503,
        12825
      ],
      "op": "POP",
      "path": "14"
    },
    "4116": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12503,
        12825
      ],
      "op": "POP",
      "path": "14"
    },
    "4117": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12503,
        12825
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE01"
    },
    "4120": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12503,
        12825
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4121": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4122": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4123": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4124": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4125": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "GT",
      "path": "14"
    },
    "4126": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x103B"
    },
    "4129": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4130": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4131": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x102C"
    },
    "4134": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4135": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4136": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2022"
    },
    "4139": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        10133,
        10191
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4140": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4141": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4142": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "ADD",
      "path": "14"
    },
    "4143": {
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "4144": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "4145": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x43A"
    },
    "4148": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4149": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "CODESIZE",
      "path": "14"
    },
    "4150": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4151": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1012"
    },
    "4154": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4155": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4156": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "POP",
      "path": "14"
    },
    "4157": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4158": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1022"
    },
    "4161": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4162": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4163": {
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4164": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4165": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "4166": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4167": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "4168": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4169": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4170": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4171": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4172": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x106A"
    },
    "4175": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4176": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "DUP8",
      "path": "14"
    },
    "4177": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4178": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "DUP10",
      "path": "14"
    },
    "4179": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "GT",
      "path": "14"
    },
    "4180": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1071"
    },
    "4183": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4184": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4185": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1062"
    },
    "4188": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4189": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4190": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2022"
    },
    "4193": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9987,
        10029
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4194": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4195": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4196": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "ADD",
      "path": "14"
    },
    "4197": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4198": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x21BF"
    },
    "4201": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9987,
        10029
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4202": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4203": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "POP",
      "path": "14"
    },
    "4204": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "CODESIZE",
      "path": "14"
    },
    "4205": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xFE6"
    },
    "4208": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4209": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4210": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "POP",
      "path": "14"
    },
    "4211": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4212": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1058"
    },
    "4215": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4216": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4217": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP8",
      "path": "14"
    },
    "4218": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4219": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4220": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "4221": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4222": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "4223": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4224": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4225": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4226": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9741,
        9869
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4227": {
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4228": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP10",
      "path": "14"
    },
    "4229": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP9",
      "path": "14"
    },
    "4230": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP11",
      "path": "14"
    },
    "4231": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4232": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP8",
      "path": "14"
    },
    "4233": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "4234": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "4236": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "4237": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4238": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4239": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "SWAP10",
      "path": "14"
    },
    "4240": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4241": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "4242": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4243": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4244": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9437
      ],
      "op": "ADDRESS",
      "path": "14"
    },
    "4245": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "DUP11",
      "path": "14"
    },
    "4246": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4247": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "ADD",
      "path": "14"
    },
    "4248": {
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4249": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "GAS",
      "path": "14"
    },
    "4250": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "4251": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4252": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4253": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4254": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x10F3"
    },
    "4257": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4258": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4259": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x10C2"
    },
    "4262": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4263": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9741,
        9869
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4264": {
      "op": "POP"
    },
    "4265": {
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4266": {
      "op": "PUSH4",
      "value": "0x4787A103"
    },
    "4271": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4273": {
      "op": "SHL"
    },
    "4274": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9809,
        9869
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4275": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9809,
        9869
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4276": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9809,
        9869
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4277": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9809,
        9869
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4278": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9809,
        9869
      ],
      "op": "ADD",
      "path": "14"
    },
    "4279": {
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4280": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "4282": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4283": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "4284": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4285": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "4287": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4288": {
      "op": "POP"
    },
    "4289": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9809,
        9869
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4290": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4291": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4292": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4293": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "POP",
      "path": "14"
    },
    "4294": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "DUP5",
      "path": "14"
    },
    "4295": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4296": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4297": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4298": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "GT",
      "path": "14"
    },
    "4299": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x10EC"
    },
    "4302": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4303": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4304": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x10D9"
    },
    "4307": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4308": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4309": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2022"
    },
    "4312": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9826,
        9862
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4313": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4314": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4315": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "ADD",
      "path": "14"
    },
    "4316": {
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "4317": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "4318": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB50"
    },
    "4321": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4322": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "4324": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "4325": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4326": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4327": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "DUP6",
      "path": "14"
    },
    "4328": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x10A7"
    },
    "4331": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4332": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4333": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "POP",
      "path": "14"
    },
    "4334": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4335": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x10CF"
    },
    "4338": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4339": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4340": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4341": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4342": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4343": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4344": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4345": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4346": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "4347": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4348": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4349": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4350": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4351": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4352": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "POP",
      "path": "14"
    },
    "4353": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "DUP10",
      "path": "14"
    },
    "4354": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4355": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4356": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4357": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4358": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "GT",
      "path": "14"
    },
    "4359": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1124"
    },
    "4362": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4363": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4364": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1115"
    },
    "4367": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4368": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4369": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2022"
    },
    "4372": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9752,
        9788
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4373": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4374": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4375": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "ADD",
      "path": "14"
    },
    "4376": {
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "4377": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "4378": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB50"
    },
    "4381": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4382": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4383": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "CODESIZE",
      "path": "14"
    },
    "4384": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xF8D"
    },
    "4387": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4388": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4389": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "POP",
      "path": "14"
    },
    "4390": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4391": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x110B"
    },
    "4394": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4395": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4396": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP10",
      "path": "14"
    },
    "4397": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4398": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4399": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP14",
      "path": "14"
    },
    "4400": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4401": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "4402": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4403": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4404": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4405": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4406": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "4407": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4408": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4412": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4414": {
      "op": "SHL"
    },
    "4415": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4416": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4417": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4418": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "4419": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "4420": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP10",
      "path": "14"
    },
    "4421": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4422": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4423": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1A"
    },
    "4425": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "4427": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4428": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "4429": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4430": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x4E6F742070726F7669646564204C696E6B20666F722066656573000000000000"
    },
    "4463": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "4465": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4466": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "4467": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4468": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "4470": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4471": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4472": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4473": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x118F"
    },
    "4476": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4477": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "POP",
      "path": "14"
    },
    "4478": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "DUP10",
      "path": "14"
    },
    "4479": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4480": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "DUP12",
      "path": "14"
    },
    "4481": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "GT",
      "path": "14"
    },
    "4482": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1071"
    },
    "4485": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4486": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1062"
    },
    "4489": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4490": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4491": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2022"
    },
    "4494": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9621,
        9678
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4495": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4496": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "CODESIZE",
      "path": "14"
    },
    "4497": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xF59"
    },
    "4500": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4501": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4502": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP9",
      "path": "14"
    },
    "4503": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4504": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4505": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP13",
      "path": "14"
    },
    "4506": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4507": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "4508": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4509": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4510": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4511": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4512": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4513": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "POP",
      "path": "14"
    },
    "4514": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "4515": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "POP",
      "path": "14"
    },
    "4516": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4517": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4518": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4519": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4520": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "GT",
      "path": "14"
    },
    "4521": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x11CA"
    },
    "4524": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4525": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4526": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x11B7"
    },
    "4529": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4530": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4531": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2022"
    },
    "4534": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9533,
        9589
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4535": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4536": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4537": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "ADD",
      "path": "14"
    },
    "4538": {
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "4539": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "4540": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB50"
    },
    "4543": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4544": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP9",
      "path": "14"
    },
    "4545": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP11",
      "path": "14"
    },
    "4546": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4547": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4548": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "4549": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "CODESIZE",
      "path": "14"
    },
    "4550": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xF25"
    },
    "4553": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4554": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4555": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "POP",
      "path": "14"
    },
    "4556": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4557": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x11AD"
    },
    "4560": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4561": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4562": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP10",
      "path": "14"
    },
    "4563": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4564": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4565": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "4566": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4567": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "4568": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4569": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4570": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4571": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4572": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4573": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4574": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "POP",
      "path": "14"
    },
    "4575": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "DUP10",
      "path": "14"
    },
    "4576": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4577": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4578": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "POP",
      "path": "14"
    },
    "4579": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4580": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4581": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "GT",
      "path": "14"
    },
    "4582": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x120E"
    },
    "4585": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4586": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4587": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x11F4"
    },
    "4590": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4591": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4592": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2022"
    },
    "4595": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9433,
        9449
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4596": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4597": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4598": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "ADD",
      "path": "14"
    },
    "4599": {
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "4600": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "4601": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA67"
    },
    "4604": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4605": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4606": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "4607": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4608": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "4609": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4610": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "4611": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA67"
    },
    "4614": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4615": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "DUP5",
      "path": "14"
    },
    "4616": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4617": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "CODESIZE",
      "path": "14"
    },
    "4618": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xEEE"
    },
    "4621": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4622": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4623": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "POP",
      "path": "14"
    },
    "4624": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4625": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x11EA"
    },
    "4628": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4629": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4630": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP8",
      "path": "14"
    },
    "4631": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4632": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4633": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP12",
      "path": "14"
    },
    "4634": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4635": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "4636": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4637": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4638": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4639": {
      "offset": [
        2800,
        2910
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4640": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "4641": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4642": {
      "op": "PUSH4",
      "value": "0x6A9FF79F"
    },
    "4647": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4649": {
      "op": "SHL"
    },
    "4650": {
      "offset": [
        2863,
        2899
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4651": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        2863,
        2899
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4652": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        2863,
        2899
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4653": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        2863,
        2899
      ],
      "op": "DUP5",
      "path": "14"
    },
    "4654": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        2863,
        2899
      ],
      "op": "ADD",
      "path": "14"
    },
    "4655": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP8",
      "path": "14"
    },
    "4656": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4657": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4658": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "4660": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4661": {
      "offset": [
        2863,
        2899
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4662": {
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4663": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "4664": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "4665": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4666": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4667": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "4668": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4669": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "4670": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x43A"
    },
    "4673": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4674": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "4676": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "4677": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "4679": {
      "op": "NOT"
    },
    "4680": {
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "4681": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "4682": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x43A"
    },
    "4685": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4686": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1255"
    },
    "4689": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F77"
    },
    "4692": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4693": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4694": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4695": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x125E"
    },
    "4698": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F21"
    },
    "4701": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4702": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4707": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4709": {
      "op": "SHL"
    },
    "4710": {
      "op": "SUB"
    },
    "4711": {
      "offset": [
        783,
        15140
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "4712": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "4714": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "4715": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "4716": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4717": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "4718": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4719": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4720": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4721": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4722": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "4723": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB50"
    },
    "4726": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4727": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "4729": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "4730": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4731": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "4732": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4733": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "4734": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4735": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4736": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "4737": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB50"
    },
    "4740": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4741": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x84"
    },
    "4743": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "4744": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "4745": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4749": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4751": {
      "op": "SHL"
    },
    "4752": {
      "op": "SUB"
    },
    "4753": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP10",
      "path": "14"
    },
    "4754": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "GT",
      "path": "14"
    },
    "4755": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA63"
    },
    "4758": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4759": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x12A9"
    },
    "4762": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1325"
    },
    "4765": {
      "offset": [
        783,
        15140
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "4766": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "4767": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP9",
      "path": "14"
    },
    "4768": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP10",
      "path": "14"
    },
    "4769": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "4770": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4771": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4772": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "4773": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2043"
    },
    "4776": {
      "fn": "UtilsMasterNode.getLinkFees",
      "jump": "i",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4777": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4778": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "DUP8",
      "path": "14"
    },
    "4779": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4780": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "4781": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4783": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP11",
      "path": "14"
    },
    "4784": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "DUP12",
      "path": "14"
    },
    "4785": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "4786": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "4787": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        942,
        962
      ],
      "op": "DUP8",
      "path": "15"
    },
    "4788": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        942,
        962
      ],
      "op": "DUP8",
      "path": "15"
    },
    "4789": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        942,
        962
      ],
      "op": "ADD",
      "path": "15"
    },
    "4790": {
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4791": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        942,
        962
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4792": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        942,
        962
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4793": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        942,
        962
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4794": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        942,
        962
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x12C2"
    },
    "4797": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        942,
        962
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4798": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        942,
        962
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1FEC"
    },
    "4801": {
      "fn": "UtilsMasterNode.getLinkFees",
      "jump": "i",
      "offset": [
        942,
        962
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4802": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        942,
        962
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4803": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP9",
      "path": "14"
    },
    "4804": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4805": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x12CD"
    },
    "4808": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4809": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FBE"
    },
    "4812": {
      "fn": "UtilsMasterNode.getLinkFees",
      "jump": "i",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4813": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4814": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4816": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4817": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4818": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1176,
        1333
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x12EA"
    },
    "4821": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP11",
      "path": "14"
    },
    "4822": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4823": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x12DF"
    },
    "4826": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4827": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FBE"
    },
    "4830": {
      "fn": "UtilsMasterNode.getLinkFees",
      "jump": "i",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4831": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4832": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1307,
        1316
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0xF4240"
    },
    "4836": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4837": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4838": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1176,
        1333
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x258B"
    },
    "4841": {
      "fn": "UtilsMasterNode.getLinkFees",
      "jump": "i",
      "offset": [
        1176,
        1333
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4842": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1176,
        1333
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4843": {
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4844": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "DUP11",
      "path": "14"
    },
    "4845": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4846": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "4847": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x12F7"
    },
    "4850": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "DUP10",
      "path": "14"
    },
    "4851": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F8D"
    },
    "4854": {
      "fn": "UtilsMasterNode.getLinkFees",
      "jump": "i",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4855": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4856": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "DUP9",
      "path": "14"
    },
    "4857": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4858": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        895,
        1469
      ],
      "op": "DUP9",
      "path": "15"
    },
    "4859": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        895,
        1469
      ],
      "op": "DUP9",
      "path": "15"
    },
    "4860": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        895,
        1469
      ],
      "op": "ADD",
      "path": "15"
    },
    "4861": {
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4862": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        895,
        1469
      ],
      "op": "DUP10",
      "path": "15"
    },
    "4863": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        895,
        1469
      ],
      "op": "DUP8",
      "path": "15"
    },
    "4864": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        895,
        1469
      ],
      "op": "ADD",
      "path": "15"
    },
    "4865": {
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4866": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "4868": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        895,
        1469
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4869": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        895,
        1469
      ],
      "op": "ADD",
      "path": "15"
    },
    "4870": {
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4871": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "4873": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        895,
        1469
      ],
      "op": "DUP6",
      "path": "15"
    },
    "4874": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        895,
        1469
      ],
      "op": "ADD",
      "path": "15"
    },
    "4875": {
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4876": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "4877": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4878": {
      "op": "PUSH4",
      "value": "0x20487DED"
    },
    "4883": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4885": {
      "op": "SHL"
    },
    "4886": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4887": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4888": {
      "offset": [
        783,
        15140
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "4889": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "4890": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "4891": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "4892": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "4893": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "4894": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "4895": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "DUP5",
      "path": "15"
    },
    "4896": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "ADD",
      "path": "15"
    },
    "4897": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x20F3"
    },
    "4900": {
      "fn": "UtilsMasterNode.getLinkFees",
      "jump": "i",
      "offset": [
        1612,
        1660
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4901": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4902": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "SUB",
      "path": "15"
    },
    "4903": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4904": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "GAS",
      "path": "15"
    },
    "4905": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "STATICCALL",
      "path": "15"
    },
    "4906": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4907": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4908": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4909": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x10F3"
    },
    "4912": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4913": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4914": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x133D"
    },
    "4917": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4918": {
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4919": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "4920": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4921": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4922": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4923": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4924": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "RETURN",
      "path": "14"
    },
    "4925": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4926": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4927": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4928": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "POP",
      "path": "15"
    },
    "4929": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4930": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4931": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4932": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "4933": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4934": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "GT",
      "path": "15"
    },
    "4935": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1365"
    },
    "4938": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4939": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4940": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1355"
    },
    "4943": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4944": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4945": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2022"
    },
    "4948": {
      "fn": "UtilsMasterNode.getLinkFees",
      "jump": "i",
      "offset": [
        1612,
        1660
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4949": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4950": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4951": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "ADD",
      "path": "15"
    },
    "4952": {
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "4953": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "4954": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB50"
    },
    "4957": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4958": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4959": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4960": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "CODESIZE",
      "path": "15"
    },
    "4961": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1336"
    },
    "4964": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4965": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4966": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "POP",
      "path": "15"
    },
    "4967": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "4968": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x134B"
    },
    "4971": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4972": {
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4973": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "4974": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "4975": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "4976": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x294"
    },
    "4979": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4980": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4981": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "4983": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "NOT",
      "path": "14"
    },
    "4984": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "4985": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "4986": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "4987": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x294"
    },
    "4990": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4991": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6038,
        6076
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 33,
      "value": "0x38D"
    },
    "4994": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4996": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4997": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4998": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x138D"
    },
    "5001": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F0B"
    },
    "5004": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5005": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5006": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5007": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "5008": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5009": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5010": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "5012": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "5013": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5014": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15140
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "5015": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "5017": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5018": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "5020": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15140
      ],
      "op": "SHL",
      "path": "14"
    },
    "5021": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "5022": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5023": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "5024": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "5026": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5027": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5028": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5029": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6038,
        6076
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13B4"
    },
    "5032": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "5034": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "5035": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5036": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "5038": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "5039": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5040": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6038,
        6076
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21D7"
    },
    "5043": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6038,
        6076
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5044": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6038,
        6076
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5045": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5046": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "5047": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6038,
        6076
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2467"
    },
    "5050": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6038,
        6076
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5051": {
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5052": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "5053": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "5054": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "5055": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x294"
    },
    "5058": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5059": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5060": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "5062": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "NOT",
      "path": "14"
    },
    "5063": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "5064": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "5065": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "5066": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x294"
    },
    "5069": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5070": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "5072": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5073": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5074": {
      "fn": "ERC20.decimals",
      "offset": [
        3173,
        3175
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 34,
      "value": "0x12"
    },
    "5076": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5077": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5078": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15140
      ],
      "op": "RETURN",
      "path": "14"
    },
    "5079": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5080": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "5081": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5082": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5083": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15140
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "5084": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x294"
    },
    "5087": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5088": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "5090": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5091": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5092": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "5094": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15140
      ],
      "op": "NOT",
      "path": "14"
    },
    "5095": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "5096": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "5097": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "5098": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x242"
    },
    "5101": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5102": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13175,
        13185
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 35,
      "value": "0xA"
    },
    "5104": {
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5109": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5111": {
      "op": "SHL"
    },
    "5112": {
      "op": "SUB"
    },
    "5113": {
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5114": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5115": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "5116": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5117": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5118": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13164,
        13174
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "5120": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5121": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "5122": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5123": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5124": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "5125": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "5126": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5127": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5128": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "5129": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5130": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5131": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "SHR",
      "path": "14"
    },
    "5132": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "5134": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "5135": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "5136": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1970"
    },
    "5139": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5140": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13261,
        13271
      ],
      "op": "CALLER",
      "path": "14",
      "statement": 36
    },
    "5141": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "5142": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5143": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3515
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "5145": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "5146": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5147": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5148": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "5149": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15140
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "5150": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5151": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13241,
        13272
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5152": {
      "branch": 72,
      "fn": "MasterNode.withdraw",
      "offset": [
        13241,
        13272
      ],
      "op": "GT",
      "path": "14"
    },
    "5153": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1937"
    },
    "5156": {
      "branch": 72,
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5157": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5158": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5159": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13362,
        13408
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "5160": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13362,
        13408
      ],
      "op": "DUP6",
      "path": "14"
    },
    "5161": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13362,
        13408
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5162": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13362,
        13408
      ],
      "op": "DUP9",
      "path": "14"
    },
    "5163": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13362,
        13408
      ],
      "op": "ADD",
      "path": "14"
    },
    "5164": {
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5165": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13261,
        13271
      ],
      "op": "CALLER",
      "path": "14"
    },
    "5166": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5167": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "DUP9",
      "path": "14"
    },
    "5168": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "5169": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5170": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "5172": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5173": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5174": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "DUP10",
      "path": "14"
    },
    "5175": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "5176": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5177": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13362,
        13408
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5178": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13362,
        13408
      ],
      "op": "DUP9",
      "path": "14"
    },
    "5179": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13362,
        13408
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5180": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13362,
        13408
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1444"
    },
    "5183": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13362,
        13408
      ],
      "op": "DUP9",
      "path": "14"
    },
    "5184": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13362,
        13408
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2007"
    },
    "5187": {
      "fn": "MasterNode.withdraw",
      "jump": "i",
      "offset": [
        13362,
        13408
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5188": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13362,
        13408
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5189": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13261,
        13271
      ],
      "op": "CALLER",
      "path": "14"
    },
    "5190": {
      "branch": 79,
      "fn": "ERC20._burn",
      "offset": [
        9505,
        9526
      ],
      "op": "ISZERO",
      "path": "0",
      "statement": 37
    },
    "5191": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x18EA"
    },
    "5194": {
      "fn": "ERC20._burn",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5195": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13261,
        13271
      ],
      "op": "CALLER",
      "path": "14"
    },
    "5196": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP8",
      "path": "14"
    },
    "5197": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5198": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3515
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "5200": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5201": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5202": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5203": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15140
      ],
      "op": "DUP8",
      "path": "14"
    },
    "5204": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15140
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "5205": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5206": {
      "fn": "ERC20._burn",
      "offset": [
        9696,
        9720
      ],
      "op": "SWAP8",
      "path": "0",
      "statement": 38
    },
    "5207": {
      "fn": "ERC20._burn",
      "offset": [
        9696,
        9720
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5208": {
      "fn": "ERC20._burn",
      "offset": [
        9696,
        9720
      ],
      "op": "DUP10",
      "path": "0"
    },
    "5209": {
      "branch": 80,
      "fn": "ERC20._burn",
      "offset": [
        9696,
        9720
      ],
      "op": "LT",
      "path": "0"
    },
    "5210": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x189C"
    },
    "5213": {
      "fn": "ERC20._burn",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5214": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13261,
        13271
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5215": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13261,
        13271
      ],
      "op": "DUP9",
      "path": "14"
    },
    "5216": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13261,
        13271
      ],
      "op": "SWAP10",
      "path": "14"
    },
    "5217": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13261,
        13271
      ],
      "op": "SWAP9",
      "path": "14"
    },
    "5218": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13261,
        13271
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "5219": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13261,
        13271
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "5220": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13261,
        13271
      ],
      "op": "SWAP9",
      "path": "14"
    },
    "5221": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13261,
        13271
      ],
      "op": "CALLER",
      "path": "14"
    },
    "5222": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP9",
      "path": "14"
    },
    "5223": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5224": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3515
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "5226": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "5227": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5228": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "5229": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15140
      ],
      "op": "DUP8",
      "path": "14"
    },
    "5230": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15140
      ],
      "op": "DUP8",
      "path": "14"
    },
    "5231": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15140
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "5232": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15140
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "5233": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5234": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15140
      ],
      "op": "DUP9",
      "path": "14"
    },
    "5235": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5236": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "5237": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15140
      ],
      "op": "DUP9",
      "path": "14"
    },
    "5238": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15140
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "5239": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "5240": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15140
      ],
      "op": "DUP8",
      "path": "14"
    },
    "5241": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5242": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "5243": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5244": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5245": {
      "fn": "ERC20._burn",
      "offset": [
        9978,
        10015
      ],
      "op": "PUSH32",
      "path": "0",
      "statement": 39,
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "5278": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13261,
        13271
      ],
      "op": "DUP6",
      "path": "14"
    },
    "5279": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13261,
        13271
      ],
      "op": "CALLER",
      "path": "14"
    },
    "5280": {
      "fn": "ERC20._burn",
      "offset": [
        9978,
        10015
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5281": {
      "fn": "ERC20._burn",
      "offset": [
        9978,
        10015
      ],
      "op": "LOG3",
      "path": "0"
    },
    "5282": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5283": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13175,
        13185
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA"
    },
    "5285": {
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5286": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "5287": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5288": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5289": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "DUP8",
      "path": "14"
    },
    "5290": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5291": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13164,
        13174
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "5293": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5294": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5295": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "DUP8",
      "path": "14"
    },
    "5296": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "DUP8",
      "path": "14"
    },
    "5297": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "5298": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5299": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5304": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5306": {
      "op": "SHL"
    },
    "5307": {
      "op": "SUB"
    },
    "5308": {
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5309": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5310": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5311": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x10"
    },
    "5313": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "SHR",
      "path": "14"
    },
    "5314": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "5315": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13497,
        13521
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "5316": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13497,
        13521
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x0"
    },
    "5349": {
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "5350": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13459,
        13521
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5351": {
      "branch": 73,
      "fn": "MasterNode.withdraw",
      "offset": [
        13459,
        13521
      ],
      "op": "EQ",
      "path": "14"
    },
    "5352": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13455,
        13704
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "5354": {
      "offset": [
        783,
        15140
      ],
      "op": "EQ",
      "path": "14"
    },
    "5355": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1545"
    },
    "5358": {
      "branch": 73,
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5359": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "5360": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "5361": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "5362": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "5363": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "5364": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "5365": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13175,
        13185
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA"
    },
    "5367": {
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5368": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "5369": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13537,
        13596
      ],
      "op": "DUP1",
      "path": "14",
      "statement": 40
    },
    "5370": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13537,
        13596
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "5371": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13537,
        13596
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "5372": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13537,
        13596
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x242"
    },
    "5375": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13537,
        13596
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5376": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5377": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5378": {
      "op": "PUSH4",
      "value": "0x15E005B7"
    },
    "5383": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "5385": {
      "op": "SHL"
    },
    "5386": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13537,
        13596
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5387": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13537,
        13596
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5388": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13261,
        13271
      ],
      "op": "CALLER",
      "path": "14"
    },
    "5389": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13537,
        13596
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "5390": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13537,
        13596
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5391": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13537,
        13596
      ],
      "op": "ADD",
      "path": "14"
    },
    "5392": {
      "offset": [
        783,
        15140
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "5393": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "5394": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5395": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "5397": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "5398": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "5399": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5400": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5401": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5402": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5403": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5404": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "5405": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5406": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5407": {
      "op": "SWAP1"
    },
    "5408": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5409": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5410": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5411": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5412": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5413": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5414": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "5416": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "5417": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13537,
        13596
      ],
      "op": "SUB",
      "path": "14"
    },
    "5418": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13537,
        13596
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5419": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13537,
        13596
      ],
      "op": "GAS",
      "path": "14"
    },
    "5420": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13537,
        13596
      ],
      "op": "CALL",
      "path": "14"
    },
    "5421": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13537,
        13596
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5422": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13537,
        13596
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5423": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13537,
        13596
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "5424": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13537,
        13596
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE28"
    },
    "5427": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13537,
        13596
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5428": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13537,
        13596
      ],
      "op": "POP",
      "path": "14"
    },
    "5429": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13537,
        13596
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x153C"
    },
    "5432": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13537,
        13596
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5433": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13455,
        13704
      ],
      "op": "POP",
      "path": "14"
    },
    "5434": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5435": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "RETURN",
      "path": "14"
    },
    "5436": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13537,
        13596
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5437": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13537,
        13596
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x909"
    },
    "5440": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13537,
        13596
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5441": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13537,
        13596
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FD9"
    },
    "5444": {
      "fn": "MasterNode.withdraw",
      "jump": "i",
      "offset": [
        13537,
        13596
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5445": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13455,
        13704
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5446": {
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5447": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5448": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "5449": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "5450": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "5451": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "5453": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5454": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "5455": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "5456": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "5457": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP9",
      "path": "14"
    },
    "5458": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "5459": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP9",
      "path": "14"
    },
    "5460": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "5461": {
      "offset": [
        2804,
        2840
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "5462": {
      "offset": [
        2800,
        2910
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x121F"
    },
    "5465": {
      "fn": "MasterNode.withdraw",
      "offset": [
        2800,
        2910
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5466": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5467": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9280,
        9291
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x7"
    },
    "5469": {
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5470": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "5471": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5472": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5473": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "5474": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "5476": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP11",
      "path": "14"
    },
    "5477": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5478": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x156E"
    },
    "5481": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5482": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F8D"
    },
    "5485": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5486": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5487": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5488": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5489": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5490": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5491": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP14",
      "path": "14"
    },
    "5492": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5493": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "5494": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5495": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5496": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP13",
      "path": "14"
    },
    "5497": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5498": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "5499": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5500": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP14",
      "path": "14"
    },
    "5501": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5502": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5503": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "5504": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5505": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "5506": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5507": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP9",
      "path": "14"
    },
    "5508": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5509": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11023,
        11044
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "5510": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11023,
        11044
      ],
      "op": "DUP11",
      "path": "14"
    },
    "5511": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11023,
        11044
      ],
      "op": "DUP10",
      "path": "14"
    },
    "5512": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11023,
        11044
      ],
      "op": "ADD",
      "path": "14"
    },
    "5513": {
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5514": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11023,
        11044
      ],
      "op": "DUP10",
      "path": "14"
    },
    "5515": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11023,
        11044
      ],
      "op": "DUP9",
      "path": "14"
    },
    "5516": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11023,
        11044
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5517": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11023,
        11044
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1595"
    },
    "5520": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11023,
        11044
      ],
      "op": "DUP9",
      "path": "14"
    },
    "5521": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11023,
        11044
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FEC"
    },
    "5524": {
      "fn": "MasterNode._buildCCIPMessage",
      "jump": "i",
      "offset": [
        11023,
        11044
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5525": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11023,
        11044
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5526": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP9",
      "path": "14"
    },
    "5527": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5528": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x15A0"
    },
    "5531": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5532": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FBE"
    },
    "5535": {
      "fn": "MasterNode._buildCCIPMessage",
      "jump": "i",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5536": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5537": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP12",
      "path": "14"
    },
    "5538": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5539": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5540": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11268,
        11434
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x15B1"
    },
    "5543": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP11",
      "path": "14"
    },
    "5544": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5545": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xEA0"
    },
    "5548": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5549": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FBE"
    },
    "5552": {
      "fn": "MasterNode._buildCCIPMessage",
      "jump": "i",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5553": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11268,
        11434
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5554": {
      "offset": [
        783,
        15140
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "5555": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP11",
      "path": "14"
    },
    "5556": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5557": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP10",
      "path": "14"
    },
    "5558": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x15BE"
    },
    "5561": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP12",
      "path": "14"
    },
    "5562": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F8D"
    },
    "5565": {
      "fn": "MasterNode._buildCCIPMessage",
      "jump": "i",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5566": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5567": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP11",
      "path": "14"
    },
    "5568": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5569": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10973,
        11599
      ],
      "op": "DUP12",
      "path": "14"
    },
    "5570": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10973,
        11599
      ],
      "op": "DUP11",
      "path": "14"
    },
    "5571": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10973,
        11599
      ],
      "op": "ADD",
      "path": "14"
    },
    "5572": {
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5573": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10973,
        11599
      ],
      "op": "DUP10",
      "path": "14"
    },
    "5574": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10973,
        11599
      ],
      "op": "DUP10",
      "path": "14"
    },
    "5575": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10973,
        11599
      ],
      "op": "ADD",
      "path": "14"
    },
    "5576": {
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5577": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10973,
        11599
      ],
      "op": "DUP8",
      "path": "14"
    },
    "5578": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10973,
        11599
      ],
      "op": "ADD",
      "path": "14"
    },
    "5579": {
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5580": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "5582": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10973,
        11599
      ],
      "op": "DUP7",
      "path": "14"
    },
    "5583": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10973,
        11599
      ],
      "op": "ADD",
      "path": "14"
    },
    "5584": {
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5585": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "5586": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5587": {
      "op": "PUSH4",
      "value": "0xB0F479A1"
    },
    "5592": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5594": {
      "op": "SHL"
    },
    "5595": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5596": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5597": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10973,
        11599
      ],
      "op": "DUP8",
      "path": "14"
    },
    "5598": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5599": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9437
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5600": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5601": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9437
      ],
      "op": "ADDRESS",
      "path": "14"
    },
    "5602": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "GAS",
      "path": "14"
    },
    "5603": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "5604": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5605": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5606": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "5607": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1215"
    },
    "5610": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5611": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5612": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "DUP6",
      "path": "14"
    },
    "5613": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5614": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "DUP11",
      "path": "14"
    },
    "5615": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5616": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1862"
    },
    "5619": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5620": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13455,
        13704
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5621": {
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "5622": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "5623": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "5624": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "DUP9",
      "path": "14"
    },
    "5625": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "DUP8",
      "path": "14"
    },
    "5626": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5627": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5628": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x20487DED"
    },
    "5633": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "5635": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "SHL",
      "path": "14"
    },
    "5636": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5637": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5638": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "DUP10",
      "path": "14"
    },
    "5639": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5640": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5641": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1615"
    },
    "5644": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "DUP12",
      "path": "14"
    },
    "5645": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "DUP11",
      "path": "14"
    },
    "5646": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "DUP11",
      "path": "14"
    },
    "5647": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5648": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "ADD",
      "path": "14"
    },
    "5649": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x20F3"
    },
    "5652": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9533,
        9589
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5653": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5654": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "SUB",
      "path": "14"
    },
    "5655": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5656": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "DUP11",
      "path": "14"
    },
    "5657": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "GAS",
      "path": "14"
    },
    "5658": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "5659": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "5660": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5661": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "5662": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x11D1"
    },
    "5665": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5666": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5667": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "DUP11",
      "path": "14"
    },
    "5668": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5669": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5670": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "5671": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1831"
    },
    "5674": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5675": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13455,
        13704
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5676": {
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "5677": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "5679": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "DUP11",
      "path": "14"
    },
    "5680": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5681": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5682": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "5683": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5684": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "5685": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x23B872DD"
    },
    "5690": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "5692": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "SHL",
      "path": "14"
    },
    "5693": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5694": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5695": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13261,
        13271
      ],
      "op": "CALLER",
      "path": "14"
    },
    "5696": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "DUP11",
      "path": "14"
    },
    "5697": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5698": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "ADD",
      "path": "14"
    },
    "5699": {
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5700": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9437
      ],
      "op": "ADDRESS",
      "path": "14"
    },
    "5701": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "5703": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5704": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "5705": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5706": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP9",
      "path": "14"
    },
    "5707": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "5709": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5710": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "5711": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5712": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "GAS",
      "path": "14"
    },
    "5713": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "CALL",
      "path": "14"
    },
    "5714": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5715": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5716": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "5717": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1195"
    },
    "5720": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5721": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "DUP11",
      "path": "14"
    },
    "5722": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5723": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1814"
    },
    "5726": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5727": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13455,
        13704
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5728": {
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "5729": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "5730": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1135"
    },
    "5733": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5734": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5735": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "DUP9",
      "path": "14"
    },
    "5736": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5737": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5738": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9280,
        9291
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x7"
    },
    "5740": {
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5741": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "5742": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5743": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP8",
      "path": "14"
    },
    "5744": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5745": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x70A08231"
    },
    "5750": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "5752": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SHL",
      "path": "14"
    },
    "5753": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5754": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5755": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5756": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5757": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9437
      ],
      "op": "ADDRESS",
      "path": "14"
    },
    "5758": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "DUP6",
      "path": "14"
    },
    "5759": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5760": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "ADD",
      "path": "14"
    },
    "5761": {
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5762": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "DUP11",
      "path": "14"
    },
    "5763": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5764": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "5766": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5767": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "DUP8",
      "path": "14"
    },
    "5768": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "GAS",
      "path": "14"
    },
    "5769": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "5770": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5771": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5772": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "5773": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x180A"
    },
    "5776": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5777": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "DUP7",
      "path": "14"
    },
    "5778": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5779": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x17DD"
    },
    "5782": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5783": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13455,
        13704
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5784": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9745,
        9788
      ],
      "op": "POP",
      "path": "14"
    },
    "5785": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9745,
        9788
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5786": {
      "branch": 74,
      "fn": "MasterNode._sendMessage",
      "offset": [
        9745,
        9788
      ],
      "op": "GT",
      "path": "14"
    },
    "5787": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9741,
        9869
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x175E"
    },
    "5790": {
      "branch": 74,
      "fn": "MasterNode._sendMessage",
      "offset": [
        9741,
        9869
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5791": {
      "op": "POP"
    },
    "5792": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP8",
      "path": "14"
    },
    "5793": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5794": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "5799": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5801": {
      "op": "SHL"
    },
    "5802": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5803": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5808": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5810": {
      "op": "SHL"
    },
    "5811": {
      "op": "SUB"
    },
    "5812": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP8",
      "path": "14"
    },
    "5813": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "5814": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5815": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5816": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "ADD",
      "path": "14"
    },
    "5817": {
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5818": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5819": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5820": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "5822": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5823": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "5824": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5825": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5826": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5827": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5828": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5829": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP10",
      "path": "14"
    },
    "5830": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5831": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5832": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5833": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5834": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5835": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5836": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP8",
      "path": "14"
    },
    "5837": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5838": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5839": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5840": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "5842": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "5843": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "SUB",
      "path": "14"
    },
    "5844": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5845": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "GAS",
      "path": "14"
    },
    "5846": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "CALL",
      "path": "14"
    },
    "5847": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5848": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "5849": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1078"
    },
    "5852": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5853": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5854": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "DUP9",
      "path": "14"
    },
    "5855": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "5856": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "5857": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5858": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1707"
    },
    "5861": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "SWAP9",
      "path": "14"
    },
    "5862": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "5863": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "5864": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "5865": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1741"
    },
    "5868": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5869": {
      "op": "POP"
    },
    "5870": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "5871": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5872": {
      "op": "PUSH4",
      "value": "0x96F4E9F9"
    },
    "5877": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5879": {
      "op": "SHL"
    },
    "5880": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5881": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5882": {
      "offset": [
        783,
        15140
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "5883": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP9",
      "path": "14"
    },
    "5884": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "5885": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "5886": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "5887": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "5888": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "5889": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5890": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "ADD",
      "path": "14"
    },
    "5891": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x20F3"
    },
    "5894": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        10133,
        10191
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5895": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5896": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "SUB",
      "path": "14"
    },
    "5897": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5898": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "GAS",
      "path": "14"
    },
    "5899": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "CALL",
      "path": "14"
    },
    "5900": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5901": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5902": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "5903": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1042"
    },
    "5906": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5907": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "POP",
      "path": "14"
    },
    "5908": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x171C"
    },
    "5911": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5912": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13455,
        13704
      ],
      "op": "POP",
      "path": "14"
    },
    "5913": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13455,
        13704
      ],
      "op": "POP",
      "path": "14"
    },
    "5914": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5915": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15140
      ],
      "op": "RETURN",
      "path": "14"
    },
    "5916": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5917": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5918": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "5919": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5920": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "GT",
      "path": "14"
    },
    "5921": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x173A"
    },
    "5924": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5925": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5926": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x172F"
    },
    "5929": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5930": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5931": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2022"
    },
    "5934": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        10133,
        10191
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5935": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5936": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5937": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "ADD",
      "path": "14"
    },
    "5938": {
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "5939": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "5940": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x43A"
    },
    "5943": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5944": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5945": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "RETURN",
      "path": "14"
    },
    "5946": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5947": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "POP",
      "path": "14"
    },
    "5948": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "5949": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1725"
    },
    "5952": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10133,
        10191
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5953": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5954": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1757"
    },
    "5957": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5958": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "DUP8",
      "path": "14"
    },
    "5959": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "5960": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "DUP10",
      "path": "14"
    },
    "5961": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "GT",
      "path": "14"
    },
    "5962": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1071"
    },
    "5965": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5966": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1062"
    },
    "5969": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5970": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5971": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2022"
    },
    "5974": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9987,
        10029
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5975": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5976": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "POP",
      "path": "14"
    },
    "5977": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "DUP11",
      "path": "14"
    },
    "5978": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xFE6"
    },
    "5981": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9987,
        10029
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5982": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9741,
        9869
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5983": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP10",
      "path": "14"
    },
    "5984": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5985": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5986": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5987": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP11",
      "path": "14"
    },
    "5988": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5989": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "5991": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5992": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5993": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5994": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "5995": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5996": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "5997": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5998": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5999": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9437
      ],
      "op": "ADDRESS",
      "path": "14"
    },
    "6000": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "DUP11",
      "path": "14"
    },
    "6001": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6002": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "ADD",
      "path": "14"
    },
    "6003": {
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6004": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "GAS",
      "path": "14"
    },
    "6005": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "6006": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "6007": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6008": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "6009": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x17D3"
    },
    "6012": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6013": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "DUP7",
      "path": "14"
    },
    "6014": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "6015": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x179F"
    },
    "6018": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6019": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9741,
        9869
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6020": {
      "op": "POP"
    },
    "6021": {
      "op": "POP"
    },
    "6022": {
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6023": {
      "op": "PUSH4",
      "value": "0x4787A103"
    },
    "6028": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "6030": {
      "op": "SHL"
    },
    "6031": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9809,
        9869
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6032": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9809,
        9869
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6033": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9809,
        9869
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "6034": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9809,
        9869
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6035": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9809,
        9869
      ],
      "op": "ADD",
      "path": "14"
    },
    "6036": {
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6037": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "6039": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6040": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "6041": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6042": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "6044": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "6045": {
      "op": "POP"
    },
    "6046": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9809,
        9869
      ],
      "op": "REVERT",
      "path": "14"
    },
    "6047": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6048": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6049": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6050": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "6051": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "6052": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "POP",
      "path": "14"
    },
    "6053": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6054": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6055": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6056": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "GT",
      "path": "14"
    },
    "6057": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x17CC"
    },
    "6060": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6061": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6062": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x17B7"
    },
    "6065": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6066": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6067": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2022"
    },
    "6070": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9826,
        9862
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6071": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6072": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6073": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "ADD",
      "path": "14"
    },
    "6074": {
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "6075": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "6076": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x90C"
    },
    "6079": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6080": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "6082": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "6083": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "6084": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6085": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6086": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "DUP6",
      "path": "14"
    },
    "6087": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6088": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1783"
    },
    "6091": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6092": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6093": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "POP",
      "path": "14"
    },
    "6094": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6095": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x17AD"
    },
    "6098": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6099": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9826,
        9862
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6100": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6101": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6102": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6103": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP9",
      "path": "14"
    },
    "6104": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6105": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "6106": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6107": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6108": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "REVERT",
      "path": "14"
    },
    "6109": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6110": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6111": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "POP",
      "path": "14"
    },
    "6112": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "DUP11",
      "path": "14"
    },
    "6113": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6114": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6115": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6116": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6117": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "GT",
      "path": "14"
    },
    "6118": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1803"
    },
    "6121": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6122": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6123": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x17F4"
    },
    "6126": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6127": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6128": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2022"
    },
    "6131": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9752,
        9788
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6132": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6133": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6134": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "ADD",
      "path": "14"
    },
    "6135": {
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "6136": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "6137": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x98E"
    },
    "6140": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6141": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6142": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "DUP13",
      "path": "14"
    },
    "6143": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1697"
    },
    "6146": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6147": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6148": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "POP",
      "path": "14"
    },
    "6149": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6150": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x17EA"
    },
    "6153": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6154": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9752,
        9788
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6155": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP11",
      "path": "14"
    },
    "6156": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6157": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6158": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP9",
      "path": "14"
    },
    "6159": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6160": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "6161": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6162": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6163": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "REVERT",
      "path": "14"
    },
    "6164": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6165": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x182B"
    },
    "6168": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "6169": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "POP",
      "path": "14"
    },
    "6170": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "DUP10",
      "path": "14"
    },
    "6171": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6172": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "DUP12",
      "path": "14"
    },
    "6173": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "GT",
      "path": "14"
    },
    "6174": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1071"
    },
    "6177": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6178": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1062"
    },
    "6181": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6182": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6183": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2022"
    },
    "6186": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9621,
        9678
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6187": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6188": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "DUP11",
      "path": "14"
    },
    "6189": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x165F"
    },
    "6192": {
      "branch": 75,
      "fn": "MasterNode._sendMessage",
      "offset": [
        9621,
        9678
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6193": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6194": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6195": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6196": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "6197": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "6198": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "6199": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "POP",
      "path": "14"
    },
    "6200": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6201": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6202": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "GT",
      "path": "14"
    },
    "6203": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x185B"
    },
    "6206": {
      "branch": 75,
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6207": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6208": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1849"
    },
    "6211": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6212": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6213": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2022"
    },
    "6216": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9533,
        9589
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6217": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6218": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6219": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "ADD",
      "path": "14"
    },
    "6220": {
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "6221": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "6222": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x294"
    },
    "6225": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6226": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP10",
      "path": "14"
    },
    "6227": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6228": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6229": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "6230": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "DUP13",
      "path": "14"
    },
    "6231": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x162B"
    },
    "6234": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6235": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6236": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "POP",
      "path": "14"
    },
    "6237": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6238": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x183F"
    },
    "6241": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9533,
        9589
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6242": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6243": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6244": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "6245": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "POP",
      "path": "14"
    },
    "6246": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "DUP10",
      "path": "14"
    },
    "6247": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6248": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "6249": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "POP",
      "path": "14"
    },
    "6250": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6251": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6252": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "GT",
      "path": "14"
    },
    "6253": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1895"
    },
    "6256": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6257": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6258": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x187B"
    },
    "6261": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6262": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6263": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2022"
    },
    "6266": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9433,
        9449
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6267": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6268": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6269": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "ADD",
      "path": "14"
    },
    "6270": {
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "6271": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "6272": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA67"
    },
    "6275": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6276": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6277": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "6278": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6279": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "6280": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6281": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "6282": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA67"
    },
    "6285": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6286": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "DUP5",
      "path": "14"
    },
    "6287": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6288": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "DUP11",
      "path": "14"
    },
    "6289": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x15F4"
    },
    "6292": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6293": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6294": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "POP",
      "path": "14"
    },
    "6295": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6296": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1871"
    },
    "6299": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9433,
        9449
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6300": {
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6301": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "6302": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6303": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6307": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6309": {
      "op": "SHL"
    },
    "6310": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6311": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6312": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6313": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP9",
      "path": "14"
    },
    "6314": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "6315": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "6316": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6317": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6318": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x22"
    },
    "6320": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "6322": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6323": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "6324": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6325": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
    },
    "6358": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "6360": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6361": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "6362": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6363": {
      "op": "PUSH2",
      "value": "0x6365"
    },
    "6366": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "6368": {
      "op": "SHL"
    },
    "6369": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "6371": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6372": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "6373": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6374": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x84"
    },
    "6376": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6377": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "REVERT",
      "path": "14"
    },
    "6378": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6379": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "6380": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6381": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6385": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6387": {
      "op": "SHL"
    },
    "6388": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6389": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6390": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6391": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP8",
      "path": "14"
    },
    "6392": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "6393": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6394": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6395": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6396": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x21"
    },
    "6398": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "6400": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6401": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "6402": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6403": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
    },
    "6436": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "6438": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6439": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "6440": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6441": {
      "op": "PUSH1",
      "value": "0x73"
    },
    "6443": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "6445": {
      "op": "SHL"
    },
    "6446": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "6448": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6449": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "6450": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6451": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x84"
    },
    "6453": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6454": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "REVERT",
      "path": "14"
    },
    "6455": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6456": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6457": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6458": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6462": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6464": {
      "op": "SHL"
    },
    "6465": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6466": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6467": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6468": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "6469": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "6470": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP8",
      "path": "14"
    },
    "6471": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6472": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6473": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x13"
    },
    "6475": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "6477": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6478": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "6479": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6480": {
      "op": "PUSH19",
      "value": "0x4E6F7420656E6F756768742062616C616E6365"
    },
    "6500": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "6502": {
      "op": "SHL"
    },
    "6503": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "6505": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6506": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "6507": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6508": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "6510": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6511": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "REVERT",
      "path": "14"
    },
    "6512": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6513": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6514": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6515": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6519": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6521": {
      "op": "SHL"
    },
    "6522": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6523": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6524": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6525": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "6526": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "6527": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP8",
      "path": "14"
    },
    "6528": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6529": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6530": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x12"
    },
    "6532": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "6534": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6535": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "6536": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6537": {
      "op": "PUSH18",
      "value": "0x4E6F6465206973206E6F7420416374697665"
    },
    "6556": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "6558": {
      "op": "SHL"
    },
    "6559": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "6561": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6562": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "6563": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6564": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "6566": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6567": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "REVERT",
      "path": "14"
    },
    "6568": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6569": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "6570": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6571": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6572": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "6573": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x294"
    },
    "6576": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6577": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "6579": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "6580": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "6582": {
      "op": "NOT"
    },
    "6583": {
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "6584": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "6585": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x294"
    },
    "6588": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6589": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x19C4"
    },
    "6592": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F0B"
    },
    "6595": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6596": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6597": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x19CC"
    },
    "6600": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F21"
    },
    "6603": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6604": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6609": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6611": {
      "op": "SHL"
    },
    "6612": {
      "op": "SUB"
    },
    "6613": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6614": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "6615": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "6616": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6617": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "6619": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "6621": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6622": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6623": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6624": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "6625": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "6626": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15140
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "6627": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "6628": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "6629": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6630": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6631": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6632": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "6633": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "6634": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6635": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15140
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "6636": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "6637": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "6639": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "6640": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "6641": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "6642": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "6644": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11351,
        11388
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6645": {
      "branch": 81,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11351,
        11388
      ],
      "op": "ADD",
      "path": "0"
    },
    "6646": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A08"
    },
    "6649": {
      "branch": 81,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6650": {
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6651": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "6653": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5441,
        5447
      ],
      "op": "DUP7",
      "path": "0",
      "statement": 41
    },
    "6654": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5441,
        5447
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x38D"
    },
    "6657": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5441,
        5447
      ],
      "op": "DUP8",
      "path": "0"
    },
    "6658": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5441,
        5447
      ],
      "op": "DUP8",
      "path": "0"
    },
    "6659": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5441,
        5447
      ],
      "op": "DUP8",
      "path": "0"
    },
    "6660": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5441,
        5447
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2253"
    },
    "6663": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5441,
        5447
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6664": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6665": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11412,
        11438
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 42
    },
    "6666": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11412,
        11438
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6667": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11412,
        11438
      ],
      "op": "LT",
      "path": "0"
    },
    "6668": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1A31"
    },
    "6671": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6672": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "6673": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "6674": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6675": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "6676": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11539,
        11564
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 43,
      "value": "0x1A26"
    },
    "6679": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "6681": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "6682": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "6683": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5441,
        5447
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x38D"
    },
    "6686": {
      "offset": [
        783,
        15140
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "6687": {
      "fn": "ERC20.transferFrom",
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "6688": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "6689": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11539,
        11564
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6690": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11539,
        11564
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2467"
    },
    "6693": {
      "fn": "ERC20._spendAllowance",
      "jump": "i",
      "offset": [
        11539,
        11564
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6694": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11539,
        11564
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6695": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6696": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "6697": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "6698": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6699": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "6700": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "POP",
      "path": "0"
    },
    "6701": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19FA"
    },
    "6704": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6705": {
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6706": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "6708": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6709": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "6711": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "DUP8",
      "path": "14"
    },
    "6712": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6713": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "6714": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x461BCD"
    },
    "6718": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE5"
    },
    "6720": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "SHL",
      "path": "14"
    },
    "6721": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6722": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6723": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6724": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "6725": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6726": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1D"
    },
    "6728": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "6730": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6731": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "6732": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6733": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
    },
    "6766": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "6768": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6769": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "6770": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6771": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "REVERT",
      "path": "14"
    },
    "6772": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6773": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "6774": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "6775": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "6776": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x43A"
    },
    "6779": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6780": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6781": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "6783": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "NOT",
      "path": "14"
    },
    "6784": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "6785": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "6786": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "6787": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x43A"
    },
    "6790": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6791": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1A8E"
    },
    "6794": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F0B"
    },
    "6797": {
      "fn": "ERC20._spendAllowance",
      "jump": "i",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6798": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6799": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "6800": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1A97"
    },
    "6803": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F21"
    },
    "6806": {
      "fn": "ERC20._spendAllowance",
      "jump": "i",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6807": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6808": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6809": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "6811": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6812": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "6814": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "SHL",
      "path": "14"
    },
    "6815": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "6816": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6817": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "6818": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "6819": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "6820": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6821": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6822": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6823": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14146
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 44,
      "value": "0x8"
    },
    "6825": {
      "offset": [
        783,
        15140
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "6826": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "6828": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "6829": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6830": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP9",
      "path": "14"
    },
    "6831": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6832": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "6833": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6834": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "6835": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "6836": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "6838": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6839": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "6841": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP10",
      "path": "14"
    },
    "6842": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "6843": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "6844": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "SHR",
      "path": "14"
    },
    "6845": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "6846": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "6847": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "6848": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14180
      ],
      "op": "EQ",
      "path": "14"
    },
    "6849": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14240
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "6850": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14240
      ],
      "op": "DUP9",
      "path": "14"
    },
    "6851": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14240
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1BD1"
    },
    "6854": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14240
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6855": {
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6856": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14304
      ],
      "op": "POP",
      "path": "14"
    },
    "6857": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14304
      ],
      "op": "DUP8",
      "path": "14"
    },
    "6858": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14304
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1BBD"
    },
    "6861": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14304
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6862": {
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6863": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14385
      ],
      "op": "DUP8",
      "path": "14"
    },
    "6864": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14385
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1B9E"
    },
    "6867": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14385
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6868": {
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6869": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14482
      ],
      "op": "DUP8",
      "path": "14"
    },
    "6870": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14482
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1B67"
    },
    "6873": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14482
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6874": {
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6875": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14545
      ],
      "op": "DUP8",
      "path": "14"
    },
    "6876": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14545
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1B4D"
    },
    "6879": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14545
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6880": {
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6881": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14610
      ],
      "op": "POP",
      "path": "14"
    },
    "6882": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14610
      ],
      "op": "DUP7",
      "path": "14"
    },
    "6883": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14610
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1B34"
    },
    "6886": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14610
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6887": {
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6888": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14664
      ],
      "op": "DUP7",
      "path": "14"
    },
    "6889": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14664
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1B1F"
    },
    "6892": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14664
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6893": {
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6894": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14767
      ],
      "op": "DUP7",
      "path": "14"
    },
    "6895": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14767
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1AFE"
    },
    "6898": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14767
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6899": {
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6900": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP9",
      "path": "14"
    },
    "6901": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP8",
      "path": "14"
    },
    "6902": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP10",
      "path": "14"
    },
    "6903": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6904": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6905": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "6906": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "6907": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6908": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6909": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "RETURN",
      "path": "14"
    },
    "6910": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14767
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6911": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6912": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6913": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP8",
      "path": "14"
    },
    "6914": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6915": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "6916": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6917": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "6918": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14680,
        14714
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6919": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14680,
        14714
      ],
      "op": "ADD",
      "path": "14"
    },
    "6920": {
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "6921": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "6922": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "6923": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6924": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6925": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "6926": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6927": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "6928": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14729,
        14767
      ],
      "op": "ADD",
      "path": "14"
    },
    "6929": {
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "6930": {
      "op": "GT"
    },
    "6931": {
      "op": "SWAP1"
    },
    "6932": {
      "op": "POP"
    },
    "6933": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14767
      ],
      "op": "CODESIZE",
      "path": "14"
    },
    "6934": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14767
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6935": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14767
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6936": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14767
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6937": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14767
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6938": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14767
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6939": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14767
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1AF3"
    },
    "6942": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14767
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6943": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14664
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6944": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6945": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "6946": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6947": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6948": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP10",
      "path": "14"
    },
    "6949": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6950": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP8",
      "path": "14"
    },
    "6951": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "6952": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "6953": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14626,
        14660
      ],
      "op": "DUP6",
      "path": "14"
    },
    "6954": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14626,
        14660
      ],
      "op": "ADD",
      "path": "14"
    },
    "6955": {
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "6956": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14626,
        14664
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "6957": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14626,
        14664
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "6958": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14626,
        14664
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "6959": {
      "op": "POP"
    },
    "6960": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14664
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1AED"
    },
    "6963": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14664
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6964": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14610
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6965": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "6966": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6967": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "6968": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "6969": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6970": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6971": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP10",
      "path": "14"
    },
    "6972": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6973": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP8",
      "path": "14"
    },
    "6974": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "6975": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "6976": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "6977": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6978": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "SHR",
      "path": "14"
    },
    "6979": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "6981": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "6982": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "6983": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "6984": {
      "op": "POP"
    },
    "6985": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14610
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1AE7"
    },
    "6988": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14610
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6989": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14545
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6990": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "6991": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "6992": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "6993": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "6994": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6995": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6996": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP11",
      "path": "14"
    },
    "6997": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6998": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP9",
      "path": "14"
    },
    "6999": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "7000": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "7001": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "7002": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "7004": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "7005": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "7006": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "7007": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14498,
        14545
      ],
      "op": "EQ",
      "path": "14"
    },
    "7008": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14498,
        14545
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "7009": {
      "op": "POP"
    },
    "7010": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14545
      ],
      "op": "CODESIZE",
      "path": "14"
    },
    "7011": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14545
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1AE0"
    },
    "7014": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14545
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7015": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14482
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7016": {
      "offset": [
        783,
        15140
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "7017": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "7018": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7019": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "7020": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "7021": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "7022": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7023": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7024": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP10",
      "path": "14"
    },
    "7025": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7026": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "7027": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP9",
      "path": "14"
    },
    "7028": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "7029": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "7030": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14401,
        14445
      ],
      "op": "ADD",
      "path": "14"
    },
    "7031": {
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "7032": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14448,
        14452
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE10"
    },
    "7035": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7036": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "7037": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7038": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7039": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "GT",
      "path": "14"
    },
    "7040": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1B8B"
    },
    "7043": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7044": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14467,
        14482
      ],
      "op": "TIMESTAMP",
      "path": "14"
    },
    "7045": {
      "op": "LT"
    },
    "7046": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14482
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "7047": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14482
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1ADA"
    },
    "7050": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14482
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7051": {
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7052": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7057": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7059": {
      "op": "SHL"
    },
    "7060": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "7061": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7062": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x11"
    },
    "7064": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "7065": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7066": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "7068": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "7069": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "REVERT",
      "path": "14"
    },
    "7070": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14385
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7071": {
      "offset": [
        783,
        15140
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "7072": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "7073": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7074": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "7075": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7076": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "7077": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP9",
      "path": "14"
    },
    "7078": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "7079": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "7080": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14320,
        14360
      ],
      "op": "ADD",
      "path": "14"
    },
    "7081": {
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "7082": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14363,
        14367
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE10"
    },
    "7085": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7086": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "7087": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7088": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7089": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "GT",
      "path": "14"
    },
    "7090": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1B8B"
    },
    "7093": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7094": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14370,
        14385
      ],
      "op": "TIMESTAMP",
      "path": "14"
    },
    "7095": {
      "op": "LT"
    },
    "7096": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14385
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "7097": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14385
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1AD4"
    },
    "7100": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14385
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7101": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14304
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7102": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "7103": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "7104": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "7105": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "7106": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7107": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP9",
      "path": "14"
    },
    "7108": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "7109": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "7110": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14256,
        14300
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7111": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14256,
        14300
      ],
      "op": "ADD",
      "path": "14"
    },
    "7112": {
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "7113": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14256,
        14304
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "7114": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14256,
        14304
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "7115": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14256,
        14304
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "7116": {
      "op": "POP"
    },
    "7117": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14304
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1ACE"
    },
    "7120": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14304
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7121": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14240
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7122": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14196,
        14236
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7123": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14196,
        14236
      ],
      "op": "ADD",
      "path": "14"
    },
    "7124": {
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "7125": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14196,
        14240
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "7126": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14196,
        14240
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "7127": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14196,
        14240
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "7128": {
      "op": "POP"
    },
    "7129": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14240
      ],
      "op": "CODESIZE",
      "path": "14"
    },
    "7130": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14240
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1AC7"
    },
    "7133": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14136,
        14240
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7134": {
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7135": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "7136": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "7137": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x242"
    },
    "7140": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7141": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7142": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "7144": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "NOT",
      "path": "14"
    },
    "7145": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "7146": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "7147": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "7148": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x242"
    },
    "7151": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7152": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "7154": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "7155": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "7156": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "7157": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7158": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "7159": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7160": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7161": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7162": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "RETURN",
      "path": "14"
    },
    "7163": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7164": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "7165": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "7166": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "7167": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x294"
    },
    "7170": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7171": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7172": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "7174": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "NOT",
      "path": "14"
    },
    "7175": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "7176": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "7177": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "7178": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x294"
    },
    "7181": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7182": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "7184": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7185": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7187": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7189": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7191": {
      "op": "SHL"
    },
    "7192": {
      "op": "SUB"
    },
    "7193": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1C20"
    },
    "7196": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x21FA"
    },
    "7199": {
      "fn": "MasterNode.checkApprovedWarp",
      "jump": "i",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7200": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7201": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7202": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "7203": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7204": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "7205": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7206": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7207": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "RETURN",
      "path": "14"
    },
    "7208": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7209": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "7210": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "7211": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x242"
    },
    "7214": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7215": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "7217": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "7218": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "7220": {
      "op": "NOT"
    },
    "7221": {
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "7222": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "7223": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x242"
    },
    "7226": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7227": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1C42"
    },
    "7230": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F0B"
    },
    "7233": {
      "fn": "MasterNode.checkApprovedWarp",
      "jump": "i",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7234": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7235": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7236": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "7238": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "7239": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7244": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7246": {
      "op": "SHL"
    },
    "7247": {
      "op": "SUB"
    },
    "7248": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7249": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "7250": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7251": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "7252": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x90C"
    },
    "7255": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7256": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "7258": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "7259": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7260": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7261": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "7262": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "7263": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7264": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7265": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "7266": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "7267": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA63"
    },
    "7270": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7271": {
      "offset": [
        2032,
        2091
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1C6E"
    },
    "7274": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        2032,
        2091
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x25C2"
    },
    "7277": {
      "fn": "MasterNode.checkApprovedWarp",
      "jump": "i",
      "offset": [
        2032,
        2091
      ],
      "op": "JUMP",
      "path": "9"
    },
    "7278": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        2032,
        2091
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "7279": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "7281": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        3389,
        3403
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 45,
      "value": "0x9"
    },
    "7283": {
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "7284": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "7285": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "7286": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1D05"
    },
    "7289": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7290": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "7291": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "7293": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7294": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7295": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7296": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "7298": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "SHL",
      "path": "14"
    },
    "7299": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "7300": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "7301": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "7302": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "7303": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "7304": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "DUP9",
      "path": "14"
    },
    "7305": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7306": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        3439,
        3449
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 46,
      "value": "0x8"
    },
    "7308": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "7310": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7311": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "DUP8",
      "path": "14"
    },
    "7312": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "7313": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "7314": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xFF00"
    },
    "7317": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH10",
      "path": "14",
      "value": "0xFFFFFFFFFFFFFFFF0000"
    },
    "7328": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "7329": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "7330": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "7331": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x10"
    },
    "7333": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "SHL",
      "path": "14"
    },
    "7334": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "7335": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "7336": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH10",
      "path": "14",
      "value": "0xFFFFFFFFFFFFFFFFFFFF"
    },
    "7347": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "NOT",
      "path": "14"
    },
    "7348": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "7349": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7350": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        3439,
        3449
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "7352": {
      "offset": [
        783,
        15140
      ],
      "op": "SHL",
      "path": "14"
    },
    "7353": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "7354": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "OR",
      "path": "14"
    },
    "7355": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "OR",
      "path": "14"
    },
    "7356": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "OR",
      "path": "14"
    },
    "7357": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7358": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "7359": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        3612,
        3721
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1CC6"
    },
    "7362": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        3612,
        3721
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7363": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7364": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7365": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "RETURN",
      "path": "14"
    },
    "7366": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        3612,
        3721
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7367": {
      "branch": 76,
      "fn": "MasterNode.addValidNode",
      "offset": [
        3389,
        3403
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9"
    },
    "7369": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7370": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "7371": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "7374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7376": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "7378": {
      "op": "SHL"
    },
    "7379": {
      "op": "SUB"
    },
    "7380": {
      "op": "NOT"
    },
    "7381": {
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "7382": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        3439,
        3449
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "7384": {
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "7385": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7386": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "7387": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "SHL",
      "path": "14"
    },
    "7388": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "7391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7393": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "7395": {
      "op": "SHL"
    },
    "7396": {
      "op": "SUB"
    },
    "7397": {
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "7398": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7399": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7400": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7401": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "OR",
      "path": "14"
    },
    "7402": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7403": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "7404": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        3686,
        3710
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 47,
      "value": "0xA"
    },
    "7406": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7407": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "7408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7412": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7414": {
      "op": "SHL"
    },
    "7415": {
      "op": "SUB"
    },
    "7416": {
      "op": "NOT"
    },
    "7417": {
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "7418": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7419": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7420": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7421": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "OR",
      "path": "14"
    },
    "7422": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7423": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "7424": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        3612,
        3721
      ],
      "op": "CODESIZE",
      "path": "14"
    },
    "7425": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        3612,
        3721
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7426": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7427": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7428": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "RETURN",
      "path": "14"
    },
    "7429": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7430": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "7432": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7433": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "7435": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "DUP8",
      "path": "14"
    },
    "7436": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "7437": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7438": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x461BCD"
    },
    "7442": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE5"
    },
    "7444": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "SHL",
      "path": "14"
    },
    "7445": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "7446": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7447": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7448": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "7449": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7450": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x15"
    },
    "7452": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "7454": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7455": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "7456": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7457": {
      "op": "PUSH21",
      "value": "0x139BC81B5BDC99481B9BD9195CC8185B1B1BDDD959"
    },
    "7479": {
      "op": "PUSH1",
      "value": "0x5A"
    },
    "7481": {
      "op": "SHL"
    },
    "7482": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "7484": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7485": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "7486": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7487": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "REVERT",
      "path": "14"
    },
    "7488": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7489": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "7490": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "7491": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "7492": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x294"
    },
    "7495": {
      "branch": 76,
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7496": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7497": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "7499": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "NOT",
      "path": "14"
    },
    "7500": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "7501": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "7502": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "7503": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x294"
    },
    "7506": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7507": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "7509": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7510": {
      "fn": "ERC20.approve",
      "offset": [
        4593,
        4599
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 48,
      "value": "0x38D"
    },
    "7513": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1D60"
    },
    "7516": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F0B"
    },
    "7519": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7520": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7521": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "7523": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "7524": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7525": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "7526": {
      "fn": "ERC20.approve",
      "offset": [
        4593,
        4599
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2467"
    },
    "7529": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4593,
        4599
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7530": {
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7531": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "7532": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7533": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15140
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "7534": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x43A"
    },
    "7537": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7538": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7539": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "7541": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15140
      ],
      "op": "NOT",
      "path": "14"
    },
    "7542": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "7543": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "7544": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "7545": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x43A"
    },
    "7548": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7549": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7550": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "7551": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7552": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7553": {
      "fn": "ERC20.name",
      "offset": [
        2240,
        2245
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 49,
      "value": "0x5"
    },
    "7555": {
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "7556": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "7557": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "7559": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "7560": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7561": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "SHR",
      "path": "14"
    },
    "7562": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7563": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7564": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "7565": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "7566": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "7567": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "7568": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "7569": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1E2D"
    },
    "7572": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7573": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7574": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "7576": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "7577": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "DUP8",
      "path": "14"
    },
    "7578": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "7579": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "LT",
      "path": "14"
    },
    "7580": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7581": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "EQ",
      "path": "14"
    },
    "7582": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x69A"
    },
    "7585": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7586": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "DUP9",
      "path": "14"
    },
    "7587": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP10",
      "path": "14"
    },
    "7588": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "7589": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "7590": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "DUP9",
      "path": "14"
    },
    "7591": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "7592": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "7593": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "7594": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7595": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP11",
      "path": "14"
    },
    "7596": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7597": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7598": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7599": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "7601": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "EQ",
      "path": "14"
    },
    "7602": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x673"
    },
    "7605": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7606": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "7607": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "7608": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "7610": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "EQ",
      "path": "14"
    },
    "7611": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1DD1"
    },
    "7614": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7615": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "7616": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "7617": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "7618": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x613"
    },
    "7621": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "7622": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7623": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x604"
    },
    "7626": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7627": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "7628": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "7629": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2022"
    },
    "7632": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7633": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7634": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7635": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7636": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "7637": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "7638": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "7639": {
      "fn": "ERC20.name",
      "offset": [
        2240,
        2245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "7641": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "7642": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7643": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0"
    },
    "7676": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7677": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7678": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "7679": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "LT",
      "path": "14"
    },
    "7680": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1E15"
    },
    "7683": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7684": {
      "op": "POP"
    },
    "7685": {
      "op": "POP"
    },
    "7686": {
      "op": "POP"
    },
    "7687": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7688": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "7689": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "7690": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7691": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x604"
    },
    "7694": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x613"
    },
    "7697": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5F1"
    },
    "7700": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7701": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7702": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7703": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "7704": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "7705": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "DUP11",
      "path": "14"
    },
    "7706": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "7707": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "7708": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "7709": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7710": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "DUP9",
      "path": "14"
    },
    "7711": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "7712": {
      "op": "POP"
    },
    "7713": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP8",
      "path": "14"
    },
    "7714": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "7715": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7716": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "7717": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "7718": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "7719": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7720": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "7721": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1DFC"
    },
    "7724": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7725": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7726": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "7727": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x7F"
    },
    "7729": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "7730": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "7731": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1D95"
    },
    "7734": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7735": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7736": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "7737": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "7738": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x242"
    },
    "7741": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7742": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7743": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "7745": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "NOT",
      "path": "14"
    },
    "7746": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "7747": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "7748": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "7749": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x242"
    },
    "7752": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7753": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1E50"
    },
    "7756": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F0B"
    },
    "7759": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7760": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7761": {
      "offset": [
        3011,
        3021
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7762": {
      "fn": "ERC20.name",
      "offset": [
        3011,
        3021
      ],
      "op": "CALLER",
      "path": "14"
    },
    "7763": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "7764": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7765": {
      "offset": [
        3000,
        3010
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "7767": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "7769": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7770": {
      "offset": [
        2979,
        3125
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1E96"
    },
    "7773": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7777": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7779": {
      "op": "SHL"
    },
    "7780": {
      "op": "SUB"
    },
    "7781": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7782": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "7783": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "DUP8",
      "path": "14"
    },
    "7784": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "7785": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "7786": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x10"
    },
    "7788": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "SHR",
      "path": "14"
    },
    "7789": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "7790": {
      "offset": [
        3038,
        3062
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7791": {
      "fn": "ERC20.name",
      "offset": [
        3038,
        3062
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x0"
    },
    "7824": {
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "7825": {
      "offset": [
        3000,
        3062
      ],
      "op": "EQ",
      "path": "14"
    },
    "7826": {
      "offset": [
        2979,
        3125
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2099"
    },
    "7829": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2979,
        3125
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7830": {
      "fn": "ERC20.name",
      "offset": [
        2979,
        3125
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7831": {
      "offset": [
        3011,
        3021
      ],
      "op": "CALLER",
      "path": "14"
    },
    "7832": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "7833": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7834": {
      "offset": [
        3000,
        3010
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "7836": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "7838": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7839": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "7841": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7842": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "7843": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "7844": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "7845": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "7846": {
      "offset": [
        2804,
        2840
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "7847": {
      "offset": [
        2800,
        2910
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x585"
    },
    "7850": {
      "offset": [
        2800,
        2910
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7851": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "7852": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        4603,
        4609
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 50,
      "value": "0x909"
    },
    "7855": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "7857": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "7858": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "7859": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        4603,
        4609
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x23C3"
    },
    "7862": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "jump": "i",
      "offset": [
        4603,
        4609
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7863": {
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7864": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "7865": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "7866": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "7867": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "7868": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x242"
    },
    "7871": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7872": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "7874": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "7875": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "7877": {
      "op": "NOT"
    },
    "7878": {
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "7879": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "7880": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x242"
    },
    "7883": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7884": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "7885": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xFFFFFFFF"
    },
    "7890": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "7892": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "SHL",
      "path": "14"
    },
    "7893": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7894": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "7895": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7896": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7897": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "7898": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x242"
    },
    "7901": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7902": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "7904": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "7905": {
      "op": "POP"
    },
    "7906": {
      "op": "PUSH4",
      "value": "0x85572FFB"
    },
    "7911": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7913": {
      "op": "SHL"
    },
    "7914": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1565
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 51
    },
    "7915": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1565
      ],
      "op": "EQ",
      "path": "4"
    },
    "7916": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1565
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7917": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1609
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7918": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1609
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "7919": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1609
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1EFA"
    },
    "7922": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1609
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "7923": {
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7924": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "7925": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "7926": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "7927": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7928": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7929": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "RETURN",
      "path": "14"
    },
    "7930": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1609
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7931": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "7936": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7938": {
      "op": "SHL"
    },
    "7939": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1569,
        1609
      ],
      "op": "EQ",
      "path": "4"
    },
    "7940": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1569,
        1609
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7941": {
      "op": "POP"
    },
    "7942": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1609
      ],
      "op": "CODESIZE",
      "path": "4"
    },
    "7943": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1609
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1EF3"
    },
    "7946": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1609
      ],
      "op": "JUMP",
      "path": "4"
    },
    "7947": {
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7948": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "7950": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "7951": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7954": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7956": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7958": {
      "op": "SHL"
    },
    "7959": {
      "op": "SUB"
    },
    "7960": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7961": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "7962": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7963": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "7964": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB50"
    },
    "7967": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7968": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7969": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7970": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "7972": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "7973": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7978": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7980": {
      "op": "SHL"
    },
    "7981": {
      "op": "SUB"
    },
    "7982": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7983": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "7984": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7985": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "7986": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB50"
    },
    "7989": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7990": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7991": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7992": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7993": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7994": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7995": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "7996": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "7997": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "7998": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7999": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8000": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "8002": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8003": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "8004": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8005": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "LT",
      "path": "14"
    },
    "8006": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F63"
    },
    "8009": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8010": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "8011": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "8012": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8013": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "8015": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8017": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8018": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "8019": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "8020": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "8021": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "8022": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "8023": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8024": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "8026": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8027": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "NOT",
      "path": "14"
    },
    "8028": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "8029": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "8030": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "8031": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "8032": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "8033": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8034": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8035": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8036": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8038": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8039": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8040": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "8041": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8042": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "8043": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8044": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "8045": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8046": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "8047": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8048": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "8049": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8050": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "8051": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F42"
    },
    "8054": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8055": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8056": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "8058": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "8059": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8064": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8066": {
      "op": "SHL"
    },
    "8067": {
      "op": "SUB"
    },
    "8068": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8069": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "8070": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8071": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "8072": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB50"
    },
    "8075": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8076": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8077": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8078": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "8080": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8081": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "8082": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8083": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8084": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "LT",
      "path": "14"
    },
    "8085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8089": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8091": {
      "op": "SHL"
    },
    "8092": {
      "op": "SUB"
    },
    "8093": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8094": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "GT",
      "path": "14"
    },
    "8095": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "OR",
      "path": "14"
    },
    "8096": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FA8"
    },
    "8099": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8100": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8102": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8103": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8104": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8105": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x4E487B71"
    },
    "8110": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "8112": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SHL",
      "path": "14"
    },
    "8113": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "8115": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8116": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x41"
    },
    "8118": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "8120": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8121": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "8123": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "8125": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "REVERT",
      "path": "14"
    },
    "8126": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8127": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8129": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8130": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "8131": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8132": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8133": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "LT",
      "path": "14"
    },
    "8134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8138": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8140": {
      "op": "SHL"
    },
    "8141": {
      "op": "SUB"
    },
    "8142": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8143": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "GT",
      "path": "14"
    },
    "8144": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "OR",
      "path": "14"
    },
    "8145": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FA8"
    },
    "8148": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8149": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8151": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8152": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8153": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8158": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8160": {
      "op": "SHL"
    },
    "8161": {
      "op": "SUB"
    },
    "8162": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8163": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "GT",
      "path": "14"
    },
    "8164": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FA8"
    },
    "8167": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8168": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8170": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8171": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8172": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8173": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8175": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8176": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "8177": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8178": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8179": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "LT",
      "path": "14"
    },
    "8180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8184": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8186": {
      "op": "SHL"
    },
    "8187": {
      "op": "SUB"
    },
    "8188": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8189": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "GT",
      "path": "14"
    },
    "8190": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "OR",
      "path": "14"
    },
    "8191": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FA8"
    },
    "8194": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8195": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8197": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8198": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8199": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8200": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "8202": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8203": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "8204": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8205": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8206": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "LT",
      "path": "14"
    },
    "8207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8211": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8213": {
      "op": "SHL"
    },
    "8214": {
      "op": "SUB"
    },
    "8215": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8216": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "GT",
      "path": "14"
    },
    "8217": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "OR",
      "path": "14"
    },
    "8218": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FA8"
    },
    "8221": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8222": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8224": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8225": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8226": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8227": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8228": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "8230": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8231": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "NOT",
      "path": "14"
    },
    "8232": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "8233": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "8234": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "8235": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8236": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "8237": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8238": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8239": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "LT",
      "path": "14"
    },
    "8240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8244": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8246": {
      "op": "SHL"
    },
    "8247": {
      "op": "SUB"
    },
    "8248": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8249": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "GT",
      "path": "14"
    },
    "8250": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "OR",
      "path": "14"
    },
    "8251": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FA8"
    },
    "8254": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8255": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8257": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8258": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8259": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8260": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8261": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "8263": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8264": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "8265": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "8266": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "8267": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB50"
    },
    "8270": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8271": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8272": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "8273": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8278": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8280": {
      "op": "SHL"
    },
    "8281": {
      "op": "SUB"
    },
    "8282": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8283": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "GT",
      "path": "14"
    },
    "8284": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FA8"
    },
    "8287": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8288": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8290": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8291": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "8292": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2077"
    },
    "8295": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "8297": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "8298": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "8299": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8301": {
      "op": "NOT"
    },
    "8302": {
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "8303": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8305": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "8306": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "8307": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2022"
    },
    "8310": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "i",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8311": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8312": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8313": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "8314": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8315": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8317": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8318": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8319": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "8320": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "8321": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "GT",
      "path": "14"
    },
    "8322": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB50"
    },
    "8325": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8326": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8327": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8329": {
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "8330": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8332": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8333": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "8334": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "8335": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8336": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "8337": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "8338": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "CALLDATACOPY",
      "path": "14"
    },
    "8339": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8340": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "8341": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "8342": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8343": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8344": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8345": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8346": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "8347": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x20A0"
    },
    "8350": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8351": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8352": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8353": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8355": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8356": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8360": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8362": {
      "op": "SHL"
    },
    "8363": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8364": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8365": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8367": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "8369": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8370": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "8371": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8372": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x25"
    },
    "8374": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "8376": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8377": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "8378": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8379": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x52657175697265206D617374657220616E64206E6F646520696E2073616D6520"
    },
    "8412": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "8414": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8415": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "8416": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8417": {
      "op": "PUSH5",
      "value": "0x31B430B4B7"
    },
    "8423": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "8425": {
      "op": "SHL"
    },
    "8426": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "8428": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8429": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "8430": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8431": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x84"
    },
    "8433": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8434": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "REVERT",
      "path": "14"
    },
    "8435": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8436": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8441": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8443": {
      "op": "SHL"
    },
    "8444": {
      "op": "SUB"
    },
    "8445": {
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8446": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "8447": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "8448": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "8449": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "8450": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8451": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8452": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8454": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8456": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "8457": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8458": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8459": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8460": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "8461": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8462": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2122"
    },
    "8465": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "8466": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8467": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "8469": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "8470": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "8471": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "8472": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8473": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "8475": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8476": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "8477": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8478": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F37"
    },
    "8481": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "i",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8482": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8483": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "8484": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x213E"
    },
    "8487": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "8488": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP8",
      "path": "14"
    },
    "8489": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "8490": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8491": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "8492": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3F"
    },
    "8494": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "NOT",
      "path": "14"
    },
    "8495": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "8496": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "8497": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "8498": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8499": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "8500": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "8501": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "8503": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "8504": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "8505": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8506": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F37"
    },
    "8509": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "i",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8510": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8511": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8512": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP8",
      "path": "14"
    },
    "8513": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "8514": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8515": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "8516": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "8517": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "8518": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8519": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "8520": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "8521": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "8523": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "8524": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "8525": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8526": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8527": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8528": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP8",
      "path": "14"
    },
    "8529": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8530": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "8531": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "8532": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8533": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8534": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "8535": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "8536": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "8537": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "8538": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "8540": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8541": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8542": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8543": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8544": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "LT",
      "path": "14"
    },
    "8545": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2196"
    },
    "8548": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8549": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "8550": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "8551": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "8552": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "8553": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "8554": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xC0"
    },
    "8556": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "8558": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2193"
    },
    "8561": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "8562": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "8563": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "8565": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8566": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "8568": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SHL",
      "path": "14"
    },
    "8569": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "8570": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "8572": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8573": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "8574": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8575": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "8576": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "8578": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "8579": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "8580": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8581": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "8582": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8583": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "8584": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8585": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "8586": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "8587": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "8588": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "8589": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "8590": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8591": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F37"
    },
    "8594": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "i",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8595": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8596": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8597": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8598": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8599": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "8600": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8601": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8602": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8603": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8607": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8609": {
      "op": "SHL"
    },
    "8610": {
      "op": "SUB"
    },
    "8611": {
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "8612": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP10",
      "path": "14"
    },
    "8613": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8614": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8615": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "8616": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8617": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP9",
      "path": "14"
    },
    "8618": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "8619": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "8620": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8621": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "8622": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP8",
      "path": "14"
    },
    "8623": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "8624": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "8625": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "8626": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8627": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "8628": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "8629": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "8631": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8632": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "8633": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "8634": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8635": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x215D"
    },
    "8638": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8639": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8640": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8641": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8642": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8644": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "8645": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "8646": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SLT",
      "path": "14"
    },
    "8647": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB50"
    },
    "8650": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8651": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8652": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8653": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "8654": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "8655": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8656": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "8657": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB50"
    },
    "8660": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8661": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8662": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8663": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8664": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "8665": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8666": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8667": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "8668": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8669": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "8670": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "GT",
      "path": "14"
    },
    "8671": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x21E4"
    },
    "8674": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8675": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8676": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8677": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x4E487B71"
    },
    "8682": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "8684": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "SHL",
      "path": "14"
    },
    "8685": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "8687": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8688": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x11"
    },
    "8690": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "8692": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8693": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "8695": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "8697": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15140
      ],
      "op": "REVERT",
      "path": "14"
    },
    "8698": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        14903,
        15138
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8699": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        14984,
        14994
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA"
    },
    "8701": {
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "8702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8704": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8706": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8708": {
      "op": "SHL"
    },
    "8709": {
      "op": "SUB"
    },
    "8710": {
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8711": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8712": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "8713": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8714": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        14984,
        15008
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8715": {
      "branch": 77,
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        14984,
        15008
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "8716": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        14980,
        15080
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x222D"
    },
    "8719": {
      "branch": 77,
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        14980,
        15080
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8720": {
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "8721": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8723": {
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8724": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        15097,
        15107
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 52,
      "value": "0x8"
    },
    "8726": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8728": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8731": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8733": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8735": {
      "op": "SHL"
    },
    "8736": {
      "op": "SUB"
    },
    "8737": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8739": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8741": {
      "offset": [
        783,
        15140
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "8742": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "8743": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x10"
    },
    "8745": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        15140
      ],
      "op": "SHR",
      "path": "14"
    },
    "8746": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "8747": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        14903,
        15138
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8748": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "jump": "o",
      "offset": [
        14903,
        15138
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8749": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        14980,
        15080
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8750": {
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8751": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        15140
      ],
      "op": "POP",
      "path": "14"
    },
    "8752": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        15042,
        15056
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 53,
      "value": "0x9"
    },
    "8754": {
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "8755": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "8757": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        15140
      ],
      "op": "SHR",
      "path": "14"
    },
    "8758": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "8759": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8761": {
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8762": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "8764": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8766": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8767": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8769": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8771": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8773": {
      "op": "SHL"
    },
    "8774": {
      "op": "SUB"
    },
    "8775": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8777": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8779": {
      "offset": [
        783,
        15140
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "8780": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "8781": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x10"
    },
    "8783": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        15140
      ],
      "op": "SHR",
      "path": "14"
    },
    "8784": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "8785": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        15024,
        15069
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8786": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "jump": "o",
      "offset": [
        15024,
        15069
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8787": {
      "fn": "ERC20._transfer",
      "offset": [
        7473,
        8291
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8792": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8794": {
      "op": "SHL"
    },
    "8795": {
      "op": "SUB"
    },
    "8796": {
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8797": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8798": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "8799": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "8800": {
      "fn": "ERC20._transfer",
      "offset": [
        7599,
        7617
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 54
    },
    "8801": {
      "fn": "ERC20._transfer",
      "offset": [
        7599,
        7617
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8802": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2370"
    },
    "8805": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8806": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "8807": {
      "fn": "ERC20._transfer",
      "offset": [
        7677,
        7693
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 55
    },
    "8808": {
      "fn": "ERC20._transfer",
      "offset": [
        7677,
        7693
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8809": {
      "fn": "ERC20._transfer",
      "offset": [
        7677,
        7693
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8810": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x231F"
    },
    "8813": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8814": {
      "fn": "ERC20._transfer",
      "offset": [
        7615,
        7616
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8816": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8817": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8818": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8819": {
      "fn": "ERC20._transfer",
      "offset": [
        7815,
        7824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "8821": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8823": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8824": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8826": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8827": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "8828": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "8829": {
      "fn": "ERC20._transfer",
      "offset": [
        7848,
        7869
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 56
    },
    "8830": {
      "fn": "ERC20._transfer",
      "offset": [
        7848,
        7869
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8831": {
      "fn": "ERC20._transfer",
      "offset": [
        7848,
        7869
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8832": {
      "fn": "ERC20._transfer",
      "offset": [
        7848,
        7869
      ],
      "op": "LT",
      "path": "0"
    },
    "8833": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x22CB"
    },
    "8836": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8837": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8839": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8840": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8841": {
      "fn": "ERC20._transfer",
      "offset": [
        8210,
        8236
      ],
      "op": "PUSH32",
      "path": "0",
      "statement": 57,
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "8874": {
      "offset": [
        783,
        15140
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "8875": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "DUP8",
      "path": "14"
    },
    "8876": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8878": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "8879": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8880": {
      "fn": "ERC20._transfer",
      "offset": [
        7815,
        7824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "8882": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "8883": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8884": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "8885": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8886": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8887": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "8888": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "8889": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "DUP7",
      "path": "14"
    },
    "8890": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8891": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8892": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "8893": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8894": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8895": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "8896": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "8897": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8898": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "8899": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8901": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8902": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8903": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8904": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8905": {
      "fn": "ERC20._transfer",
      "offset": [
        8210,
        8236
      ],
      "op": "LOG3",
      "path": "0"
    },
    "8906": {
      "fn": "ERC20._transfer",
      "jump": "o",
      "offset": [
        7473,
        8291
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8907": {
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8908": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8910": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8911": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8915": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8917": {
      "op": "SHL"
    },
    "8918": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8919": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8920": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8922": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "8924": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8925": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "8926": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8927": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x26"
    },
    "8929": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "8931": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8932": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "8933": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8934": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "8967": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "8969": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8970": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "8971": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8972": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "8979": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "8981": {
      "op": "SHL"
    },
    "8982": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "8984": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8985": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "8986": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8987": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x84"
    },
    "8989": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8990": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "REVERT",
      "path": "14"
    },
    "8991": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8992": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8994": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8995": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8999": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9001": {
      "op": "SHL"
    },
    "9002": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9003": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9004": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "9006": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "9008": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9009": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "9010": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9011": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x23"
    },
    "9013": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "9015": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9016": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "9017": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9018": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "9051": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "9053": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9054": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "9055": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9056": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "9060": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "9062": {
      "op": "SHL"
    },
    "9063": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "9065": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9066": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "9067": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9068": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x84"
    },
    "9070": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9071": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "REVERT",
      "path": "14"
    },
    "9072": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9073": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9075": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "9076": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9080": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9082": {
      "op": "SHL"
    },
    "9083": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9084": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9085": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "9087": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "9089": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9090": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "9091": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9092": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x25"
    },
    "9094": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "9096": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9097": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "9098": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9099": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "9132": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "9134": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9135": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "9136": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9137": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "9143": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "9145": {
      "op": "SHL"
    },
    "9146": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "9148": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9149": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "9150": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9151": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x84"
    },
    "9153": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9154": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15140
      ],
      "op": "REVERT",
      "path": "14"
    },
    "9155": {
      "fn": "ERC20._mint",
      "offset": [
        8567,
        9102
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9158": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9160": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9162": {
      "op": "SHL"
    },
    "9163": {
      "op": "SUB"
    },
    "9164": {
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "9165": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9166": {
      "fn": "ERC20._mint",
      "offset": [
        8650,
        8671
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 58
    },
    "9167": {
      "fn": "ERC20._mint",
      "offset": [
        8650,
        8671
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9168": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2422"
    },
    "9171": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "9172": {
      "fn": "ERC20._mint",
      "offset": [
        8999,
        9036
      ],
      "op": "PUSH32",
      "path": "0",
      "statement": 59,
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "9205": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "9207": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9208": {
      "fn": "ERC20._mint",
      "offset": [
        8778,
        8800
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 60,
      "value": "0x2405"
    },
    "9211": {
      "fn": "ERC20._mint",
      "offset": [
        8669,
        8670
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9213": {
      "offset": [
        783,
        15140
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "9214": {
      "fn": "ERC20._mint",
      "offset": [
        8778,
        8800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9216": {
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "9217": {
      "fn": "ERC20._mint",
      "offset": [
        8778,
        8800
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21D7"
    },
    "9220": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8778,
        8800
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9221": {
      "fn": "ERC20._mint",
      "offset": [
        8778,
        8800
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9222": {
      "fn": "ERC20._mint",
      "offset": [
        8778,
        8800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9224": {
      "offset": [
        783,
        15140
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "9225": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "9226": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "9227": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9228": {
      "fn": "ERC20._mint",
      "offset": [
        8946,
        8955
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 61,
      "value": "0x2"
    },
    "9230": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9231": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9232": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9234": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15140
      ],
      "op": "DUP5",
      "path": "14"
    },
    "9235": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15140
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "9236": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9237": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9238": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "9239": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "9240": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9241": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15140
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "9242": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9244": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "9245": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9246": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9247": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9248": {
      "fn": "ERC20._mint",
      "offset": [
        8999,
        9036
      ],
      "op": "LOG3",
      "path": "0"
    },
    "9249": {
      "fn": "ERC20._mint",
      "jump": "o",
      "offset": [
        8567,
        9102
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9250": {
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9251": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9253": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "9254": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9258": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9260": {
      "op": "SHL"
    },
    "9261": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9262": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9263": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "9265": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "9267": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9268": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "9269": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9270": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "9272": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "9274": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9275": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "9276": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9277": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "9310": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "9312": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9313": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "9314": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9315": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "9317": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9318": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15140
      ],
      "op": "REVERT",
      "path": "14"
    },
    "9319": {
      "fn": "ERC20._approve",
      "offset": [
        10504,
        10874
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9324": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9326": {
      "op": "SHL"
    },
    "9327": {
      "op": "SUB"
    },
    "9328": {
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9329": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9330": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "9331": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "9332": {
      "fn": "ERC20._approve",
      "offset": [
        10635,
        10654
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 62
    },
    "9333": {
      "fn": "ERC20._approve",
      "offset": [
        10635,
        10654
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9334": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2518"
    },
    "9337": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "9338": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "9339": {
      "fn": "ERC20._approve",
      "offset": [
        10713,
        10734
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 63
    },
    "9340": {
      "fn": "ERC20._approve",
      "offset": [
        10713,
        10734
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9341": {
      "fn": "ERC20._approve",
      "offset": [
        10713,
        10734
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9342": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x24C8"
    },
    "9345": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "9346": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "9348": {
      "fn": "ERC20._approve",
      "offset": [
        10835,
        10867
      ],
      "op": "PUSH32",
      "path": "0",
      "statement": 64,
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "9381": {
      "offset": [
        783,
        15140
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "9382": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "DUP4",
      "path": "14"
    },
    "9383": {
      "fn": "ERC20._approve",
      "offset": [
        10652,
        10653
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9385": {
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9386": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10795
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 65,
      "value": "0x3"
    },
    "9388": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9389": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9390": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9392": {
      "fn": "ERC20._approve",
      "offset": [
        10652,
        10653
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9394": {
      "offset": [
        783,
        15140
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "9395": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "DUP6",
      "path": "14"
    },
    "9396": {
      "fn": "ERC20._approve",
      "offset": [
        10652,
        10653
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9398": {
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9399": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9400": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9401": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "9402": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9404": {
      "fn": "ERC20._approve",
      "offset": [
        10652,
        10653
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9406": {
      "offset": [
        783,
        15140
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "9407": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "9408": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9410": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "9411": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9412": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9413": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9414": {
      "fn": "ERC20._approve",
      "offset": [
        10835,
        10867
      ],
      "op": "LOG3",
      "path": "0"
    },
    "9415": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        10504,
        10874
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9416": {
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9417": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9419": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "9420": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9424": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9426": {
      "op": "SHL"
    },
    "9427": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9428": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9429": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "9431": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "9433": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9434": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "9435": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9436": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x22"
    },
    "9438": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "9440": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9441": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "9442": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9443": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "9476": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "9478": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9479": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "9480": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9481": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "9484": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "9486": {
      "op": "SHL"
    },
    "9487": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "9489": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9490": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "9491": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9492": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x84"
    },
    "9494": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9495": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "REVERT",
      "path": "14"
    },
    "9496": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9497": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9499": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "9500": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9504": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9506": {
      "op": "SHL"
    },
    "9507": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9508": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9509": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "9511": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "9513": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9514": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "9515": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9516": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "9518": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "DUP1",
      "path": "14"
    },
    "9519": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9520": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "9521": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9522": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "9555": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "9557": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9558": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "9559": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9560": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "9565": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9567": {
      "op": "SHL"
    },
    "9568": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "9570": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9571": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "9572": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9573": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x84"
    },
    "9575": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9576": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "REVERT",
      "path": "14"
    },
    "9577": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9578": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "9579": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9584": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9586": {
      "op": "SHL"
    },
    "9587": {
      "op": "SUB"
    },
    "9588": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9589": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "9590": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9591": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "9592": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB50"
    },
    "9595": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "9596": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "9597": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9598": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "9599": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9600": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "9602": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9603": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "9604": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9605": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "SUB",
      "path": "14"
    },
    "9606": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB50"
    },
    "9609": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "9610": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        783,
        15140
      ],
      "op": "JUMP",
      "path": "14"
    },
    "9611": {
      "fn": "Client._argsToBytes",
      "offset": [
        1285,
        1455
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "9612": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9614": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "9615": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9616": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x97A657C9"
    },
    "9621": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "9623": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        15140
      ],
      "op": "SHL",
      "path": "14"
    },
    "9624": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 66,
      "value": "0x20"
    },
    "9626": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "DUP4",
      "path": "7"
    },
    "9627": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "ADD",
      "path": "7"
    },
    "9628": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "9629": {
      "offset": [
        1218,
        1228
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "9630": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x24"
    },
    "9632": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "DUP3",
      "path": "7"
    },
    "9633": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "ADD",
      "path": "7"
    },
    "9634": {
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9635": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x24"
    },
    "9637": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "DUP2",
      "path": "7"
    },
    "9638": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "9639": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "9641": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9642": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "9643": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9644": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9645": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        15140
      ],
      "op": "LT",
      "path": "14"
    },
    "9646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9648": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9650": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9652": {
      "op": "SHL"
    },
    "9653": {
      "op": "SUB"
    },
    "9654": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9655": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        15140
      ],
      "op": "GT",
      "path": "14"
    },
    "9656": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        15140
      ],
      "op": "OR",
      "path": "14"
    },
    "9657": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FA8"
    },
    "9660": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "9661": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9663": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9664": {
      "fn": "Client._argsToBytes",
      "offset": [
        1285,
        1455
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "9665": {
      "fn": "Client._argsToBytes",
      "jump": "o",
      "offset": [
        1285,
        1455
      ],
      "op": "JUMP",
      "path": "7"
    },
    "9666": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        1797,
        1955
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "9667": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        1916,
        1923
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 67,
      "value": "0x0"
    },
    "9669": {
      "offset": [
        783,
        15140
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "9670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9672": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9674": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9676": {
      "op": "SHL"
    },
    "9677": {
      "op": "SUB"
    },
    "9678": {
      "offset": [
        783,
        15140
      ],
      "op": "AND",
      "path": "14"
    },
    "9679": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        1902,
        1912
      ],
      "op": "CALLER",
      "path": "9"
    },
    "9680": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        1902,
        1923
      ],
      "op": "SUB",
      "path": "9"
    },
    "9681": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x25D6"
    },
    "9684": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "9685": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "jump": "o",
      "offset": [
        1797,
        1955
      ],
      "op": "JUMP",
      "path": "9"
    },
    "9686": {
      "offset": [
        783,
        15140
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9687": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9689": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "9690": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9694": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9696": {
      "op": "SHL"
    },
    "9697": {
      "offset": [
        783,
        15140
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9698": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9699": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "9701": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "9703": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9704": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "9705": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9706": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x16"
    },
    "9708": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "9710": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9711": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "9712": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9713": {
      "op": "PUSH22",
      "value": "0x27B7363C9031B0B63630B1363290313C9037BBB732B9"
    },
    "9736": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "9738": {
      "op": "SHL"
    },
    "9739": {
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "9741": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9742": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "ADD",
      "path": "14"
    },
    "9743": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9744": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "9746": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9747": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15140
      ],
      "op": "REVERT",
      "path": "14"
    }
  },
  "sha1": "0a14eaf029f810f7c7ab605a12fee48388b3cd87",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.19;\n\nimport {IRouterClient} from \"@chainlink/contracts/src/v0.8/ccip/interfaces/IRouterClient.sol\";\nimport {OwnerIsCreator} from \"@chainlink/contracts/src/v0.8/shared/access/OwnerIsCreator.sol\";\nimport {Client} from \"@chainlink/contracts/src/v0.8/ccip/libraries/Client.sol\";\nimport {CCIPReceiver} from \"@chainlink/contracts/src/v0.8/ccip/applications/CCIPReceiver.sol\";\n\nimport {LinkTokenInterface} from \"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol\";\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"./utils_node/UtilsMasterNode.sol\";\n\n// Node interface\nimport \"../interfaces/INode.sol\";\n\n/// @title - A simple messenger contract for transferring/receiving tokens and data across chains.\ncontract MasterNode is CCIPReceiver, OwnerIsCreator, ERC20, UtilsMasterNode {\n    // Custom errors to provide more descriptive revert messages.\n    error NotEnoughBalance(uint256 currentBalance, uint256 calculatedFees); // Used to make sure contract has enough balance to cover the fees.\n    error NothingToWithdraw(); // Used when trying to withdraw Ether but there's nothing to withdraw.\n    error FailedToWithdrawEth(address owner, address target, uint256 value); // Used when the withdrawal of Ether fails.\n    error DestinationNodeNotValid(address nodeAddress); // Used when the destination address has not been allowlisted by the contract owner.\n    error SourceChainNotAllowed(uint64 sourceChainSelector); // Used when the source chain has not been allowlisted by the contract owner.\n    error SenderNotAllowed(address sender); // Used when the sender has not been allowlisted by the contract owner.\n    error InvalidReceiverAddress(); // Used when the receiver address is 0.\n\n    LinkTokenInterface private s_linkToken;\n\n    uint64 public immutable MASTER_CONTRACT_CHAIN_ID;\n\n    struct ValidNodes {\n        bool isValidNode;\n        bool isActiveNode;\n        uint64 chainCCIPid;\n        uint256 lastDataFromAave;\n        uint256 totalUsdcSupply;\n        uint256 totalUsdcBorrow;\n        uint256 supplyRate;\n    }\n\n    mapping(address => ValidNodes) public validNodes;\n\n    bool public allowMoreNodes = true;\n    address public lastActiveNode;\n    address public activeNode;\n\n    /// @notice Constructor initializes the contract with the router address.\n    /// @param _router The address of the router contract.\n    /// @param _link The address of the link contract.\n    constructor(\n        address _router,\n        address _link,\n        uint64 _MASTER_CONTRACT_CHAIN_ID\n    ) CCIPReceiver(_router) ERC20(\"WarpYield\", \"aWRP\") {\n        s_linkToken = LinkTokenInterface(_link);\n        MASTER_CONTRACT_CHAIN_ID = _MASTER_CONTRACT_CHAIN_ID;\n    }\n\n    modifier onlyValidNodes(address nodeAddress) {\n        if (!validNodes[nodeAddress].isValidNode) {\n            revert DestinationNodeNotValid(nodeAddress);\n        }\n        _;\n    }\n\n    modifier masterAndNodeInSameChain() {\n        require(\n            validNodes[msg.sender].chainCCIPid == MASTER_CONTRACT_CHAIN_ID,\n            \"Require master and node in same chain\"\n        );\n        _;\n    }\n\n    function stopAddingNodes() external onlyOwner {\n        allowMoreNodes = false;\n    }\n\n    function addValidNode(\n        address nodeAddress,\n        uint64 chainCCIPid,\n        bool isActiveNode\n    ) external onlyOwner {\n        require(allowMoreNodes, \"No more nodes allowed\");\n        validNodes[nodeAddress].isValidNode = true;\n        validNodes[nodeAddress].isActiveNode = isActiveNode;\n        validNodes[nodeAddress].chainCCIPid = chainCCIPid;\n\n        if (isActiveNode) {\n            lastActiveNode = nodeAddress;\n            activeNode = nodeAddress;\n        }\n    }\n\n    /////////////////////////////////////////////////////////////////////////\n    ////////////////////  INCOMING DEPOSIT => MINT aWRP  ///////////////////\n    ////////////////////////  COMMAND == 0  ///////////////////////////////\n    //////////////////////////////////////////////////////////////////////\n\n    function _aWarpTokenMinter(\n        Client.Any2EVMMessage memory _any2EvmMessage\n    ) internal {\n        (, address userAddress, uint256 shares) = abi.decode(\n            _any2EvmMessage.data,\n            (uint8, address, uint256)\n        );\n\n        _mint(userAddress, shares);\n    }\n\n    ///////////////////  DEPOSIT, MASTER AND NODE IN SAME CHAIN  /////////////////\n\n    function aWarpTokenMinterFromSameChain(\n        address userAddress,\n        uint256 shares\n    ) external masterAndNodeInSameChain onlyValidNodes(msg.sender) {\n        _mint(userAddress, shares);\n    }\n\n    /////////////////////////////////////////////////////////////////////////\n    //////////////////////  RESUME PROTOCOL OPERATIONS  ////////////////////\n    ////////////////////////  COMMAND == 1  ///////////////////////////////\n    //////////////////////////////////////////////////////////////////////\n\n    function _resmumeOperations(\n        Client.Any2EVMMessage memory _any2EvmMessage\n    ) internal {\n        validNodes[abi.decode(_any2EvmMessage.sender, (address))]\n            .isActiveNode = true;\n        activeNode = abi.decode(_any2EvmMessage.sender, (address));\n    }\n\n    ///////////  RESUME OPERATIONS, MASTER AND NODE IN SAME CHAIN  //////////\n\n    function _resmumeOperationsFromSameChain()\n        external\n        masterAndNodeInSameChain\n        onlyValidNodes(msg.sender)\n    {\n        validNodes[msg.sender].isActiveNode = true;\n        activeNode = msg.sender;\n    }\n\n    /////////////////////////////////////////////////////////////////////////\n    /////////////////////////  DATA AAVE FROM NODE  ////////////////////////\n    ////////////////////////  COMMAND == 2  ///////////////////////////////\n    //////////////////////////////////////////////////////////////////////\n\n    function _nodeAaveFeed(\n        Client.Any2EVMMessage memory _any2EvmMessage\n    ) internal {\n        (\n            ,\n            uint256 totalUsdcSupply,\n            uint256 totalUsdcBorrow,\n            uint256 supplyRate\n        ) = abi.decode(\n                _any2EvmMessage.data,\n                (uint8, uint256, uint256, uint256)\n            );\n\n        validNodes[abi.decode(_any2EvmMessage.sender, (address))]\n            .lastDataFromAave = block.timestamp;\n        validNodes[abi.decode(_any2EvmMessage.sender, (address))]\n            .totalUsdcSupply = totalUsdcSupply;\n        validNodes[abi.decode(_any2EvmMessage.sender, (address))]\n            .totalUsdcBorrow = totalUsdcBorrow;\n        validNodes[abi.decode(_any2EvmMessage.sender, (address))]\n            .supplyRate = supplyRate;\n    }\n\n    ////////////////  DATA AAVE, MASTER AND NODE IN SAME CHAIN  //////////////\n\n    function nodeAaveFeedFromSameChain(\n        uint256 totalUsdcSupply,\n        uint256 totalUsdcBorrow,\n        uint256 supplyRate\n    ) external masterAndNodeInSameChain onlyValidNodes(msg.sender) {\n        validNodes[msg.sender].lastDataFromAave = block.timestamp;\n        validNodes[msg.sender].totalUsdcSupply = totalUsdcSupply;\n        validNodes[msg.sender].totalUsdcBorrow = totalUsdcBorrow;\n        validNodes[msg.sender].supplyRate = supplyRate;\n    }\n\n    //////////////////////////////////////////////////////////////////////////\n    /////////////////////////////////////////////////////////////////////////\n    ////////////////////////  INCOMING MESAGE HANDLER  /////////////////////\n    /////////////////  THIS FUNC IS CALLED BY CHAINLINK  //////////////////\n    //////////////////////////////////////////////////////////////////////\n    /////////////////////////////////////////////////////////////////////\n\n    function _ccipReceive(\n        Client.Any2EVMMessage memory _any2EvmMessage\n    )\n        internal\n        override\n        onlyValidNodes(abi.decode(_any2EvmMessage.sender, (address)))\n    {\n        require(\n            validNodes[abi.decode(_any2EvmMessage.sender, (address))]\n                .isValidNode,\n            \"Incoming Message not from a valid node\"\n        );\n        uint8 command = _internalCommandRouter(_any2EvmMessage);\n        if (command == 0) {\n            _aWarpTokenMinter(_any2EvmMessage);\n        } else if (command == 1) {\n            _resmumeOperations(_any2EvmMessage);\n        } else if (command == 2) {\n            _nodeAaveFeed(_any2EvmMessage);\n        } else {\n            revert(\"invalid command from Node\");\n        }\n    }\n\n    /////////////////////////////////////////////////////////////////////////\n    ////////////////////////////////////////////////////////////////////////\n    ///////////////////////  OUTGOING MESAGES HANDLER  ////////////////////\n    //////////////////////////////////////////////////////////////////////\n    /////////////////////////////////////////////////////////////////////\n\n    function _sendMessage(\n        uint64 _destinationChainSelector,\n        address _receiver,\n        bytes memory _data\n    ) internal onlyValidNodes(_receiver) returns (bytes32 messageId) {\n        // Create an EVM2AnyMessage struct in memory with necessary information for sending a cross-chain message\n        // address(linkToken) means fees are paid in LINK\n        Client.EVM2AnyMessage memory evm2AnyMessage = _buildCCIPMessage(\n            _receiver,\n            _data,\n            address(s_linkToken)\n        );\n\n        // Initialize a router client instance to interact with cross-chain router\n        IRouterClient router = IRouterClient(this.getRouter());\n\n        // Get the fee required to send the CCIP message\n        uint256 fees = router.getFee(_destinationChainSelector, evm2AnyMessage);\n\n        require(\n            s_linkToken.transferFrom(msg.sender, address(this), fees),\n            \"Not provided Link for fees\"\n        );\n\n        if (fees > s_linkToken.balanceOf(address(this)))\n            revert NotEnoughBalance(s_linkToken.balanceOf(address(this)), fees);\n\n        // approve the Router to transfer LINK tokens on contract's behalf. It will spend the fees in LINK\n        s_linkToken.approve(address(router), fees);\n\n        // Send the message through the router and store the returned message ID\n        messageId = router.ccipSend(_destinationChainSelector, evm2AnyMessage);\n\n        // Return the message ID\n        return messageId;\n    }\n\n    /// @notice Construct a CCIP message.\n    /// @dev This function will create an EVM2AnyMessage struct with all the necessary information for programmable tokens transfer.\n    /// @param _receiver The address of the receiver.\n    /// @param _data The bytes data to be sent.\n    /// @param _feeTokenAddress The address of the token used for fees. Set address(0) for native gas.\n    /// @return Client.EVM2AnyMessage Returns an EVM2AnyMessage struct which contains information for sending a CCIP message.\n    function _buildCCIPMessage(\n        address _receiver,\n        bytes memory _data,\n        address _feeTokenAddress\n    ) private pure returns (Client.EVM2AnyMessage memory) {\n        return\n            Client.EVM2AnyMessage({\n                receiver: abi.encode(_receiver), // ABI-encoded receiver address\n                data: _data, // ABI-encoded string\n                tokenAmounts: new Client.EVMTokenAmount[](0), // The amount and type of token being transferred\n                extraArgs: Client._argsToBytes(\n                    // Additional arguments, setting gas limit\n                    Client.EVMExtraArgsV1({gasLimit: 2_000_000})\n                ),\n                // Set the feeToken to a feeTokenAddress, indicating specific asset will be used for fees\n                feeToken: _feeTokenAddress\n            });\n    }\n\n    /// @notice Fallback function to allow the contract to receive Ether.\n    /// @dev This function has no function body, making it a default function for receiving Ether.\n    /// It is automatically called when Ether is sent to the contract without any data.\n    receive() external payable {}\n\n    /////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////  WARP ASSETS  //////////////////////////\n    ///////////////////////////////////////////////////////////////////////\n\n    function warpAssets(\n        uint64 _destinationCCIPid,\n        address _destinationNodeAddress\n    ) external {\n        uint8 commandWarpAssets = 1;\n\n        bytes memory data = abi.encode(\n            commandWarpAssets,\n            _destinationCCIPid,\n            _destinationNodeAddress\n        );\n        validNodes[activeNode].isActiveNode = false;\n\n        if (validNodes[activeNode].chainCCIPid == MASTER_CONTRACT_CHAIN_ID) {\n            INode(activeNode).warpAssetsFromSameChain(\n                _destinationCCIPid,\n                _destinationNodeAddress\n            );\n        } else {\n            _sendMessage(validNodes[activeNode].chainCCIPid, activeNode, data);\n        }\n\n        activeNode = address(0);\n    }\n\n    /////////////////////////////////////////////////////////////////////////\n    /////////////////////////////  WITHDRAW  ///////////////////////////////\n    ///////////////////////////////////////////////////////////////////////\n\n    function withdraw(uint256 shares) external {\n        require(validNodes[activeNode].isActiveNode, \"Node is not Active\");\n\n        require(shares <= balanceOf(msg.sender), \"Not enought balance\");\n\n        uint8 commandWitdraw = 0;\n\n        bytes memory data = abi.encode(commandWitdraw, msg.sender, shares);\n\n        _burn(msg.sender, shares);\n\n        if (validNodes[activeNode].chainCCIPid == MASTER_CONTRACT_CHAIN_ID) {\n            INode(activeNode).withdrawFromSameChain(msg.sender, shares);\n        } else {\n            _sendMessage(validNodes[activeNode].chainCCIPid, activeNode, data);\n        }\n    }\n\n    /////////////////////////////////////////////////////////////////////////\n    /////////////////////////////   UTILS   ////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////\n\n    function checkApprovedWarp(\n        address _activeNode,\n        address destinationNode\n    ) public view returns (bool) {\n        //require 24 after last warp\n        return\n            validNodes[_activeNode].isActiveNode == true &&\n            validNodes[_activeNode].lastDataFromAave > 0 &&\n            validNodes[destinationNode].lastDataFromAave > 0 &&\n            validNodes[_activeNode].lastDataFromAave + 3600 > block.timestamp &&\n            validNodes[destinationNode].lastDataFromAave + 3600 >\n            block.timestamp &&\n            validNodes[destinationNode].isValidNode == true &&\n            validNodes[destinationNode].isActiveNode == false &&\n            validNodes[_activeNode].supplyRate > 0 &&\n            validNodes[_activeNode].supplyRate <\n            validNodes[destinationNode].supplyRate;\n    }\n\n    // get ChainId from active node or last active node in case vault is warping, only for frontend, no impact in contract\n    function getChainIdFromActiveNode() external view returns (uint64) {\n        if (activeNode == address(0)) {\n            return validNodes[lastActiveNode].chainCCIPid;\n        }\n\n        return validNodes[activeNode].chainCCIPid;\n    }\n}\n",
  "sourceMap": "783:14357:14:-:0;;;;-1:-1:-1;;783:14357:14;-1:-1:-1;;;;;783:14357:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;783:14357:14;;;;;;:::i;:::-;;;;;-1:-1:-1;;;783:14357:14;;;;;-1:-1:-1;;;;;783:14357:14;;;;542:20:4;538:58;;602:21;;291:10:10;594:22:9;783:14357:14;;-1:-1:-1;783:14357:14;;-1:-1:-1;;;;;;783:14357:14;;;291:10:10;783:14357:14;;;;;;;-1:-1:-1;;291:10:10;783:14357:14;;;;;2042:13:0;783:14357:14;;;;;;;;;;;;;;;;-1:-1:-1;783:14357:14;;;;;;;;;;;;;;-1:-1:-1;783:14357:14;;;;;;;;;;;;;;;-1:-1:-1;;;;783:14357:14;;;;;;;;;;;;;;;;;;;;;2065:17:0;783:14357:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;783:14357:14;;;;;;;;;;;2065:17:0;783:14357:14;;;;;;;;;;;;2631:39;783:14357;;;2631:39;783:14357;;2680:52;783:14357;;;;;;;;602:21:4;783:14357:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;783:14357:14;;;;;2065:17:0;783:14357:14;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;783:14357:14;;;;;;;;;2065:17:0;783:14357:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2065:17:0;783:14357:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;783:14357:14;;;;;;;;;;;;;-1:-1:-1;;;;783:14357:14;;;;;;;;;;;;;;;;-1:-1:-1;;;783:14357:14;;;;;;;;;;;;-1:-1:-1;783:14357:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;783:14357:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;783:14357:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:14357:14;;;;;;;;;;;;;;;;;;;;;538:58:4;783:14357:14;;-1:-1:-1;;;571:25:4;;-1:-1:-1;571:25:4;;;783:14357:14;;;571:25:4;783:14357:14;-1:-1:-1;783:14357:14;;;;;;-1:-1:-1;783:14357:14;;;;;-1:-1:-1;783:14357:14;;;;;;;;;-1:-1:-1;;;;;783:14357:14;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;783:14357:14;;;;;;:::o",
  "sourcePath": "contracts/MasterNode.sol",
  "type": "contract"
}