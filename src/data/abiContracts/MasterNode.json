{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_router",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_link",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "_MASTER_CONTRACT_CHAIN_ID",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nodeAddress",
          "type": "address"
        }
      ],
      "name": "DestinationNodeNotValid",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "FailedToWithdrawEth",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidReceiverAddress",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "router",
          "type": "address"
        }
      ],
      "name": "InvalidRouter",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "currentBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "calculatedFees",
          "type": "uint256"
        }
      ],
      "name": "NotEnoughBalance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NothingToWithdraw",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "SenderNotAllowed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "sourceChainSelector",
          "type": "uint64"
        }
      ],
      "name": "SourceChainNotAllowed",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferRequested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MASTER_CONTRACT_CHAIN_ID",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_resmumeOperationsFromSameChain",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "aWarpTokenMinterFromSameChain",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "activeNode",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nodeAddress",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "chainCCIPid",
          "type": "uint64"
        },
        {
          "internalType": "bool",
          "name": "isActiveNode",
          "type": "bool"
        }
      ],
      "name": "addValidNode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allowMoreNodes",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "messageId",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "sourceChainSelector",
              "type": "uint64"
            },
            {
              "internalType": "bytes",
              "name": "sender",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Client.EVMTokenAmount[]",
              "name": "destTokenAmounts",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Client.Any2EVMMessage",
          "name": "message",
          "type": "tuple"
        }
      ],
      "name": "ccipReceive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_activeNode",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "destinationNode",
          "type": "address"
        }
      ],
      "name": "checkApprovedWarp",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getChainIdFromActiveNode",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "destinationCCIPid",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "s_linkTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "routerAddress",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "getLinkFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRouter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "totalUsdcSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalUsdcBorrow",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "supplyRate",
          "type": "uint256"
        }
      ],
      "name": "nodeAaveFeedFromSameChain",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stopAddingNodes",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "validNodes",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isValidNode",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isActiveNode",
          "type": "bool"
        },
        {
          "internalType": "uint64",
          "name": "chainCCIPid",
          "type": "uint64"
        },
        {
          "internalType": "uint256",
          "name": "lastDataFromAave",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalUsdcSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalUsdcBorrow",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "supplyRate",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "_destinationCCIPid",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "_destinationNodeAddress",
          "type": "address"
        }
      ],
      "name": "warpAssets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/incae/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.3/contracts/token/ERC20/ERC20.sol",
    "1": "C:/Users/incae/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.3/contracts/token/ERC20/IERC20.sol",
    "10": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/shared/access/OwnerIsCreator.sol",
    "11": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/shared/interfaces/IOwnable.sol",
    "12": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol",
    "17": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/vendor/openzeppelin-solidity/v4.8.3/contracts/utils/introspection/IERC165.sol",
    "18": "contracts/MasterNode.sol",
    "2": "C:/Users/incae/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.3/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "21": "contracts/utils_node/UtilsMasterNode.sol",
    "24": "interfaces/INode.sol",
    "3": "C:/Users/incae/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.3/contracts/utils/Context.sol",
    "4": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/ccip/applications/CCIPReceiver.sol",
    "5": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol",
    "6": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/ccip/interfaces/IRouterClient.sol",
    "7": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/ccip/libraries/Client.sol",
    "8": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/shared/access/ConfirmedOwner.sol",
    "9": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol"
  },
  "ast": {
    "absolutePath": "contracts/MasterNode.sol",
    "exportedSymbols": {
      "CCIPReceiver": [
        3060
      ],
      "Client": [
        3167
      ],
      "Context": [
        5036
      ],
      "ERC20": [
        2940
      ],
      "IERC20": [
        4989
      ],
      "IERC20Metadata": [
        5014
      ],
      "INode": [
        3378
      ],
      "IRouterClient": [
        3112
      ],
      "LinkTokenInterface": [
        3278
      ],
      "MasterNode": [
        858
      ],
      "OwnerIsCreator": [
        3183
      ],
      "UtilsMasterNode": [
        3368
      ]
    },
    "id": 859,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:18"
      },
      {
        "absolutePath": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/ccip/interfaces/IRouterClient.sol",
        "file": "@chainlink/contracts/src/v0.8/ccip/interfaces/IRouterClient.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 859,
        "sourceUnit": 3113,
        "src": "57:94:18",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2,
              "name": "IRouterClient",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3112,
              "src": "65:13:18",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/shared/access/OwnerIsCreator.sol",
        "file": "@chainlink/contracts/src/v0.8/shared/access/OwnerIsCreator.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 859,
        "sourceUnit": 3184,
        "src": "152:94:18",
        "symbolAliases": [
          {
            "foreign": {
              "id": 4,
              "name": "OwnerIsCreator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3183,
              "src": "160:14:18",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/ccip/libraries/Client.sol",
        "file": "@chainlink/contracts/src/v0.8/ccip/libraries/Client.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 859,
        "sourceUnit": 3168,
        "src": "247:79:18",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6,
              "name": "Client",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3167,
              "src": "255:6:18",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/ccip/applications/CCIPReceiver.sol",
        "file": "@chainlink/contracts/src/v0.8/ccip/applications/CCIPReceiver.sol",
        "id": 9,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 859,
        "sourceUnit": 3061,
        "src": "327:94:18",
        "symbolAliases": [
          {
            "foreign": {
              "id": 8,
              "name": "CCIPReceiver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3060,
              "src": "335:12:18",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol",
        "file": "@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol",
        "id": 11,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 859,
        "sourceUnit": 3279,
        "src": "423:106:18",
        "symbolAliases": [
          {
            "foreign": {
              "id": 10,
              "name": "LinkTokenInterface",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3278,
              "src": "431:18:18",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/incae/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.3/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 12,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 859,
        "sourceUnit": 2941,
        "src": "531:55:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/utils_node/UtilsMasterNode.sol",
        "file": "./utils_node/UtilsMasterNode.sol",
        "id": 13,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 859,
        "sourceUnit": 3369,
        "src": "587:42:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/INode.sol",
        "file": "../interfaces/INode.sol",
        "id": 14,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 859,
        "sourceUnit": 3379,
        "src": "649:33:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 16,
              "name": "CCIPReceiver",
              "nameLocations": [
                "806:12:18"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3060,
              "src": "806:12:18"
            },
            "id": 17,
            "nodeType": "InheritanceSpecifier",
            "src": "806:12:18"
          },
          {
            "baseName": {
              "id": 18,
              "name": "OwnerIsCreator",
              "nameLocations": [
                "820:14:18"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3183,
              "src": "820:14:18"
            },
            "id": 19,
            "nodeType": "InheritanceSpecifier",
            "src": "820:14:18"
          },
          {
            "baseName": {
              "id": 20,
              "name": "ERC20",
              "nameLocations": [
                "836:5:18"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2940,
              "src": "836:5:18"
            },
            "id": 21,
            "nodeType": "InheritanceSpecifier",
            "src": "836:5:18"
          },
          {
            "baseName": {
              "id": 22,
              "name": "UtilsMasterNode",
              "nameLocations": [
                "843:15:18"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3368,
              "src": "843:15:18"
            },
            "id": 23,
            "nodeType": "InheritanceSpecifier",
            "src": "843:15:18"
          }
        ],
        "canonicalName": "MasterNode",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 15,
          "nodeType": "StructuredDocumentation",
          "src": "684:99:18",
          "text": "@title - A simple messenger contract for transferring/receiving tokens and data across chains."
        },
        "fullyImplemented": true,
        "id": 858,
        "linearizedBaseContracts": [
          858,
          3368,
          2940,
          5014,
          4989,
          5036,
          3183,
          5082,
          6172,
          6188,
          3060,
          5061,
          5049
        ],
        "name": "MasterNode",
        "nameLocation": "792:10:18",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "errorSelector": "8f0f4206",
            "id": 29,
            "name": "NotEnoughBalance",
            "nameLocation": "937:16:18",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25,
                  "mutability": "mutable",
                  "name": "currentBalance",
                  "nameLocation": "962:14:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "954:22:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "954:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27,
                  "mutability": "mutable",
                  "name": "calculatedFees",
                  "nameLocation": "986:14:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "978:22:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "978:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "953:48:18"
            },
            "src": "931:71:18"
          },
          {
            "errorSelector": "d0d04f60",
            "id": 31,
            "name": "NothingToWithdraw",
            "nameLocation": "1081:17:18",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1098:2:18"
            },
            "src": "1075:26:18"
          },
          {
            "errorSelector": "9d11f563",
            "id": 39,
            "name": "FailedToWithdrawEth",
            "nameLocation": "1183:19:18",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1211:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "1203:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1203:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "1226:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "1218:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1218:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1242:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "1234:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1234:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1202:46:18"
            },
            "src": "1177:72:18"
          },
          {
            "errorSelector": "d53fef3e",
            "id": 43,
            "name": "DestinationNodeNotValid",
            "nameLocation": "1304:23:18",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41,
                  "mutability": "mutable",
                  "name": "nodeAddress",
                  "nameLocation": "1336:11:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "1328:19:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1328:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1327:21:18"
            },
            "src": "1298:51:18"
          },
          {
            "errorSelector": "213c2678",
            "id": 47,
            "name": "SourceChainNotAllowed",
            "nameLocation": "1445:21:18",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45,
                  "mutability": "mutable",
                  "name": "sourceChainSelector",
                  "nameLocation": "1474:19:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "1467:26:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1467:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1466:28:18"
            },
            "src": "1439:56:18"
          },
          {
            "errorSelector": "d0d25976",
            "id": 51,
            "name": "SenderNotAllowed",
            "nameLocation": "1584:16:18",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1609:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "1601:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1601:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1600:16:18"
            },
            "src": "1578:39:18"
          },
          {
            "errorSelector": "a05ff47e",
            "id": 53,
            "name": "InvalidReceiverAddress",
            "nameLocation": "1700:22:18",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1722:2:18"
            },
            "src": "1694:31:18"
          },
          {
            "constant": false,
            "id": 56,
            "mutability": "mutable",
            "name": "s_linkToken",
            "nameLocation": "1798:11:18",
            "nodeType": "VariableDeclaration",
            "scope": 858,
            "src": "1771:38:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LinkTokenInterface_$3278",
              "typeString": "contract LinkTokenInterface"
            },
            "typeName": {
              "id": 55,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 54,
                "name": "LinkTokenInterface",
                "nameLocations": [
                  "1771:18:18"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3278,
                "src": "1771:18:18"
              },
              "referencedDeclaration": 3278,
              "src": "1771:18:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LinkTokenInterface_$3278",
                "typeString": "contract LinkTokenInterface"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "8cf19d19",
            "id": 58,
            "mutability": "immutable",
            "name": "MASTER_CONTRACT_CHAIN_ID",
            "nameLocation": "1840:24:18",
            "nodeType": "VariableDeclaration",
            "scope": 858,
            "src": "1816:48:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 57,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "1816:6:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "MasterNode.ValidNodes",
            "id": 73,
            "members": [
              {
                "constant": false,
                "id": 60,
                "mutability": "mutable",
                "name": "isValidNode",
                "nameLocation": "1904:11:18",
                "nodeType": "VariableDeclaration",
                "scope": 73,
                "src": "1899:16:18",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 59,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1899:4:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 62,
                "mutability": "mutable",
                "name": "isActiveNode",
                "nameLocation": "1930:12:18",
                "nodeType": "VariableDeclaration",
                "scope": 73,
                "src": "1925:17:18",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 61,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1925:4:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 64,
                "mutability": "mutable",
                "name": "chainCCIPid",
                "nameLocation": "1959:11:18",
                "nodeType": "VariableDeclaration",
                "scope": 73,
                "src": "1952:18:18",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 63,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "1952:6:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 66,
                "mutability": "mutable",
                "name": "lastDataFromAave",
                "nameLocation": "1988:16:18",
                "nodeType": "VariableDeclaration",
                "scope": 73,
                "src": "1980:24:18",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 65,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1980:7:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 68,
                "mutability": "mutable",
                "name": "totalUsdcSupply",
                "nameLocation": "2022:15:18",
                "nodeType": "VariableDeclaration",
                "scope": 73,
                "src": "2014:23:18",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 67,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2014:7:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 70,
                "mutability": "mutable",
                "name": "totalUsdcBorrow",
                "nameLocation": "2055:15:18",
                "nodeType": "VariableDeclaration",
                "scope": 73,
                "src": "2047:23:18",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 69,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2047:7:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 72,
                "mutability": "mutable",
                "name": "supplyRate",
                "nameLocation": "2088:10:18",
                "nodeType": "VariableDeclaration",
                "scope": 73,
                "src": "2080:18:18",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 71,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2080:7:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ValidNodes",
            "nameLocation": "1878:10:18",
            "nodeType": "StructDefinition",
            "scope": 858,
            "src": "1871:234:18",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b2d92955",
            "id": 78,
            "mutability": "mutable",
            "name": "validNodes",
            "nameLocation": "2149:10:18",
            "nodeType": "VariableDeclaration",
            "scope": 858,
            "src": "2111:48:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
              "typeString": "mapping(address => struct MasterNode.ValidNodes)"
            },
            "typeName": {
              "id": 77,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 74,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2119:7:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2111:30:18",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                "typeString": "mapping(address => struct MasterNode.ValidNodes)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 76,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 75,
                  "name": "ValidNodes",
                  "nameLocations": [
                    "2130:10:18"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 73,
                  "src": "2130:10:18"
                },
                "referencedDeclaration": 73,
                "src": "2130:10:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ValidNodes_$73_storage_ptr",
                  "typeString": "struct MasterNode.ValidNodes"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "654e8e0c",
            "id": 81,
            "mutability": "mutable",
            "name": "allowMoreNodes",
            "nameLocation": "2178:14:18",
            "nodeType": "VariableDeclaration",
            "scope": 858,
            "src": "2166:33:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 79,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2166:4:18",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "74727565",
              "id": 80,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2195:4:18",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "true"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6c1dc077",
            "id": 83,
            "mutability": "mutable",
            "name": "activeNode",
            "nameLocation": "2220:10:18",
            "nodeType": "VariableDeclaration",
            "scope": 858,
            "src": "2205:25:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 82,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2205:7:18",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 110,
              "nodeType": "Block",
              "src": "2586:118:18",
              "statements": [
                {
                  "expression": {
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 100,
                      "name": "s_linkToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "2596:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LinkTokenInterface_$3278",
                        "typeString": "contract LinkTokenInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 102,
                          "name": "_link",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88,
                          "src": "2629:5:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 101,
                        "name": "LinkTokenInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3278,
                        "src": "2610:18:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LinkTokenInterface_$3278_$",
                          "typeString": "type(contract LinkTokenInterface)"
                        }
                      },
                      "id": 103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2610:25:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LinkTokenInterface_$3278",
                        "typeString": "contract LinkTokenInterface"
                      }
                    },
                    "src": "2596:39:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LinkTokenInterface_$3278",
                      "typeString": "contract LinkTokenInterface"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "2596:39:18"
                },
                {
                  "expression": {
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 106,
                      "name": "MASTER_CONTRACT_CHAIN_ID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58,
                      "src": "2645:24:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 107,
                      "name": "_MASTER_CONTRACT_CHAIN_ID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90,
                      "src": "2672:25:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "2645:52:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 109,
                  "nodeType": "ExpressionStatement",
                  "src": "2645:52:18"
                }
              ]
            },
            "documentation": {
              "id": 84,
              "nodeType": "StructuredDocumentation",
              "src": "2237:187:18",
              "text": "@notice Constructor initializes the contract with the router address.\n @param _router The address of the router contract.\n @param _link The address of the link contract."
            },
            "id": 111,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 93,
                    "name": "_router",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 86,
                    "src": "2550:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 94,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 92,
                  "name": "CCIPReceiver",
                  "nameLocations": [
                    "2537:12:18"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3060,
                  "src": "2537:12:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "2537:21:18"
              },
              {
                "arguments": [
                  {
                    "hexValue": "576172705969656c64",
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2565:11:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6e5bd3a7f1ed96a77cd5f67b9871f9bbaf8246a034059514102ca756c979a0ad",
                      "typeString": "literal_string \"WarpYield\""
                    },
                    "value": "WarpYield"
                  },
                  {
                    "hexValue": "61575250",
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2578:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_5c2aa465d21b20af1889df7f97d25d68ec9b8540df778db221765393d1ff7929",
                      "typeString": "literal_string \"aWRP\""
                    },
                    "value": "aWRP"
                  }
                ],
                "id": 98,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 95,
                  "name": "ERC20",
                  "nameLocations": [
                    "2559:5:18"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2940,
                  "src": "2559:5:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "2559:26:18"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86,
                  "mutability": "mutable",
                  "name": "_router",
                  "nameLocation": "2458:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 111,
                  "src": "2450:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2450:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88,
                  "mutability": "mutable",
                  "name": "_link",
                  "nameLocation": "2483:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 111,
                  "src": "2475:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2475:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 90,
                  "mutability": "mutable",
                  "name": "_MASTER_CONTRACT_CHAIN_ID",
                  "nameLocation": "2505:25:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 111,
                  "src": "2498:32:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2498:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2440:96:18"
            },
            "returnParameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2586:0:18"
            },
            "scope": 858,
            "src": "2429:275:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 127,
              "nodeType": "Block",
              "src": "2755:137:18",
              "statements": [
                {
                  "condition": {
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2769:36:18",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 115,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "2770:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 117,
                        "indexExpression": {
                          "id": 116,
                          "name": "nodeAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 113,
                          "src": "2781:11:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2770:23:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 118,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2794:11:18",
                      "memberName": "isValidNode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60,
                      "src": "2770:35:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 125,
                  "nodeType": "IfStatement",
                  "src": "2765:110:18",
                  "trueBody": {
                    "id": 124,
                    "nodeType": "Block",
                    "src": "2807:68:18",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 121,
                              "name": "nodeAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 113,
                              "src": "2852:11:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 120,
                            "name": "DestinationNodeNotValid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "2828:23:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                              "typeString": "function (address) pure"
                            }
                          },
                          "id": 122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2828:36:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 123,
                        "nodeType": "RevertStatement",
                        "src": "2821:43:18"
                      }
                    ]
                  }
                },
                {
                  "id": 126,
                  "nodeType": "PlaceholderStatement",
                  "src": "2884:1:18"
                }
              ]
            },
            "id": 128,
            "name": "onlyValidNodes",
            "nameLocation": "2719:14:18",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 113,
                  "mutability": "mutable",
                  "name": "nodeAddress",
                  "nameLocation": "2742:11:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 128,
                  "src": "2734:19:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2734:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2733:21:18"
            },
            "src": "2710:182:18",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 142,
              "nodeType": "Block",
              "src": "2934:174:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 131,
                              "name": "validNodes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78,
                              "src": "2965:10:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                                "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                              }
                            },
                            "id": 134,
                            "indexExpression": {
                              "expression": {
                                "id": 132,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2976:3:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 133,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2980:6:18",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2976:10:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2965:22:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                              "typeString": "struct MasterNode.ValidNodes storage ref"
                            }
                          },
                          "id": 135,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2988:11:18",
                          "memberName": "chainCCIPid",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 64,
                          "src": "2965:34:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 136,
                          "name": "MASTER_CONTRACT_CHAIN_ID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58,
                          "src": "3003:24:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "2965:62:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52657175697265206d617374657220616e64206e6f646520696e2073616d6520636861696e",
                        "id": 138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3041:39:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5f03148fc98866fc88ba0b74aa8942ff4bdb75490412a503e1b1f86ebc254af6",
                          "typeString": "literal_string \"Require master and node in same chain\""
                        },
                        "value": "Require master and node in same chain"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5f03148fc98866fc88ba0b74aa8942ff4bdb75490412a503e1b1f86ebc254af6",
                          "typeString": "literal_string \"Require master and node in same chain\""
                        }
                      ],
                      "id": 130,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2944:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2944:146:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 140,
                  "nodeType": "ExpressionStatement",
                  "src": "2944:146:18"
                },
                {
                  "id": 141,
                  "nodeType": "PlaceholderStatement",
                  "src": "3100:1:18"
                }
              ]
            },
            "id": 143,
            "name": "masterAndNodeInSameChain",
            "nameLocation": "2907:24:18",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2931:2:18"
            },
            "src": "2898:210:18",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 152,
              "nodeType": "Block",
              "src": "3160:39:18",
              "statements": [
                {
                  "expression": {
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 148,
                      "name": "allowMoreNodes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81,
                      "src": "3170:14:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3187:5:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3170:22:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 151,
                  "nodeType": "ExpressionStatement",
                  "src": "3170:22:18"
                }
              ]
            },
            "functionSelector": "6c98d513",
            "id": 153,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 146,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 145,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3150:9:18"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6171,
                  "src": "3150:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "3150:9:18"
              }
            ],
            "name": "stopAddingNodes",
            "nameLocation": "3123:15:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3138:2:18"
            },
            "returnParameters": {
              "id": 147,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3160:0:18"
            },
            "scope": 858,
            "src": "3114:85:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 197,
              "nodeType": "Block",
              "src": "3336:314:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 165,
                        "name": "allowMoreNodes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "3354:14:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f206d6f7265206e6f64657320616c6c6f776564",
                        "id": 166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3370:23:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_14986cb525690d9998a9e460f0aca8b42b9aa5faddc27699fe8d3c65ad4113cd",
                          "typeString": "literal_string \"No more nodes allowed\""
                        },
                        "value": "No more nodes allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_14986cb525690d9998a9e460f0aca8b42b9aa5faddc27699fe8d3c65ad4113cd",
                          "typeString": "literal_string \"No more nodes allowed\""
                        }
                      ],
                      "id": 164,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3346:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3346:48:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 168,
                  "nodeType": "ExpressionStatement",
                  "src": "3346:48:18"
                },
                {
                  "expression": {
                    "id": 174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 169,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "3404:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 171,
                        "indexExpression": {
                          "id": 170,
                          "name": "nodeAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 155,
                          "src": "3415:11:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3404:23:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 172,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3428:11:18",
                      "memberName": "isValidNode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60,
                      "src": "3404:35:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3442:4:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3404:42:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 175,
                  "nodeType": "ExpressionStatement",
                  "src": "3404:42:18"
                },
                {
                  "expression": {
                    "id": 181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 176,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "3456:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 178,
                        "indexExpression": {
                          "id": 177,
                          "name": "nodeAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 155,
                          "src": "3467:11:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3456:23:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 179,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3480:12:18",
                      "memberName": "isActiveNode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 62,
                      "src": "3456:36:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 180,
                      "name": "isActiveNode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 159,
                      "src": "3495:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3456:51:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 182,
                  "nodeType": "ExpressionStatement",
                  "src": "3456:51:18"
                },
                {
                  "expression": {
                    "id": 188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 183,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "3517:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 185,
                        "indexExpression": {
                          "id": 184,
                          "name": "nodeAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 155,
                          "src": "3528:11:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3517:23:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 186,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3541:11:18",
                      "memberName": "chainCCIPid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64,
                      "src": "3517:35:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 187,
                      "name": "chainCCIPid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 157,
                      "src": "3555:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "3517:49:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 189,
                  "nodeType": "ExpressionStatement",
                  "src": "3517:49:18"
                },
                {
                  "condition": {
                    "id": 190,
                    "name": "isActiveNode",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 159,
                    "src": "3581:12:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 196,
                  "nodeType": "IfStatement",
                  "src": "3577:67:18",
                  "trueBody": {
                    "id": 195,
                    "nodeType": "Block",
                    "src": "3595:49:18",
                    "statements": [
                      {
                        "expression": {
                          "id": 193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 191,
                            "name": "activeNode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83,
                            "src": "3609:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 192,
                            "name": "nodeAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 155,
                            "src": "3622:11:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3609:24:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 194,
                        "nodeType": "ExpressionStatement",
                        "src": "3609:24:18"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "10a78df8",
            "id": 198,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 162,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 161,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3326:9:18"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6171,
                  "src": "3326:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "3326:9:18"
              }
            ],
            "name": "addValidNode",
            "nameLocation": "3214:12:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 155,
                  "mutability": "mutable",
                  "name": "nodeAddress",
                  "nameLocation": "3244:11:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 198,
                  "src": "3236:19:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 154,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3236:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 157,
                  "mutability": "mutable",
                  "name": "chainCCIPid",
                  "nameLocation": "3272:11:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 198,
                  "src": "3265:18:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 156,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "3265:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 159,
                  "mutability": "mutable",
                  "name": "isActiveNode",
                  "nameLocation": "3298:12:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 198,
                  "src": "3293:17:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 158,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3293:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3226:90:18"
            },
            "returnParameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3336:0:18"
            },
            "scope": 858,
            "src": "3205:445:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 226,
              "nodeType": "Block",
              "src": "4059:189:18",
              "statements": [
                {
                  "assignments": [
                    null,
                    205,
                    207
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 205,
                      "mutability": "mutable",
                      "name": "userAddress",
                      "nameLocation": "4080:11:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 226,
                      "src": "4072:19:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 204,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4072:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 207,
                      "mutability": "mutable",
                      "name": "shares",
                      "nameLocation": "4101:6:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 226,
                      "src": "4093:14:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 206,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4093:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 220,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 210,
                          "name": "_any2EvmMessage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 201,
                          "src": "4135:15:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Any2EVMMessage_$3132_memory_ptr",
                            "typeString": "struct Client.Any2EVMMessage memory"
                          }
                        },
                        "id": 211,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4151:4:18",
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3127,
                        "src": "4135:20:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 213,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4170:5:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": {
                              "id": 212,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "4170:5:18",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 215,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4177:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 214,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4177:7:18",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 217,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4186:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 216,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4186:7:18",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 218,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "4169:25:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint8_$_$_t_type$_t_address_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(uint8),type(address),type(uint256))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint8_$_$_t_type$_t_address_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(uint8),type(address),type(uint256))"
                        }
                      ],
                      "expression": {
                        "id": 208,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "4111:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "4115:6:18",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "4111:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4111:93:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_address_payable_$_t_uint256_$",
                      "typeString": "tuple(uint8,address payable,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4069:135:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 222,
                        "name": "userAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 205,
                        "src": "4221:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 223,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 207,
                        "src": "4234:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 221,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2757,
                      "src": "4215:5:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4215:26:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 225,
                  "nodeType": "ExpressionStatement",
                  "src": "4215:26:18"
                }
              ]
            },
            "id": 227,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_aWarpTokenMinter",
            "nameLocation": "3972:17:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 202,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 201,
                  "mutability": "mutable",
                  "name": "_any2EvmMessage",
                  "nameLocation": "4028:15:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 227,
                  "src": "3999:44:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Any2EVMMessage_$3132_memory_ptr",
                    "typeString": "struct Client.Any2EVMMessage"
                  },
                  "typeName": {
                    "id": 200,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 199,
                      "name": "Client.Any2EVMMessage",
                      "nameLocations": [
                        "3999:6:18",
                        "4006:14:18"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3132,
                      "src": "3999:21:18"
                    },
                    "referencedDeclaration": 3132,
                    "src": "3999:21:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Any2EVMMessage_$3132_storage_ptr",
                      "typeString": "struct Client.Any2EVMMessage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3989:60:18"
            },
            "returnParameters": {
              "id": 203,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4059:0:18"
            },
            "scope": 858,
            "src": "3963:285:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 245,
              "nodeType": "Block",
              "src": "4497:43:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 241,
                        "name": "userAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 229,
                        "src": "4513:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 242,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 231,
                        "src": "4526:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 240,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2757,
                      "src": "4507:5:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4507:26:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 244,
                  "nodeType": "ExpressionStatement",
                  "src": "4507:26:18"
                }
              ]
            },
            "functionSelector": "04783ea4",
            "id": 246,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 234,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 233,
                  "name": "masterAndNodeInSameChain",
                  "nameLocations": [
                    "4445:24:18"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 143,
                  "src": "4445:24:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "4445:24:18"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 236,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "4485:3:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4489:6:18",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "4485:10:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 238,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 235,
                  "name": "onlyValidNodes",
                  "nameLocations": [
                    "4470:14:18"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 128,
                  "src": "4470:14:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "4470:26:18"
              }
            ],
            "name": "aWarpTokenMinterFromSameChain",
            "nameLocation": "4347:29:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 232,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 229,
                  "mutability": "mutable",
                  "name": "userAddress",
                  "nameLocation": "4394:11:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 246,
                  "src": "4386:19:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 228,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4386:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 231,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "4423:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 246,
                  "src": "4415:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 230,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4415:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4376:59:18"
            },
            "returnParameters": {
              "id": 239,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4497:0:18"
            },
            "scope": 858,
            "src": "4338:202:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 277,
              "nodeType": "Block",
              "src": "4950:175:18",
              "statements": [
                {
                  "expression": {
                    "id": 264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 252,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "4960:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 261,
                        "indexExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 255,
                                "name": "_any2EvmMessage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 249,
                                "src": "4982:15:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Any2EVMMessage_$3132_memory_ptr",
                                  "typeString": "struct Client.Any2EVMMessage memory"
                                }
                              },
                              "id": 256,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4998:6:18",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3125,
                              "src": "4982:22:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 258,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5007:7:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 257,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5007:7:18",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 259,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5006:9:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            ],
                            "expression": {
                              "id": 253,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "4971:3:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 254,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "4975:6:18",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "4971:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4971:45:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4960:57:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 262,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "5031:12:18",
                      "memberName": "isActiveNode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 62,
                      "src": "4960:83:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5046:4:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4960:90:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 265,
                  "nodeType": "ExpressionStatement",
                  "src": "4960:90:18"
                },
                {
                  "expression": {
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 266,
                      "name": "activeNode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "5060:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 269,
                            "name": "_any2EvmMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 249,
                            "src": "5084:15:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Any2EVMMessage_$3132_memory_ptr",
                              "typeString": "struct Client.Any2EVMMessage memory"
                            }
                          },
                          "id": 270,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5100:6:18",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3125,
                          "src": "5084:22:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "components": [
                            {
                              "id": 272,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5109:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 271,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5109:7:18",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "id": 273,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "5108:9:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          }
                        ],
                        "expression": {
                          "id": 267,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "5073:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "5077:6:18",
                        "memberName": "decode",
                        "nodeType": "MemberAccess",
                        "src": "5073:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5073:45:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "5060:58:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 276,
                  "nodeType": "ExpressionStatement",
                  "src": "5060:58:18"
                }
              ]
            },
            "id": 278,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_resmumeOperations",
            "nameLocation": "4862:18:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 249,
                  "mutability": "mutable",
                  "name": "_any2EvmMessage",
                  "nameLocation": "4919:15:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 278,
                  "src": "4890:44:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Any2EVMMessage_$3132_memory_ptr",
                    "typeString": "struct Client.Any2EVMMessage"
                  },
                  "typeName": {
                    "id": 248,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 247,
                      "name": "Client.Any2EVMMessage",
                      "nameLocations": [
                        "4890:6:18",
                        "4897:14:18"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3132,
                      "src": "4890:21:18"
                    },
                    "referencedDeclaration": 3132,
                    "src": "4890:21:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Any2EVMMessage_$3132_storage_ptr",
                      "typeString": "struct Client.Any2EVMMessage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4880:60:18"
            },
            "returnParameters": {
              "id": 251,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4950:0:18"
            },
            "scope": 858,
            "src": "4853:272:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 300,
              "nodeType": "Block",
              "src": "5342:92:18",
              "statements": [
                {
                  "expression": {
                    "id": 293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 287,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "5352:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 290,
                        "indexExpression": {
                          "expression": {
                            "id": 288,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5363:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5367:6:18",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5363:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5352:22:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 291,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "5375:12:18",
                      "memberName": "isActiveNode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 62,
                      "src": "5352:35:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 292,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5390:4:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5352:42:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 294,
                  "nodeType": "ExpressionStatement",
                  "src": "5352:42:18"
                },
                {
                  "expression": {
                    "id": 298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 295,
                      "name": "activeNode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "5404:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 296,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "5417:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5421:6:18",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5417:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5404:23:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 299,
                  "nodeType": "ExpressionStatement",
                  "src": "5404:23:18"
                }
              ]
            },
            "functionSelector": "995714ae",
            "id": 301,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 281,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 280,
                  "name": "masterAndNodeInSameChain",
                  "nameLocations": [
                    "5278:24:18"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 143,
                  "src": "5278:24:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "5278:24:18"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 283,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "5326:3:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "5330:6:18",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "5326:10:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 285,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 282,
                  "name": "onlyValidNodes",
                  "nameLocations": [
                    "5311:14:18"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 128,
                  "src": "5311:14:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "5311:26:18"
              }
            ],
            "name": "_resmumeOperationsFromSameChain",
            "nameLocation": "5219:31:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 279,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5250:2:18"
            },
            "returnParameters": {
              "id": 286,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5342:0:18"
            },
            "scope": 858,
            "src": "5210:224:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 385,
              "nodeType": "Block",
              "src": "5839:712:18",
              "statements": [
                {
                  "assignments": [
                    null,
                    308,
                    310,
                    312
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 308,
                      "mutability": "mutable",
                      "name": "totalUsdcSupply",
                      "nameLocation": "5885:15:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 385,
                      "src": "5877:23:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 307,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5877:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 310,
                      "mutability": "mutable",
                      "name": "totalUsdcBorrow",
                      "nameLocation": "5922:15:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 385,
                      "src": "5914:23:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 309,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5914:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 312,
                      "mutability": "mutable",
                      "name": "supplyRate",
                      "nameLocation": "5959:10:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 385,
                      "src": "5951:18:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 311,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5951:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 327,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 315,
                          "name": "_any2EvmMessage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 304,
                          "src": "6010:15:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Any2EVMMessage_$3132_memory_ptr",
                            "typeString": "struct Client.Any2EVMMessage memory"
                          }
                        },
                        "id": 316,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6026:4:18",
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3127,
                        "src": "6010:20:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 318,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6049:5:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": {
                              "id": 317,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "6049:5:18",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 320,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6056:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 319,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6056:7:18",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 322,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6065:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 321,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6065:7:18",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 324,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6074:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 323,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6074:7:18",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 325,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "6048:34:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint8_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(uint8),type(uint256),type(uint256),type(uint256))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint8_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(uint8),type(uint256),type(uint256),type(uint256))"
                        }
                      ],
                      "expression": {
                        "id": 313,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "5982:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 314,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "5986:6:18",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "5982:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5982:114:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint8,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5849:247:18"
                },
                {
                  "expression": {
                    "id": 341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 328,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "6107:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 337,
                        "indexExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 331,
                                "name": "_any2EvmMessage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 304,
                                "src": "6129:15:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Any2EVMMessage_$3132_memory_ptr",
                                  "typeString": "struct Client.Any2EVMMessage memory"
                                }
                              },
                              "id": 332,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6145:6:18",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3125,
                              "src": "6129:22:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 334,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6154:7:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 333,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6154:7:18",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 335,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "6153:9:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            ],
                            "expression": {
                              "id": 329,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "6118:3:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 330,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "6122:6:18",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "6118:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6118:45:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6107:57:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 338,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6178:16:18",
                      "memberName": "lastDataFromAave",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 66,
                      "src": "6107:87:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 339,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "6197:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6203:9:18",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "6197:15:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6107:105:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 342,
                  "nodeType": "ExpressionStatement",
                  "src": "6107:105:18"
                },
                {
                  "expression": {
                    "id": 355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 343,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "6222:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 352,
                        "indexExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 346,
                                "name": "_any2EvmMessage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 304,
                                "src": "6244:15:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Any2EVMMessage_$3132_memory_ptr",
                                  "typeString": "struct Client.Any2EVMMessage memory"
                                }
                              },
                              "id": 347,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6260:6:18",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3125,
                              "src": "6244:22:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 349,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6269:7:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 348,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6269:7:18",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 350,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "6268:9:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            ],
                            "expression": {
                              "id": 344,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "6233:3:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 345,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "6237:6:18",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "6233:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6233:45:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6222:57:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 353,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6293:15:18",
                      "memberName": "totalUsdcSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68,
                      "src": "6222:86:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 354,
                      "name": "totalUsdcSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 308,
                      "src": "6311:15:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6222:104:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 356,
                  "nodeType": "ExpressionStatement",
                  "src": "6222:104:18"
                },
                {
                  "expression": {
                    "id": 369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 357,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "6336:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 366,
                        "indexExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 360,
                                "name": "_any2EvmMessage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 304,
                                "src": "6358:15:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Any2EVMMessage_$3132_memory_ptr",
                                  "typeString": "struct Client.Any2EVMMessage memory"
                                }
                              },
                              "id": 361,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6374:6:18",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3125,
                              "src": "6358:22:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 363,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6383:7:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 362,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6383:7:18",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 364,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "6382:9:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            ],
                            "expression": {
                              "id": 358,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "6347:3:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 359,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "6351:6:18",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "6347:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6347:45:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6336:57:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 367,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6407:15:18",
                      "memberName": "totalUsdcBorrow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 70,
                      "src": "6336:86:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 368,
                      "name": "totalUsdcBorrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 310,
                      "src": "6425:15:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6336:104:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 370,
                  "nodeType": "ExpressionStatement",
                  "src": "6336:104:18"
                },
                {
                  "expression": {
                    "id": 383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 371,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "6450:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 380,
                        "indexExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 374,
                                "name": "_any2EvmMessage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 304,
                                "src": "6472:15:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Any2EVMMessage_$3132_memory_ptr",
                                  "typeString": "struct Client.Any2EVMMessage memory"
                                }
                              },
                              "id": 375,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6488:6:18",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3125,
                              "src": "6472:22:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 377,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6497:7:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 376,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6497:7:18",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 378,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "6496:9:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            ],
                            "expression": {
                              "id": 372,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "6461:3:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 373,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "6465:6:18",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "6461:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6461:45:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6450:57:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 381,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6521:10:18",
                      "memberName": "supplyRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72,
                      "src": "6450:81:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 382,
                      "name": "supplyRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 312,
                      "src": "6534:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6450:94:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 384,
                  "nodeType": "ExpressionStatement",
                  "src": "6450:94:18"
                }
              ]
            },
            "id": 386,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_nodeAaveFeed",
            "nameLocation": "5756:13:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 305,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 304,
                  "mutability": "mutable",
                  "name": "_any2EvmMessage",
                  "nameLocation": "5808:15:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 386,
                  "src": "5779:44:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Any2EVMMessage_$3132_memory_ptr",
                    "typeString": "struct Client.Any2EVMMessage"
                  },
                  "typeName": {
                    "id": 303,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 302,
                      "name": "Client.Any2EVMMessage",
                      "nameLocations": [
                        "5779:6:18",
                        "5786:14:18"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3132,
                      "src": "5779:21:18"
                    },
                    "referencedDeclaration": 3132,
                    "src": "5779:21:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Any2EVMMessage_$3132_storage_ptr",
                      "typeString": "struct Client.Any2EVMMessage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5769:60:18"
            },
            "returnParameters": {
              "id": 306,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5839:0:18"
            },
            "scope": 858,
            "src": "5747:804:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 434,
              "nodeType": "Block",
              "src": "6833:262:18",
              "statements": [
                {
                  "expression": {
                    "id": 408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 401,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "6843:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 404,
                        "indexExpression": {
                          "expression": {
                            "id": 402,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6854:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6858:6:18",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6854:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6843:22:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 405,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6866:16:18",
                      "memberName": "lastDataFromAave",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 66,
                      "src": "6843:39:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 406,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "6885:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 407,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6891:9:18",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "6885:15:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6843:57:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 409,
                  "nodeType": "ExpressionStatement",
                  "src": "6843:57:18"
                },
                {
                  "expression": {
                    "id": 416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 410,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "6910:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 413,
                        "indexExpression": {
                          "expression": {
                            "id": 411,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6921:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6925:6:18",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6921:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6910:22:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 414,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6933:15:18",
                      "memberName": "totalUsdcSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68,
                      "src": "6910:38:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 415,
                      "name": "totalUsdcSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 388,
                      "src": "6951:15:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6910:56:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 417,
                  "nodeType": "ExpressionStatement",
                  "src": "6910:56:18"
                },
                {
                  "expression": {
                    "id": 424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 418,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "6976:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 421,
                        "indexExpression": {
                          "expression": {
                            "id": 419,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6987:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6991:6:18",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6987:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6976:22:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 422,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6999:15:18",
                      "memberName": "totalUsdcBorrow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 70,
                      "src": "6976:38:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 423,
                      "name": "totalUsdcBorrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 390,
                      "src": "7017:15:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6976:56:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 425,
                  "nodeType": "ExpressionStatement",
                  "src": "6976:56:18"
                },
                {
                  "expression": {
                    "id": 432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 426,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "7042:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 429,
                        "indexExpression": {
                          "expression": {
                            "id": 427,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7053:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7057:6:18",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7053:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7042:22:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 430,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7065:10:18",
                      "memberName": "supplyRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72,
                      "src": "7042:33:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 431,
                      "name": "supplyRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 392,
                      "src": "7078:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7042:46:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 433,
                  "nodeType": "ExpressionStatement",
                  "src": "7042:46:18"
                }
              ]
            },
            "functionSelector": "9637120f",
            "id": 435,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 395,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 394,
                  "name": "masterAndNodeInSameChain",
                  "nameLocations": [
                    "6781:24:18"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 143,
                  "src": "6781:24:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "6781:24:18"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 397,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "6821:3:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "6825:6:18",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "6821:10:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 399,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 396,
                  "name": "onlyValidNodes",
                  "nameLocations": [
                    "6806:14:18"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 128,
                  "src": "6806:14:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "6806:26:18"
              }
            ],
            "name": "nodeAaveFeedFromSameChain",
            "nameLocation": "6646:25:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 393,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 388,
                  "mutability": "mutable",
                  "name": "totalUsdcSupply",
                  "nameLocation": "6689:15:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 435,
                  "src": "6681:23:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 387,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6681:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 390,
                  "mutability": "mutable",
                  "name": "totalUsdcBorrow",
                  "nameLocation": "6722:15:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 435,
                  "src": "6714:23:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 389,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6714:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 392,
                  "mutability": "mutable",
                  "name": "supplyRate",
                  "nameLocation": "6755:10:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 435,
                  "src": "6747:18:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 391,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6747:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6671:100:18"
            },
            "returnParameters": {
              "id": 400,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6833:0:18"
            },
            "scope": 858,
            "src": "6637:458:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3025
            ],
            "body": {
              "id": 505,
              "nodeType": "Block",
              "src": "7751:568:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 453,
                            "name": "validNodes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78,
                            "src": "7782:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                              "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                            }
                          },
                          "id": 462,
                          "indexExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 456,
                                  "name": "_any2EvmMessage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 438,
                                  "src": "7804:15:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Any2EVMMessage_$3132_memory_ptr",
                                    "typeString": "struct Client.Any2EVMMessage memory"
                                  }
                                },
                                "id": 457,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7820:6:18",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3125,
                                "src": "7804:22:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "components": [
                                  {
                                    "id": 459,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "7829:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 458,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "7829:7:18",
                                      "typeDescriptions": {}
                                    }
                                  }
                                ],
                                "id": 460,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "7828:9:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                }
                              ],
                              "expression": {
                                "id": 454,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "7793:3:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 455,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "7797:6:18",
                              "memberName": "decode",
                              "nodeType": "MemberAccess",
                              "src": "7793:10:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 461,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7793:45:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7782:57:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                            "typeString": "struct MasterNode.ValidNodes storage ref"
                          }
                        },
                        "id": 463,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7857:11:18",
                        "memberName": "isValidNode",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 60,
                        "src": "7782:86:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e636f6d696e67204d657373616765206e6f742066726f6d20612076616c6964206e6f6465",
                        "id": 464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7882:40:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a8f332cc663e3d3f7228bccc03769aa964f434a1289faa35cb4983b943c0d9cd",
                          "typeString": "literal_string \"Incoming Message not from a valid node\""
                        },
                        "value": "Incoming Message not from a valid node"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a8f332cc663e3d3f7228bccc03769aa964f434a1289faa35cb4983b943c0d9cd",
                          "typeString": "literal_string \"Incoming Message not from a valid node\""
                        }
                      ],
                      "id": 452,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7761:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7761:171:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 466,
                  "nodeType": "ExpressionStatement",
                  "src": "7761:171:18"
                },
                {
                  "assignments": [
                    468
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 468,
                      "mutability": "mutable",
                      "name": "command",
                      "nameLocation": "7948:7:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 505,
                      "src": "7942:13:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 467,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "7942:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 472,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 470,
                        "name": "_any2EvmMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 438,
                        "src": "7981:15:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Any2EVMMessage_$3132_memory_ptr",
                          "typeString": "struct Client.Any2EVMMessage memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Any2EVMMessage_$3132_memory_ptr",
                          "typeString": "struct Client.Any2EVMMessage memory"
                        }
                      ],
                      "id": 469,
                      "name": "_internalCommandRouter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3306,
                      "src": "7958:22:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Any2EVMMessage_$3132_memory_ptr_$returns$_t_uint8_$",
                        "typeString": "function (struct Client.Any2EVMMessage memory) returns (uint8)"
                      }
                    },
                    "id": 471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7958:39:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7942:55:18"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 473,
                      "name": "command",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 468,
                      "src": "8011:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 474,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8022:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8011:12:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 483,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 481,
                        "name": "command",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 468,
                        "src": "8094:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8105:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "8094:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 489,
                          "name": "command",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 468,
                          "src": "8178:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8189:1:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "8178:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 501,
                        "nodeType": "Block",
                        "src": "8253:60:18",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "696e76616c696420636f6d6d616e642066726f6d204e6f6465",
                                  "id": 498,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8274:27:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_5ae3160618806915eb95e7eff27bdd789150f31a91a3a3ee805c28ae74beda69",
                                    "typeString": "literal_string \"invalid command from Node\""
                                  },
                                  "value": "invalid command from Node"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_5ae3160618806915eb95e7eff27bdd789150f31a91a3a3ee805c28ae74beda69",
                                    "typeString": "literal_string \"invalid command from Node\""
                                  }
                                ],
                                "id": 497,
                                "name": "revert",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -19,
                                  -19
                                ],
                                "referencedDeclaration": -19,
                                "src": "8267:6:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (string memory) pure"
                                }
                              },
                              "id": 499,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8267:35:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 500,
                            "nodeType": "ExpressionStatement",
                            "src": "8267:35:18"
                          }
                        ]
                      },
                      "id": 502,
                      "nodeType": "IfStatement",
                      "src": "8174:139:18",
                      "trueBody": {
                        "id": 496,
                        "nodeType": "Block",
                        "src": "8192:55:18",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 493,
                                  "name": "_any2EvmMessage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 438,
                                  "src": "8220:15:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Any2EVMMessage_$3132_memory_ptr",
                                    "typeString": "struct Client.Any2EVMMessage memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_struct$_Any2EVMMessage_$3132_memory_ptr",
                                    "typeString": "struct Client.Any2EVMMessage memory"
                                  }
                                ],
                                "id": 492,
                                "name": "_nodeAaveFeed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 386,
                                "src": "8206:13:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Any2EVMMessage_$3132_memory_ptr_$returns$__$",
                                  "typeString": "function (struct Client.Any2EVMMessage memory)"
                                }
                              },
                              "id": 494,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8206:30:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 495,
                            "nodeType": "ExpressionStatement",
                            "src": "8206:30:18"
                          }
                        ]
                      }
                    },
                    "id": 503,
                    "nodeType": "IfStatement",
                    "src": "8090:223:18",
                    "trueBody": {
                      "id": 488,
                      "nodeType": "Block",
                      "src": "8108:60:18",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 485,
                                "name": "_any2EvmMessage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 438,
                                "src": "8141:15:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Any2EVMMessage_$3132_memory_ptr",
                                  "typeString": "struct Client.Any2EVMMessage memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Any2EVMMessage_$3132_memory_ptr",
                                  "typeString": "struct Client.Any2EVMMessage memory"
                                }
                              ],
                              "id": 484,
                              "name": "_resmumeOperations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 278,
                              "src": "8122:18:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Any2EVMMessage_$3132_memory_ptr_$returns$__$",
                                "typeString": "function (struct Client.Any2EVMMessage memory)"
                              }
                            },
                            "id": 486,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8122:35:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 487,
                          "nodeType": "ExpressionStatement",
                          "src": "8122:35:18"
                        }
                      ]
                    }
                  },
                  "id": 504,
                  "nodeType": "IfStatement",
                  "src": "8007:306:18",
                  "trueBody": {
                    "id": 480,
                    "nodeType": "Block",
                    "src": "8025:59:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 477,
                              "name": "_any2EvmMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 438,
                              "src": "8057:15:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Any2EVMMessage_$3132_memory_ptr",
                                "typeString": "struct Client.Any2EVMMessage memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Any2EVMMessage_$3132_memory_ptr",
                                "typeString": "struct Client.Any2EVMMessage memory"
                              }
                            ],
                            "id": 476,
                            "name": "_aWarpTokenMinter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 227,
                            "src": "8039:17:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Any2EVMMessage_$3132_memory_ptr_$returns$__$",
                              "typeString": "function (struct Client.Any2EVMMessage memory)"
                            }
                          },
                          "id": 478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8039:34:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 479,
                        "nodeType": "ExpressionStatement",
                        "src": "8039:34:18"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 506,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "expression": {
                          "id": 444,
                          "name": "_any2EvmMessage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 438,
                          "src": "7711:15:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Any2EVMMessage_$3132_memory_ptr",
                            "typeString": "struct Client.Any2EVMMessage memory"
                          }
                        },
                        "id": 445,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7727:6:18",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3125,
                        "src": "7711:22:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 447,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7736:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 446,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7736:7:18",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 448,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "7735:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        }
                      ],
                      "expression": {
                        "id": 442,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "7700:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 443,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "7704:6:18",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "7700:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7700:45:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 450,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 441,
                  "name": "onlyValidNodes",
                  "nameLocations": [
                    "7685:14:18"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 128,
                  "src": "7685:14:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "7685:61:18"
              }
            ],
            "name": "_ccipReceive",
            "nameLocation": "7570:12:18",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 440,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7668:8:18"
            },
            "parameters": {
              "id": 439,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 438,
                  "mutability": "mutable",
                  "name": "_any2EvmMessage",
                  "nameLocation": "7621:15:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 506,
                  "src": "7592:44:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Any2EVMMessage_$3132_memory_ptr",
                    "typeString": "struct Client.Any2EVMMessage"
                  },
                  "typeName": {
                    "id": 437,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 436,
                      "name": "Client.Any2EVMMessage",
                      "nameLocations": [
                        "7592:6:18",
                        "7599:14:18"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3132,
                      "src": "7592:21:18"
                    },
                    "referencedDeclaration": 3132,
                    "src": "7592:21:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Any2EVMMessage_$3132_storage_ptr",
                      "typeString": "struct Client.Any2EVMMessage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7582:60:18"
            },
            "returnParameters": {
              "id": 451,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7751:0:18"
            },
            "scope": 858,
            "src": "7561:758:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 606,
              "nodeType": "Block",
              "src": "8894:1287:18",
              "statements": [
                {
                  "assignments": [
                    524
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 524,
                      "mutability": "mutable",
                      "name": "evm2AnyMessage",
                      "nameLocation": "9105:14:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 606,
                      "src": "9076:43:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EVM2AnyMessage_$3145_memory_ptr",
                        "typeString": "struct Client.EVM2AnyMessage"
                      },
                      "typeName": {
                        "id": 523,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 522,
                          "name": "Client.EVM2AnyMessage",
                          "nameLocations": [
                            "9076:6:18",
                            "9083:14:18"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3145,
                          "src": "9076:21:18"
                        },
                        "referencedDeclaration": 3145,
                        "src": "9076:21:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EVM2AnyMessage_$3145_storage_ptr",
                          "typeString": "struct Client.EVM2AnyMessage"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 533,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 526,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 510,
                        "src": "9153:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 527,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 512,
                        "src": "9176:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 530,
                            "name": "s_linkToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "9203:11:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LinkTokenInterface_$3278",
                              "typeString": "contract LinkTokenInterface"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LinkTokenInterface_$3278",
                              "typeString": "contract LinkTokenInterface"
                            }
                          ],
                          "id": 529,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9195:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 528,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9195:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9195:20:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 525,
                      "name": "_buildCCIPMessage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 644,
                      "src": "9122:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$_t_address_$returns$_t_struct$_EVM2AnyMessage_$3145_memory_ptr_$",
                        "typeString": "function (address,bytes memory,address) pure returns (struct Client.EVM2AnyMessage memory)"
                      }
                    },
                    "id": 532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9122:103:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EVM2AnyMessage_$3145_memory_ptr",
                      "typeString": "struct Client.EVM2AnyMessage memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9076:149:18"
                },
                {
                  "assignments": [
                    536
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 536,
                      "mutability": "mutable",
                      "name": "router",
                      "nameLocation": "9333:6:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 606,
                      "src": "9319:20:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRouterClient_$3112",
                        "typeString": "contract IRouterClient"
                      },
                      "typeName": {
                        "id": 535,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 534,
                          "name": "IRouterClient",
                          "nameLocations": [
                            "9319:13:18"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3112,
                          "src": "9319:13:18"
                        },
                        "referencedDeclaration": 3112,
                        "src": "9319:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRouterClient_$3112",
                          "typeString": "contract IRouterClient"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 542,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 538,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "9356:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MasterNode_$858",
                              "typeString": "contract MasterNode"
                            }
                          },
                          "id": 539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9361:9:18",
                          "memberName": "getRouter",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3037,
                          "src": "9356:14:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9356:16:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 537,
                      "name": "IRouterClient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3112,
                      "src": "9342:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IRouterClient_$3112_$",
                        "typeString": "type(contract IRouterClient)"
                      }
                    },
                    "id": 541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9342:31:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRouterClient_$3112",
                      "typeString": "contract IRouterClient"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9319:54:18"
                },
                {
                  "assignments": [
                    544
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 544,
                      "mutability": "mutable",
                      "name": "fees",
                      "nameLocation": "9449:4:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 606,
                      "src": "9441:12:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 543,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9441:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 550,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 547,
                        "name": "_destinationChainSelector",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 508,
                        "src": "9470:25:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 548,
                        "name": "evm2AnyMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 524,
                        "src": "9497:14:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EVM2AnyMessage_$3145_memory_ptr",
                          "typeString": "struct Client.EVM2AnyMessage memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_struct$_EVM2AnyMessage_$3145_memory_ptr",
                          "typeString": "struct Client.EVM2AnyMessage memory"
                        }
                      ],
                      "expression": {
                        "id": 545,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 536,
                        "src": "9456:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRouterClient_$3112",
                          "typeString": "contract IRouterClient"
                        }
                      },
                      "id": 546,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9463:6:18",
                      "memberName": "getFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3100,
                      "src": "9456:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint64_$_t_struct$_EVM2AnyMessage_$3145_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint64,struct Client.EVM2AnyMessage memory) view external returns (uint256)"
                      }
                    },
                    "id": 549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9456:56:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9441:71:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 554,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "9569:3:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 555,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9573:6:18",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "9569:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 558,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "9589:4:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MasterNode_$858",
                                  "typeString": "contract MasterNode"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MasterNode_$858",
                                  "typeString": "contract MasterNode"
                                }
                              ],
                              "id": 557,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9581:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 556,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9581:7:18",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 559,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9581:13:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 560,
                            "name": "fees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 544,
                            "src": "9596:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 552,
                            "name": "s_linkToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "9544:11:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LinkTokenInterface_$3278",
                              "typeString": "contract LinkTokenInterface"
                            }
                          },
                          "id": 553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9556:12:18",
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3277,
                          "src": "9544:24:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9544:57:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f742070726f7669646564204c696e6b20666f722066656573",
                        "id": 562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9615:28:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_afb0688769ed3833a956fba5ec2b64712f3f707f42b0b0fcc105794bfc66fab0",
                          "typeString": "literal_string \"Not provided Link for fees\""
                        },
                        "value": "Not provided Link for fees"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_afb0688769ed3833a956fba5ec2b64712f3f707f42b0b0fcc105794bfc66fab0",
                          "typeString": "literal_string \"Not provided Link for fees\""
                        }
                      ],
                      "id": 551,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9523:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9523:130:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 564,
                  "nodeType": "ExpressionStatement",
                  "src": "9523:130:18"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 565,
                      "name": "fees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 544,
                      "src": "9668:4:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 570,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "9705:4:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MasterNode_$858",
                                "typeString": "contract MasterNode"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MasterNode_$858",
                                "typeString": "contract MasterNode"
                              }
                            ],
                            "id": 569,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9697:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 568,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9697:7:18",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 571,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9697:13:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 566,
                          "name": "s_linkToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "9675:11:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LinkTokenInterface_$3278",
                            "typeString": "contract LinkTokenInterface"
                          }
                        },
                        "id": 567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9687:9:18",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3210,
                        "src": "9675:21:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 572,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9675:36:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9668:43:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 585,
                  "nodeType": "IfStatement",
                  "src": "9664:128:18",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 579,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "9779:4:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MasterNode_$858",
                                    "typeString": "contract MasterNode"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MasterNode_$858",
                                    "typeString": "contract MasterNode"
                                  }
                                ],
                                "id": 578,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9771:7:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 577,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9771:7:18",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 580,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9771:13:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 575,
                              "name": "s_linkToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 56,
                              "src": "9749:11:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LinkTokenInterface_$3278",
                                "typeString": "contract LinkTokenInterface"
                              }
                            },
                            "id": 576,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9761:9:18",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3210,
                            "src": "9749:21:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9749:36:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 582,
                          "name": "fees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 544,
                          "src": "9787:4:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 574,
                        "name": "NotEnoughBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "9732:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                          "typeString": "function (uint256,uint256) pure"
                        }
                      },
                      "id": 583,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9732:60:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 584,
                    "nodeType": "RevertStatement",
                    "src": "9725:67:18"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 591,
                            "name": "router",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 536,
                            "src": "9938:6:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IRouterClient_$3112",
                              "typeString": "contract IRouterClient"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IRouterClient_$3112",
                              "typeString": "contract IRouterClient"
                            }
                          ],
                          "id": 590,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9930:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 589,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9930:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9930:15:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 593,
                        "name": "fees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 544,
                        "src": "9947:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 586,
                        "name": "s_linkToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "9910:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LinkTokenInterface_$3278",
                          "typeString": "contract LinkTokenInterface"
                        }
                      },
                      "id": 588,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9922:7:18",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3203,
                      "src": "9910:19:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9910:42:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 595,
                  "nodeType": "ExpressionStatement",
                  "src": "9910:42:18"
                },
                {
                  "expression": {
                    "id": 602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 596,
                      "name": "messageId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 518,
                      "src": "10044:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 599,
                          "name": "_destinationChainSelector",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 508,
                          "src": "10072:25:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        {
                          "id": 600,
                          "name": "evm2AnyMessage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 524,
                          "src": "10099:14:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_EVM2AnyMessage_$3145_memory_ptr",
                            "typeString": "struct Client.EVM2AnyMessage memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          {
                            "typeIdentifier": "t_struct$_EVM2AnyMessage_$3145_memory_ptr",
                            "typeString": "struct Client.EVM2AnyMessage memory"
                          }
                        ],
                        "expression": {
                          "id": 597,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 536,
                          "src": "10056:6:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IRouterClient_$3112",
                            "typeString": "contract IRouterClient"
                          }
                        },
                        "id": 598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10063:8:18",
                        "memberName": "ccipSend",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3111,
                        "src": "10056:15:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint64_$_t_struct$_EVM2AnyMessage_$3145_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (uint64,struct Client.EVM2AnyMessage memory) payable external returns (bytes32)"
                        }
                      },
                      "id": 601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10056:58:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "10044:70:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 603,
                  "nodeType": "ExpressionStatement",
                  "src": "10044:70:18"
                },
                {
                  "expression": {
                    "id": 604,
                    "name": "messageId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 518,
                    "src": "10165:9:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 519,
                  "id": 605,
                  "nodeType": "Return",
                  "src": "10158:16:18"
                }
              ]
            },
            "id": 607,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 515,
                    "name": "_receiver",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 510,
                    "src": "8855:9:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 516,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 514,
                  "name": "onlyValidNodes",
                  "nameLocations": [
                    "8840:14:18"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 128,
                  "src": "8840:14:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "8840:25:18"
              }
            ],
            "name": "_sendMessage",
            "nameLocation": "8715:12:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 513,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 508,
                  "mutability": "mutable",
                  "name": "_destinationChainSelector",
                  "nameLocation": "8744:25:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 607,
                  "src": "8737:32:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 507,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "8737:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 510,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "8787:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 607,
                  "src": "8779:17:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 509,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8779:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 512,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "8819:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 607,
                  "src": "8806:18:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 511,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8806:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8727:103:18"
            },
            "returnParameters": {
              "id": 519,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 518,
                  "mutability": "mutable",
                  "name": "messageId",
                  "nameLocation": "8883:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 607,
                  "src": "8875:17:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 517,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8875:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8874:19:18"
            },
            "scope": 858,
            "src": "8706:1475:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 643,
              "nodeType": "Block",
              "src": "10867:662:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 624,
                            "name": "_receiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 610,
                            "src": "10957:9:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 622,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "10946:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "10950:6:18",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "10946:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10946:21:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 626,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 612,
                        "src": "11023:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 631,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11110:1:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "11082:27:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_EVMTokenAmount_$3119_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (struct Client.EVMTokenAmount memory[] memory)"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 628,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 627,
                                "name": "Client.EVMTokenAmount",
                                "nameLocations": [
                                  "11086:6:18",
                                  "11093:14:18"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3119,
                                "src": "11086:21:18"
                              },
                              "referencedDeclaration": 3119,
                              "src": "11086:21:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_EVMTokenAmount_$3119_storage_ptr",
                                "typeString": "struct Client.EVMTokenAmount"
                              }
                            },
                            "id": 629,
                            "nodeType": "ArrayTypeName",
                            "src": "11086:23:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$3119_storage_$dyn_storage_ptr",
                              "typeString": "struct Client.EVMTokenAmount[]"
                            }
                          }
                        },
                        "id": 632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11082:30:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$3119_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Client.EVMTokenAmount memory[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "325f3030305f303030",
                                "id": 637,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11328:9:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2000000_by_1",
                                  "typeString": "int_const 2000000"
                                },
                                "value": "2_000_000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_2000000_by_1",
                                  "typeString": "int_const 2000000"
                                }
                              ],
                              "expression": {
                                "id": 635,
                                "name": "Client",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3167,
                                "src": "11295:6:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Client_$3167_$",
                                  "typeString": "type(library Client)"
                                }
                              },
                              "id": 636,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11302:14:18",
                              "memberName": "EVMExtraArgsV1",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3151,
                              "src": "11295:21:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_EVMExtraArgsV1_$3151_storage_ptr_$",
                                "typeString": "type(struct Client.EVMExtraArgsV1 storage pointer)"
                              }
                            },
                            "id": 638,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [
                              "11318:8:18"
                            ],
                            "names": [
                              "gasLimit"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "11295:44:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_EVMExtraArgsV1_$3151_memory_ptr",
                              "typeString": "struct Client.EVMExtraArgsV1 memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_EVMExtraArgsV1_$3151_memory_ptr",
                              "typeString": "struct Client.EVMExtraArgsV1 memory"
                            }
                          ],
                          "expression": {
                            "id": 633,
                            "name": "Client",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3167,
                            "src": "11191:6:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Client_$3167_$",
                              "typeString": "type(library Client)"
                            }
                          },
                          "id": 634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11198:12:18",
                          "memberName": "_argsToBytes",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3166,
                          "src": "11191:19:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_EVMExtraArgsV1_$3151_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (struct Client.EVMExtraArgsV1 memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11191:166:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 640,
                        "name": "_feeTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 614,
                        "src": "11491:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$3119_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Client.EVMTokenAmount memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 620,
                        "name": "Client",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3167,
                        "src": "10896:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Client_$3167_$",
                          "typeString": "type(library Client)"
                        }
                      },
                      "id": 621,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10903:14:18",
                      "memberName": "EVM2AnyMessage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3145,
                      "src": "10896:21:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_EVM2AnyMessage_$3145_storage_ptr_$",
                        "typeString": "type(struct Client.EVM2AnyMessage storage pointer)"
                      }
                    },
                    "id": 641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "10936:8:18",
                      "11017:4:18",
                      "11068:12:18",
                      "11180:9:18",
                      "11481:8:18"
                    ],
                    "names": [
                      "receiver",
                      "data",
                      "tokenAmounts",
                      "extraArgs",
                      "feeToken"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "10896:626:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EVM2AnyMessage_$3145_memory_ptr",
                      "typeString": "struct Client.EVM2AnyMessage memory"
                    }
                  },
                  "functionReturnParameters": 619,
                  "id": 642,
                  "nodeType": "Return",
                  "src": "10877:645:18"
                }
              ]
            },
            "documentation": {
              "id": 608,
              "nodeType": "StructuredDocumentation",
              "src": "10187:501:18",
              "text": "@notice Construct a CCIP message.\n @dev This function will create an EVM2AnyMessage struct with all the necessary information for programmable tokens transfer.\n @param _receiver The address of the receiver.\n @param _data The bytes data to be sent.\n @param _feeTokenAddress The address of the token used for fees. Set address(0) for native gas.\n @return Client.EVM2AnyMessage Returns an EVM2AnyMessage struct which contains information for sending a CCIP message."
            },
            "id": 644,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_buildCCIPMessage",
            "nameLocation": "10702:17:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 615,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 610,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "10737:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 644,
                  "src": "10729:17:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 609,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10729:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 612,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "10769:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 644,
                  "src": "10756:18:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 611,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10756:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 614,
                  "mutability": "mutable",
                  "name": "_feeTokenAddress",
                  "nameLocation": "10792:16:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 644,
                  "src": "10784:24:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 613,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10784:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10719:95:18"
            },
            "returnParameters": {
              "id": 619,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 618,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 644,
                  "src": "10837:28:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_EVM2AnyMessage_$3145_memory_ptr",
                    "typeString": "struct Client.EVM2AnyMessage"
                  },
                  "typeName": {
                    "id": 617,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 616,
                      "name": "Client.EVM2AnyMessage",
                      "nameLocations": [
                        "10837:6:18",
                        "10844:14:18"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3145,
                      "src": "10837:21:18"
                    },
                    "referencedDeclaration": 3145,
                    "src": "10837:21:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EVM2AnyMessage_$3145_storage_ptr",
                      "typeString": "struct Client.EVM2AnyMessage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10836:30:18"
            },
            "scope": 858,
            "src": "10693:836:18",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 648,
              "nodeType": "Block",
              "src": "11823:2:18",
              "statements": []
            },
            "documentation": {
              "id": 645,
              "nodeType": "StructuredDocumentation",
              "src": "11535:256:18",
              "text": "@notice Fallback function to allow the contract to receive Ether.\n @dev This function has no function body, making it a default function for receiving Ether.\n It is automatically called when Ether is sent to the contract without any data."
            },
            "id": 649,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 646,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11803:2:18"
            },
            "returnParameters": {
              "id": 647,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11823:0:18"
            },
            "scope": 858,
            "src": "11796:29:18",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 692,
              "nodeType": "Block",
              "src": "12174:358:18",
              "statements": [
                {
                  "assignments": [
                    657
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 657,
                      "mutability": "mutable",
                      "name": "commandWarpAssets",
                      "nameLocation": "12190:17:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 692,
                      "src": "12184:23:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 656,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "12184:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 659,
                  "initialValue": {
                    "hexValue": "31",
                    "id": 658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12210:1:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12184:27:18"
                },
                {
                  "assignments": [
                    661
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 661,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "12235:4:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 692,
                      "src": "12222:17:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 660,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "12222:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 668,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 664,
                        "name": "commandWarpAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 657,
                        "src": "12266:17:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 665,
                        "name": "_destinationCCIPid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 651,
                        "src": "12297:18:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 666,
                        "name": "_destinationNodeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 653,
                        "src": "12329:23:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 662,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "12242:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 663,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "12246:6:18",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "12242:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12242:120:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12222:140:18"
                },
                {
                  "expression": {
                    "id": 674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 669,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "12372:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 671,
                        "indexExpression": {
                          "id": 670,
                          "name": "activeNode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83,
                          "src": "12383:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12372:22:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 672,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "12395:12:18",
                      "memberName": "isActiveNode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 62,
                      "src": "12372:35:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 673,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12410:5:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "12372:43:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 675,
                  "nodeType": "ExpressionStatement",
                  "src": "12372:43:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 677,
                            "name": "validNodes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78,
                            "src": "12439:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                              "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                            }
                          },
                          "id": 679,
                          "indexExpression": {
                            "id": 678,
                            "name": "activeNode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83,
                            "src": "12450:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12439:22:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                            "typeString": "struct MasterNode.ValidNodes storage ref"
                          }
                        },
                        "id": 680,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12462:11:18",
                        "memberName": "chainCCIPid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 64,
                        "src": "12439:34:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 681,
                        "name": "activeNode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "12475:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 682,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 661,
                        "src": "12487:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 676,
                      "name": "_sendMessage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 607,
                      "src": "12426:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint64_$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (uint64,address,bytes memory) returns (bytes32)"
                      }
                    },
                    "id": 683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12426:66:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 684,
                  "nodeType": "ExpressionStatement",
                  "src": "12426:66:18"
                },
                {
                  "expression": {
                    "id": 690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 685,
                      "name": "activeNode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "12502:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 688,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12523:1:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "12515:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 686,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12515:7:18",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 689,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12515:10:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12502:23:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 691,
                  "nodeType": "ExpressionStatement",
                  "src": "12502:23:18"
                }
              ]
            },
            "functionSelector": "5c292be5",
            "id": 693,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "warpAssets",
            "nameLocation": "12072:10:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 654,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 651,
                  "mutability": "mutable",
                  "name": "_destinationCCIPid",
                  "nameLocation": "12099:18:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 693,
                  "src": "12092:25:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 650,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "12092:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 653,
                  "mutability": "mutable",
                  "name": "_destinationNodeAddress",
                  "nameLocation": "12135:23:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 693,
                  "src": "12127:31:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 652,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12127:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12082:82:18"
            },
            "returnParameters": {
              "id": 655,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12174:0:18"
            },
            "scope": 858,
            "src": "12063:469:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 763,
              "nodeType": "Block",
              "src": "12813:564:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 699,
                            "name": "validNodes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78,
                            "src": "12831:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                              "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                            }
                          },
                          "id": 701,
                          "indexExpression": {
                            "id": 700,
                            "name": "activeNode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83,
                            "src": "12842:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12831:22:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                            "typeString": "struct MasterNode.ValidNodes storage ref"
                          }
                        },
                        "id": 702,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12854:12:18",
                        "memberName": "isActiveNode",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 62,
                        "src": "12831:35:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f6465206973206e6f7420416374697665",
                        "id": 703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12868:20:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_036926b7eb2047bdf695035566f1e9989601a3dea1b4917f558eca27485e05b9",
                          "typeString": "literal_string \"Node is not Active\""
                        },
                        "value": "Node is not Active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_036926b7eb2047bdf695035566f1e9989601a3dea1b4917f558eca27485e05b9",
                          "typeString": "literal_string \"Node is not Active\""
                        }
                      ],
                      "id": 698,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12823:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12823:66:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 705,
                  "nodeType": "ExpressionStatement",
                  "src": "12823:66:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 707,
                          "name": "shares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 695,
                          "src": "12908:6:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 709,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "12928:3:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 710,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12932:6:18",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "12928:10:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 708,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2452,
                            "src": "12918:9:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12918:21:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12908:31:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f756768742062616c616e6365",
                        "id": 713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12941:21:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8b745e1e49bc3a21dc0e85a5fcefdac1a659905f53d03b0cfc0a9455e9c5156d",
                          "typeString": "literal_string \"Not enought balance\""
                        },
                        "value": "Not enought balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8b745e1e49bc3a21dc0e85a5fcefdac1a659905f53d03b0cfc0a9455e9c5156d",
                          "typeString": "literal_string \"Not enought balance\""
                        }
                      ],
                      "id": 706,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12900:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12900:63:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 715,
                  "nodeType": "ExpressionStatement",
                  "src": "12900:63:18"
                },
                {
                  "assignments": [
                    717
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 717,
                      "mutability": "mutable",
                      "name": "commandWitdraw",
                      "nameLocation": "12980:14:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 763,
                      "src": "12974:20:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 716,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "12974:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 719,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12997:1:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12974:24:18"
                },
                {
                  "assignments": [
                    721
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 721,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "13022:4:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 763,
                      "src": "13009:17:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 720,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "13009:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 729,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 724,
                        "name": "commandWitdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 717,
                        "src": "13040:14:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "expression": {
                          "id": 725,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "13056:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13060:6:18",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "13056:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 727,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 695,
                        "src": "13068:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 722,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "13029:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 723,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "13033:6:18",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "13029:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13029:46:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13009:66:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 731,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "13092:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13096:6:18",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "13092:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 733,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 695,
                        "src": "13104:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 730,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2829,
                      "src": "13086:5:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13086:25:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 735,
                  "nodeType": "ExpressionStatement",
                  "src": "13086:25:18"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    },
                    "id": 741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 736,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "13126:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 738,
                        "indexExpression": {
                          "id": 737,
                          "name": "activeNode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83,
                          "src": "13137:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13126:22:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 739,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13149:11:18",
                      "memberName": "chainCCIPid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64,
                      "src": "13126:34:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 740,
                      "name": "MASTER_CONTRACT_CHAIN_ID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58,
                      "src": "13164:24:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "13126:62:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 761,
                    "nodeType": "Block",
                    "src": "13280:91:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 753,
                                  "name": "validNodes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 78,
                                  "src": "13307:10:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                                    "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                                  }
                                },
                                "id": 755,
                                "indexExpression": {
                                  "id": 754,
                                  "name": "activeNode",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 83,
                                  "src": "13318:10:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "13307:22:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                                  "typeString": "struct MasterNode.ValidNodes storage ref"
                                }
                              },
                              "id": 756,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13330:11:18",
                              "memberName": "chainCCIPid",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 64,
                              "src": "13307:34:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            {
                              "id": 757,
                              "name": "activeNode",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 83,
                              "src": "13343:10:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 758,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 721,
                              "src": "13355:4:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 752,
                            "name": "_sendMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 607,
                            "src": "13294:12:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint64_$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (uint64,address,bytes memory) returns (bytes32)"
                            }
                          },
                          "id": 759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13294:66:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 760,
                        "nodeType": "ExpressionStatement",
                        "src": "13294:66:18"
                      }
                    ]
                  },
                  "id": 762,
                  "nodeType": "IfStatement",
                  "src": "13122:249:18",
                  "trueBody": {
                    "id": 751,
                    "nodeType": "Block",
                    "src": "13190:84:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 746,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "13244:3:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 747,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13248:6:18",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "13244:10:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 748,
                              "name": "shares",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 695,
                              "src": "13256:6:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 743,
                                  "name": "activeNode",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 83,
                                  "src": "13210:10:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 742,
                                "name": "INode",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3378,
                                "src": "13204:5:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_INode_$3378_$",
                                  "typeString": "type(contract INode)"
                                }
                              },
                              "id": 744,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13204:17:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_INode_$3378",
                                "typeString": "contract INode"
                              }
                            },
                            "id": 745,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13222:21:18",
                            "memberName": "withdrawFromSameChain",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3377,
                            "src": "13204:39:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13204:59:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 750,
                        "nodeType": "ExpressionStatement",
                        "src": "13204:59:18"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "2e1a7d4d",
            "id": 764,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "12779:8:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 696,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 695,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "12796:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 764,
                  "src": "12788:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 694,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12788:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12787:16:18"
            },
            "returnParameters": {
              "id": 697,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12813:0:18"
            },
            "scope": 858,
            "src": "12770:607:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 845,
              "nodeType": "Block",
              "src": "13737:704:18",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 833,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 812,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 802,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 792,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 785,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 778,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 773,
                                          "name": "validNodes",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 78,
                                          "src": "13803:10:18",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                                          }
                                        },
                                        "id": 775,
                                        "indexExpression": {
                                          "id": 774,
                                          "name": "_activeNode",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 766,
                                          "src": "13814:11:18",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "13803:23:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                                          "typeString": "struct MasterNode.ValidNodes storage ref"
                                        }
                                      },
                                      "id": 776,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "13827:12:18",
                                      "memberName": "isActiveNode",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 62,
                                      "src": "13803:36:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "74727565",
                                      "id": 777,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "bool",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "13843:4:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "value": "true"
                                    },
                                    "src": "13803:44:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "&&",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 784,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 779,
                                          "name": "validNodes",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 78,
                                          "src": "13863:10:18",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                                          }
                                        },
                                        "id": 781,
                                        "indexExpression": {
                                          "id": 780,
                                          "name": "_activeNode",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 766,
                                          "src": "13874:11:18",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "13863:23:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                                          "typeString": "struct MasterNode.ValidNodes storage ref"
                                        }
                                      },
                                      "id": 782,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "13887:16:18",
                                      "memberName": "lastDataFromAave",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 66,
                                      "src": "13863:40:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 783,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "13906:1:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "13863:44:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "13803:104:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 791,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 786,
                                        "name": "validNodes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 78,
                                        "src": "13923:10:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                                          "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                                        }
                                      },
                                      "id": 788,
                                      "indexExpression": {
                                        "id": 787,
                                        "name": "destinationNode",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 768,
                                        "src": "13934:15:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "13923:27:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                                        "typeString": "struct MasterNode.ValidNodes storage ref"
                                      }
                                    },
                                    "id": 789,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "13951:16:18",
                                    "memberName": "lastDataFromAave",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 66,
                                    "src": "13923:44:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 790,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "13970:1:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "13923:48:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "13803:168:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 801,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 798,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 793,
                                        "name": "validNodes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 78,
                                        "src": "13987:10:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                                          "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                                        }
                                      },
                                      "id": 795,
                                      "indexExpression": {
                                        "id": 794,
                                        "name": "_activeNode",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 766,
                                        "src": "13998:11:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "13987:23:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                                        "typeString": "struct MasterNode.ValidNodes storage ref"
                                      }
                                    },
                                    "id": 796,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "14011:16:18",
                                    "memberName": "lastDataFromAave",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 66,
                                    "src": "13987:40:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "hexValue": "33363030",
                                    "id": 797,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "14030:4:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_3600_by_1",
                                      "typeString": "int_const 3600"
                                    },
                                    "value": "3600"
                                  },
                                  "src": "13987:47:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "expression": {
                                    "id": 799,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "14037:5:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 800,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "14043:9:18",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "14037:15:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "13987:65:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "13803:249:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 811,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 808,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 803,
                                      "name": "validNodes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 78,
                                      "src": "14068:10:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                                        "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                                      }
                                    },
                                    "id": 805,
                                    "indexExpression": {
                                      "id": 804,
                                      "name": "destinationNode",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 768,
                                      "src": "14079:15:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "14068:27:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                                      "typeString": "struct MasterNode.ValidNodes storage ref"
                                    }
                                  },
                                  "id": 806,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "14096:16:18",
                                  "memberName": "lastDataFromAave",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 66,
                                  "src": "14068:44:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "hexValue": "33363030",
                                  "id": 807,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "14115:4:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_3600_by_1",
                                    "typeString": "int_const 3600"
                                  },
                                  "value": "3600"
                                },
                                "src": "14068:51:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "expression": {
                                  "id": 809,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "14134:5:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 810,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "14140:9:18",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "14134:15:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "14068:81:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "13803:346:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 818,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 813,
                                  "name": "validNodes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 78,
                                  "src": "14165:10:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                                    "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                                  }
                                },
                                "id": 815,
                                "indexExpression": {
                                  "id": 814,
                                  "name": "destinationNode",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 768,
                                  "src": "14176:15:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "14165:27:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                                  "typeString": "struct MasterNode.ValidNodes storage ref"
                                }
                              },
                              "id": 816,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14193:11:18",
                              "memberName": "isValidNode",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 60,
                              "src": "14165:39:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "74727565",
                              "id": 817,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14208:4:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            "src": "14165:47:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "13803:409:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 820,
                                "name": "validNodes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 78,
                                "src": "14228:10:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                                  "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                                }
                              },
                              "id": 822,
                              "indexExpression": {
                                "id": 821,
                                "name": "destinationNode",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 768,
                                "src": "14239:15:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "14228:27:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                                "typeString": "struct MasterNode.ValidNodes storage ref"
                              }
                            },
                            "id": 823,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14256:12:18",
                            "memberName": "isActiveNode",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 62,
                            "src": "14228:40:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "66616c7365",
                            "id": 824,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14272:5:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "14228:49:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "13803:474:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 827,
                              "name": "validNodes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78,
                              "src": "14293:10:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                                "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                              }
                            },
                            "id": 829,
                            "indexExpression": {
                              "id": 828,
                              "name": "_activeNode",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 766,
                              "src": "14304:11:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14293:23:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                              "typeString": "struct MasterNode.ValidNodes storage ref"
                            }
                          },
                          "id": 830,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14317:10:18",
                          "memberName": "supplyRate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 72,
                          "src": "14293:34:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14330:1:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "14293:38:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "13803:528:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 842,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 834,
                            "name": "validNodes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78,
                            "src": "14347:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                              "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                            }
                          },
                          "id": 836,
                          "indexExpression": {
                            "id": 835,
                            "name": "_activeNode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 766,
                            "src": "14358:11:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14347:23:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                            "typeString": "struct MasterNode.ValidNodes storage ref"
                          }
                        },
                        "id": 837,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14371:10:18",
                        "memberName": "supplyRate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 72,
                        "src": "14347:34:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 838,
                            "name": "validNodes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78,
                            "src": "14396:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                              "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                            }
                          },
                          "id": 840,
                          "indexExpression": {
                            "id": 839,
                            "name": "destinationNode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 768,
                            "src": "14407:15:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14396:27:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                            "typeString": "struct MasterNode.ValidNodes storage ref"
                          }
                        },
                        "id": 841,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14424:10:18",
                        "memberName": "supplyRate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 72,
                        "src": "14396:38:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "14347:87:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "13803:631:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 772,
                  "id": 844,
                  "nodeType": "Return",
                  "src": "13784:650:18"
                }
              ]
            },
            "functionSelector": "1d880928",
            "id": 846,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkApprovedWarp",
            "nameLocation": "13624:17:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 769,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 766,
                  "mutability": "mutable",
                  "name": "_activeNode",
                  "nameLocation": "13659:11:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 846,
                  "src": "13651:19:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 765,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13651:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 768,
                  "mutability": "mutable",
                  "name": "destinationNode",
                  "nameLocation": "13688:15:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 846,
                  "src": "13680:23:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 767,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13680:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13641:68:18"
            },
            "returnParameters": {
              "id": 772,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 771,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 846,
                  "src": "13731:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 770,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13731:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13730:6:18"
            },
            "scope": 858,
            "src": "13615:826:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 856,
              "nodeType": "Block",
              "src": "14592:58:18",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 851,
                        "name": "validNodes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "14609:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                          "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                        }
                      },
                      "id": 853,
                      "indexExpression": {
                        "id": 852,
                        "name": "activeNode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "14620:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "14609:22:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                        "typeString": "struct MasterNode.ValidNodes storage ref"
                      }
                    },
                    "id": 854,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "14632:11:18",
                    "memberName": "chainCCIPid",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 64,
                    "src": "14609:34:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "functionReturnParameters": 850,
                  "id": 855,
                  "nodeType": "Return",
                  "src": "14602:41:18"
                }
              ]
            },
            "functionSelector": "1803c2f5",
            "id": 857,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getChainIdFromActiveNode",
            "nameLocation": "14534:24:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 847,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14558:2:18"
            },
            "returnParameters": {
              "id": 850,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 849,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 857,
                  "src": "14584:6:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 848,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "14584:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14583:8:18"
            },
            "scope": 858,
            "src": "14525:125:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 859,
        "src": "783:13869:18",
        "usedErrors": [
          29,
          31,
          39,
          43,
          47,
          51,
          53,
          3041
        ]
      }
    ],
    "src": "32:14621:18"
  },
  "bytecode": "60c0346200043e57601f19906001600160401b0390601f906200297f388190038381018616830191908583118484101762000443578084926060946040528339810103126200043e57620000538162000479565b9060209260406200006685840162000479565b9201519480861686036200043e576200007e62000459565b91600983526815d85c9c165a595b1960ba1b868401526200009e62000459565b6004808252630615752560e41b88830152986001600160a01b03968088161562000426576080523315620003e257600080546001600160a01b03199081163317825586519099919290868111620002f2576005908154986001998a81811c91168015620003d7575b86821014620003c35790818984931162000372575b5085908983116001146200031157879262000305575b5050600019600383901b1c191690891b1781555b8451968711620002f257600654908882811c92168015620002e7575b84831014620002d3578798999a9b9c9d5086821162000276575b505081948611600114620002105750509262000204575b5050600019600383901b1c191690821b176006555b60ff1960095416176009551690600754161760075560a0526040516124f090816200048f82396080518181816103270152610761015260a05181818161046001528181610521015281816106fd015281816113fa0152611d820152f35b01519050388062000192565b600683528183208897909594939116915b8282106200025c575050841162000242575b505050811b01600655620001a7565b015160001960f88460031b161c1916905538808062000233565b848401518655889790950194938401939081019062000221565b9091929394959650600685528385209087808a01821c830193868b10620002c9575b918a998c93999897969594929901901c01915b828110620002ba57506200017b565b8581558998508a9101620002ab565b9350829362000298565b50634e487b7160e01b845260228d52602484fd5b91607f169162000161565b634e487b7160e01b845260418d52602484fd5b01519050388062000131565b90858c94169185895287892092895b898282106200035b575050841162000341575b505050811b01815562000145565b015160001960f88460031b161c1916905538808062000333565b8385015186558f9790950194938401930162000320565b90915083875285872089808501861c820192888610620003b9575b918d918695949301871c01915b828110620003aa5750506200011b565b8981558594508d91016200039a565b925081926200038d565b8f876022602492634e487b7160e01b835252fd5b90607f169062000106565b60405162461bcd60e51b8152808b01899052601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f00000000000000006044820152606490fd5b6040516335fdcccd60e21b81526000818d0152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b60408051919082016001600160401b038111838210176200044357604052565b51906001600160a01b03821682036200043e5756fe60806040818152600480361015610021575b505050361561001f57600080fd5b005b600092833560e01c90816301ffc9a714611dc95750806304783ea414611d4957806306fdde0314611c7c578063095ea7b314611c5257806310a78df814611b7b5780631803c2f514611b3c57806318160ddd14611b1f5780631d880928146119b557806323b872dd146118e95780632e1a7d4d14611309578063313ce567146112ed578063395093511461129e578063544b17091461116c5780635c292be514610cdc578063654e8e0c14610cb85780636c1dc07714610c8b5780636c98d51314610c6557806370a0823114610c2d57806379ba509714610b8657806385572ffb146107215780638cf19d19146106dd5780638da5cb5b146106b557806395d89b411461059a5780639637120f146104ef578063995714ae14610430578063a457c2d714610387578063a9059cbb14610356578063b0f479a114610312578063b2d929551461028b578063dd62ed3e146102395763f2fde38b03610011573461023557602036600319011261023557610198611e1d565b906101a1612468565b6001600160a01b03918216923384146101f2575050600180546001600160a01b031916831790558254167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12788380a380f35b906020606492519162461bcd60e51b8352820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152fd5b8280fd5b505034610287578060031936011261028757602091610256611e1d565b8261025f611e33565b6001600160a01b03928316845260038652922091166000908152908352819020549051908152f35b5080fd5b5090346102355760203660031901126102355760e09281906001600160a01b036102b3611e1d565b16815260086020522080549260018201546002830154916003840154930154936001600160401b0381519660ff81161515885260ff8160081c161515602089015260101c16908601526060850152608084015260a083015260c0820152f35b505034610287578160031936011261028757517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b505034610287578060031936011261028757602090610380610376611e1d565b60243590336120f9565b5160018152f35b50823461042d578260031936011261042d576103a1611e1d565b91836024359233815260036020522060018060a01b0384166000526020528360002054908282106103dc57602085610380858503873361230d565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b80fd5b503461023557826003193601126102355733835260086020526104866001600160401b03808486205460101c16907f00000000000000000000000000000000000000000000000000000000000000001614611f98565b338352600860205260ff8284205416156104d957503380835260086020819052918320805461ff00191661010017905560098054610100600160a81b0319169190921b610100600160a81b031617905580f35b6024915190636a9ff79f60e11b82523390820152fd5b5090346102355760603660031901126102355733835260086020526105476001600160401b03808386205460101c16907f00000000000000000000000000000000000000000000000000000000000000001614611f98565b338352600860205260ff818420541615610583573383526008602052822042600182015581356002820155602435600382015560443591015580f35b602492505190636a9ff79f60e11b82523390820152fd5b50913461042d578060031936011261042d578151918160065492600184811c918186169586156106ab575b6020968785108114610698578899509688969785829a529182600014610671575050600114610615575b5050506106119291610602910385611f21565b51928284938452830190611e49565b0390f35b9190869350600683527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f5b82841061065957505050820101816106026106116105ef565b8054848a018601528895508794909301928101610640565b60ff19168782015293151560051b86019093019350849250610602915061061190506105ef565b634e487b7160e01b835260228a52602483fd5b92607f16926105c5565b505034610287578160031936011261028757905490516001600160a01b039091168152602090f35b505034610287578160031936011261028757602090516001600160401b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b50903461023557602091600319838136011261090a578135906001600160401b0390818311610a5d5760a090833603011261098f576001600160a01b03927f000000000000000000000000000000000000000000000000000000000000000084163303610b6f5784519161079483611e9f565b838201358352602490818501358181168103610b4a57888501526044850135818111610a65576107c990843691880101611f42565b938781019485526064860135828111610b67576107eb90853691890101611f42565b9560608201968752608481013590838211610b6b570136602382011215610b675784810135928311610b53578851926108298b8260051b0185611f21565b808452848b85019160061b83010191368311610b4f578501905b828210610b10575050506080015282518781805181010312610a615761086b8887920161240f565b168089526008885260ff878a20541615610afb575082518781805181010312610a615761089a8887920161240f565b1688526008875260ff868920541615610aaa5783518781805181010312610a61576108c88860ff9201612423565b168061090e5750505050519160608380518101031261090a576108fd6060916108f5610907968601612423565b50840161240f565b9201519116612269565b80f35b8480fd5b9295949391926001810361099357505050508251848180518101031261098f5784610939910161240f565b16845260088352832061010061ff00198254161790555190808280518101031261023557610967910161240f565b60098054610100600160a81b03191660089290921b610100600160a81b031691909117905580f35b8580fd5b95969295600203610a6957505194608086805181010312610a5d576109b9828701612423565b508386015195608060608201519101519682518481805181010312610a65576109e48587920161240f565b16895260088452426001878b20015582518481805181010312610a6557610a0d8587920161240f565b1689526002868a20015581518381805181010312610a6157610a318486920161240f565b1688526003858920015551908082805181010312610a5d57610a53910161240f565b1684528320015580f35b8680fd5b8880fd5b8980fd5b8560196064928588519362461bcd60e51b85528401528201527f696e76616c696420636f6d6d616e642066726f6d204e6f6465000000000000006044820152fd5b855162461bcd60e51b81529182018790526026908201527f496e636f6d696e67204d657373616765206e6f742066726f6d20612076616c6960448201526564206e6f646560d01b6064820152608490fd5b8651636a9ff79f60e11b815280840191909152fd5b8a82360312610b4f578a5190610b2582611eeb565b8235908b82168203610b4a57828e928e94528285013583820152815201910190610843565b600080fd5b8c80fd5b83604186634e487b7160e01b600052526000fd5b8a80fd5b8b80fd5b6024908551906335fdcccd60e21b82523390820152fd5b509034610235578260031936011261023557600154916001600160a01b03918284163303610bf157505082546001600160a01b03198082163390811786559316600155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020606492519162461bcd60e51b8352820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b6044820152fd5b5050346102875760203660031901126102875760209181906001600160a01b03610c55611e1d565b1681526002845220549051908152f35b833461042d578060031936011261042d57610c7e612468565b60ff196009541660095580f35b505034610287578160031936011261028757600954905160089190911c6001600160a01b03168152602090f35b50503461028757816003193601126102875760209060ff6009541690519015158152f35b509034610235578060031936011261023557610cf6611e89565b610cfe611e33565b8251916020946001868501526001600160401b038092168585015260018060a01b0392836060911681860152808552610d3685611f06565b8360095460081c1688526008875285882061ff001981541690558360095460081c169485895260ff878a2054948560101c1694161561115557846007541682819360808a51610d8481611e9f565b828152828d820152828c8201528d8382015201528851978a890152898852610dab88611eeb565b8851610db681611ed0565b60008152610dd38a51610dc881611ed0565b621e84808152612431565b938a5199610de08b611e9f565b8a528b8a0152898901528701526080860152855163b0f479a160e01b815287818481305afa90811561114b579085918a91611111575b501693888751926320487ded60e01b8452898480610e378b8a8a8401611ff2565b03818a5afa93841561110757908a9183956110d5575b5060648a51809481936323b872dd60e01b8352338a8401523060248401528860448401525af19081156110cb578a916110ae575b501561106b57600754169086516370a0823160e01b9081815230858201528981602481875afa908115611061578b91611034575b508211610fb85750865163095ea7b360e01b81526001600160a01b038616818501908152602081019290925289939290918991839182908790829060400103925af18015610fae579188959391610f2998979593610f81575b5086516396f4e9f960e01b8152978895869485938401611ff2565b03925af1908115610f785750610f4f575b60098054610100600160a81b03191690558280f35b813d8311610f71575b610f628183611f21565b8101031261042d573880610f3a565b503d610f58565b513d85823e3d90fd5b610fa090873d8911610fa7575b610f988183611f21565b8101906120be565b5038610f0e565b503d610f8e565b87513d85823e3d90fd5b9089888a80879560248451809981938252308a8301525afa9283156110295792610ff8575b5051634787a10360e11b815292830152602482015260449150fd5b90915084813d8311611022575b61100f8183611f21565b81010312610b4a57604493519085610fdd565b503d611005565b8251903d90823e3d90fd5b90508981813d831161105a575b61104b8183611f21565b81010312610b4a575138610eb5565b503d611041565b89513d8d823e3d90fd5b865162461bcd60e51b8152808401899052601a60248201527f4e6f742070726f7669646564204c696e6b20666f7220666565730000000000006044820152606490fd5b6110c59150893d8b11610fa757610f988183611f21565b38610e81565b88513d8c823e3d90fd5b9250935081813d8311611100575b6110ed8183611f21565b81010312610b4a57888a91519338610e4d565b503d6110e3565b89513d84823e3d90fd5b809250898092503d8311611144575b61112a8183611f21565b81010312610a6157518481168103610a6157849038610e16565b503d611120565b87513d8b823e3d90fd5b8651636a9ff79f60e11b8152808401879052602490fd5b50913461042d5760a036600319011261042d57611187611e89565b91611190611e33565b6001600160a01b03936044358581169190829003610b4a5760643590868216809203610b4a57608435976001600160401b038911610a5d576111db6112579697989936908301611f42565b87519460209a8b9716878701528686526111f486611eeb565b88516111ff81611ed0565b6000815261121c8a5161121181611ed0565b620f42408152612431565b928a519761122989611e9f565b885288880152898701526060860152608085015286516320487ded60e01b8152958694859384938401611ff2565b03915afa928315611029579261126f575b5051908152f35b9091508281813d8311611297575b6112878183611f21565b81010312610b4a57519038611268565b503d61127d565b505034610287578060031936011261028757610380602092826112bf611e1d565b91338152600386522060018060a01b03821660005284526112e660243584600020546120d6565b903361230d565b5050346102875781600319360112610287576020905160128152f35b50919034610287576020928360031936011261023557600954600890811c6001600160a01b0390811685528186528385205483359190831c60ff16156118b157338652600287528486205482116118785784519286888501523386850152606097838986015288855261137b85611f06565b331561182c57338852600281528688205498848a106117de5784899a338b526002845203888a20558487540387558888518681527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef843392a383600954841c1690818a52838352888a2054906001600160401b0397888360101c1692897f00000000000000000000000000000000000000000000000000000000000000001684146000146114a357505050505050600954901c1690813b1561098f5784516315e005b760e31b81523385820190815260208101929092529591869182908490829060400103925af1801561149957611475575b5050505080f35b83116114865750523880808061146e565b634e487b7160e01b845260419052602483fd5b83513d87823e3d90fd5b929750939a50935060ff9197949650161561115557846007541682819360808a516114cd81611e9f565b828152828d820152828c8201528d8382015201528851978a8901528988526114f488611eeb565b88516114ff81611ed0565b8b81526115108a51610dc881611ed0565b938a519961151d8b611e9f565b8a528b8a0152898901528701526080860152855163b0f479a160e01b815287818481305afa90811561114b579085918a916117a4575b501693888751926320487ded60e01b84528984806115748b8a8a8401611ff2565b03818a5afa93841561110757908a918395611773575b5060648a51809481936323b872dd60e01b8352338a8401523060248401528860448401525af19081156110cb578a91611756575b501561106b5790889291600754169087516370a0823160e01b9081815230858201528a81602481875afa90811561174c57869161171f575b5082116116a05750875163095ea7b360e01b81526001600160a01b038716848201908152602081019290925291899183919082908790829060400103925af18015610fae57918895939161166698979593610f81575086516396f4e9f960e01b8152978895869485938401611ff2565b03925af1908115610f78575061167b57505080f35b813d8311611699575b61168e8183611f21565b8101031261042d5780f35b503d611684565b899192828a9260248451809481938252308a8301525afa9283156117155786936116e1575b505051634787a10360e11b815292830152602482015260449150fd5b9080929350813d831161170e575b6116f98183611f21565b8101031261090a5760449450519085806116c5565b503d6116ef565b82513d88823e3d90fd5b90508a81813d8311611745575b6117368183611f21565b8101031261098f5751386115f6565b503d61172c565b8a513d88823e3d90fd5b61176d9150893d8b11610fa757610f988183611f21565b386115be565b8281939296503d831161179d575b61178b8183611f21565b8101031261028757899051933861158a565b503d611781565b809250898092503d83116117d7575b6117bd8183611f21565b81010312610a6157518481168103610a6157849038611553565b503d6117b3565b875162461bcd60e51b8152808801839052602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608490fd5b8560849188519162461bcd60e51b8352820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152fd5b845162461bcd60e51b815280850188905260136024820152724e6f7420656e6f756768742062616c616e636560681b6044820152606490fd5b845162461bcd60e51b815280850188905260126024820152714e6f6465206973206e6f742041637469766560701b6044820152606490fd5b5082903461028757606036600319011261028757611905611e1d565b61190d611e33565b6001600160a01b03821684526003602090815285852033865290529284902054604435939260018201611949575b6020866103808787876120f9565b8482106119725750918391611967602096956103809503338361230d565b91939481935061193b565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b50913461042d578160031936011261042d576119cf611e1d565b926119d8611e33565b9060018060a01b03809516928381526008956020968088528683209560018060ff8954851c161515149788611b12575b5087611afe575b87611adf575b87611aa8575b87611a8e575b5086611a75575b86611a60575b86611a3f575b888789519015158152f35b83528752858220830154931681528490200154119050388080808080611a34565b80845281895287842085015415159650611a2e565b858316845281895287842054821c60ff16159650611a28565b8684168552828a528885205460ff16151514965038611a21565b96508286168452818952868885200154610e108101809111611acc57421096611a1b565b634e487b7160e01b855260118652602485fd5b9650808452868885200154610e108101809111611acc57421096611a15565b868416855288852081015415159750611a0f565b8101541515975038611a08565b503461023557826003193601126102355760209250549051908152f35b5050346102875781600319360112610287576001600160401b038160209360018060a01b0360095460081c16815260088552205460101c169051908152f35b50903461023557606036600319011261023557611b96611e1d565b916024356001600160401b038116810361090a576044359283151592838503610a5d57611bc1612468565b60ff6009541615611c18575090600191828060a01b0386168752600860205286209261ff0069ffffffffffffffff000085549360101b169269ffffffffffffffffffff19169160081b161717179055610967575080f35b6020606492519162461bcd60e51b83528201526015602482015274139bc81b5bdc99481b9bd9195cc8185b1b1bddd959605a1b6044820152fd5b505034610287578060031936011261028757602090610380611c72611e1d565b602435903361230d565b50913461042d578060031936011261042d578151918160055492600184811c91818616958615611d3f575b6020968785108114610698578899509688969785829a529182600014610671575050600114611ce3575050506106119291610602910385611f21565b9190869350600583527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db05b828410611d2757505050820101816106026106116105ef565b8054848a018601528895508794909301928101611d0e565b92607f1692611ca7565b5034610235578160031936011261023557611d62611e1d565b913384526008602052611da86001600160401b03808387205460101c16907f00000000000000000000000000000000000000000000000000000000000000001614611f98565b338452600860205260ff818520541615610583578361090760243585612269565b92505034610235576020366003190112610235573563ffffffff60e01b811680910361023557602092506385572ffb60e01b8114908115611e0c575b5015158152f35b6301ffc9a760e01b14905038611e05565b600435906001600160a01b0382168203610b4a57565b602435906001600160a01b0382168203610b4a57565b919082519283825260005b848110611e75575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611e54565b600435906001600160401b0382168203610b4a57565b60a081019081106001600160401b03821117611eba57604052565b634e487b7160e01b600052604160045260246000fd5b602081019081106001600160401b03821117611eba57604052565b604081019081106001600160401b03821117611eba57604052565b608081019081106001600160401b03821117611eba57604052565b90601f801991011681019081106001600160401b03821117611eba57604052565b81601f82011215610b4a578035906001600160401b038211611eba5760405192611f76601f8401601f191660200185611f21565b82845260208383010111610b4a57816000926020809301838601378301015290565b15611f9f57565b60405162461bcd60e51b815260206004820152602560248201527f52657175697265206d617374657220616e64206e6f646520696e2073616d652060448201526431b430b4b760d91b6064820152608490fd5b906001600160401b039093929316815260406020918183820152612021855160a08484015260e0830190611e49565b9161203d8487015193603f199485858303016060860152611e49565b8187015194848483030160808501528080875193848152019601926000905b83821061209557505050505060c06080612092959660018060a01b0360608201511660a085015201519282850301910152611e49565b90565b845180516001600160a01b0316895283015188840152968701969382019360019091019061205c565b90816020910312610b4a57518015158103610b4a5790565b919082018092116120e357565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0390811691821561221657169182156121c5576000828152600260205260408120549180831061217157604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef95876020965260028652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b03169081156122c8577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6020826122ab6000946004546120d6565b6004558484526002825260408420818154019055604051908152a3565b60405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606490fd5b6001600160a01b039081169182156123be571691821561236e5760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260038252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b51906001600160a01b0382168203610b4a57565b519060ff82168203610b4a57565b604051906397a657c960e01b602083015251602482015260248152606081018181106001600160401b03821117611eba5760405290565b6000546001600160a01b0316330361247c57565b60405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b6044820152606490fdfea26469706673582212204eb758cf7a5ac0a85377638c5fb11269fd7fa54acbcdfc6789543b04812321c964736f6c63430008130033",
  "bytecodeSha1": "37273cd8a6719af92df90cf3fe6742fbc91cb605",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.19+commit.7dd6d404"
  },
  "contractName": "MasterNode",
  "coverageMap": {
    "branches": {
      "0": {
        "ERC20._burn": {
          "74": [
            9505,
            9526,
            true
          ],
          "75": [
            9696,
            9720,
            true
          ]
        },
        "ERC20._spendAllowance": {
          "76": [
            11351,
            11388,
            false
          ]
        },
        "ERC20.decreaseAllowance": {
          "73": [
            6809,
            6844,
            true
          ]
        }
      },
      "1": {},
      "10": {},
      "11": {},
      "12": {},
      "17": {},
      "18": {
        "MasterNode._ccipReceive": {
          "65": [
            8011,
            8023,
            false
          ],
          "66": [
            8094,
            8106,
            false
          ],
          "67": [
            8178,
            8190,
            false
          ]
        },
        "MasterNode._sendMessage": {
          "70": [
            9668,
            9711,
            false
          ],
          "71": [
            9544,
            9601,
            true
          ]
        },
        "MasterNode.addValidNode": {
          "72": [
            3354,
            3368,
            true
          ]
        },
        "MasterNode.withdraw": {
          "68": [
            12908,
            12939,
            true
          ],
          "69": [
            13126,
            13188,
            false
          ]
        }
      },
      "2": {},
      "21": {},
      "24": {},
      "3": {},
      "4": {},
      "5": {},
      "6": {},
      "7": {},
      "8": {},
      "9": {}
    },
    "statements": {
      "0": {
        "ERC20._approve": {
          "59": [
            10627,
            10695
          ],
          "60": [
            10705,
            10773
          ],
          "61": [
            10830,
            10867
          ],
          "62": [
            10784,
            10820
          ]
        },
        "ERC20._burn": {
          "36": [
            9497,
            9564
          ],
          "37": [
            9688,
            9759
          ],
          "38": [
            9973,
            10015
          ]
        },
        "ERC20._mint": {
          "55": [
            8642,
            8707
          ],
          "56": [
            8994,
            9036
          ],
          "57": [
            8778,
            8800
          ],
          "58": [
            8946,
            8974
          ]
        },
        "ERC20._spendAllowance": {
          "41": [
            11404,
            11472
          ],
          "42": [
            11514,
            11565
          ]
        },
        "ERC20._transfer": {
          "51": [
            7591,
            7659
          ],
          "52": [
            7669,
            7733
          ],
          "53": [
            7840,
            7912
          ],
          "54": [
            8205,
            8236
          ]
        },
        "ERC20.approve": {
          "47": [
            4568,
            4600
          ]
        },
        "ERC20.balanceOf": {
          "24": [
            3499,
            3524
          ]
        },
        "ERC20.decimals": {
          "33": [
            3166,
            3175
          ]
        },
        "ERC20.decreaseAllowance": {
          "5": [
            6801,
            6886
          ],
          "6": [
            6920,
            6980
          ]
        },
        "ERC20.increaseAllowance": {
          "32": [
            6013,
            6077
          ]
        },
        "ERC20.name": {
          "48": [
            2233,
            2245
          ]
        },
        "ERC20.symbol": {
          "12": [
            2446,
            2460
          ]
        },
        "ERC20.transfer": {
          "3": [
            3860,
            3888
          ]
        },
        "ERC20.transferFrom": {
          "40": [
            5421,
            5448
          ]
        }
      },
      "1": {},
      "10": {},
      "11": {},
      "12": {},
      "17": {},
      "18": {
        "MasterNode._aWarpTokenMinter": {
          "14": [
            4215,
            4241
          ]
        },
        "MasterNode._buildCCIPMessage": {
          "27": [
            10877,
            11522
          ]
        },
        "MasterNode._ccipReceive": {
          "13": [
            7761,
            7932
          ],
          "21": [
            8267,
            8302
          ]
        },
        "MasterNode._nodeAaveFeed": {
          "17": [
            6107,
            6212
          ],
          "18": [
            6222,
            6326
          ],
          "19": [
            6336,
            6440
          ],
          "20": [
            6450,
            6544
          ]
        },
        "MasterNode._resmumeOperations": {
          "15": [
            4960,
            5050
          ],
          "16": [
            5060,
            5118
          ]
        },
        "MasterNode._resmumeOperationsFromSameChain": {
          "7": [
            5404,
            5427
          ]
        },
        "MasterNode._sendMessage": {
          "28": [
            9523,
            9653
          ],
          "29": [
            9664,
            9792
          ],
          "30": [
            9910,
            9952
          ],
          "31": [
            10044,
            10114
          ]
        },
        "MasterNode.aWarpTokenMinterFromSameChain": {
          "49": [
            4507,
            4533
          ]
        },
        "MasterNode.addValidNode": {
          "45": [
            3346,
            3394
          ],
          "46": [
            3404,
            3446
          ]
        },
        "MasterNode.checkApprovedWarp": {
          "43": [
            13784,
            14434
          ]
        },
        "MasterNode.getChainIdFromActiveNode": {
          "44": [
            14602,
            14643
          ]
        },
        "MasterNode.nodeAaveFeedFromSameChain": {
          "8": [
            6843,
            6900
          ],
          "9": [
            6910,
            6966
          ],
          "10": [
            6976,
            7032
          ],
          "11": [
            7042,
            7088
          ]
        },
        "MasterNode.stopAddingNodes": {
          "25": [
            3170,
            3192
          ]
        },
        "MasterNode.warpAssets": {
          "26": [
            12372,
            12415
          ]
        },
        "MasterNode.withdraw": {
          "34": [
            12823,
            12889
          ],
          "35": [
            12900,
            12963
          ],
          "39": [
            13204,
            13263
          ]
        }
      },
      "2": {},
      "21": {},
      "24": {},
      "3": {
        "Context._msgSender": {
          "4": [
            712,
            729
          ]
        }
      },
      "4": {
        "CCIPReceiver.getRouter": {
          "2": [
            2262,
            2290
          ]
        },
        "CCIPReceiver.supportsInterface": {
          "50": [
            1502,
            1609
          ]
        }
      },
      "5": {},
      "6": {},
      "7": {
        "Client._argsToBytes": {
          "63": [
            1387,
            1450
          ]
        }
      },
      "8": {},
      "9": {
        "ConfirmedOwnerWithProposal._transferOwnership": {
          "0": [
            1629,
            1681
          ],
          "1": [
            1714,
            1758
          ]
        },
        "ConfirmedOwnerWithProposal._validateOwnership": {
          "64": [
            1894,
            1950
          ]
        },
        "ConfirmedOwnerWithProposal.acceptOwnership": {
          "22": [
            1120,
            1183
          ],
          "23": [
            1282,
            1329
          ]
        }
      }
    }
  },
  "dependencies": [
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/CCIPReceiver",
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/Client",
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/ConfirmedOwner",
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/ConfirmedOwnerWithProposal",
    "OpenZeppelin/openzeppelin-contracts@4.8.3/Context",
    "OpenZeppelin/openzeppelin-contracts@4.8.3/ERC20",
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/IAny2EVMMessageReceiver",
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.8.3/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.8.3/IERC20Metadata",
    "INode",
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/IOwnable",
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/IRouterClient",
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/LinkTokenInterface",
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/OwnerIsCreator",
    "UtilsMasterNode"
  ],
  "deployedBytecode": "60806040818152600480361015610021575b505050361561001f57600080fd5b005b600092833560e01c90816301ffc9a714611dc95750806304783ea414611d4957806306fdde0314611c7c578063095ea7b314611c5257806310a78df814611b7b5780631803c2f514611b3c57806318160ddd14611b1f5780631d880928146119b557806323b872dd146118e95780632e1a7d4d14611309578063313ce567146112ed578063395093511461129e578063544b17091461116c5780635c292be514610cdc578063654e8e0c14610cb85780636c1dc07714610c8b5780636c98d51314610c6557806370a0823114610c2d57806379ba509714610b8657806385572ffb146107215780638cf19d19146106dd5780638da5cb5b146106b557806395d89b411461059a5780639637120f146104ef578063995714ae14610430578063a457c2d714610387578063a9059cbb14610356578063b0f479a114610312578063b2d929551461028b578063dd62ed3e146102395763f2fde38b03610011573461023557602036600319011261023557610198611e1d565b906101a1612468565b6001600160a01b03918216923384146101f2575050600180546001600160a01b031916831790558254167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12788380a380f35b906020606492519162461bcd60e51b8352820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152fd5b8280fd5b505034610287578060031936011261028757602091610256611e1d565b8261025f611e33565b6001600160a01b03928316845260038652922091166000908152908352819020549051908152f35b5080fd5b5090346102355760203660031901126102355760e09281906001600160a01b036102b3611e1d565b16815260086020522080549260018201546002830154916003840154930154936001600160401b0381519660ff81161515885260ff8160081c161515602089015260101c16908601526060850152608084015260a083015260c0820152f35b505034610287578160031936011261028757517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b505034610287578060031936011261028757602090610380610376611e1d565b60243590336120f9565b5160018152f35b50823461042d578260031936011261042d576103a1611e1d565b91836024359233815260036020522060018060a01b0384166000526020528360002054908282106103dc57602085610380858503873361230d565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b80fd5b503461023557826003193601126102355733835260086020526104866001600160401b03808486205460101c16907f00000000000000000000000000000000000000000000000000000000000000001614611f98565b338352600860205260ff8284205416156104d957503380835260086020819052918320805461ff00191661010017905560098054610100600160a81b0319169190921b610100600160a81b031617905580f35b6024915190636a9ff79f60e11b82523390820152fd5b5090346102355760603660031901126102355733835260086020526105476001600160401b03808386205460101c16907f00000000000000000000000000000000000000000000000000000000000000001614611f98565b338352600860205260ff818420541615610583573383526008602052822042600182015581356002820155602435600382015560443591015580f35b602492505190636a9ff79f60e11b82523390820152fd5b50913461042d578060031936011261042d578151918160065492600184811c918186169586156106ab575b6020968785108114610698578899509688969785829a529182600014610671575050600114610615575b5050506106119291610602910385611f21565b51928284938452830190611e49565b0390f35b9190869350600683527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f5b82841061065957505050820101816106026106116105ef565b8054848a018601528895508794909301928101610640565b60ff19168782015293151560051b86019093019350849250610602915061061190506105ef565b634e487b7160e01b835260228a52602483fd5b92607f16926105c5565b505034610287578160031936011261028757905490516001600160a01b039091168152602090f35b505034610287578160031936011261028757602090516001600160401b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b50903461023557602091600319838136011261090a578135906001600160401b0390818311610a5d5760a090833603011261098f576001600160a01b03927f000000000000000000000000000000000000000000000000000000000000000084163303610b6f5784519161079483611e9f565b838201358352602490818501358181168103610b4a57888501526044850135818111610a65576107c990843691880101611f42565b938781019485526064860135828111610b67576107eb90853691890101611f42565b9560608201968752608481013590838211610b6b570136602382011215610b675784810135928311610b53578851926108298b8260051b0185611f21565b808452848b85019160061b83010191368311610b4f578501905b828210610b10575050506080015282518781805181010312610a615761086b8887920161240f565b168089526008885260ff878a20541615610afb575082518781805181010312610a615761089a8887920161240f565b1688526008875260ff868920541615610aaa5783518781805181010312610a61576108c88860ff9201612423565b168061090e5750505050519160608380518101031261090a576108fd6060916108f5610907968601612423565b50840161240f565b9201519116612269565b80f35b8480fd5b9295949391926001810361099357505050508251848180518101031261098f5784610939910161240f565b16845260088352832061010061ff00198254161790555190808280518101031261023557610967910161240f565b60098054610100600160a81b03191660089290921b610100600160a81b031691909117905580f35b8580fd5b95969295600203610a6957505194608086805181010312610a5d576109b9828701612423565b508386015195608060608201519101519682518481805181010312610a65576109e48587920161240f565b16895260088452426001878b20015582518481805181010312610a6557610a0d8587920161240f565b1689526002868a20015581518381805181010312610a6157610a318486920161240f565b1688526003858920015551908082805181010312610a5d57610a53910161240f565b1684528320015580f35b8680fd5b8880fd5b8980fd5b8560196064928588519362461bcd60e51b85528401528201527f696e76616c696420636f6d6d616e642066726f6d204e6f6465000000000000006044820152fd5b855162461bcd60e51b81529182018790526026908201527f496e636f6d696e67204d657373616765206e6f742066726f6d20612076616c6960448201526564206e6f646560d01b6064820152608490fd5b8651636a9ff79f60e11b815280840191909152fd5b8a82360312610b4f578a5190610b2582611eeb565b8235908b82168203610b4a57828e928e94528285013583820152815201910190610843565b600080fd5b8c80fd5b83604186634e487b7160e01b600052526000fd5b8a80fd5b8b80fd5b6024908551906335fdcccd60e21b82523390820152fd5b509034610235578260031936011261023557600154916001600160a01b03918284163303610bf157505082546001600160a01b03198082163390811786559316600155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020606492519162461bcd60e51b8352820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b6044820152fd5b5050346102875760203660031901126102875760209181906001600160a01b03610c55611e1d565b1681526002845220549051908152f35b833461042d578060031936011261042d57610c7e612468565b60ff196009541660095580f35b505034610287578160031936011261028757600954905160089190911c6001600160a01b03168152602090f35b50503461028757816003193601126102875760209060ff6009541690519015158152f35b509034610235578060031936011261023557610cf6611e89565b610cfe611e33565b8251916020946001868501526001600160401b038092168585015260018060a01b0392836060911681860152808552610d3685611f06565b8360095460081c1688526008875285882061ff001981541690558360095460081c169485895260ff878a2054948560101c1694161561115557846007541682819360808a51610d8481611e9f565b828152828d820152828c8201528d8382015201528851978a890152898852610dab88611eeb565b8851610db681611ed0565b60008152610dd38a51610dc881611ed0565b621e84808152612431565b938a5199610de08b611e9f565b8a528b8a0152898901528701526080860152855163b0f479a160e01b815287818481305afa90811561114b579085918a91611111575b501693888751926320487ded60e01b8452898480610e378b8a8a8401611ff2565b03818a5afa93841561110757908a9183956110d5575b5060648a51809481936323b872dd60e01b8352338a8401523060248401528860448401525af19081156110cb578a916110ae575b501561106b57600754169086516370a0823160e01b9081815230858201528981602481875afa908115611061578b91611034575b508211610fb85750865163095ea7b360e01b81526001600160a01b038616818501908152602081019290925289939290918991839182908790829060400103925af18015610fae579188959391610f2998979593610f81575b5086516396f4e9f960e01b8152978895869485938401611ff2565b03925af1908115610f785750610f4f575b60098054610100600160a81b03191690558280f35b813d8311610f71575b610f628183611f21565b8101031261042d573880610f3a565b503d610f58565b513d85823e3d90fd5b610fa090873d8911610fa7575b610f988183611f21565b8101906120be565b5038610f0e565b503d610f8e565b87513d85823e3d90fd5b9089888a80879560248451809981938252308a8301525afa9283156110295792610ff8575b5051634787a10360e11b815292830152602482015260449150fd5b90915084813d8311611022575b61100f8183611f21565b81010312610b4a57604493519085610fdd565b503d611005565b8251903d90823e3d90fd5b90508981813d831161105a575b61104b8183611f21565b81010312610b4a575138610eb5565b503d611041565b89513d8d823e3d90fd5b865162461bcd60e51b8152808401899052601a60248201527f4e6f742070726f7669646564204c696e6b20666f7220666565730000000000006044820152606490fd5b6110c59150893d8b11610fa757610f988183611f21565b38610e81565b88513d8c823e3d90fd5b9250935081813d8311611100575b6110ed8183611f21565b81010312610b4a57888a91519338610e4d565b503d6110e3565b89513d84823e3d90fd5b809250898092503d8311611144575b61112a8183611f21565b81010312610a6157518481168103610a6157849038610e16565b503d611120565b87513d8b823e3d90fd5b8651636a9ff79f60e11b8152808401879052602490fd5b50913461042d5760a036600319011261042d57611187611e89565b91611190611e33565b6001600160a01b03936044358581169190829003610b4a5760643590868216809203610b4a57608435976001600160401b038911610a5d576111db6112579697989936908301611f42565b87519460209a8b9716878701528686526111f486611eeb565b88516111ff81611ed0565b6000815261121c8a5161121181611ed0565b620f42408152612431565b928a519761122989611e9f565b885288880152898701526060860152608085015286516320487ded60e01b8152958694859384938401611ff2565b03915afa928315611029579261126f575b5051908152f35b9091508281813d8311611297575b6112878183611f21565b81010312610b4a57519038611268565b503d61127d565b505034610287578060031936011261028757610380602092826112bf611e1d565b91338152600386522060018060a01b03821660005284526112e660243584600020546120d6565b903361230d565b5050346102875781600319360112610287576020905160128152f35b50919034610287576020928360031936011261023557600954600890811c6001600160a01b0390811685528186528385205483359190831c60ff16156118b157338652600287528486205482116118785784519286888501523386850152606097838986015288855261137b85611f06565b331561182c57338852600281528688205498848a106117de5784899a338b526002845203888a20558487540387558888518681527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef843392a383600954841c1690818a52838352888a2054906001600160401b0397888360101c1692897f00000000000000000000000000000000000000000000000000000000000000001684146000146114a357505050505050600954901c1690813b1561098f5784516315e005b760e31b81523385820190815260208101929092529591869182908490829060400103925af1801561149957611475575b5050505080f35b83116114865750523880808061146e565b634e487b7160e01b845260419052602483fd5b83513d87823e3d90fd5b929750939a50935060ff9197949650161561115557846007541682819360808a516114cd81611e9f565b828152828d820152828c8201528d8382015201528851978a8901528988526114f488611eeb565b88516114ff81611ed0565b8b81526115108a51610dc881611ed0565b938a519961151d8b611e9f565b8a528b8a0152898901528701526080860152855163b0f479a160e01b815287818481305afa90811561114b579085918a916117a4575b501693888751926320487ded60e01b84528984806115748b8a8a8401611ff2565b03818a5afa93841561110757908a918395611773575b5060648a51809481936323b872dd60e01b8352338a8401523060248401528860448401525af19081156110cb578a91611756575b501561106b5790889291600754169087516370a0823160e01b9081815230858201528a81602481875afa90811561174c57869161171f575b5082116116a05750875163095ea7b360e01b81526001600160a01b038716848201908152602081019290925291899183919082908790829060400103925af18015610fae57918895939161166698979593610f81575086516396f4e9f960e01b8152978895869485938401611ff2565b03925af1908115610f78575061167b57505080f35b813d8311611699575b61168e8183611f21565b8101031261042d5780f35b503d611684565b899192828a9260248451809481938252308a8301525afa9283156117155786936116e1575b505051634787a10360e11b815292830152602482015260449150fd5b9080929350813d831161170e575b6116f98183611f21565b8101031261090a5760449450519085806116c5565b503d6116ef565b82513d88823e3d90fd5b90508a81813d8311611745575b6117368183611f21565b8101031261098f5751386115f6565b503d61172c565b8a513d88823e3d90fd5b61176d9150893d8b11610fa757610f988183611f21565b386115be565b8281939296503d831161179d575b61178b8183611f21565b8101031261028757899051933861158a565b503d611781565b809250898092503d83116117d7575b6117bd8183611f21565b81010312610a6157518481168103610a6157849038611553565b503d6117b3565b875162461bcd60e51b8152808801839052602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608490fd5b8560849188519162461bcd60e51b8352820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152fd5b845162461bcd60e51b815280850188905260136024820152724e6f7420656e6f756768742062616c616e636560681b6044820152606490fd5b845162461bcd60e51b815280850188905260126024820152714e6f6465206973206e6f742041637469766560701b6044820152606490fd5b5082903461028757606036600319011261028757611905611e1d565b61190d611e33565b6001600160a01b03821684526003602090815285852033865290529284902054604435939260018201611949575b6020866103808787876120f9565b8482106119725750918391611967602096956103809503338361230d565b91939481935061193b565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b50913461042d578160031936011261042d576119cf611e1d565b926119d8611e33565b9060018060a01b03809516928381526008956020968088528683209560018060ff8954851c161515149788611b12575b5087611afe575b87611adf575b87611aa8575b87611a8e575b5086611a75575b86611a60575b86611a3f575b888789519015158152f35b83528752858220830154931681528490200154119050388080808080611a34565b80845281895287842085015415159650611a2e565b858316845281895287842054821c60ff16159650611a28565b8684168552828a528885205460ff16151514965038611a21565b96508286168452818952868885200154610e108101809111611acc57421096611a1b565b634e487b7160e01b855260118652602485fd5b9650808452868885200154610e108101809111611acc57421096611a15565b868416855288852081015415159750611a0f565b8101541515975038611a08565b503461023557826003193601126102355760209250549051908152f35b5050346102875781600319360112610287576001600160401b038160209360018060a01b0360095460081c16815260088552205460101c169051908152f35b50903461023557606036600319011261023557611b96611e1d565b916024356001600160401b038116810361090a576044359283151592838503610a5d57611bc1612468565b60ff6009541615611c18575090600191828060a01b0386168752600860205286209261ff0069ffffffffffffffff000085549360101b169269ffffffffffffffffffff19169160081b161717179055610967575080f35b6020606492519162461bcd60e51b83528201526015602482015274139bc81b5bdc99481b9bd9195cc8185b1b1bddd959605a1b6044820152fd5b505034610287578060031936011261028757602090610380611c72611e1d565b602435903361230d565b50913461042d578060031936011261042d578151918160055492600184811c91818616958615611d3f575b6020968785108114610698578899509688969785829a529182600014610671575050600114611ce3575050506106119291610602910385611f21565b9190869350600583527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db05b828410611d2757505050820101816106026106116105ef565b8054848a018601528895508794909301928101611d0e565b92607f1692611ca7565b5034610235578160031936011261023557611d62611e1d565b913384526008602052611da86001600160401b03808387205460101c16907f00000000000000000000000000000000000000000000000000000000000000001614611f98565b338452600860205260ff818520541615610583578361090760243585612269565b92505034610235576020366003190112610235573563ffffffff60e01b811680910361023557602092506385572ffb60e01b8114908115611e0c575b5015158152f35b6301ffc9a760e01b14905038611e05565b600435906001600160a01b0382168203610b4a57565b602435906001600160a01b0382168203610b4a57565b919082519283825260005b848110611e75575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611e54565b600435906001600160401b0382168203610b4a57565b60a081019081106001600160401b03821117611eba57604052565b634e487b7160e01b600052604160045260246000fd5b602081019081106001600160401b03821117611eba57604052565b604081019081106001600160401b03821117611eba57604052565b608081019081106001600160401b03821117611eba57604052565b90601f801991011681019081106001600160401b03821117611eba57604052565b81601f82011215610b4a578035906001600160401b038211611eba5760405192611f76601f8401601f191660200185611f21565b82845260208383010111610b4a57816000926020809301838601378301015290565b15611f9f57565b60405162461bcd60e51b815260206004820152602560248201527f52657175697265206d617374657220616e64206e6f646520696e2073616d652060448201526431b430b4b760d91b6064820152608490fd5b906001600160401b039093929316815260406020918183820152612021855160a08484015260e0830190611e49565b9161203d8487015193603f199485858303016060860152611e49565b8187015194848483030160808501528080875193848152019601926000905b83821061209557505050505060c06080612092959660018060a01b0360608201511660a085015201519282850301910152611e49565b90565b845180516001600160a01b0316895283015188840152968701969382019360019091019061205c565b90816020910312610b4a57518015158103610b4a5790565b919082018092116120e357565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0390811691821561221657169182156121c5576000828152600260205260408120549180831061217157604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef95876020965260028652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b03169081156122c8577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6020826122ab6000946004546120d6565b6004558484526002825260408420818154019055604051908152a3565b60405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606490fd5b6001600160a01b039081169182156123be571691821561236e5760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260038252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b51906001600160a01b0382168203610b4a57565b519060ff82168203610b4a57565b604051906397a657c960e01b602083015251602482015260248152606081018181106001600160401b03821117611eba5760405290565b6000546001600160a01b0316330361247c57565b60405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b6044820152606490fdfea26469706673582212204eb758cf7a5ac0a85377638c5fb11269fd7fa54acbcdfc6789543b04812321c964736f6c63430008130033",
  "deployedSourceMap": "783:13869:18:-:0;;;;;;;;;;;;-1:-1:-1;783:13869:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;783:13869:18;;;;;;:::i;:::-;2032:59:9;;;:::i;:::-;-1:-1:-1;;;;;783:13869:18;;;;1643:10:9;1637:16;;783:13869:18;;-1:-1:-1;;783:13869:18;;;-1:-1:-1;;;;;;783:13869:18;;;;;;;;1719:39:9;783:13869:18;;1719:39:9;783:13869:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;-1:-1:-1;;;;;783:13869:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;783:13869:18;;;;;;;;-1:-1:-1;;;;;783:13869:18;;:::i;:::-;;;;2111:48;783:13869;;;;;2111:48;783:13869;2111:48;;783:13869;2111:48;;;783:13869;2111:48;783:13869;2111:48;;783:13869;2111:48;;783:13869;;-1:-1:-1;;;;;783:13869:18;;;;;;;;;;;;2111:48;783:13869;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2277:12:4;-1:-1:-1;;;;;783:13869:18;;;;;;;;;;;;;;;;;;;;;;3881:6:0;783:13869:18;;:::i;:::-;;;719:10:3;;3881:6:0;:::i;:::-;783:13869:18;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;719:10:3;;783:13869:18;;;;;;;;;;;;;;;;;;;;;6809:35:0;;;;783:13869:18;;;;6945:34:0;783:13869:18;;;;719:10:3;6945:34:0;:::i;783:13869:18:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:13869:18;;;;;;;;;;;;;;;;;;;;;2976:10;783:13869;;2965:10;783:13869;;2944:146;-1:-1:-1;;;;;783:13869:18;;;;;;;;3003:24;;783:13869;2965:62;2944:146;:::i;:::-;2976:10;783:13869;;2965:10;783:13869;;;;;;;;2769:36;2765:110;;-1:-1:-1;2976:10:18;783:13869;;;2965:10;783:13869;;;;;;;;;-1:-1:-1;;783:13869:18;;;;;5404:23;783:13869;;-1:-1:-1;;;;;;783:13869:18;;;;;-1:-1:-1;;;;;783:13869:18;;;;;;2765:110;783:13869;;;2828:36;;;;;;2976:10;2828:36;;;783:13869;2828:36;783:13869;;;;;;;;-1:-1:-1;;783:13869:18;;;;2976:10;783:13869;;2965:10;783:13869;;2944:146;-1:-1:-1;;;;;783:13869:18;;;;;;;;3003:24;;783:13869;2965:62;2944:146;:::i;:::-;2976:10;783:13869;;2965:10;783:13869;;;;;;;;2769:36;2765:110;;2976:10;783:13869;;2965:10;783:13869;;;;6885:15;783:13869;6843:39;;783:13869;;;6910:38;;;783:13869;;;;6976:38;;783:13869;;;7042:33;;783:13869;;;2765:110;783:13869;;;;2828:36;;;;;;2976:10;2828:36;;;783:13869;2828:36;783:13869;;;;;;;;;;;;;;;;;;2453:7:0;783:13869:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;2453:7:0;783:13869:18;;;;;;;;;-1:-1:-1;;;783:13869:18;;;;;;;;;;;;;;;;;;;-1:-1:-1;783:13869:18;;;;;;;;;;;-1:-1:-1;;783:13869:18;;;;;;;;;;;;;;;;-1:-1:-1;783:13869:18;;-1:-1:-1;783:13869:18;;-1:-1:-1;783:13869:18;;-1:-1:-1;783:13869:18;;;-1:-1:-1;;;783:13869:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;783:13869:18;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1816:48:18;783:13869;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;783:13869:18;;;;;;;;;;;;;;;-1:-1:-1;;;;;783:13869:18;2449:12:4;783:13869:18;;2427:10:4;:35;2423:73;;783:13869:18;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7711:22;;783:13869;;;;7700:45;;783:13869;;;;;7700:45;;;;783:13869;:::i;:::-;;;;;2770:10;783:13869;;;;;;;;2769:36;2765:110;;7804:22;;;783:13869;;;;7793:45;;783:13869;;;;;7793:45;;;;783:13869;:::i;:::-;;;;2770:10;783:13869;;;;;;;;;;;429:20:21;;783:13869:18;;;;418:41:21;;783:13869:18;;;;;418:41:21;783:13869:18;418:41:21;;783:13869:18;:::i;:::-;;8011:12;;;4135:20;;;;;783:13869;;;;;4111:93;;783:13869;;;;;;4111:93;783:13869;4234:6;4111:93;;;783:13869;:::i;:::-;;;;;:::i;:::-;;;;;;4234:6;:::i;:::-;783:13869;;;;;;8007:306;8094:12;;;;;;783:13869;8094:12;;783:13869;;4982:22;;;;;;783:13869;;;;4971:45;;783:13869;;;;4971:45;783:13869;4971:45;;783:13869;:::i;:::-;;;;2770:10;783:13869;;;;;;;;;;;;;5084:22;783:13869;;;;;5073:45;;783:13869;;;;;5073:45;;783:13869;:::i;:::-;5060:58;783:13869;;-1:-1:-1;;;;;;783:13869:18;2770:10;783:13869;;;;-1:-1:-1;;;;;783:13869:18;;;;;;;;;;;;;8090:223;8178:12;;;;8189:1;8178:12;8189:1;;6010:20;;783:13869;;;;;5982:114;;783:13869;;;;;5982:114;;;783:13869;:::i;:::-;;;;;;;;;;;;;;;6129:22;;;783:13869;;;;6118:45;;783:13869;;;;;6118:45;;;;783:13869;:::i;:::-;;;;2770:10;783:13869;;6197:15;783:13869;;;;6107:87;783:13869;6244:22;;783:13869;;;;6233:45;;783:13869;;;;;6233:45;;;;783:13869;:::i;:::-;;;;8189:1;783:13869;;;6222:86;783:13869;6358:22;;783:13869;;;;6347:45;;783:13869;;;;;6347:45;;;;783:13869;:::i;:::-;;;;;;;;6336:86;783:13869;6472:22;783:13869;;;;;6461:45;;783:13869;;;;;6461:45;;783:13869;:::i;:::-;;;;;;6450:81;783:13869;;;;;;;;;;;;;;;8174:139;783:13869;;;;;;;;;;;8267:35;;;;783:13869;;;;;;;;;8267:35;783:13869;;;-1:-1:-1;;;783:13869:18;;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:13869:18;;;;;;;2765:110;783:13869;;-1:-1:-1;;;2828:36:18;;;;;783:13869;;;;2828:36;783:13869;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2423:73:4;783:13869:18;;;;2471:25:4;;;;;;2427:10;2471:25;;;783:13869:18;2471:25:4;783:13869:18;;;;;;;;;;;;;;1142:14:9;783:13869:18;;-1:-1:-1;;;;;783:13869:18;;;;1128:10:9;:28;783:13869:18;;-1:-1:-1;;783:13869:18;;-1:-1:-1;;;;;;783:13869:18;;;1128:10:9;783:13869:18;;;;;;;-1:-1:-1;783:13869:18;;1287:42:9;783:13869:18;;1287:42:9;783:13869:18;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:13869:18;;;;;;;;;;;;;-1:-1:-1;;783:13869:18;;;;;;;;-1:-1:-1;;;;;783:13869:18;;:::i;:::-;;;;3506:9:0;783:13869:18;;;;;;;;;;;;;;;;;;;;;;;2032:59:9;;:::i;:::-;783:13869:18;;3170:22;783:13869;;3170:22;783:13869;;;;;;;;;;;;;;;;;2205:25;783:13869;;;;;;;;-1:-1:-1;;;;;783:13869:18;;;;;;;;;;;;;;;;;;;;;;;2166:33;783:13869;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;12242:120;12210:1;12242:120;;;783:13869;-1:-1:-1;;;;;783:13869:18;;;;;;;;;;;;;;;;;;;;;12242:120;;;;;;:::i;:::-;783:13869;12383:10;783:13869;;;;;;;;;;;;;;;;;;;;12383:10;783:13869;;;;;;;;;;;;;;;;;;;;2769:36;2765:110;;783:13869;9203:11;783:13869;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;10946:21;;;;783:13869;10946:21;;;;;;:::i;:::-;783:13869;;;;;:::i;:::-;;;;11191:166;783:13869;;;;;:::i;:::-;11328:9;783:13869;;11191:166;:::i;:::-;783:13869;;;;;;;:::i;:::-;;;10896:626;;;783:13869;10896:626;;;783:13869;10896:626;;783:13869;;10896:626;;783:13869;;;-1:-1:-1;;;9356:16:18;;10896:626;783:13869;9356:4;783:13869;9356:4;:16;;;;;;;;;;;;;;783:13869;;;;;;;;;;;9456:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;783:13869;;;;;;;;;;;;9544:57;;9569:10;9544:57;;;783:13869;9356:4;783:13869;;;;;;;;;9544:57;;;;;;;;;;;783:13869;;;;;9203:11;783:13869;;;;;;;;9675:36;;;;9356:4;9675:36;;;783:13869;9675:36;;783:13869;9675:36;;;;;;;;;;;;;783:13869;9668:43;;;9664:128;;-1:-1:-1;783:13869:18;;-1:-1:-1;;;9910:42:18;;-1:-1:-1;;;;;783:13869:18;;9910:42;;;783:13869;;;;;;;;;;;;;;;;;;;;;;;;;;;9910:42;;;;;;;;;;;;;10056:58;9910:42;;;;;;783:13869;-1:-1:-1;783:13869:18;;-1:-1:-1;;;10056:58:18;;783:13869;;;;;;;10056:58;;;:::i;:::-;;;;;;;;;;;;;783:13869;12383:10;783:13869;;-1:-1:-1;;;;;;783:13869:18;;;;;;10056:58;;;;;;;;;;;;:::i;:::-;;;783:13869;;;;10056:58;;;;;;;;;;783:13869;;;;;;;;9910:42;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;783:13869;;;;;;;;;9664:128;783:13869;;;;;;;;;;9749:36;;;;;;9356:4;9749:36;;;783:13869;9749:36;;;;;;;;;;9664:128;-1:-1:-1;783:13869:18;-1:-1:-1;;;9732:60:18;;;;;783:13869;;;;;;;-1:-1:-1;9732:60:18;9749:36;;;;;;;;;;;;;;;;:::i;:::-;;;783:13869;;;;;;;9749:36;;;;;;;;;;783:13869;;;;;;;;;;9675:36;;;;;;;;;;;;;;;;:::i;:::-;;;783:13869;;;;;9675:36;;;;;;;;;783:13869;;;;;;;;;;;;-1:-1:-1;;;783:13869:18;;;;;;;;;;;;;;;;;;;;;9544:57;;;;;;;;;;;;;;:::i;:::-;;;;;783:13869;;;;;;;;;9456:56;;;;;;;;;;;;;;;;;:::i;:::-;;;783:13869;;;;;;;;9456:56;;;;;;;;;;783:13869;;;;;;;;;9356:16;;;;;;;;;;;;;;;;;;:::i;:::-;;;783:13869;;;;;;;;;;;;9356:16;;;;;;;;;;;783:13869;;;;;;;;;2765:110;783:13869;;-1:-1:-1;;;2828:36:18;;;;;783:13869;;;;;2828:36;783:13869;;;;;;;;-1:-1:-1;;783:13869:18;;;;;;:::i;:::-;;;;:::i;:::-;-1:-1:-1;;;;;783:13869:18;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;783:13869:18;;;;;1612:48:21;783:13869:18;;;;;;;;;:::i;:::-;;;;;;;;;942:20:21;;;783:13869:18;942:20:21;;;;;;:::i;:::-;783:13869:18;;;;;:::i;:::-;;;;1176:157:21;783:13869:18;;;;;:::i;:::-;1307:9:21;783:13869:18;;1176:157:21;:::i;:::-;783:13869:18;;;;;;;:::i;:::-;;;895:574:21;;;783:13869:18;895:574:21;;;783:13869:18;;895:574:21;;783:13869:18;;895:574:21;;783:13869:18;;;-1:-1:-1;;;1612:48:21;;783:13869:18;;;;;;;1612:48:21;;;:::i;:::-;;;;;;;;;;;;;783:13869:18;;;;;;;1612:48:21;;;;;;;;;;;;;;;;;:::i;:::-;;;783:13869:18;;;;;1612:48:21;;;;;;;;;783:13869:18;;;;;;;;;;;;;;6038:38:0;783:13869:18;;;;;:::i;:::-;719:10:3;;783:13869:18;;;;;;;;;;;;;;;;;6038:38:0;783:13869:18;;;;;;6038:38:0;:::i;:::-;719:10:3;;6038:38:0;:::i;783:13869:18:-;;;;;;;;;;;;;;;;;3173:2:0;783:13869:18;;;;;;;;;;;;;;;;;;;;12842:10;783:13869;;;;;-1:-1:-1;;;;;783:13869:18;;;;;;;;;;;;;;;;;;;;;;;12928:10;783:13869;;3506:9:0;783:13869:18;;;;;;12908:31;;783:13869;;;;13029:46;;;;;783:13869;12928:10;783:13869;;;;;;;;;;;13029:46;;;;;;:::i;:::-;12928:10;9505:21:0;783:13869:18;;12928:10;783:13869;;3506:9:0;783:13869:18;;;;;;9696:24:0;;;;783:13869:18;;12928:10;;;;783:13869;;3506:9:0;783:13869:18;;;;;;;;;;;;;;;;;;;9978:37:0;12928:10:18;;9978:37:0;;783:13869:18;12842:10;783:13869;;;;;;;;;;;;;;;;-1:-1:-1;;;;;783:13869:18;;;;;;13164:24;;;783:13869;13126:62;;13122:249;783:13869;;;;;;;;;12842:10;783:13869;;;;13204:59;;;;;;783:13869;;-1:-1:-1;;;13204:59:18;;12928:10;13204:59;;;783:13869;;;;;;;;;;;;;;;;;;;;;;13204:59;;;;;;;;;;13122:249;;;;;783:13869;;13204:59;783:13869;;;;;;13204:59;;;;;;783:13869;-1:-1:-1;;;783:13869:18;;;;;;;;13204:59;783:13869;;;;;;;;;13122:249;783:13869;;;;;;;;;;;;;;;2769:36;2765:110;;783:13869;9203:11;783:13869;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;10946:21;;;;783:13869;10946:21;;;;;;:::i;:::-;783:13869;;;;;:::i;:::-;;;;11191:166;783:13869;;;;;:::i;11191:166::-;783:13869;;;;;;;:::i;:::-;;;10896:626;;;783:13869;10896:626;;;783:13869;10896:626;;783:13869;;10896:626;;783:13869;;;-1:-1:-1;;;9356:16:18;;10896:626;783:13869;9356:4;783:13869;9356:4;:16;;;;;;;;;;;;;;13122:249;783:13869;;;;;;;;;;9456:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;13122:249;783:13869;;;;;;;;;;;9544:57;;12928:10;9544:57;;;783:13869;9356:4;783:13869;;;;;;;;;9544:57;;;;;;;;;;;13122:249;783:13869;;;;;;;;9203:11;783:13869;;;;;;;;9675:36;;;;9356:4;9675:36;;;783:13869;9675:36;;783:13869;9675:36;;;;;;;;;;;;;13122:249;9668:43;;;9664:128;;-1:-1:-1;783:13869:18;;-1:-1:-1;;;9910:42:18;;-1:-1:-1;;;;;783:13869:18;;9910:42;;;783:13869;;;;;;;;;;;;;;;;;;;;;;;;9910:42;;;;;;;;;;;;;10056:58;9910:42;;;;;;-1:-1:-1;783:13869:18;;-1:-1:-1;;;10056:58:18;;783:13869;;;;;;;10056:58;;;:::i;:::-;;;;;;;;;;;;;13122:249;;783:13869;;10056:58;;;;;;;;;;;;:::i;:::-;;;783:13869;;;;;;10056:58;;;;;9664:128;783:13869;;;;;;;;;9749:36;;;;;;9356:4;9749:36;;;783:13869;9749:36;;;;;;;;;;;9664:128;-1:-1:-1;;783:13869:18;-1:-1:-1;;;9732:60:18;;;;;783:13869;;;;;;;-1:-1:-1;9732:60:18;9749:36;;;;;;;;;;;;;;;;;:::i;:::-;;;783:13869;;;;;;;;9749:36;;;;;;;;;;;783:13869;;;;;;;;;9675:36;;;;;;;;;;;;;;;;:::i;:::-;;;783:13869;;;;;9675:36;;;;;;;;;783:13869;;;;;;;;;9544:57;;;;;;;;;;;;;;:::i;:::-;;;;9456:56;;;;;;;;;;;;;;;;;:::i;:::-;;;783:13869;;;;;;;9456:56;;;;;;;;;9356:16;;;;;;;;;;;;;;;;;;:::i;:::-;;;783:13869;;;;;;;;;;;;9356:16;;;;;;;;;;783:13869;;;-1:-1:-1;;;783:13869:18;;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:13869:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:13869:18;;;;;;;;-1:-1:-1;;;783:13869:18;;;;;;;;;;;;;-1:-1:-1;;;783:13869:18;;;;;;;;;;-1:-1:-1;;;783:13869:18;;;;;;;;;;;;;-1:-1:-1;;;783:13869:18;;;;;;;;;;;;;;;;-1:-1:-1;;783:13869:18;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;783:13869:18;;;;;;;;;;;;719:10:3;783:13869:18;;;;;;;;;;;;;;11351:37:0;;11347:243;;783:13869:18;;5441:6:0;;;;;;:::i;11347:243::-;11412:26;;;783:13869:18;;;;;;11539:25:0;783:13869:18;;;5441:6:0;783:13869:18;;719:10:3;11539:25:0;;:::i;:::-;11347:243;;;;;;;;783:13869:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;13803:10;783:13869;;;;;;;;;;;;;;;;;;;;13803:44;:104;;;;783:13869;13803:168;;;;783:13869;13803:249;;;783:13869;13803:346;;;783:13869;13803:409;;;783:13869;13803:474;;;;783:13869;13803:528;;;783:13869;13803:631;;;783:13869;;;;;;;;;;;13803:631;783:13869;;;;;;;14347:34;;783:13869;;;;;;;;14396:38;783:13869;-1:-1:-1;;;13803:631:18;;;;;;;;:528;783:13869;;;;;;;;;14293:34;;783:13869;14293:38;;;-1:-1:-1;13803:528:18;;:474;783:13869;;;;;;;;;;;;;;;;;;-1:-1:-1;13803:474:18;;:409;783:13869;;;;;;;;;;;;;;;;14165:47;;-1:-1:-1;13803:409:18;;;:346;783:13869;;;;;;;;;;;;;;14068:44;783:13869;14115:4;783:13869;;;;;;;14134:15;-1:-1:-1;13803:346:18;;;783:13869;-1:-1:-1;;;783:13869:18;;;;;;;;13803:249;783:13869;;;;;;;;;13987:40;783:13869;14030:4;783:13869;;;;;;;14037:15;-1:-1:-1;13803:249:18;;;:168;783:13869;;;;;;;;13923:44;;783:13869;13923:48;;;-1:-1:-1;13803:168:18;;:104;13863:40;;783:13869;13863:44;;;-1:-1:-1;13803:104:18;;;783:13869;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;783:13869:18;;;;;;;;14620:10;783:13869;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;783:13869:18;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;783:13869:18;;;;;;;;;;;;;;;;;;2032:59:9;;:::i;:::-;783:13869:18;3354:14;783:13869;;;;;;;;;;;;;;;;;;3404:10;783:13869;;;;;;;;;;;;;;;;;;3404:10;783:13869;;;;;;;3577:67;;783:13869;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:13869:18;;;;;;;;;;;;;;;;;;;;;4593:6:0;783:13869:18;;:::i;:::-;;;719:10:3;;4593:6:0;:::i;783:13869:18:-;;;;;;;;;;;;;;;;;;2240:5:0;783:13869:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;2240:5:0;783:13869:18;;;;;;;;;-1:-1:-1;;;783:13869:18;;;;;;;;;;;;;;;;;;;-1:-1:-1;783:13869:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2976:10;;783:13869;;2965:10;783:13869;;2944:146;-1:-1:-1;;;;;783:13869:18;;;;;;;;3003:24;;783:13869;2965:62;2944:146;:::i;:::-;2976:10;783:13869;;2965:10;783:13869;;;;;;;;2769:36;2765:110;;783:13869;4526:6;783:13869;;;4526:6;:::i;783:13869::-;;;;;;;;;-1:-1:-1;;783:13869:18;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1509:56:4;;;:100;;;;783:13869:18;;;;;;;1509:100:4;-1:-1:-1;;;1569:40:4;;-1:-1:-1;1509:100:4;;;783:13869:18;;;;-1:-1:-1;;;;;783:13869:18;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;783:13869:18;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;783:13869:18;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;783:13869:18;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;783:13869:18;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;783:13869:18;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;783:13869:18;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;783:13869:18;;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;;;;783:13869:18;;;;;;;;;;;-1:-1:-1;;783:13869:18;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;783:13869:18;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;783:13869:18;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:13869:18;;;;;;;;;-1:-1:-1;;;;;783:13869:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;-1:-1:-1;;;;;783:13869:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;7473:818:0;-1:-1:-1;;;;;783:13869:18;;;;7599:18:0;;783:13869:18;;;7677:16:0;;;783:13869:18;;7615:1:0;783:13869:18;;;7815:9:0;783:13869:18;;;;;;7848:21:0;;;;783:13869:18;;;;;8210:26:0;783:13869:18;;;;;7815:9:0;783:13869:18;;;;;;;;;;;;;;;;;;;;;;8210:26:0;7473:818::o;783:13869:18:-;;;-1:-1:-1;;;783:13869:18;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:13869:18;;;;;;;;;;-1:-1:-1;;;783:13869:18;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:13869:18;;;;;;;;;;-1:-1:-1;;;783:13869:18;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:13869:18;;;;;;;8567:535:0;-1:-1:-1;;;;;783:13869:18;;8650:21:0;;783:13869:18;;8999:37:0;783:13869:18;;8778:22:0;8669:1;783:13869:18;8778:22:0;783:13869:18;8778:22:0;:::i;:::-;;783:13869:18;;;;8946:9:0;783:13869:18;;;;;;;;;;;;;;;;8999:37:0;8567:535::o;783:13869:18:-;;;-1:-1:-1;;;783:13869:18;;;;;;;;;;;;;;;;;;;;10504:370:0;-1:-1:-1;;;;;783:13869:18;;;;10635:19:0;;783:13869:18;;;10713:21:0;;;783:13869:18;;;10835:32:0;783:13869:18;;10652:1:0;783:13869:18;10784:11:0;783:13869:18;;;10652:1:0;783:13869:18;;10652:1:0;783:13869:18;;;;;10652:1:0;783:13869:18;;;;;;;10835:32:0;10504:370::o;783:13869:18:-;;;-1:-1:-1;;;783:13869:18;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:13869:18;;;;;;;;;;-1:-1:-1;;;783:13869:18;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:13869:18;;;;;;;;;;-1:-1:-1;;;;;783:13869:18;;;;;;:::o;:::-;;;;;;;;;;:::o;1285:170:7:-;783:13869:18;;;;;;1394:56:7;;;;1218:10;1394:56;;;783:13869:18;1394:56:7;;;783:13869:18;;;;;;-1:-1:-1;;;;;783:13869:18;;;;;;;1285:170:7;:::o;1797:158:9:-;1916:7;783:13869:18;-1:-1:-1;;;;;783:13869:18;1902:10:9;:21;783:13869:18;;1797:158:9:o;783:13869:18:-;;;-1:-1:-1;;;783:13869:18;;;;;;;;;;;;-1:-1:-1;;;783:13869:18;;;;;;",
  "language": "Solidity",
  "natspec": {
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "acceptOwnership()": {
        "notice": "Allows an ownership transfer to be completed by the recipient."
      },
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))": {
        "details": "Note ensure you check the msg.sender is the OffRampRouter",
        "notice": "Called by the Router to deliver a message. If this reverts, any token transfers also revert. The message will move to a FAILED state and become available for manual execution.",
        "params": {
          "message": "CCIP Message"
        }
      },
      "constructor": {
        "notice": "Constructor initializes the contract with the router address.",
        "params": {
          "_link": "The address of the link contract.",
          "_router": "The address of the router contract."
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "getRouter()": {
        "notice": "Return the current router",
        "returns": {
          "_0": "CCIP router address"
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "notice": "Get the current owner"
      },
      "supportsInterface(bytes4)": {
        "details": "Should indicate whether the contract implements IAny2EVMMessageReceiver e.g. return interfaceId == type(IAny2EVMMessageReceiver).interfaceId || interfaceId == type(IERC165).interfaceId This allows CCIP to check if ccipReceive is available before calling it. If this returns false or reverts, only tokens are transferred to the receiver. If this returns true, tokens are transferred and ccipReceive is called atomically. Additionally, if the receiver address does not have code associated with it at the time of execution (EXTCODESIZE returns 0), only tokens will be transferred.",
        "notice": "IERC165 supports an interfaceId",
        "params": {
          "interfaceId": "The interfaceId to check"
        },
        "returns": {
          "_0": "true if the interfaceId is supported"
        }
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "notice": "Allows an owner to begin transferring ownership to a new address."
      }
    },
    "title": "- A simple messenger contract for transferring/receiving tokens and data across chains.",
    "version": 1
  },
  "offset": [
    783,
    14652
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x21 JUMPI JUMPDEST POP POP POP CALLDATASIZE ISZERO PUSH2 0x1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x1DC9 JUMPI POP DUP1 PUSH4 0x4783EA4 EQ PUSH2 0x1D49 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1C7C JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C52 JUMPI DUP1 PUSH4 0x10A78DF8 EQ PUSH2 0x1B7B JUMPI DUP1 PUSH4 0x1803C2F5 EQ PUSH2 0x1B3C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1B1F JUMPI DUP1 PUSH4 0x1D880928 EQ PUSH2 0x19B5 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x18E9 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1309 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x12ED JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x129E JUMPI DUP1 PUSH4 0x544B1709 EQ PUSH2 0x116C JUMPI DUP1 PUSH4 0x5C292BE5 EQ PUSH2 0xCDC JUMPI DUP1 PUSH4 0x654E8E0C EQ PUSH2 0xCB8 JUMPI DUP1 PUSH4 0x6C1DC077 EQ PUSH2 0xC8B JUMPI DUP1 PUSH4 0x6C98D513 EQ PUSH2 0xC65 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xC2D JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0xB86 JUMPI DUP1 PUSH4 0x85572FFB EQ PUSH2 0x721 JUMPI DUP1 PUSH4 0x8CF19D19 EQ PUSH2 0x6DD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x6B5 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x59A JUMPI DUP1 PUSH4 0x9637120F EQ PUSH2 0x4EF JUMPI DUP1 PUSH4 0x995714AE EQ PUSH2 0x430 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0xB0F479A1 EQ PUSH2 0x312 JUMPI DUP1 PUSH4 0xB2D92955 EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x239 JUMPI PUSH4 0xF2FDE38B SUB PUSH2 0x11 JUMPI CALLVALUE PUSH2 0x235 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x235 JUMPI PUSH2 0x198 PUSH2 0x1E1D JUMP JUMPDEST SWAP1 PUSH2 0x1A1 PUSH2 0x2468 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 CALLER DUP5 EQ PUSH2 0x1F2 JUMPI POP POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP4 OR SWAP1 SSTORE DUP3 SLOAD AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x287 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x287 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x256 PUSH2 0x1E1D JUMP JUMPDEST DUP3 PUSH2 0x25F PUSH2 0x1E33 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP5 MSTORE PUSH1 0x3 DUP7 MSTORE SWAP3 KECCAK256 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 DUP4 MSTORE DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x235 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x235 JUMPI PUSH1 0xE0 SWAP3 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2B3 PUSH2 0x1E1D JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE KECCAK256 DUP1 SLOAD SWAP3 PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD SWAP2 PUSH1 0x3 DUP5 ADD SLOAD SWAP4 ADD SLOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 MLOAD SWAP7 PUSH1 0xFF DUP2 AND ISZERO ISZERO DUP9 MSTORE PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND ISZERO ISZERO PUSH1 0x20 DUP10 ADD MSTORE PUSH1 0x10 SHR AND SWAP1 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x287 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x287 JUMPI MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x287 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x287 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x380 PUSH2 0x376 PUSH2 0x1E1D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x20F9 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP DUP3 CALLVALUE PUSH2 0x42D JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x42D JUMPI PUSH2 0x3A1 PUSH2 0x1E1D JUMP JUMPDEST SWAP2 DUP4 PUSH1 0x24 CALLDATALOAD SWAP3 CALLER DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP4 PUSH1 0x0 KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0x3DC JUMPI PUSH1 0x20 DUP6 PUSH2 0x380 DUP6 DUP6 SUB DUP8 CALLER PUSH2 0x230D JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x235 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x235 JUMPI CALLER DUP4 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH2 0x486 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP5 DUP7 KECCAK256 SLOAD PUSH1 0x10 SHR AND SWAP1 PUSH32 0x0 AND EQ PUSH2 0x1F98 JUMP JUMPDEST CALLER DUP4 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0xFF DUP3 DUP5 KECCAK256 SLOAD AND ISZERO PUSH2 0x4D9 JUMPI POP CALLER DUP1 DUP4 MSTORE PUSH1 0x8 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP2 DUP4 KECCAK256 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x9 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND OR SWAP1 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x24 SWAP2 MLOAD SWAP1 PUSH4 0x6A9FF79F PUSH1 0xE1 SHL DUP3 MSTORE CALLER SWAP1 DUP3 ADD MSTORE REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x235 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x235 JUMPI CALLER DUP4 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH2 0x547 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP4 DUP7 KECCAK256 SLOAD PUSH1 0x10 SHR AND SWAP1 PUSH32 0x0 AND EQ PUSH2 0x1F98 JUMP JUMPDEST CALLER DUP4 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0xFF DUP2 DUP5 KECCAK256 SLOAD AND ISZERO PUSH2 0x583 JUMPI CALLER DUP4 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE DUP3 KECCAK256 TIMESTAMP PUSH1 0x1 DUP3 ADD SSTORE DUP2 CALLDATALOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x44 CALLDATALOAD SWAP2 ADD SSTORE DUP1 RETURN JUMPDEST PUSH1 0x24 SWAP3 POP MLOAD SWAP1 PUSH4 0x6A9FF79F PUSH1 0xE1 SHL DUP3 MSTORE CALLER SWAP1 DUP3 ADD MSTORE REVERT JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x42D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x42D JUMPI DUP2 MLOAD SWAP2 DUP2 PUSH1 0x6 SLOAD SWAP3 PUSH1 0x1 DUP5 DUP2 SHR SWAP2 DUP2 DUP7 AND SWAP6 DUP7 ISZERO PUSH2 0x6AB JUMPI JUMPDEST PUSH1 0x20 SWAP7 DUP8 DUP6 LT DUP2 EQ PUSH2 0x698 JUMPI DUP9 SWAP10 POP SWAP7 DUP9 SWAP7 SWAP8 DUP6 DUP3 SWAP11 MSTORE SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x671 JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x615 JUMPI JUMPDEST POP POP POP PUSH2 0x611 SWAP3 SWAP2 PUSH2 0x602 SWAP2 SUB DUP6 PUSH2 0x1F21 JUMP JUMPDEST MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x1E49 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP1 DUP7 SWAP4 POP PUSH1 0x6 DUP4 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F JUMPDEST DUP3 DUP5 LT PUSH2 0x659 JUMPI POP POP POP DUP3 ADD ADD DUP2 PUSH2 0x602 PUSH2 0x611 PUSH2 0x5EF JUMP JUMPDEST DUP1 SLOAD DUP5 DUP11 ADD DUP7 ADD MSTORE DUP9 SWAP6 POP DUP8 SWAP5 SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x640 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP3 ADD MSTORE SWAP4 ISZERO ISZERO PUSH1 0x5 SHL DUP7 ADD SWAP1 SWAP4 ADD SWAP4 POP DUP5 SWAP3 POP PUSH2 0x602 SWAP2 POP PUSH2 0x611 SWAP1 POP PUSH2 0x5EF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x22 DUP11 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x5C5 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x287 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x287 JUMPI SWAP1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x287 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x287 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x235 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x3 NOT DUP4 DUP2 CALLDATASIZE ADD SLT PUSH2 0x90A JUMPI DUP2 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 DUP4 GT PUSH2 0xA5D JUMPI PUSH1 0xA0 SWAP1 DUP4 CALLDATASIZE SUB ADD SLT PUSH2 0x98F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 PUSH32 0x0 DUP5 AND CALLER SUB PUSH2 0xB6F JUMPI DUP5 MLOAD SWAP2 PUSH2 0x794 DUP4 PUSH2 0x1E9F JUMP JUMPDEST DUP4 DUP3 ADD CALLDATALOAD DUP4 MSTORE PUSH1 0x24 SWAP1 DUP2 DUP6 ADD CALLDATALOAD DUP2 DUP2 AND DUP2 SUB PUSH2 0xB4A JUMPI DUP9 DUP6 ADD MSTORE PUSH1 0x44 DUP6 ADD CALLDATALOAD DUP2 DUP2 GT PUSH2 0xA65 JUMPI PUSH2 0x7C9 SWAP1 DUP5 CALLDATASIZE SWAP2 DUP9 ADD ADD PUSH2 0x1F42 JUMP JUMPDEST SWAP4 DUP8 DUP2 ADD SWAP5 DUP6 MSTORE PUSH1 0x64 DUP7 ADD CALLDATALOAD DUP3 DUP2 GT PUSH2 0xB67 JUMPI PUSH2 0x7EB SWAP1 DUP6 CALLDATASIZE SWAP2 DUP10 ADD ADD PUSH2 0x1F42 JUMP JUMPDEST SWAP6 PUSH1 0x60 DUP3 ADD SWAP7 DUP8 MSTORE PUSH1 0x84 DUP2 ADD CALLDATALOAD SWAP1 DUP4 DUP3 GT PUSH2 0xB6B JUMPI ADD CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0xB67 JUMPI DUP5 DUP2 ADD CALLDATALOAD SWAP3 DUP4 GT PUSH2 0xB53 JUMPI DUP9 MLOAD SWAP3 PUSH2 0x829 DUP12 DUP3 PUSH1 0x5 SHL ADD DUP6 PUSH2 0x1F21 JUMP JUMPDEST DUP1 DUP5 MSTORE DUP5 DUP12 DUP6 ADD SWAP2 PUSH1 0x6 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0xB4F JUMPI DUP6 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xB10 JUMPI POP POP POP PUSH1 0x80 ADD MSTORE DUP3 MLOAD DUP8 DUP2 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0xA61 JUMPI PUSH2 0x86B DUP9 DUP8 SWAP3 ADD PUSH2 0x240F JUMP JUMPDEST AND DUP1 DUP10 MSTORE PUSH1 0x8 DUP9 MSTORE PUSH1 0xFF DUP8 DUP11 KECCAK256 SLOAD AND ISZERO PUSH2 0xAFB JUMPI POP DUP3 MLOAD DUP8 DUP2 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0xA61 JUMPI PUSH2 0x89A DUP9 DUP8 SWAP3 ADD PUSH2 0x240F JUMP JUMPDEST AND DUP9 MSTORE PUSH1 0x8 DUP8 MSTORE PUSH1 0xFF DUP7 DUP10 KECCAK256 SLOAD AND ISZERO PUSH2 0xAAA JUMPI DUP4 MLOAD DUP8 DUP2 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0xA61 JUMPI PUSH2 0x8C8 DUP9 PUSH1 0xFF SWAP3 ADD PUSH2 0x2423 JUMP JUMPDEST AND DUP1 PUSH2 0x90E JUMPI POP POP POP POP MLOAD SWAP2 PUSH1 0x60 DUP4 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0x90A JUMPI PUSH2 0x8FD PUSH1 0x60 SWAP2 PUSH2 0x8F5 PUSH2 0x907 SWAP7 DUP7 ADD PUSH2 0x2423 JUMP JUMPDEST POP DUP5 ADD PUSH2 0x240F JUMP JUMPDEST SWAP3 ADD MLOAD SWAP2 AND PUSH2 0x2269 JUMP JUMPDEST DUP1 RETURN JUMPDEST DUP5 DUP1 REVERT JUMPDEST SWAP3 SWAP6 SWAP5 SWAP4 SWAP2 SWAP3 PUSH1 0x1 DUP2 SUB PUSH2 0x993 JUMPI POP POP POP POP DUP3 MLOAD DUP5 DUP2 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0x98F JUMPI DUP5 PUSH2 0x939 SWAP2 ADD PUSH2 0x240F JUMP JUMPDEST AND DUP5 MSTORE PUSH1 0x8 DUP4 MSTORE DUP4 KECCAK256 PUSH2 0x100 PUSH2 0xFF00 NOT DUP3 SLOAD AND OR SWAP1 SSTORE MLOAD SWAP1 DUP1 DUP3 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0x235 JUMPI PUSH2 0x967 SWAP2 ADD PUSH2 0x240F JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH1 0x8 SWAP3 SWAP1 SWAP3 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 RETURN JUMPDEST DUP6 DUP1 REVERT JUMPDEST SWAP6 SWAP7 SWAP3 SWAP6 PUSH1 0x2 SUB PUSH2 0xA69 JUMPI POP MLOAD SWAP5 PUSH1 0x80 DUP7 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0xA5D JUMPI PUSH2 0x9B9 DUP3 DUP8 ADD PUSH2 0x2423 JUMP JUMPDEST POP DUP4 DUP7 ADD MLOAD SWAP6 PUSH1 0x80 PUSH1 0x60 DUP3 ADD MLOAD SWAP2 ADD MLOAD SWAP7 DUP3 MLOAD DUP5 DUP2 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0xA65 JUMPI PUSH2 0x9E4 DUP6 DUP8 SWAP3 ADD PUSH2 0x240F JUMP JUMPDEST AND DUP10 MSTORE PUSH1 0x8 DUP5 MSTORE TIMESTAMP PUSH1 0x1 DUP8 DUP12 KECCAK256 ADD SSTORE DUP3 MLOAD DUP5 DUP2 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0xA65 JUMPI PUSH2 0xA0D DUP6 DUP8 SWAP3 ADD PUSH2 0x240F JUMP JUMPDEST AND DUP10 MSTORE PUSH1 0x2 DUP7 DUP11 KECCAK256 ADD SSTORE DUP2 MLOAD DUP4 DUP2 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0xA61 JUMPI PUSH2 0xA31 DUP5 DUP7 SWAP3 ADD PUSH2 0x240F JUMP JUMPDEST AND DUP9 MSTORE PUSH1 0x3 DUP6 DUP10 KECCAK256 ADD SSTORE MLOAD SWAP1 DUP1 DUP3 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0xA5D JUMPI PUSH2 0xA53 SWAP2 ADD PUSH2 0x240F JUMP JUMPDEST AND DUP5 MSTORE DUP4 KECCAK256 ADD SSTORE DUP1 RETURN JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST DUP10 DUP1 REVERT JUMPDEST DUP6 PUSH1 0x19 PUSH1 0x64 SWAP3 DUP6 DUP9 MLOAD SWAP4 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x696E76616C696420636F6D6D616E642066726F6D204E6F646500000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x496E636F6D696E67204D657373616765206E6F742066726F6D20612076616C69 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x64206E6F6465 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP7 MLOAD PUSH4 0x6A9FF79F PUSH1 0xE1 SHL DUP2 MSTORE DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE REVERT JUMPDEST DUP11 DUP3 CALLDATASIZE SUB SLT PUSH2 0xB4F JUMPI DUP11 MLOAD SWAP1 PUSH2 0xB25 DUP3 PUSH2 0x1EEB JUMP JUMPDEST DUP3 CALLDATALOAD SWAP1 DUP12 DUP3 AND DUP3 SUB PUSH2 0xB4A JUMPI DUP3 DUP15 SWAP3 DUP15 SWAP5 MSTORE DUP3 DUP6 ADD CALLDATALOAD DUP4 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x843 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP13 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x41 DUP7 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x0 REVERT JUMPDEST DUP11 DUP1 REVERT JUMPDEST DUP12 DUP1 REVERT JUMPDEST PUSH1 0x24 SWAP1 DUP6 MLOAD SWAP1 PUSH4 0x35FDCCCD PUSH1 0xE2 SHL DUP3 MSTORE CALLER SWAP1 DUP3 ADD MSTORE REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x235 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x235 JUMPI PUSH1 0x1 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 DUP5 AND CALLER SUB PUSH2 0xBF1 JUMPI POP POP DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP3 AND CALLER SWAP1 DUP2 OR DUP7 SSTORE SWAP4 AND PUSH1 0x1 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x26BAB9BA10313290383937B837B9B2B21037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x287 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x287 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xC55 PUSH2 0x1E1D JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x2 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x42D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x42D JUMPI PUSH2 0xC7E PUSH2 0x2468 JUMP JUMPDEST PUSH1 0xFF NOT PUSH1 0x9 SLOAD AND PUSH1 0x9 SSTORE DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x287 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x287 JUMPI PUSH1 0x9 SLOAD SWAP1 MLOAD PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x287 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x287 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x9 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x235 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x235 JUMPI PUSH2 0xCF6 PUSH2 0x1E89 JUMP JUMPDEST PUSH2 0xCFE PUSH2 0x1E33 JUMP JUMPDEST DUP3 MLOAD SWAP2 PUSH1 0x20 SWAP5 PUSH1 0x1 DUP7 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 SWAP3 AND DUP6 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 PUSH1 0x60 SWAP2 AND DUP2 DUP7 ADD MSTORE DUP1 DUP6 MSTORE PUSH2 0xD36 DUP6 PUSH2 0x1F06 JUMP JUMPDEST DUP4 PUSH1 0x9 SLOAD PUSH1 0x8 SHR AND DUP9 MSTORE PUSH1 0x8 DUP8 MSTORE DUP6 DUP9 KECCAK256 PUSH2 0xFF00 NOT DUP2 SLOAD AND SWAP1 SSTORE DUP4 PUSH1 0x9 SLOAD PUSH1 0x8 SHR AND SWAP5 DUP6 DUP10 MSTORE PUSH1 0xFF DUP8 DUP11 KECCAK256 SLOAD SWAP5 DUP6 PUSH1 0x10 SHR AND SWAP5 AND ISZERO PUSH2 0x1155 JUMPI DUP5 PUSH1 0x7 SLOAD AND DUP3 DUP2 SWAP4 PUSH1 0x80 DUP11 MLOAD PUSH2 0xD84 DUP2 PUSH2 0x1E9F JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 DUP14 DUP3 ADD MSTORE DUP3 DUP13 DUP3 ADD MSTORE DUP14 DUP4 DUP3 ADD MSTORE ADD MSTORE DUP9 MLOAD SWAP8 DUP11 DUP10 ADD MSTORE DUP10 DUP9 MSTORE PUSH2 0xDAB DUP9 PUSH2 0x1EEB JUMP JUMPDEST DUP9 MLOAD PUSH2 0xDB6 DUP2 PUSH2 0x1ED0 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH2 0xDD3 DUP11 MLOAD PUSH2 0xDC8 DUP2 PUSH2 0x1ED0 JUMP JUMPDEST PUSH3 0x1E8480 DUP2 MSTORE PUSH2 0x2431 JUMP JUMPDEST SWAP4 DUP11 MLOAD SWAP10 PUSH2 0xDE0 DUP12 PUSH2 0x1E9F JUMP JUMPDEST DUP11 MSTORE DUP12 DUP11 ADD MSTORE DUP10 DUP10 ADD MSTORE DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD MSTORE DUP6 MLOAD PUSH4 0xB0F479A1 PUSH1 0xE0 SHL DUP2 MSTORE DUP8 DUP2 DUP5 DUP2 ADDRESS GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x114B JUMPI SWAP1 DUP6 SWAP2 DUP11 SWAP2 PUSH2 0x1111 JUMPI JUMPDEST POP AND SWAP4 DUP9 DUP8 MLOAD SWAP3 PUSH4 0x20487DED PUSH1 0xE0 SHL DUP5 MSTORE DUP10 DUP5 DUP1 PUSH2 0xE37 DUP12 DUP11 DUP11 DUP5 ADD PUSH2 0x1FF2 JUMP JUMPDEST SUB DUP2 DUP11 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x1107 JUMPI SWAP1 DUP11 SWAP2 DUP4 SWAP6 PUSH2 0x10D5 JUMPI JUMPDEST POP PUSH1 0x64 DUP11 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP4 MSTORE CALLER DUP11 DUP5 ADD MSTORE ADDRESS PUSH1 0x24 DUP5 ADD MSTORE DUP9 PUSH1 0x44 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x10CB JUMPI DUP11 SWAP2 PUSH2 0x10AE JUMPI JUMPDEST POP ISZERO PUSH2 0x106B JUMPI PUSH1 0x7 SLOAD AND SWAP1 DUP7 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL SWAP1 DUP2 DUP2 MSTORE ADDRESS DUP6 DUP3 ADD MSTORE DUP10 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1061 JUMPI DUP12 SWAP2 PUSH2 0x1034 JUMPI JUMPDEST POP DUP3 GT PUSH2 0xFB8 JUMPI POP DUP7 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 DUP6 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP10 SWAP4 SWAP3 SWAP1 SWAP2 DUP10 SWAP2 DUP4 SWAP2 DUP3 SWAP1 DUP8 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xFAE JUMPI SWAP2 DUP9 SWAP6 SWAP4 SWAP2 PUSH2 0xF29 SWAP9 SWAP8 SWAP6 SWAP4 PUSH2 0xF81 JUMPI JUMPDEST POP DUP7 MLOAD PUSH4 0x96F4E9F9 PUSH1 0xE0 SHL DUP2 MSTORE SWAP8 DUP9 SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 ADD PUSH2 0x1FF2 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xF78 JUMPI POP PUSH2 0xF4F JUMPI JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND SWAP1 SSTORE DUP3 DUP1 RETURN JUMPDEST DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xF71 JUMPI JUMPDEST PUSH2 0xF62 DUP2 DUP4 PUSH2 0x1F21 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x42D JUMPI CODESIZE DUP1 PUSH2 0xF3A JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xF58 JUMP JUMPDEST MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0xFA0 SWAP1 DUP8 RETURNDATASIZE DUP10 GT PUSH2 0xFA7 JUMPI JUMPDEST PUSH2 0xF98 DUP2 DUP4 PUSH2 0x1F21 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x20BE JUMP JUMPDEST POP CODESIZE PUSH2 0xF0E JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xF8E JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 DUP10 DUP9 DUP11 DUP1 DUP8 SWAP6 PUSH1 0x24 DUP5 MLOAD DUP1 SWAP10 DUP2 SWAP4 DUP3 MSTORE ADDRESS DUP11 DUP4 ADD MSTORE GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x1029 JUMPI SWAP3 PUSH2 0xFF8 JUMPI JUMPDEST POP MLOAD PUSH4 0x4787A103 PUSH1 0xE1 SHL DUP2 MSTORE SWAP3 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP2 POP REVERT JUMPDEST SWAP1 SWAP2 POP DUP5 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1022 JUMPI JUMPDEST PUSH2 0x100F DUP2 DUP4 PUSH2 0x1F21 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xB4A JUMPI PUSH1 0x44 SWAP4 MLOAD SWAP1 DUP6 PUSH2 0xFDD JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1005 JUMP JUMPDEST DUP3 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP DUP10 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x105A JUMPI JUMPDEST PUSH2 0x104B DUP2 DUP4 PUSH2 0x1F21 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xB4A JUMPI MLOAD CODESIZE PUSH2 0xEB5 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1041 JUMP JUMPDEST DUP10 MLOAD RETURNDATASIZE DUP14 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP10 SWAP1 MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F742070726F7669646564204C696E6B20666F722066656573000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x10C5 SWAP2 POP DUP10 RETURNDATASIZE DUP12 GT PUSH2 0xFA7 JUMPI PUSH2 0xF98 DUP2 DUP4 PUSH2 0x1F21 JUMP JUMPDEST CODESIZE PUSH2 0xE81 JUMP JUMPDEST DUP9 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP3 POP SWAP4 POP DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1100 JUMPI JUMPDEST PUSH2 0x10ED DUP2 DUP4 PUSH2 0x1F21 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xB4A JUMPI DUP9 DUP11 SWAP2 MLOAD SWAP4 CODESIZE PUSH2 0xE4D JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x10E3 JUMP JUMPDEST DUP10 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP DUP10 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x1144 JUMPI JUMPDEST PUSH2 0x112A DUP2 DUP4 PUSH2 0x1F21 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xA61 JUMPI MLOAD DUP5 DUP2 AND DUP2 SUB PUSH2 0xA61 JUMPI DUP5 SWAP1 CODESIZE PUSH2 0xE16 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1120 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP7 MLOAD PUSH4 0x6A9FF79F PUSH1 0xE1 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP8 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x42D JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x42D JUMPI PUSH2 0x1187 PUSH2 0x1E89 JUMP JUMPDEST SWAP2 PUSH2 0x1190 PUSH2 0x1E33 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 PUSH1 0x44 CALLDATALOAD DUP6 DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0xB4A JUMPI PUSH1 0x64 CALLDATALOAD SWAP1 DUP7 DUP3 AND DUP1 SWAP3 SUB PUSH2 0xB4A JUMPI PUSH1 0x84 CALLDATALOAD SWAP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP10 GT PUSH2 0xA5D JUMPI PUSH2 0x11DB PUSH2 0x1257 SWAP7 SWAP8 SWAP9 SWAP10 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x1F42 JUMP JUMPDEST DUP8 MLOAD SWAP5 PUSH1 0x20 SWAP11 DUP12 SWAP8 AND DUP8 DUP8 ADD MSTORE DUP7 DUP7 MSTORE PUSH2 0x11F4 DUP7 PUSH2 0x1EEB JUMP JUMPDEST DUP9 MLOAD PUSH2 0x11FF DUP2 PUSH2 0x1ED0 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH2 0x121C DUP11 MLOAD PUSH2 0x1211 DUP2 PUSH2 0x1ED0 JUMP JUMPDEST PUSH3 0xF4240 DUP2 MSTORE PUSH2 0x2431 JUMP JUMPDEST SWAP3 DUP11 MLOAD SWAP8 PUSH2 0x1229 DUP10 PUSH2 0x1E9F JUMP JUMPDEST DUP9 MSTORE DUP9 DUP9 ADD MSTORE DUP10 DUP8 ADD MSTORE PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD MSTORE DUP7 MLOAD PUSH4 0x20487DED PUSH1 0xE0 SHL DUP2 MSTORE SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 DUP5 ADD PUSH2 0x1FF2 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x1029 JUMPI SWAP3 PUSH2 0x126F JUMPI JUMPDEST POP MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 POP DUP3 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1297 JUMPI JUMPDEST PUSH2 0x1287 DUP2 DUP4 PUSH2 0x1F21 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xB4A JUMPI MLOAD SWAP1 CODESIZE PUSH2 0x1268 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x127D JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x287 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x287 JUMPI PUSH2 0x380 PUSH1 0x20 SWAP3 DUP3 PUSH2 0x12BF PUSH2 0x1E1D JUMP JUMPDEST SWAP2 CALLER DUP2 MSTORE PUSH1 0x3 DUP7 MSTORE KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 MSTORE DUP5 MSTORE PUSH2 0x12E6 PUSH1 0x24 CALLDATALOAD DUP5 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x20D6 JUMP JUMPDEST SWAP1 CALLER PUSH2 0x230D JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x287 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x287 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x287 JUMPI PUSH1 0x20 SWAP3 DUP4 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x235 JUMPI PUSH1 0x9 SLOAD PUSH1 0x8 SWAP1 DUP2 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE DUP2 DUP7 MSTORE DUP4 DUP6 KECCAK256 SLOAD DUP4 CALLDATALOAD SWAP2 SWAP1 DUP4 SHR PUSH1 0xFF AND ISZERO PUSH2 0x18B1 JUMPI CALLER DUP7 MSTORE PUSH1 0x2 DUP8 MSTORE DUP5 DUP7 KECCAK256 SLOAD DUP3 GT PUSH2 0x1878 JUMPI DUP5 MLOAD SWAP3 DUP7 DUP9 DUP6 ADD MSTORE CALLER DUP7 DUP6 ADD MSTORE PUSH1 0x60 SWAP8 DUP4 DUP10 DUP7 ADD MSTORE DUP9 DUP6 MSTORE PUSH2 0x137B DUP6 PUSH2 0x1F06 JUMP JUMPDEST CALLER ISZERO PUSH2 0x182C JUMPI CALLER DUP9 MSTORE PUSH1 0x2 DUP2 MSTORE DUP7 DUP9 KECCAK256 SLOAD SWAP9 DUP5 DUP11 LT PUSH2 0x17DE JUMPI DUP5 DUP10 SWAP11 CALLER DUP12 MSTORE PUSH1 0x2 DUP5 MSTORE SUB DUP9 DUP11 KECCAK256 SSTORE DUP5 DUP8 SLOAD SUB DUP8 SSTORE DUP9 DUP9 MLOAD DUP7 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 CALLER SWAP3 LOG3 DUP4 PUSH1 0x9 SLOAD DUP5 SHR AND SWAP1 DUP2 DUP11 MSTORE DUP4 DUP4 MSTORE DUP9 DUP11 KECCAK256 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP8 DUP9 DUP4 PUSH1 0x10 SHR AND SWAP3 DUP10 PUSH32 0x0 AND DUP5 EQ PUSH1 0x0 EQ PUSH2 0x14A3 JUMPI POP POP POP POP POP POP PUSH1 0x9 SLOAD SWAP1 SHR AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x98F JUMPI DUP5 MLOAD PUSH4 0x15E005B7 PUSH1 0xE3 SHL DUP2 MSTORE CALLER DUP6 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP6 SWAP2 DUP7 SWAP2 DUP3 SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x1499 JUMPI PUSH2 0x1475 JUMPI JUMPDEST POP POP POP POP DUP1 RETURN JUMPDEST DUP4 GT PUSH2 0x1486 JUMPI POP MSTORE CODESIZE DUP1 DUP1 DUP1 PUSH2 0x146E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x41 SWAP1 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST DUP4 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP3 SWAP8 POP SWAP4 SWAP11 POP SWAP4 POP PUSH1 0xFF SWAP2 SWAP8 SWAP5 SWAP7 POP AND ISZERO PUSH2 0x1155 JUMPI DUP5 PUSH1 0x7 SLOAD AND DUP3 DUP2 SWAP4 PUSH1 0x80 DUP11 MLOAD PUSH2 0x14CD DUP2 PUSH2 0x1E9F JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 DUP14 DUP3 ADD MSTORE DUP3 DUP13 DUP3 ADD MSTORE DUP14 DUP4 DUP3 ADD MSTORE ADD MSTORE DUP9 MLOAD SWAP8 DUP11 DUP10 ADD MSTORE DUP10 DUP9 MSTORE PUSH2 0x14F4 DUP9 PUSH2 0x1EEB JUMP JUMPDEST DUP9 MLOAD PUSH2 0x14FF DUP2 PUSH2 0x1ED0 JUMP JUMPDEST DUP12 DUP2 MSTORE PUSH2 0x1510 DUP11 MLOAD PUSH2 0xDC8 DUP2 PUSH2 0x1ED0 JUMP JUMPDEST SWAP4 DUP11 MLOAD SWAP10 PUSH2 0x151D DUP12 PUSH2 0x1E9F JUMP JUMPDEST DUP11 MSTORE DUP12 DUP11 ADD MSTORE DUP10 DUP10 ADD MSTORE DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD MSTORE DUP6 MLOAD PUSH4 0xB0F479A1 PUSH1 0xE0 SHL DUP2 MSTORE DUP8 DUP2 DUP5 DUP2 ADDRESS GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x114B JUMPI SWAP1 DUP6 SWAP2 DUP11 SWAP2 PUSH2 0x17A4 JUMPI JUMPDEST POP AND SWAP4 DUP9 DUP8 MLOAD SWAP3 PUSH4 0x20487DED PUSH1 0xE0 SHL DUP5 MSTORE DUP10 DUP5 DUP1 PUSH2 0x1574 DUP12 DUP11 DUP11 DUP5 ADD PUSH2 0x1FF2 JUMP JUMPDEST SUB DUP2 DUP11 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x1107 JUMPI SWAP1 DUP11 SWAP2 DUP4 SWAP6 PUSH2 0x1773 JUMPI JUMPDEST POP PUSH1 0x64 DUP11 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP4 MSTORE CALLER DUP11 DUP5 ADD MSTORE ADDRESS PUSH1 0x24 DUP5 ADD MSTORE DUP9 PUSH1 0x44 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x10CB JUMPI DUP11 SWAP2 PUSH2 0x1756 JUMPI JUMPDEST POP ISZERO PUSH2 0x106B JUMPI SWAP1 DUP9 SWAP3 SWAP2 PUSH1 0x7 SLOAD AND SWAP1 DUP8 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL SWAP1 DUP2 DUP2 MSTORE ADDRESS DUP6 DUP3 ADD MSTORE DUP11 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x174C JUMPI DUP7 SWAP2 PUSH2 0x171F JUMPI JUMPDEST POP DUP3 GT PUSH2 0x16A0 JUMPI POP DUP8 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 DUP10 SWAP2 DUP4 SWAP2 SWAP1 DUP3 SWAP1 DUP8 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xFAE JUMPI SWAP2 DUP9 SWAP6 SWAP4 SWAP2 PUSH2 0x1666 SWAP9 SWAP8 SWAP6 SWAP4 PUSH2 0xF81 JUMPI POP DUP7 MLOAD PUSH4 0x96F4E9F9 PUSH1 0xE0 SHL DUP2 MSTORE SWAP8 DUP9 SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 ADD PUSH2 0x1FF2 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xF78 JUMPI POP PUSH2 0x167B JUMPI POP POP DUP1 RETURN JUMPDEST DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1699 JUMPI JUMPDEST PUSH2 0x168E DUP2 DUP4 PUSH2 0x1F21 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x42D JUMPI DUP1 RETURN JUMPDEST POP RETURNDATASIZE PUSH2 0x1684 JUMP JUMPDEST DUP10 SWAP2 SWAP3 DUP3 DUP11 SWAP3 PUSH1 0x24 DUP5 MLOAD DUP1 SWAP5 DUP2 SWAP4 DUP3 MSTORE ADDRESS DUP11 DUP4 ADD MSTORE GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x1715 JUMPI DUP7 SWAP4 PUSH2 0x16E1 JUMPI JUMPDEST POP POP MLOAD PUSH4 0x4787A103 PUSH1 0xE1 SHL DUP2 MSTORE SWAP3 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP2 POP REVERT JUMPDEST SWAP1 DUP1 SWAP3 SWAP4 POP DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x170E JUMPI JUMPDEST PUSH2 0x16F9 DUP2 DUP4 PUSH2 0x1F21 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x90A JUMPI PUSH1 0x44 SWAP5 POP MLOAD SWAP1 DUP6 DUP1 PUSH2 0x16C5 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x16EF JUMP JUMPDEST DUP3 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP DUP11 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1745 JUMPI JUMPDEST PUSH2 0x1736 DUP2 DUP4 PUSH2 0x1F21 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x98F JUMPI MLOAD CODESIZE PUSH2 0x15F6 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x172C JUMP JUMPDEST DUP11 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x176D SWAP2 POP DUP10 RETURNDATASIZE DUP12 GT PUSH2 0xFA7 JUMPI PUSH2 0xF98 DUP2 DUP4 PUSH2 0x1F21 JUMP JUMPDEST CODESIZE PUSH2 0x15BE JUMP JUMPDEST DUP3 DUP2 SWAP4 SWAP3 SWAP7 POP RETURNDATASIZE DUP4 GT PUSH2 0x179D JUMPI JUMPDEST PUSH2 0x178B DUP2 DUP4 PUSH2 0x1F21 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x287 JUMPI DUP10 SWAP1 MLOAD SWAP4 CODESIZE PUSH2 0x158A JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1781 JUMP JUMPDEST DUP1 SWAP3 POP DUP10 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x17D7 JUMPI JUMPDEST PUSH2 0x17BD DUP2 DUP4 PUSH2 0x1F21 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xA61 JUMPI MLOAD DUP5 DUP2 AND DUP2 SUB PUSH2 0xA61 JUMPI DUP5 SWAP1 CODESIZE PUSH2 0x1553 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x17B3 JUMP JUMPDEST DUP8 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP9 ADD DUP4 SWAP1 MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP6 PUSH1 0x84 SWAP2 DUP9 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP6 ADD DUP9 SWAP1 MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E6F7420656E6F756768742062616C616E6365 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP6 ADD DUP9 SWAP1 MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4E6F6465206973206E6F7420416374697665 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x287 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x287 JUMPI PUSH2 0x1905 PUSH2 0x1E1D JUMP JUMPDEST PUSH2 0x190D PUSH2 0x1E33 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP5 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP6 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 MSTORE SWAP3 DUP5 SWAP1 KECCAK256 SLOAD PUSH1 0x44 CALLDATALOAD SWAP4 SWAP3 PUSH1 0x1 DUP3 ADD PUSH2 0x1949 JUMPI JUMPDEST PUSH1 0x20 DUP7 PUSH2 0x380 DUP8 DUP8 DUP8 PUSH2 0x20F9 JUMP JUMPDEST DUP5 DUP3 LT PUSH2 0x1972 JUMPI POP SWAP2 DUP4 SWAP2 PUSH2 0x1967 PUSH1 0x20 SWAP7 SWAP6 PUSH2 0x380 SWAP6 SUB CALLER DUP4 PUSH2 0x230D JUMP JUMPDEST SWAP2 SWAP4 SWAP5 DUP2 SWAP4 POP PUSH2 0x193B JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x42D JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x42D JUMPI PUSH2 0x19CF PUSH2 0x1E1D JUMP JUMPDEST SWAP3 PUSH2 0x19D8 PUSH2 0x1E33 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP6 AND SWAP3 DUP4 DUP2 MSTORE PUSH1 0x8 SWAP6 PUSH1 0x20 SWAP7 DUP1 DUP9 MSTORE DUP7 DUP4 KECCAK256 SWAP6 PUSH1 0x1 DUP1 PUSH1 0xFF DUP10 SLOAD DUP6 SHR AND ISZERO ISZERO EQ SWAP8 DUP9 PUSH2 0x1B12 JUMPI JUMPDEST POP DUP8 PUSH2 0x1AFE JUMPI JUMPDEST DUP8 PUSH2 0x1ADF JUMPI JUMPDEST DUP8 PUSH2 0x1AA8 JUMPI JUMPDEST DUP8 PUSH2 0x1A8E JUMPI JUMPDEST POP DUP7 PUSH2 0x1A75 JUMPI JUMPDEST DUP7 PUSH2 0x1A60 JUMPI JUMPDEST DUP7 PUSH2 0x1A3F JUMPI JUMPDEST DUP9 DUP8 DUP10 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP4 MSTORE DUP8 MSTORE DUP6 DUP3 KECCAK256 DUP4 ADD SLOAD SWAP4 AND DUP2 MSTORE DUP5 SWAP1 KECCAK256 ADD SLOAD GT SWAP1 POP CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x1A34 JUMP JUMPDEST DUP1 DUP5 MSTORE DUP2 DUP10 MSTORE DUP8 DUP5 KECCAK256 DUP6 ADD SLOAD ISZERO ISZERO SWAP7 POP PUSH2 0x1A2E JUMP JUMPDEST DUP6 DUP4 AND DUP5 MSTORE DUP2 DUP10 MSTORE DUP8 DUP5 KECCAK256 SLOAD DUP3 SHR PUSH1 0xFF AND ISZERO SWAP7 POP PUSH2 0x1A28 JUMP JUMPDEST DUP7 DUP5 AND DUP6 MSTORE DUP3 DUP11 MSTORE DUP9 DUP6 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ SWAP7 POP CODESIZE PUSH2 0x1A21 JUMP JUMPDEST SWAP7 POP DUP3 DUP7 AND DUP5 MSTORE DUP2 DUP10 MSTORE DUP7 DUP9 DUP6 KECCAK256 ADD SLOAD PUSH2 0xE10 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x1ACC JUMPI TIMESTAMP LT SWAP7 PUSH2 0x1A1B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x11 DUP7 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST SWAP7 POP DUP1 DUP5 MSTORE DUP7 DUP9 DUP6 KECCAK256 ADD SLOAD PUSH2 0xE10 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x1ACC JUMPI TIMESTAMP LT SWAP7 PUSH2 0x1A15 JUMP JUMPDEST DUP7 DUP5 AND DUP6 MSTORE DUP9 DUP6 KECCAK256 DUP2 ADD SLOAD ISZERO ISZERO SWAP8 POP PUSH2 0x1A0F JUMP JUMPDEST DUP2 ADD SLOAD ISZERO ISZERO SWAP8 POP CODESIZE PUSH2 0x1A08 JUMP JUMPDEST POP CALLVALUE PUSH2 0x235 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x235 JUMPI PUSH1 0x20 SWAP3 POP SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x287 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x287 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 PUSH1 0x20 SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x9 SLOAD PUSH1 0x8 SHR AND DUP2 MSTORE PUSH1 0x8 DUP6 MSTORE KECCAK256 SLOAD PUSH1 0x10 SHR AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x235 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x235 JUMPI PUSH2 0x1B96 PUSH2 0x1E1D JUMP JUMPDEST SWAP2 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x90A JUMPI PUSH1 0x44 CALLDATALOAD SWAP3 DUP4 ISZERO ISZERO SWAP3 DUP4 DUP6 SUB PUSH2 0xA5D JUMPI PUSH2 0x1BC1 PUSH2 0x2468 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x9 SLOAD AND ISZERO PUSH2 0x1C18 JUMPI POP SWAP1 PUSH1 0x1 SWAP2 DUP3 DUP1 PUSH1 0xA0 SHL SUB DUP7 AND DUP8 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE DUP7 KECCAK256 SWAP3 PUSH2 0xFF00 PUSH10 0xFFFFFFFFFFFFFFFF0000 DUP6 SLOAD SWAP4 PUSH1 0x10 SHL AND SWAP3 PUSH10 0xFFFFFFFFFFFFFFFFFFFF NOT AND SWAP2 PUSH1 0x8 SHL AND OR OR OR SWAP1 SSTORE PUSH2 0x967 JUMPI POP DUP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x139BC81B5BDC99481B9BD9195CC8185B1B1BDDD959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x287 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x287 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x380 PUSH2 0x1C72 PUSH2 0x1E1D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x230D JUMP JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x42D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x42D JUMPI DUP2 MLOAD SWAP2 DUP2 PUSH1 0x5 SLOAD SWAP3 PUSH1 0x1 DUP5 DUP2 SHR SWAP2 DUP2 DUP7 AND SWAP6 DUP7 ISZERO PUSH2 0x1D3F JUMPI JUMPDEST PUSH1 0x20 SWAP7 DUP8 DUP6 LT DUP2 EQ PUSH2 0x698 JUMPI DUP9 SWAP10 POP SWAP7 DUP9 SWAP7 SWAP8 DUP6 DUP3 SWAP11 MSTORE SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x671 JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x1CE3 JUMPI POP POP POP PUSH2 0x611 SWAP3 SWAP2 PUSH2 0x602 SWAP2 SUB DUP6 PUSH2 0x1F21 JUMP JUMPDEST SWAP2 SWAP1 DUP7 SWAP4 POP PUSH1 0x5 DUP4 MSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 JUMPDEST DUP3 DUP5 LT PUSH2 0x1D27 JUMPI POP POP POP DUP3 ADD ADD DUP2 PUSH2 0x602 PUSH2 0x611 PUSH2 0x5EF JUMP JUMPDEST DUP1 SLOAD DUP5 DUP11 ADD DUP7 ADD MSTORE DUP9 SWAP6 POP DUP8 SWAP5 SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x1D0E JUMP JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x1CA7 JUMP JUMPDEST POP CALLVALUE PUSH2 0x235 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x235 JUMPI PUSH2 0x1D62 PUSH2 0x1E1D JUMP JUMPDEST SWAP2 CALLER DUP5 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH2 0x1DA8 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP4 DUP8 KECCAK256 SLOAD PUSH1 0x10 SHR AND SWAP1 PUSH32 0x0 AND EQ PUSH2 0x1F98 JUMP JUMPDEST CALLER DUP5 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0xFF DUP2 DUP6 KECCAK256 SLOAD AND ISZERO PUSH2 0x583 JUMPI DUP4 PUSH2 0x907 PUSH1 0x24 CALLDATALOAD DUP6 PUSH2 0x2269 JUMP JUMPDEST SWAP3 POP POP CALLVALUE PUSH2 0x235 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x235 JUMPI CALLDATALOAD PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 AND DUP1 SWAP2 SUB PUSH2 0x235 JUMPI PUSH1 0x20 SWAP3 POP PUSH4 0x85572FFB PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x1E0C JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP CODESIZE PUSH2 0x1E05 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xB4A JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xB4A JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x1E75 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1E54 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xB4A JUMPI JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1EBA JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1EBA JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1EBA JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1EBA JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1EBA JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0xB4A JUMPI DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1EBA JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1F76 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x1F21 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0xB4A JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1F9F JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52657175697265206D617374657220616E64206E6F646520696E2073616D6520 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x31B430B4B7 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP4 SWAP3 SWAP4 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 SWAP2 DUP2 DUP4 DUP3 ADD MSTORE PUSH2 0x2021 DUP6 MLOAD PUSH1 0xA0 DUP5 DUP5 ADD MSTORE PUSH1 0xE0 DUP4 ADD SWAP1 PUSH2 0x1E49 JUMP JUMPDEST SWAP2 PUSH2 0x203D DUP5 DUP8 ADD MLOAD SWAP4 PUSH1 0x3F NOT SWAP5 DUP6 DUP6 DUP4 SUB ADD PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x1E49 JUMP JUMPDEST DUP2 DUP8 ADD MLOAD SWAP5 DUP5 DUP5 DUP4 SUB ADD PUSH1 0x80 DUP6 ADD MSTORE DUP1 DUP1 DUP8 MLOAD SWAP4 DUP5 DUP2 MSTORE ADD SWAP7 ADD SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0x2095 JUMPI POP POP POP POP POP PUSH1 0xC0 PUSH1 0x80 PUSH2 0x2092 SWAP6 SWAP7 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x60 DUP3 ADD MLOAD AND PUSH1 0xA0 DUP6 ADD MSTORE ADD MLOAD SWAP3 DUP3 DUP6 SUB ADD SWAP2 ADD MSTORE PUSH2 0x1E49 JUMP JUMPDEST SWAP1 JUMP JUMPDEST DUP5 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 MSTORE DUP4 ADD MLOAD DUP9 DUP5 ADD MSTORE SWAP7 DUP8 ADD SWAP7 SWAP4 DUP3 ADD SWAP4 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x205C JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xB4A JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0xB4A JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x20E3 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x2216 JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x21C5 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 DUP1 DUP4 LT PUSH2 0x2171 JUMPI PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE PUSH1 0x2 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x22C8 JUMPI PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP3 PUSH2 0x22AB PUSH1 0x0 SWAP5 PUSH1 0x4 SLOAD PUSH2 0x20D6 JUMP JUMPDEST PUSH1 0x4 SSTORE DUP5 DUP5 MSTORE PUSH1 0x2 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x23BE JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x236E JUMPI PUSH1 0x20 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x3 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xB4A JUMPI JUMP JUMPDEST MLOAD SWAP1 PUSH1 0xFF DUP3 AND DUP3 SUB PUSH2 0xB4A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH4 0x97A657C9 PUSH1 0xE0 SHL PUSH1 0x20 DUP4 ADD MSTORE MLOAD PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x60 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1EBA JUMPI PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x247C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27B7363C9031B0B63630B1363290313C9037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E 0xB7 PC 0xCF PUSH27 0x5AC0A85377638C5FB11269FD7FA54ACBCDFC6789543B04812321C9 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "9": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "10": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "11": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "LT",
      "path": "18"
    },
    "12": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "13": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x21"
    },
    "16": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "17": {
      "op": "JUMPDEST"
    },
    "18": {
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "19": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "20": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "21": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "22": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "23": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1F"
    },
    "26": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "27": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "29": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "30": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "REVERT",
      "path": "18"
    },
    "31": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "32": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "STOP",
      "path": "18"
    },
    "33": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "34": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "36": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "37": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "38": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "39": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE0"
    },
    "41": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "SHR",
      "path": "18"
    },
    "42": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "43": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "44": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x1FFC9A7"
    },
    "49": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "EQ",
      "path": "18"
    },
    "50": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1DC9"
    },
    "53": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "54": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "55": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "56": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x4783EA4"
    },
    "61": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "EQ",
      "path": "18"
    },
    "62": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1D49"
    },
    "65": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "66": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "67": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x6FDDE03"
    },
    "72": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "EQ",
      "path": "18"
    },
    "73": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1C7C"
    },
    "76": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "77": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "78": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x95EA7B3"
    },
    "83": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "EQ",
      "path": "18"
    },
    "84": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1C52"
    },
    "87": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "88": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "89": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x10A78DF8"
    },
    "94": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "EQ",
      "path": "18"
    },
    "95": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1B7B"
    },
    "98": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "99": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "100": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x1803C2F5"
    },
    "105": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "EQ",
      "path": "18"
    },
    "106": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1B3C"
    },
    "109": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "110": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "111": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x18160DDD"
    },
    "116": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "EQ",
      "path": "18"
    },
    "117": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1B1F"
    },
    "120": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "121": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "122": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x1D880928"
    },
    "127": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "EQ",
      "path": "18"
    },
    "128": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x19B5"
    },
    "131": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "132": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "133": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x23B872DD"
    },
    "138": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "EQ",
      "path": "18"
    },
    "139": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x18E9"
    },
    "142": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "143": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "144": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x2E1A7D4D"
    },
    "149": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "EQ",
      "path": "18"
    },
    "150": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1309"
    },
    "153": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "154": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "155": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x313CE567"
    },
    "160": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "EQ",
      "path": "18"
    },
    "161": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x12ED"
    },
    "164": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "165": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "166": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x39509351"
    },
    "171": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "EQ",
      "path": "18"
    },
    "172": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x129E"
    },
    "175": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "176": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "177": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x544B1709"
    },
    "182": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "EQ",
      "path": "18"
    },
    "183": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x116C"
    },
    "186": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "187": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "188": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x5C292BE5"
    },
    "193": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "EQ",
      "path": "18"
    },
    "194": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xCDC"
    },
    "197": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "198": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "199": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x654E8E0C"
    },
    "204": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "EQ",
      "path": "18"
    },
    "205": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xCB8"
    },
    "208": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "209": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "210": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x6C1DC077"
    },
    "215": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "EQ",
      "path": "18"
    },
    "216": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC8B"
    },
    "219": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "220": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "221": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x6C98D513"
    },
    "226": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "EQ",
      "path": "18"
    },
    "227": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC65"
    },
    "230": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "231": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "232": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x70A08231"
    },
    "237": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "EQ",
      "path": "18"
    },
    "238": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC2D"
    },
    "241": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "242": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "243": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x79BA5097"
    },
    "248": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "EQ",
      "path": "18"
    },
    "249": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB86"
    },
    "252": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "253": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "254": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x85572FFB"
    },
    "259": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "EQ",
      "path": "18"
    },
    "260": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x721"
    },
    "263": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "264": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "265": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x8CF19D19"
    },
    "270": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "EQ",
      "path": "18"
    },
    "271": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x6DD"
    },
    "274": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "275": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "276": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x8DA5CB5B"
    },
    "281": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "EQ",
      "path": "18"
    },
    "282": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x6B5"
    },
    "285": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "286": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "287": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x95D89B41"
    },
    "292": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "EQ",
      "path": "18"
    },
    "293": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x59A"
    },
    "296": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "297": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "298": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x9637120F"
    },
    "303": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "EQ",
      "path": "18"
    },
    "304": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4EF"
    },
    "307": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "308": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "309": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x995714AE"
    },
    "314": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "EQ",
      "path": "18"
    },
    "315": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x430"
    },
    "318": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "319": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "320": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xA457C2D7"
    },
    "325": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "EQ",
      "path": "18"
    },
    "326": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x387"
    },
    "329": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "330": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "331": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xA9059CBB"
    },
    "336": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "EQ",
      "path": "18"
    },
    "337": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x356"
    },
    "340": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "341": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "342": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xB0F479A1"
    },
    "347": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "EQ",
      "path": "18"
    },
    "348": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x312"
    },
    "351": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "352": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "353": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xB2D92955"
    },
    "358": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "EQ",
      "path": "18"
    },
    "359": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x28B"
    },
    "362": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "363": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "364": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xDD62ED3E"
    },
    "369": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "EQ",
      "path": "18"
    },
    "370": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x239"
    },
    "373": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "374": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xF2FDE38B"
    },
    "379": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "380": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x11"
    },
    "383": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "384": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "385": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x235"
    },
    "388": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "389": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "391": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "392": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "394": {
      "op": "NOT"
    },
    "395": {
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "396": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "397": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x235"
    },
    "400": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "401": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x198"
    },
    "404": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E1D"
    },
    "407": {
      "fn": null,
      "jump": "i",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "408": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "409": {
      "offset": [
        2032,
        2091
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "410": {
      "fn": null,
      "offset": [
        2032,
        2091
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1A1"
    },
    "413": {
      "fn": null,
      "offset": [
        2032,
        2091
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2468"
    },
    "416": {
      "fn": null,
      "jump": "i",
      "offset": [
        2032,
        2091
      ],
      "op": "JUMP",
      "path": "9"
    },
    "417": {
      "fn": null,
      "offset": [
        2032,
        2091
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "422": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "424": {
      "op": "SHL"
    },
    "425": {
      "op": "SUB"
    },
    "426": {
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "427": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "428": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "429": {
      "fn": null,
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "430": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1643,
        1653
      ],
      "op": "CALLER",
      "path": "9",
      "statement": 0
    },
    "431": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1637,
        1653
      ],
      "op": "DUP5",
      "path": "9"
    },
    "432": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1637,
        1653
      ],
      "op": "EQ",
      "path": "9"
    },
    "433": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1F2"
    },
    "436": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "437": {
      "op": "POP"
    },
    "438": {
      "op": "POP"
    },
    "439": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "441": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "442": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "443": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "447": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "449": {
      "op": "SHL"
    },
    "450": {
      "op": "SUB"
    },
    "451": {
      "op": "NOT"
    },
    "452": {
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "453": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "454": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "OR",
      "path": "18"
    },
    "455": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "456": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "457": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "458": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "459": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "460": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1719,
        1758
      ],
      "op": "PUSH32",
      "path": "9",
      "statement": 1,
      "value": "0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278"
    },
    "493": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "494": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "495": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1719,
        1758
      ],
      "op": "LOG3",
      "path": "9"
    },
    "496": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "497": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "RETURN",
      "path": "18"
    },
    "498": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "499": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "500": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "502": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x64"
    },
    "504": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "505": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "506": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "507": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH3",
      "path": "18",
      "value": "0x461BCD"
    },
    "511": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE5"
    },
    "513": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "SHL",
      "path": "18"
    },
    "514": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "515": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "516": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "517": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "518": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "519": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x17"
    },
    "521": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "523": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "524": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "525": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "526": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000"
    },
    "559": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x44"
    },
    "561": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "562": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "563": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "564": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "REVERT",
      "path": "18"
    },
    "565": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "566": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "567": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "568": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "REVERT",
      "path": "18"
    },
    "569": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "570": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "571": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "572": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "573": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x287"
    },
    "576": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "577": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "578": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "580": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "NOT",
      "path": "18"
    },
    "581": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "582": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "583": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "584": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x287"
    },
    "587": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "588": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "590": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "591": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x256"
    },
    "594": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E1D"
    },
    "597": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "jump": "i",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "598": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "599": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "600": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x25F"
    },
    "603": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E33"
    },
    "606": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "jump": "i",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "607": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "610": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "612": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "614": {
      "op": "SHL"
    },
    "615": {
      "op": "SUB"
    },
    "616": {
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "617": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "618": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "619": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "620": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "621": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "623": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "624": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "625": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "626": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "627": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "628": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "629": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "631": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "632": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "633": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "634": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "635": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "636": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "637": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "638": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "639": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "640": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "641": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "642": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "643": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "644": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "645": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "646": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "RETURN",
      "path": "18"
    },
    "647": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "648": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "649": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "650": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "REVERT",
      "path": "18"
    },
    "651": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "652": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "653": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "654": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "655": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x235"
    },
    "658": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "659": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "661": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "662": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "664": {
      "op": "NOT"
    },
    "665": {
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "666": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "667": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x235"
    },
    "670": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "671": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE0"
    },
    "673": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "674": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "675": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "676": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "678": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "680": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "682": {
      "op": "SHL"
    },
    "683": {
      "op": "SUB"
    },
    "684": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2B3"
    },
    "687": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E1D"
    },
    "690": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "jump": "i",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "691": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "692": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "693": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "694": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "695": {
      "offset": [
        2111,
        2159
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x8"
    },
    "697": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "699": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "700": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "701": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "702": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "703": {
      "offset": [
        2111,
        2159
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "704": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "706": {
      "offset": [
        2111,
        2159
      ],
      "op": "DUP3",
      "path": "18"
    },
    "707": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        2111,
        2159
      ],
      "op": "ADD",
      "path": "18"
    },
    "708": {
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "709": {
      "offset": [
        2111,
        2159
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2"
    },
    "711": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        2111,
        2159
      ],
      "op": "DUP4",
      "path": "18"
    },
    "712": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        2111,
        2159
      ],
      "op": "ADD",
      "path": "18"
    },
    "713": {
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "714": {
      "offset": [
        2111,
        2159
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "715": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "717": {
      "offset": [
        2111,
        2159
      ],
      "op": "DUP5",
      "path": "18"
    },
    "718": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        2111,
        2159
      ],
      "op": "ADD",
      "path": "18"
    },
    "719": {
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "720": {
      "offset": [
        2111,
        2159
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "721": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        2111,
        2159
      ],
      "op": "ADD",
      "path": "18"
    },
    "722": {
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "723": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "726": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "728": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "730": {
      "op": "SHL"
    },
    "731": {
      "op": "SUB"
    },
    "732": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "733": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "734": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP7",
      "path": "18"
    },
    "735": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "737": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "738": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "739": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "740": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "741": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "DUP9",
      "path": "18"
    },
    "742": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "743": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "745": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "746": {
      "offset": [
        2111,
        2159
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x8"
    },
    "748": {
      "offset": [
        783,
        14652
      ],
      "op": "SHR",
      "path": "18"
    },
    "749": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "750": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "751": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "752": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "754": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "DUP10",
      "path": "18"
    },
    "755": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "756": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "757": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x10"
    },
    "759": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "SHR",
      "path": "18"
    },
    "760": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "761": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "762": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "763": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "764": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "765": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "767": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "768": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "769": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "770": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x80"
    },
    "772": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "773": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "774": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "775": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA0"
    },
    "777": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "778": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "779": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "780": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xC0"
    },
    "782": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "783": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "784": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "785": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "RETURN",
      "path": "18"
    },
    "786": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "787": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "788": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "789": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "790": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x287"
    },
    "793": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "794": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "795": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "797": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "NOT",
      "path": "18"
    },
    "798": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "799": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "800": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "801": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x287"
    },
    "804": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "805": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "806": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        2277,
        2289
      ],
      "op": "PUSH32",
      "path": "4",
      "statement": 2,
      "value": "0x0"
    },
    "839": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "841": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "843": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "845": {
      "op": "SHL"
    },
    "846": {
      "op": "SUB"
    },
    "847": {
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "848": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "849": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "850": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "852": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "853": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        14652
      ],
      "op": "RETURN",
      "path": "18"
    },
    "854": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "855": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "856": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "857": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        14652
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "858": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x287"
    },
    "861": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "862": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "863": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "865": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        14652
      ],
      "op": "NOT",
      "path": "18"
    },
    "866": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "867": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "868": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "869": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x287"
    },
    "872": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "873": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "875": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "876": {
      "fn": "ERC20.transfer",
      "offset": [
        3881,
        3887
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 3,
      "value": "0x380"
    },
    "879": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x376"
    },
    "882": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E1D"
    },
    "885": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "886": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "887": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "889": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "890": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "3",
      "statement": 4
    },
    "891": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "892": {
      "fn": "ERC20.transfer",
      "offset": [
        3881,
        3887
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20F9"
    },
    "895": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3881,
        3887
      ],
      "op": "JUMP",
      "path": "0"
    },
    "896": {
      "fn": "ERC20.transfer",
      "offset": [
        3881,
        3887
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "897": {
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "898": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "900": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "901": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "902": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        14652
      ],
      "op": "RETURN",
      "path": "18"
    },
    "903": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "904": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "905": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "906": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        14652
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "907": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x42D"
    },
    "910": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "911": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "912": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "914": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        14652
      ],
      "op": "NOT",
      "path": "18"
    },
    "915": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "916": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "917": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "918": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x42D"
    },
    "921": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "922": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3A1"
    },
    "925": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E1D"
    },
    "928": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "929": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "930": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "931": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "932": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "934": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "935": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "936": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "937": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "938": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "939": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "941": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "943": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "944": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        14652
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "945": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "947": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "948": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA0"
    },
    "950": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        14652
      ],
      "op": "SHL",
      "path": "18"
    },
    "951": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "952": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "953": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "954": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "956": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "957": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "959": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "960": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "961": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "963": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        14652
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "964": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "965": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6809,
        6844
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 5
    },
    "966": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6809,
        6844
      ],
      "op": "DUP3",
      "path": "0"
    },
    "967": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6809,
        6844
      ],
      "op": "DUP3",
      "path": "0"
    },
    "968": {
      "branch": 73,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6809,
        6844
      ],
      "op": "LT",
      "path": "0"
    },
    "969": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3DC"
    },
    "972": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "973": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "975": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "976": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6945,
        6979
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 6,
      "value": "0x380"
    },
    "979": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "980": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "981": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "982": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "DUP8",
      "path": "18"
    },
    "983": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "984": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6945,
        6979
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x230D"
    },
    "987": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6945,
        6979
      ],
      "op": "JUMP",
      "path": "0"
    },
    "988": {
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "989": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x84"
    },
    "991": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "992": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "994": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "995": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "996": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "997": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH3",
      "path": "18",
      "value": "0x461BCD"
    },
    "1001": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE5"
    },
    "1003": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "SHL",
      "path": "18"
    },
    "1004": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1005": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1006": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1007": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "1008": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1009": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x25"
    },
    "1011": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "1013": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1014": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "1015": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1016": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "1049": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x44"
    },
    "1051": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1052": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "1053": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1054": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "1060": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "1062": {
      "op": "SHL"
    },
    "1063": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x64"
    },
    "1065": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1066": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "1067": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1068": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "REVERT",
      "path": "18"
    },
    "1069": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1070": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1071": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "REVERT",
      "path": "18"
    },
    "1072": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1073": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "1074": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "1075": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x235"
    },
    "1078": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1079": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1080": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "1082": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "NOT",
      "path": "18"
    },
    "1083": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1084": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "1085": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "1086": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x235"
    },
    "1089": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1090": {
      "offset": [
        2976,
        2986
      ],
      "op": "CALLER",
      "path": "18"
    },
    "1091": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1092": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1093": {
      "offset": [
        2965,
        2975
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x8"
    },
    "1095": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1097": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1098": {
      "offset": [
        2944,
        3090
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x486"
    },
    "1101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1103": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1105": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1107": {
      "op": "SHL"
    },
    "1108": {
      "op": "SUB"
    },
    "1109": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1110": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "1111": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "1112": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "1113": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1114": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x10"
    },
    "1116": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "SHR",
      "path": "18"
    },
    "1117": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "1118": {
      "offset": [
        3003,
        3027
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1119": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        3003,
        3027
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "1152": {
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "1153": {
      "offset": [
        2965,
        3027
      ],
      "op": "EQ",
      "path": "18"
    },
    "1154": {
      "offset": [
        2944,
        3090
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1F98"
    },
    "1157": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        2944,
        3090
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1158": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        2944,
        3090
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1159": {
      "offset": [
        2976,
        2986
      ],
      "op": "CALLER",
      "path": "18"
    },
    "1160": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1161": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1162": {
      "offset": [
        2965,
        2975
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x8"
    },
    "1164": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1166": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1167": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "1169": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1170": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "1171": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "1172": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1173": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "1174": {
      "offset": [
        2769,
        2805
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "1175": {
      "offset": [
        2765,
        2875
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4D9"
    },
    "1178": {
      "offset": [
        2765,
        2875
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1179": {
      "op": "POP"
    },
    "1180": {
      "offset": [
        2976,
        2986
      ],
      "op": "CALLER",
      "path": "18"
    },
    "1181": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1182": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1183": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1184": {
      "offset": [
        2965,
        2975
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x8"
    },
    "1186": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1188": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1189": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1190": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1191": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1192": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1193": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "1194": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1195": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1196": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "1199": {
      "op": "NOT"
    },
    "1200": {
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "1201": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "1204": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "OR",
      "path": "18"
    },
    "1205": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1206": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "1207": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        5404,
        5427
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 7,
      "value": "0x9"
    },
    "1209": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1210": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1211": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "1214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1216": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1218": {
      "op": "SHL"
    },
    "1219": {
      "op": "SUB"
    },
    "1220": {
      "op": "NOT"
    },
    "1221": {
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "1222": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1223": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1224": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "1225": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "SHL",
      "path": "18"
    },
    "1226": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "1229": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1231": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1233": {
      "op": "SHL"
    },
    "1234": {
      "op": "SUB"
    },
    "1235": {
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "1236": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "OR",
      "path": "18"
    },
    "1237": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1238": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "1239": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1240": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "RETURN",
      "path": "18"
    },
    "1241": {
      "offset": [
        2765,
        2875
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1242": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "1244": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1245": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1246": {
      "offset": [
        2828,
        2864
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1247": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        2828,
        2864
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x6A9FF79F"
    },
    "1252": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        2828,
        2864
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE1"
    },
    "1254": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        2828,
        2864
      ],
      "op": "SHL",
      "path": "18"
    },
    "1255": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        2828,
        2864
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1256": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        2828,
        2864
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1257": {
      "offset": [
        2976,
        2986
      ],
      "op": "CALLER",
      "path": "18"
    },
    "1258": {
      "offset": [
        2828,
        2864
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1259": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        2828,
        2864
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1260": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        2828,
        2864
      ],
      "op": "ADD",
      "path": "18"
    },
    "1261": {
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1262": {
      "offset": [
        2828,
        2864
      ],
      "op": "REVERT",
      "path": "18"
    },
    "1263": {
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1264": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "1265": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1266": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "1267": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x235"
    },
    "1270": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1271": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "1273": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1274": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "1276": {
      "op": "NOT"
    },
    "1277": {
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "1278": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "1279": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x235"
    },
    "1282": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1283": {
      "offset": [
        2976,
        2986
      ],
      "op": "CALLER",
      "path": "18"
    },
    "1284": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1285": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1286": {
      "offset": [
        2965,
        2975
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x8"
    },
    "1288": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1290": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1291": {
      "offset": [
        2944,
        3090
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x547"
    },
    "1294": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1298": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1300": {
      "op": "SHL"
    },
    "1301": {
      "op": "SUB"
    },
    "1302": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1303": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1304": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "1305": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "1306": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1307": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x10"
    },
    "1309": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "SHR",
      "path": "18"
    },
    "1310": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "1311": {
      "offset": [
        3003,
        3027
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1312": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        3003,
        3027
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "1345": {
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "1346": {
      "offset": [
        2965,
        3027
      ],
      "op": "EQ",
      "path": "18"
    },
    "1347": {
      "offset": [
        2944,
        3090
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1F98"
    },
    "1350": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "jump": "i",
      "offset": [
        2944,
        3090
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1351": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        2944,
        3090
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1352": {
      "offset": [
        2976,
        2986
      ],
      "op": "CALLER",
      "path": "18"
    },
    "1353": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1354": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1355": {
      "offset": [
        2965,
        2975
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x8"
    },
    "1357": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1359": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1360": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "1362": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1363": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "1364": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "1365": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1366": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "1367": {
      "offset": [
        2769,
        2805
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "1368": {
      "offset": [
        2765,
        2875
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x583"
    },
    "1371": {
      "offset": [
        2765,
        2875
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1372": {
      "offset": [
        2976,
        2986
      ],
      "op": "CALLER",
      "path": "18"
    },
    "1373": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1374": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1375": {
      "offset": [
        2965,
        2975
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x8"
    },
    "1377": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1379": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1380": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1381": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "1382": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        6885,
        6900
      ],
      "op": "TIMESTAMP",
      "path": "18",
      "statement": 8
    },
    "1383": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "1385": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        6843,
        6882
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1386": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        6843,
        6882
      ],
      "op": "ADD",
      "path": "18"
    },
    "1387": {
      "offset": [
        783,
        14652
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "1388": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1389": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "1390": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        6910,
        6948
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 9,
      "value": "0x2"
    },
    "1392": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        6910,
        6948
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1393": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        6910,
        6948
      ],
      "op": "ADD",
      "path": "18"
    },
    "1394": {
      "offset": [
        783,
        14652
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "1395": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "1397": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "1398": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "1400": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        6976,
        7014
      ],
      "op": "DUP3",
      "path": "18",
      "statement": 10
    },
    "1401": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        6976,
        7014
      ],
      "op": "ADD",
      "path": "18"
    },
    "1402": {
      "offset": [
        783,
        14652
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "1403": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x44"
    },
    "1405": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "1406": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        7042,
        7075
      ],
      "op": "SWAP2",
      "path": "18",
      "statement": 11
    },
    "1407": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        7042,
        7075
      ],
      "op": "ADD",
      "path": "18"
    },
    "1408": {
      "offset": [
        783,
        14652
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "1409": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1410": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "RETURN",
      "path": "18"
    },
    "1411": {
      "offset": [
        2765,
        2875
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1412": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "1414": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "1415": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "1416": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1417": {
      "offset": [
        2828,
        2864
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1418": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        2828,
        2864
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x6A9FF79F"
    },
    "1423": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        2828,
        2864
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE1"
    },
    "1425": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        2828,
        2864
      ],
      "op": "SHL",
      "path": "18"
    },
    "1426": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        2828,
        2864
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1427": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        2828,
        2864
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1428": {
      "offset": [
        2976,
        2986
      ],
      "op": "CALLER",
      "path": "18"
    },
    "1429": {
      "offset": [
        2828,
        2864
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1430": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        2828,
        2864
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1431": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        2828,
        2864
      ],
      "op": "ADD",
      "path": "18"
    },
    "1432": {
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1433": {
      "offset": [
        2828,
        2864
      ],
      "op": "REVERT",
      "path": "18"
    },
    "1434": {
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1435": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "1436": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1437": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "1438": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x42D"
    },
    "1441": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1442": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1443": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "1445": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "NOT",
      "path": "18"
    },
    "1446": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1447": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "1448": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "1449": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x42D"
    },
    "1452": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1453": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1454": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1455": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1456": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1457": {
      "fn": "ERC20.symbol",
      "offset": [
        2453,
        2460
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 12,
      "value": "0x6"
    },
    "1459": {
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1460": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "1461": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "1463": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "1464": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1465": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SHR",
      "path": "18"
    },
    "1466": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1467": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1468": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "1469": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "1470": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "1471": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "1472": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "1473": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x6AB"
    },
    "1476": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1477": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1478": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1480": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP7",
      "path": "18"
    },
    "1481": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP8",
      "path": "18"
    },
    "1482": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "1483": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "LT",
      "path": "18"
    },
    "1484": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1485": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "EQ",
      "path": "18"
    },
    "1486": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x698"
    },
    "1489": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1490": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP9",
      "path": "18"
    },
    "1491": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP10",
      "path": "18"
    },
    "1492": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "1493": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP7",
      "path": "18"
    },
    "1494": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP9",
      "path": "18"
    },
    "1495": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP7",
      "path": "18"
    },
    "1496": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP8",
      "path": "18"
    },
    "1497": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "1498": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1499": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP11",
      "path": "18"
    },
    "1500": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1501": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1502": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1503": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1505": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "EQ",
      "path": "18"
    },
    "1506": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x671"
    },
    "1509": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1510": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "1511": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "1512": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "1514": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "EQ",
      "path": "18"
    },
    "1515": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x615"
    },
    "1518": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1519": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1520": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "1521": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "1522": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "1523": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x611"
    },
    "1526": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "1527": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1528": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x602"
    },
    "1531": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1532": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "1533": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "1534": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1F21"
    },
    "1537": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1538": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1539": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1540": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "1541": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1542": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "1543": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "1544": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "1545": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1546": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1547": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "1548": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1549": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E49"
    },
    "1552": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1553": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1554": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "1555": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1556": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "RETURN",
      "path": "18"
    },
    "1557": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1558": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1559": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1560": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "1561": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "1562": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "1563": {
      "fn": "ERC20.symbol",
      "offset": [
        2453,
        2460
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "1565": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1566": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1567": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F"
    },
    "1600": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1601": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1602": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "1603": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "LT",
      "path": "18"
    },
    "1604": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x659"
    },
    "1607": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1608": {
      "op": "POP"
    },
    "1609": {
      "op": "POP"
    },
    "1610": {
      "op": "POP"
    },
    "1611": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1612": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "1613": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "1614": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1615": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x602"
    },
    "1618": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x611"
    },
    "1621": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5EF"
    },
    "1624": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1625": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1626": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1627": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1628": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "1629": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP11",
      "path": "18"
    },
    "1630": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "1631": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "1632": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "1633": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1634": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP9",
      "path": "18"
    },
    "1635": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "1636": {
      "op": "POP"
    },
    "1637": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP8",
      "path": "18"
    },
    "1638": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "1639": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1640": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "1641": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "1642": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "1643": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1644": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "1645": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x640"
    },
    "1648": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1649": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1650": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1652": {
      "op": "NOT"
    },
    "1653": {
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "1654": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP8",
      "path": "18"
    },
    "1655": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1656": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "1657": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1658": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "1659": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "1660": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "1661": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x5"
    },
    "1663": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SHL",
      "path": "18"
    },
    "1664": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "1665": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "1666": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1667": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "1668": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "1669": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "1670": {
      "op": "POP"
    },
    "1671": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "1672": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "1673": {
      "op": "POP"
    },
    "1674": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x602"
    },
    "1677": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1678": {
      "op": "POP"
    },
    "1679": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x611"
    },
    "1682": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1683": {
      "op": "POP"
    },
    "1684": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5EF"
    },
    "1687": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1688": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1689": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1694": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1696": {
      "op": "SHL"
    },
    "1697": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1698": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1699": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x22"
    },
    "1701": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP11",
      "path": "18"
    },
    "1702": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1703": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "1705": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1706": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "REVERT",
      "path": "18"
    },
    "1707": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1708": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "1709": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x7F"
    },
    "1711": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "1712": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "1713": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5C5"
    },
    "1716": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1717": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1718": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "1719": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "1720": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "1721": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x287"
    },
    "1724": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1725": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1726": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "1728": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "NOT",
      "path": "18"
    },
    "1729": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1730": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "1731": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "1732": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x287"
    },
    "1735": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1736": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1737": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1738": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1739": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1740": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1742": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1744": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1746": {
      "op": "SHL"
    },
    "1747": {
      "op": "SUB"
    },
    "1748": {
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1749": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1750": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "1751": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1752": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1753": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1755": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1756": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "RETURN",
      "path": "18"
    },
    "1757": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1758": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "1759": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "1760": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "1761": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x287"
    },
    "1764": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1765": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1766": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "1768": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "NOT",
      "path": "18"
    },
    "1769": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1770": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "1771": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "1772": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x287"
    },
    "1775": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1776": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1778": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1779": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1784": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1786": {
      "op": "SHL"
    },
    "1787": {
      "op": "SUB"
    },
    "1788": {
      "offset": [
        1816,
        1864
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "1821": {
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "1822": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1823": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1824": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "RETURN",
      "path": "18"
    },
    "1825": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1826": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "1827": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1828": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "1829": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x235"
    },
    "1832": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1833": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1835": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1836": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "1838": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "NOT",
      "path": "18"
    },
    "1839": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1840": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1841": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1842": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "1843": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "1844": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x90A"
    },
    "1847": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1848": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1849": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "1850": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1855": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1857": {
      "op": "SHL"
    },
    "1858": {
      "op": "SUB"
    },
    "1859": {
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1860": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1861": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1862": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "GT",
      "path": "18"
    },
    "1863": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA5D"
    },
    "1866": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1867": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA0"
    },
    "1869": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1870": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1871": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1872": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "1873": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "1874": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "1875": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x98F"
    },
    "1878": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1879": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1883": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1885": {
      "op": "SHL"
    },
    "1886": {
      "op": "SUB"
    },
    "1887": {
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "1888": {
      "offset": [
        2449,
        2461
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x0"
    },
    "1921": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "1922": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "1923": {
      "offset": [
        2427,
        2437
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1924": {
      "offset": [
        2427,
        2462
      ],
      "op": "SUB",
      "path": "4"
    },
    "1925": {
      "offset": [
        2423,
        2496
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB6F"
    },
    "1928": {
      "offset": [
        2423,
        2496
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1929": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "1930": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1931": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1932": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x794"
    },
    "1935": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1936": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E9F"
    },
    "1939": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1940": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1941": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1942": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1943": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "1944": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "1945": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1946": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1947": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "1949": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1950": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1951": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "1952": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "1953": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "1954": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1955": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1956": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "1957": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1958": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "1959": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB4A"
    },
    "1962": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1963": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP9",
      "path": "18"
    },
    "1964": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "1965": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "1966": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1967": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x44"
    },
    "1969": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "1970": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "1971": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "1972": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1973": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1974": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "GT",
      "path": "18"
    },
    "1975": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA65"
    },
    "1978": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1979": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x7C9"
    },
    "1982": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1983": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "1984": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "1985": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1986": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP9",
      "path": "18"
    },
    "1987": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "1988": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "1989": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1F42"
    },
    "1992": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1993": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1994": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "1995": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP8",
      "path": "18"
    },
    "1996": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1997": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "1998": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "1999": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "2000": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2001": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x64"
    },
    "2003": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "2004": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "2005": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "2006": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2007": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2008": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "GT",
      "path": "18"
    },
    "2009": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB67"
    },
    "2012": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2013": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x7EB"
    },
    "2016": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2017": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "2018": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "2019": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2020": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP10",
      "path": "18"
    },
    "2021": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "2022": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "2023": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1F42"
    },
    "2026": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2027": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2028": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "2029": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "2031": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2032": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "2033": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP7",
      "path": "18"
    },
    "2034": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP8",
      "path": "18"
    },
    "2035": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2036": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x84"
    },
    "2038": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2039": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "2040": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "2041": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2042": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2043": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2044": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "GT",
      "path": "18"
    },
    "2045": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB6B"
    },
    "2048": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2049": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "2050": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "2051": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x23"
    },
    "2053": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2054": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "2055": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "2056": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2057": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB67"
    },
    "2060": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2061": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2062": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2063": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "2064": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "2065": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "2066": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2067": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "GT",
      "path": "18"
    },
    "2068": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB53"
    },
    "2071": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2072": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP9",
      "path": "18"
    },
    "2073": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2074": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "2075": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x829"
    },
    "2078": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP12",
      "path": "18"
    },
    "2079": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2080": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x5"
    },
    "2082": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SHL",
      "path": "18"
    },
    "2083": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "2084": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "2085": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1F21"
    },
    "2088": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2089": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2090": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2091": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2092": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2093": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2094": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP12",
      "path": "18"
    },
    "2095": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "2096": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "2097": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2098": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x6"
    },
    "2100": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SHL",
      "path": "18"
    },
    "2101": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2102": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "2103": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "2104": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2105": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "2106": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2107": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "GT",
      "path": "18"
    },
    "2108": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB4F"
    },
    "2111": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2112": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "2113": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "2114": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2115": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2116": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2117": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2118": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "LT",
      "path": "18"
    },
    "2119": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB10"
    },
    "2122": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2123": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "2124": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "2125": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "2126": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x80"
    },
    "2128": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "2129": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2130": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7711,
        7733
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2131": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7711,
        7733
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2132": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP8",
      "path": "18"
    },
    "2133": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2134": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2135": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2136": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7700,
        7745
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2137": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7700,
        7745
      ],
      "op": "ADD",
      "path": "18"
    },
    "2138": {
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "2139": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "2140": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA61"
    },
    "2143": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2144": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x86B"
    },
    "2147": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7700,
        7745
      ],
      "op": "DUP9",
      "path": "18"
    },
    "2148": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7700,
        7745
      ],
      "op": "DUP8",
      "path": "18"
    },
    "2149": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7700,
        7745
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "2150": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7700,
        7745
      ],
      "op": "ADD",
      "path": "18"
    },
    "2151": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x240F"
    },
    "2154": {
      "fn": "MasterNode._ccipReceive",
      "jump": "i",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2155": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2156": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "2157": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2158": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "DUP10",
      "path": "18"
    },
    "2159": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2160": {
      "offset": [
        2770,
        2780
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x8"
    },
    "2162": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP9",
      "path": "18"
    },
    "2163": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2164": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "2166": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "DUP8",
      "path": "18"
    },
    "2167": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "DUP11",
      "path": "18"
    },
    "2168": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "2169": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2170": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "2171": {
      "offset": [
        2769,
        2805
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2172": {
      "offset": [
        2765,
        2875
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xAFB"
    },
    "2175": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2765,
        2875
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2176": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7804,
        7826
      ],
      "op": "POP",
      "path": "18",
      "statement": 13
    },
    "2177": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7804,
        7826
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2178": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7804,
        7826
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2179": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP8",
      "path": "18"
    },
    "2180": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2181": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2182": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2183": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7793,
        7838
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2184": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7793,
        7838
      ],
      "op": "ADD",
      "path": "18"
    },
    "2185": {
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "2186": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "2187": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA61"
    },
    "2190": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2191": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x89A"
    },
    "2194": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7793,
        7838
      ],
      "op": "DUP9",
      "path": "18"
    },
    "2195": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7793,
        7838
      ],
      "op": "DUP8",
      "path": "18"
    },
    "2196": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7793,
        7838
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "2197": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7793,
        7838
      ],
      "op": "ADD",
      "path": "18"
    },
    "2198": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x240F"
    },
    "2201": {
      "fn": "MasterNode._ccipReceive",
      "jump": "i",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2202": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2203": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "2204": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "DUP9",
      "path": "18"
    },
    "2205": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2206": {
      "offset": [
        2770,
        2780
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x8"
    },
    "2208": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP8",
      "path": "18"
    },
    "2209": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2210": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "2212": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "2213": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "DUP10",
      "path": "18"
    },
    "2214": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "2215": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2216": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "2217": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2218": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xAAA"
    },
    "2221": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2222": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        429,
        449
      ],
      "op": "DUP4",
      "path": "21"
    },
    "2223": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        429,
        449
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "2224": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP8",
      "path": "18"
    },
    "2225": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2226": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2227": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2228": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        418,
        459
      ],
      "op": "DUP2",
      "path": "21"
    },
    "2229": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        418,
        459
      ],
      "op": "ADD",
      "path": "21"
    },
    "2230": {
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "2231": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "2232": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA61"
    },
    "2235": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2236": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x8C8"
    },
    "2239": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        418,
        459
      ],
      "op": "DUP9",
      "path": "21"
    },
    "2240": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "2242": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        418,
        459
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "2243": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        418,
        459
      ],
      "op": "ADD",
      "path": "21"
    },
    "2244": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2423"
    },
    "2247": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "jump": "i",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2248": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2249": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "2250": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8011,
        8023
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2251": {
      "branch": 65,
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8011,
        8023
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x90E"
    },
    "2254": {
      "branch": 65,
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8011,
        8023
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2255": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4135,
        4155
      ],
      "op": "POP",
      "path": "18"
    },
    "2256": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4135,
        4155
      ],
      "op": "POP",
      "path": "18"
    },
    "2257": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4135,
        4155
      ],
      "op": "POP",
      "path": "18"
    },
    "2258": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4135,
        4155
      ],
      "op": "POP",
      "path": "18"
    },
    "2259": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4135,
        4155
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2260": {
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2261": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "2263": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2264": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2265": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2266": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4111,
        4204
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2267": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4111,
        4204
      ],
      "op": "ADD",
      "path": "18"
    },
    "2268": {
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "2269": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "2270": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x90A"
    },
    "2273": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2274": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x8FD"
    },
    "2277": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "2279": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4111,
        4204
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2280": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x8F5"
    },
    "2283": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4234,
        4240
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 14,
      "value": "0x907"
    },
    "2286": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4111,
        4204
      ],
      "op": "SWAP7",
      "path": "18"
    },
    "2287": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4111,
        4204
      ],
      "op": "DUP7",
      "path": "18"
    },
    "2288": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4111,
        4204
      ],
      "op": "ADD",
      "path": "18"
    },
    "2289": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2423"
    },
    "2292": {
      "fn": "MasterNode._aWarpTokenMinter",
      "jump": "i",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2293": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2294": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "2295": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2296": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "2297": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x240F"
    },
    "2300": {
      "fn": "MasterNode._aWarpTokenMinter",
      "jump": "i",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2301": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2302": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "2303": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "2304": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2305": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2306": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "2307": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4234,
        4240
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2269"
    },
    "2310": {
      "fn": "MasterNode._aWarpTokenMinter",
      "jump": "i",
      "offset": [
        4234,
        4240
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2311": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4234,
        4240
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2312": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2313": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        14652
      ],
      "op": "RETURN",
      "path": "18"
    },
    "2314": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2315": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2316": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2317": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        14652
      ],
      "op": "REVERT",
      "path": "18"
    },
    "2318": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8007,
        8313
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2319": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8094,
        8106
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "2320": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8094,
        8106
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "2321": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8094,
        8106
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "2322": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8094,
        8106
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "2323": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8094,
        8106
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2324": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8094,
        8106
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "2325": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "2327": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8094,
        8106
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2328": {
      "branch": 66,
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8094,
        8106
      ],
      "op": "SUB",
      "path": "18"
    },
    "2329": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x993"
    },
    "2332": {
      "branch": 66,
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2333": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        4982,
        5004
      ],
      "op": "POP",
      "path": "18",
      "statement": 15
    },
    "2334": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        4982,
        5004
      ],
      "op": "POP",
      "path": "18"
    },
    "2335": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        4982,
        5004
      ],
      "op": "POP",
      "path": "18"
    },
    "2336": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        4982,
        5004
      ],
      "op": "POP",
      "path": "18"
    },
    "2337": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        4982,
        5004
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2338": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        4982,
        5004
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2339": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2340": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2341": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2342": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2343": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        4971,
        5016
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2344": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        4971,
        5016
      ],
      "op": "ADD",
      "path": "18"
    },
    "2345": {
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "2346": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "2347": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x98F"
    },
    "2350": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2351": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        4971,
        5016
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2352": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x939"
    },
    "2355": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        4971,
        5016
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2356": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        4971,
        5016
      ],
      "op": "ADD",
      "path": "18"
    },
    "2357": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x240F"
    },
    "2360": {
      "fn": "MasterNode._resmumeOperations",
      "jump": "i",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2361": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2362": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "2363": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2364": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2365": {
      "offset": [
        2770,
        2780
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x8"
    },
    "2367": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2368": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2369": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2370": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        14652
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "2371": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "2374": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xFF00"
    },
    "2377": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        14652
      ],
      "op": "NOT",
      "path": "18"
    },
    "2378": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2379": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2380": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "2381": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        14652
      ],
      "op": "OR",
      "path": "18"
    },
    "2382": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2383": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        14652
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "2384": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5084,
        5106
      ],
      "op": "MLOAD",
      "path": "18",
      "statement": 16
    },
    "2385": {
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2386": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2387": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2388": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2389": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2390": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5073,
        5118
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2391": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5073,
        5118
      ],
      "op": "ADD",
      "path": "18"
    },
    "2392": {
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "2393": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "2394": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x235"
    },
    "2397": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2398": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x967"
    },
    "2401": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5073,
        5118
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2402": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5073,
        5118
      ],
      "op": "ADD",
      "path": "18"
    },
    "2403": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x240F"
    },
    "2406": {
      "fn": "MasterNode._resmumeOperations",
      "jump": "i",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2407": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2408": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5060,
        5118
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x9"
    },
    "2410": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2411": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2412": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "2415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2417": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "2419": {
      "op": "SHL"
    },
    "2420": {
      "op": "SUB"
    },
    "2421": {
      "op": "NOT"
    },
    "2422": {
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "2423": {
      "offset": [
        2770,
        2780
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x8"
    },
    "2425": {
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "2426": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2427": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "2428": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        14652
      ],
      "op": "SHL",
      "path": "18"
    },
    "2429": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "2432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2434": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "2436": {
      "op": "SHL"
    },
    "2437": {
      "op": "SUB"
    },
    "2438": {
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "2439": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2440": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2441": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2442": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        14652
      ],
      "op": "OR",
      "path": "18"
    },
    "2443": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2444": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        14652
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "2445": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2446": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        14652
      ],
      "op": "RETURN",
      "path": "18"
    },
    "2447": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2448": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "2449": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2450": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        14652
      ],
      "op": "REVERT",
      "path": "18"
    },
    "2451": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8090,
        8313
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2452": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8178,
        8190
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "2453": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8178,
        8190
      ],
      "op": "SWAP7",
      "path": "18"
    },
    "2454": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8178,
        8190
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "2455": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8178,
        8190
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "2456": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8189,
        8190
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2"
    },
    "2458": {
      "branch": 67,
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8178,
        8190
      ],
      "op": "SUB",
      "path": "18"
    },
    "2459": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8189,
        8190
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA69"
    },
    "2462": {
      "branch": 67,
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8189,
        8190
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2463": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6010,
        6030
      ],
      "op": "POP",
      "path": "18"
    },
    "2464": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6010,
        6030
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2465": {
      "offset": [
        783,
        14652
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "2466": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x80"
    },
    "2468": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "2469": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2470": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2471": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        5982,
        6096
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2472": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        5982,
        6096
      ],
      "op": "ADD",
      "path": "18"
    },
    "2473": {
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "2474": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "2475": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA5D"
    },
    "2478": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2479": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x9B9"
    },
    "2482": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        5982,
        6096
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2483": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        5982,
        6096
      ],
      "op": "DUP8",
      "path": "18"
    },
    "2484": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        5982,
        6096
      ],
      "op": "ADD",
      "path": "18"
    },
    "2485": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2423"
    },
    "2488": {
      "fn": "MasterNode._nodeAaveFeed",
      "jump": "i",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2489": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2490": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "2491": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2492": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "2493": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "2494": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2495": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "2496": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x80"
    },
    "2498": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "2500": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2501": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "2502": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2503": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2504": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "2505": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2506": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6129,
        6151
      ],
      "op": "SWAP7",
      "path": "18",
      "statement": 17
    },
    "2507": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6129,
        6151
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2508": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6129,
        6151
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2509": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2510": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2511": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2512": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2513": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6118,
        6163
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2514": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6118,
        6163
      ],
      "op": "ADD",
      "path": "18"
    },
    "2515": {
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "2516": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "2517": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA65"
    },
    "2520": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2521": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x9E4"
    },
    "2524": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6118,
        6163
      ],
      "op": "DUP6",
      "path": "18"
    },
    "2525": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6118,
        6163
      ],
      "op": "DUP8",
      "path": "18"
    },
    "2526": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6118,
        6163
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "2527": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6118,
        6163
      ],
      "op": "ADD",
      "path": "18"
    },
    "2528": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x240F"
    },
    "2531": {
      "fn": "MasterNode._nodeAaveFeed",
      "jump": "i",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2532": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2533": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "2534": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "DUP10",
      "path": "18"
    },
    "2535": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2536": {
      "offset": [
        2770,
        2780
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x8"
    },
    "2538": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2539": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2540": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6197,
        6212
      ],
      "op": "TIMESTAMP",
      "path": "18"
    },
    "2541": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "2543": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "DUP8",
      "path": "18"
    },
    "2544": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "DUP12",
      "path": "18"
    },
    "2545": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "2546": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6107,
        6194
      ],
      "op": "ADD",
      "path": "18"
    },
    "2547": {
      "offset": [
        783,
        14652
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "2548": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6244,
        6266
      ],
      "op": "DUP3",
      "path": "18",
      "statement": 18
    },
    "2549": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6244,
        6266
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2550": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2551": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2552": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2553": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2554": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6233,
        6278
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2555": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6233,
        6278
      ],
      "op": "ADD",
      "path": "18"
    },
    "2556": {
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "2557": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "2558": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA65"
    },
    "2561": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2562": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA0D"
    },
    "2565": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6233,
        6278
      ],
      "op": "DUP6",
      "path": "18"
    },
    "2566": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6233,
        6278
      ],
      "op": "DUP8",
      "path": "18"
    },
    "2567": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6233,
        6278
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "2568": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6233,
        6278
      ],
      "op": "ADD",
      "path": "18"
    },
    "2569": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x240F"
    },
    "2572": {
      "fn": "MasterNode._nodeAaveFeed",
      "jump": "i",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2573": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2574": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "2575": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "DUP10",
      "path": "18"
    },
    "2576": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2577": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8189,
        8190
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2"
    },
    "2579": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "2580": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "DUP11",
      "path": "18"
    },
    "2581": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "2582": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6222,
        6308
      ],
      "op": "ADD",
      "path": "18"
    },
    "2583": {
      "offset": [
        783,
        14652
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "2584": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6358,
        6380
      ],
      "op": "DUP2",
      "path": "18",
      "statement": 19
    },
    "2585": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6358,
        6380
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2586": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2587": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2588": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2589": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2590": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6347,
        6392
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2591": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6347,
        6392
      ],
      "op": "ADD",
      "path": "18"
    },
    "2592": {
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "2593": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "2594": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA61"
    },
    "2597": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2598": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA31"
    },
    "2601": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6347,
        6392
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2602": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6347,
        6392
      ],
      "op": "DUP7",
      "path": "18"
    },
    "2603": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6347,
        6392
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "2604": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6347,
        6392
      ],
      "op": "ADD",
      "path": "18"
    },
    "2605": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x240F"
    },
    "2608": {
      "fn": "MasterNode._nodeAaveFeed",
      "jump": "i",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2609": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2610": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "2611": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "DUP9",
      "path": "18"
    },
    "2612": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2613": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "2615": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "2616": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "DUP10",
      "path": "18"
    },
    "2617": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "2618": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6336,
        6422
      ],
      "op": "ADD",
      "path": "18"
    },
    "2619": {
      "offset": [
        783,
        14652
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "2620": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6472,
        6494
      ],
      "op": "MLOAD",
      "path": "18",
      "statement": 20
    },
    "2621": {
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2622": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2623": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2624": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2625": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2626": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6461,
        6506
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2627": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6461,
        6506
      ],
      "op": "ADD",
      "path": "18"
    },
    "2628": {
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "2629": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "2630": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA5D"
    },
    "2633": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2634": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA53"
    },
    "2637": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6461,
        6506
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2638": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6461,
        6506
      ],
      "op": "ADD",
      "path": "18"
    },
    "2639": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x240F"
    },
    "2642": {
      "fn": "MasterNode._nodeAaveFeed",
      "jump": "i",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2643": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2644": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "2645": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2646": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2647": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2648": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "2649": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6450,
        6531
      ],
      "op": "ADD",
      "path": "18"
    },
    "2650": {
      "offset": [
        783,
        14652
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "2651": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2652": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "RETURN",
      "path": "18"
    },
    "2653": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2654": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "2655": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2656": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "REVERT",
      "path": "18"
    },
    "2657": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2658": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "DUP9",
      "path": "18"
    },
    "2659": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2660": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "REVERT",
      "path": "18"
    },
    "2661": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2662": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "DUP10",
      "path": "18"
    },
    "2663": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2664": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        14652
      ],
      "op": "REVERT",
      "path": "18"
    },
    "2665": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8174,
        8313
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2666": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "2667": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x19"
    },
    "2669": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x64"
    },
    "2671": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "2672": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "2673": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "DUP9",
      "path": "18"
    },
    "2674": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2675": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "2676": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH3",
      "path": "18",
      "value": "0x461BCD"
    },
    "2680": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE5"
    },
    "2682": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "SHL",
      "path": "18"
    },
    "2683": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8267,
        8302
      ],
      "op": "DUP6",
      "path": "18",
      "statement": 21
    },
    "2684": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8267,
        8302
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2685": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8267,
        8302
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2686": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8267,
        8302
      ],
      "op": "ADD",
      "path": "18"
    },
    "2687": {
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2688": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2689": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "2690": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2691": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x696E76616C696420636F6D6D616E642066726F6D204E6F646500000000000000"
    },
    "2724": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x44"
    },
    "2726": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2727": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "2728": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2729": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8267,
        8302
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "18"
    },
    "2730": {
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2731": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "2732": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2733": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2737": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2739": {
      "op": "SHL"
    },
    "2740": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2741": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2742": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2743": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2744": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "2745": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "DUP8",
      "path": "18"
    },
    "2746": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2747": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2748": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x26"
    },
    "2750": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2751": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2752": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "2753": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2754": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x496E636F6D696E67204D657373616765206E6F742066726F6D20612076616C69"
    },
    "2787": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x44"
    },
    "2789": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2790": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "2791": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2792": {
      "op": "PUSH6",
      "value": "0x64206E6F6465"
    },
    "2799": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2801": {
      "op": "SHL"
    },
    "2802": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x64"
    },
    "2804": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2805": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "2806": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2807": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x84"
    },
    "2809": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2810": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "REVERT",
      "path": "18"
    },
    "2811": {
      "offset": [
        2765,
        2875
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2812": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "2813": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2814": {
      "op": "PUSH4",
      "value": "0x6A9FF79F"
    },
    "2819": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2821": {
      "op": "SHL"
    },
    "2822": {
      "offset": [
        2828,
        2864
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2823": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2828,
        2864
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2824": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2828,
        2864
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2825": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2828,
        2864
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2826": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2828,
        2864
      ],
      "op": "ADD",
      "path": "18"
    },
    "2827": {
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2828": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2829": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2830": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2831": {
      "offset": [
        2828,
        2864
      ],
      "op": "REVERT",
      "path": "18"
    },
    "2832": {
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2833": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "DUP11",
      "path": "18"
    },
    "2834": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2835": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "2836": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "2837": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "2838": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB4F"
    },
    "2841": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2842": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "DUP11",
      "path": "18"
    },
    "2843": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2844": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2845": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB25"
    },
    "2848": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2849": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1EEB"
    },
    "2852": {
      "fn": "MasterNode._ccipReceive",
      "jump": "i",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2853": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2854": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2855": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "2856": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2857": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "DUP12",
      "path": "18"
    },
    "2858": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2859": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "2860": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2861": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "2862": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB4A"
    },
    "2865": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2866": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2867": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "DUP15",
      "path": "18"
    },
    "2868": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "2869": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "DUP15",
      "path": "18"
    },
    "2870": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "2871": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2872": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2873": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "2874": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "2875": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "2876": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2877": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2878": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "2879": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2880": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2881": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2882": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "2883": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2884": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "2885": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2886": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x843"
    },
    "2889": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2890": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2891": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2893": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2894": {
      "first_revert": true,
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "REVERT",
      "path": "18"
    },
    "2895": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2896": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "DUP13",
      "path": "18"
    },
    "2897": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2898": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "REVERT",
      "path": "18"
    },
    "2899": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2900": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2901": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x41"
    },
    "2903": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "2904": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x4E487B71"
    },
    "2909": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE0"
    },
    "2911": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "SHL",
      "path": "18"
    },
    "2912": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2914": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2915": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2916": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2918": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "REVERT",
      "path": "18"
    },
    "2919": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2920": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "DUP11",
      "path": "18"
    },
    "2921": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2922": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "REVERT",
      "path": "18"
    },
    "2923": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2924": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "DUP12",
      "path": "18"
    },
    "2925": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2926": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "REVERT",
      "path": "18"
    },
    "2927": {
      "offset": [
        2423,
        2496
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2928": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "2930": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2931": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "2932": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2933": {
      "offset": [
        2471,
        2496
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2934": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2471,
        2496
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x35FDCCCD"
    },
    "2939": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2471,
        2496
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE2"
    },
    "2941": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2471,
        2496
      ],
      "op": "SHL",
      "path": "4"
    },
    "2942": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2471,
        2496
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2943": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2471,
        2496
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2944": {
      "offset": [
        2427,
        2437
      ],
      "op": "CALLER",
      "path": "4"
    },
    "2945": {
      "offset": [
        2471,
        2496
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2946": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2471,
        2496
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2947": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2471,
        2496
      ],
      "op": "ADD",
      "path": "4"
    },
    "2948": {
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2949": {
      "offset": [
        2471,
        2496
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2950": {
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2951": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "2952": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2953": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "2954": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x235"
    },
    "2957": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2958": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2959": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "2961": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "NOT",
      "path": "18"
    },
    "2962": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "2963": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "2964": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "2965": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x235"
    },
    "2968": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2969": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1142,
        1156
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 22,
      "value": "0x1"
    },
    "2971": {
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2972": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2973": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2975": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2977": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2979": {
      "op": "SHL"
    },
    "2980": {
      "op": "SUB"
    },
    "2981": {
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2982": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2983": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2984": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "2985": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1128,
        1138
      ],
      "op": "CALLER",
      "path": "9"
    },
    "2986": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1128,
        1156
      ],
      "op": "SUB",
      "path": "9"
    },
    "2987": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xBF1"
    },
    "2990": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2991": {
      "op": "POP"
    },
    "2992": {
      "op": "POP"
    },
    "2993": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2994": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2997": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2999": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3001": {
      "op": "SHL"
    },
    "3002": {
      "op": "SUB"
    },
    "3003": {
      "op": "NOT"
    },
    "3004": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3005": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3006": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "3007": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1128,
        1138
      ],
      "op": "CALLER",
      "path": "9"
    },
    "3008": {
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3009": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3010": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "OR",
      "path": "18"
    },
    "3011": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "3012": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "3013": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "3014": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "3015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3017": {
      "offset": [
        783,
        14652
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "3018": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "3019": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1287,
        1329
      ],
      "op": "PUSH32",
      "path": "9",
      "statement": 23,
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "3052": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3053": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3054": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1287,
        1329
      ],
      "op": "LOG3",
      "path": "9"
    },
    "3055": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3056": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "RETURN",
      "path": "18"
    },
    "3057": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3058": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3059": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3061": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x64"
    },
    "3063": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "3064": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3065": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3066": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH3",
      "path": "18",
      "value": "0x461BCD"
    },
    "3070": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE5"
    },
    "3072": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "SHL",
      "path": "18"
    },
    "3073": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3074": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3075": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3076": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "3077": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3078": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x16"
    },
    "3080": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "3082": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3083": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "3084": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3085": {
      "op": "PUSH22",
      "value": "0x26BAB9BA10313290383937B837B9B2B21037BBB732B9"
    },
    "3108": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "3110": {
      "op": "SHL"
    },
    "3111": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x44"
    },
    "3113": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3114": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "3115": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3116": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "REVERT",
      "path": "18"
    },
    "3117": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3118": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "3119": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "3120": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "3121": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x287"
    },
    "3124": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3125": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3127": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "3128": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "3130": {
      "op": "NOT"
    },
    "3131": {
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "3132": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "3133": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x287"
    },
    "3136": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3137": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3139": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3140": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3141": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3146": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3148": {
      "op": "SHL"
    },
    "3149": {
      "op": "SUB"
    },
    "3150": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC55"
    },
    "3153": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E1D"
    },
    "3156": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "jump": "i",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3157": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3158": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "3159": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3160": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3161": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3515
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 24,
      "value": "0x2"
    },
    "3163": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3164": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3165": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        14652
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "3166": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3167": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3168": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3169": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3170": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3171": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3172": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        14652
      ],
      "op": "RETURN",
      "path": "18"
    },
    "3173": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3174": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3175": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        14652
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "3176": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x42D"
    },
    "3179": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3180": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3181": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "3183": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        14652
      ],
      "op": "NOT",
      "path": "18"
    },
    "3184": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "3185": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "3186": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "3187": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x42D"
    },
    "3190": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3191": {
      "offset": [
        2032,
        2091
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC7E"
    },
    "3194": {
      "fn": "ERC20.balanceOf",
      "offset": [
        2032,
        2091
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2468"
    },
    "3197": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        2032,
        2091
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3198": {
      "fn": "ERC20.balanceOf",
      "offset": [
        2032,
        2091
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3199": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "3201": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        14652
      ],
      "op": "NOT",
      "path": "18"
    },
    "3202": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        3170,
        3192
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 25,
      "value": "0x9"
    },
    "3204": {
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3205": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "3206": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        3170,
        3192
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x9"
    },
    "3208": {
      "offset": [
        783,
        14652
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "3209": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3210": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "RETURN",
      "path": "18"
    },
    "3211": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3212": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "3213": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "3214": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "3215": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x287"
    },
    "3218": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3219": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3220": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "3222": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "NOT",
      "path": "18"
    },
    "3223": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "3224": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "3225": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "3226": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x287"
    },
    "3229": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3230": {
      "offset": [
        2205,
        2230
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x9"
    },
    "3232": {
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3233": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3234": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3235": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x8"
    },
    "3237": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3238": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3239": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3240": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "SHR",
      "path": "18"
    },
    "3241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3245": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3247": {
      "op": "SHL"
    },
    "3248": {
      "op": "SUB"
    },
    "3249": {
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "3250": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3251": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3252": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3254": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3255": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "RETURN",
      "path": "18"
    },
    "3256": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3257": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "3258": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "3259": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "3260": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x287"
    },
    "3263": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3264": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3265": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "3267": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "NOT",
      "path": "18"
    },
    "3268": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "3269": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "3270": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "3271": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x287"
    },
    "3274": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3275": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3277": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3278": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "3280": {
      "offset": [
        2166,
        2199
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x9"
    },
    "3282": {
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3283": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "3284": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3285": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3286": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3287": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3288": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3289": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3290": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3291": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "RETURN",
      "path": "18"
    },
    "3292": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3293": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "3294": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3295": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "3296": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x235"
    },
    "3299": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3300": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3301": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "3303": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "NOT",
      "path": "18"
    },
    "3304": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "3305": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "3306": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "3307": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x235"
    },
    "3310": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3311": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xCF6"
    },
    "3314": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E89"
    },
    "3317": {
      "fn": "MasterNode.stopAddingNodes",
      "jump": "i",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3318": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3319": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xCFE"
    },
    "3322": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E33"
    },
    "3325": {
      "fn": "MasterNode.stopAddingNodes",
      "jump": "i",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3326": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3327": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3328": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3329": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3330": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3332": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12242,
        12362
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "3333": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12210,
        12211
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "3335": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12242,
        12362
      ],
      "op": "DUP7",
      "path": "18"
    },
    "3336": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12242,
        12362
      ],
      "op": "DUP6",
      "path": "18"
    },
    "3337": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12242,
        12362
      ],
      "op": "ADD",
      "path": "18"
    },
    "3338": {
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3341": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3343": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3345": {
      "op": "SHL"
    },
    "3346": {
      "op": "SUB"
    },
    "3347": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3348": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "3349": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "3350": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "3351": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "3352": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "3353": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3354": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "3356": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3357": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA0"
    },
    "3359": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "SHL",
      "path": "18"
    },
    "3360": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "3361": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "3362": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3363": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "3365": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3366": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "3367": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3368": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "3369": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "3370": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3371": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12242,
        12362
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3372": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12242,
        12362
      ],
      "op": "DUP6",
      "path": "18"
    },
    "3373": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12242,
        12362
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3374": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12242,
        12362
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xD36"
    },
    "3377": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12242,
        12362
      ],
      "op": "DUP6",
      "path": "18"
    },
    "3378": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12242,
        12362
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1F06"
    },
    "3381": {
      "fn": "MasterNode.warpAssets",
      "jump": "i",
      "offset": [
        12242,
        12362
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3382": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12242,
        12362
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3383": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3384": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12383,
        12393
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 26,
      "value": "0x9"
    },
    "3386": {
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3387": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x8"
    },
    "3389": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "SHR",
      "path": "18"
    },
    "3390": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "3391": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "DUP9",
      "path": "18"
    },
    "3392": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3393": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x8"
    },
    "3395": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "DUP8",
      "path": "18"
    },
    "3396": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3397": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "3398": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "DUP9",
      "path": "18"
    },
    "3399": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "3400": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xFF00"
    },
    "3403": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "NOT",
      "path": "18"
    },
    "3404": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3405": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3406": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "3407": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3408": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "3409": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3410": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12383,
        12393
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x9"
    },
    "3412": {
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3413": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x8"
    },
    "3415": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "SHR",
      "path": "18"
    },
    "3416": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "3417": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "3418": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "3419": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "DUP10",
      "path": "18"
    },
    "3420": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3421": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "3423": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "DUP8",
      "path": "18"
    },
    "3424": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "DUP11",
      "path": "18"
    },
    "3425": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "3426": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3427": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "3428": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "3429": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x10"
    },
    "3431": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "SHR",
      "path": "18"
    },
    "3432": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "3433": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "3434": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "3435": {
      "offset": [
        2769,
        2805
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3436": {
      "offset": [
        2765,
        2875
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1155"
    },
    "3439": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        2765,
        2875
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3440": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3441": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9203,
        9214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x7"
    },
    "3443": {
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3444": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "3445": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3446": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3447": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "3448": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x80"
    },
    "3450": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP11",
      "path": "18"
    },
    "3451": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3452": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xD84"
    },
    "3455": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3456": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E9F"
    },
    "3459": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3460": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3461": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3462": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3463": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3464": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3465": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP14",
      "path": "18"
    },
    "3466": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3467": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "3468": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3469": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3470": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP13",
      "path": "18"
    },
    "3471": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3472": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "3473": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3474": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP14",
      "path": "18"
    },
    "3475": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3476": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3477": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "3478": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3479": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "3480": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3481": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP9",
      "path": "18"
    },
    "3482": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3483": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10946,
        10967
      ],
      "op": "SWAP8",
      "path": "18",
      "statement": 27
    },
    "3484": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10946,
        10967
      ],
      "op": "DUP11",
      "path": "18"
    },
    "3485": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10946,
        10967
      ],
      "op": "DUP10",
      "path": "18"
    },
    "3486": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10946,
        10967
      ],
      "op": "ADD",
      "path": "18"
    },
    "3487": {
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3488": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10946,
        10967
      ],
      "op": "DUP10",
      "path": "18"
    },
    "3489": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10946,
        10967
      ],
      "op": "DUP9",
      "path": "18"
    },
    "3490": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10946,
        10967
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3491": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10946,
        10967
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xDAB"
    },
    "3494": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10946,
        10967
      ],
      "op": "DUP9",
      "path": "18"
    },
    "3495": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10946,
        10967
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1EEB"
    },
    "3498": {
      "fn": "MasterNode._buildCCIPMessage",
      "jump": "i",
      "offset": [
        10946,
        10967
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3499": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10946,
        10967
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3500": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP9",
      "path": "18"
    },
    "3501": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3502": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xDB6"
    },
    "3505": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3506": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1ED0"
    },
    "3509": {
      "fn": "MasterNode._buildCCIPMessage",
      "jump": "i",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3510": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3511": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3513": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3514": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3515": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11191,
        11357
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xDD3"
    },
    "3518": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP11",
      "path": "18"
    },
    "3519": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3520": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xDC8"
    },
    "3523": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3524": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1ED0"
    },
    "3527": {
      "fn": "MasterNode._buildCCIPMessage",
      "jump": "i",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3528": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3529": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11328,
        11337
      ],
      "op": "PUSH3",
      "path": "18",
      "value": "0x1E8480"
    },
    "3533": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3534": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3535": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11191,
        11357
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2431"
    },
    "3538": {
      "fn": "MasterNode._buildCCIPMessage",
      "jump": "i",
      "offset": [
        11191,
        11357
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3539": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11191,
        11357
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3540": {
      "offset": [
        783,
        14652
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "3541": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP11",
      "path": "18"
    },
    "3542": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3543": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP10",
      "path": "18"
    },
    "3544": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xDE0"
    },
    "3547": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP12",
      "path": "18"
    },
    "3548": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E9F"
    },
    "3551": {
      "fn": "MasterNode._buildCCIPMessage",
      "jump": "i",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3552": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3553": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP11",
      "path": "18"
    },
    "3554": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3555": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10896,
        11522
      ],
      "op": "DUP12",
      "path": "18"
    },
    "3556": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10896,
        11522
      ],
      "op": "DUP11",
      "path": "18"
    },
    "3557": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10896,
        11522
      ],
      "op": "ADD",
      "path": "18"
    },
    "3558": {
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3559": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10896,
        11522
      ],
      "op": "DUP10",
      "path": "18"
    },
    "3560": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10896,
        11522
      ],
      "op": "DUP10",
      "path": "18"
    },
    "3561": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10896,
        11522
      ],
      "op": "ADD",
      "path": "18"
    },
    "3562": {
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3563": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10896,
        11522
      ],
      "op": "DUP8",
      "path": "18"
    },
    "3564": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10896,
        11522
      ],
      "op": "ADD",
      "path": "18"
    },
    "3565": {
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3566": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x80"
    },
    "3568": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10896,
        11522
      ],
      "op": "DUP7",
      "path": "18"
    },
    "3569": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10896,
        11522
      ],
      "op": "ADD",
      "path": "18"
    },
    "3570": {
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3571": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "3572": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3573": {
      "op": "PUSH4",
      "value": "0xB0F479A1"
    },
    "3578": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3580": {
      "op": "SHL"
    },
    "3581": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3582": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3583": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10896,
        11522
      ],
      "op": "DUP8",
      "path": "18"
    },
    "3584": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3585": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9360
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3586": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3587": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9360
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "3588": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "GAS",
      "path": "18"
    },
    "3589": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "STATICCALL",
      "path": "18"
    },
    "3590": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3591": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3592": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3593": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x114B"
    },
    "3596": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3597": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3598": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "DUP6",
      "path": "18"
    },
    "3599": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3600": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "DUP11",
      "path": "18"
    },
    "3601": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3602": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1111"
    },
    "3605": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3606": {
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3607": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "3608": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "3609": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "3610": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP9",
      "path": "18"
    },
    "3611": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP8",
      "path": "18"
    },
    "3612": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3613": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "3614": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x20487DED"
    },
    "3619": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE0"
    },
    "3621": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SHL",
      "path": "18"
    },
    "3622": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3623": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3624": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "DUP10",
      "path": "18"
    },
    "3625": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3626": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3627": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xE37"
    },
    "3630": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "DUP12",
      "path": "18"
    },
    "3631": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "DUP11",
      "path": "18"
    },
    "3632": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "DUP11",
      "path": "18"
    },
    "3633": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3634": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "ADD",
      "path": "18"
    },
    "3635": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1FF2"
    },
    "3638": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9456,
        9512
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3639": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3640": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "SUB",
      "path": "18"
    },
    "3641": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3642": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "DUP11",
      "path": "18"
    },
    "3643": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "GAS",
      "path": "18"
    },
    "3644": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "STATICCALL",
      "path": "18"
    },
    "3645": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "3646": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3647": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3648": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1107"
    },
    "3651": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3652": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3653": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "DUP11",
      "path": "18"
    },
    "3654": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3655": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3656": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "3657": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x10D5"
    },
    "3660": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3661": {
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3662": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "3663": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x64"
    },
    "3665": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP11",
      "path": "18"
    },
    "3666": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3667": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3668": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "3669": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3670": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "3671": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x23B872DD"
    },
    "3676": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE0"
    },
    "3678": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SHL",
      "path": "18"
    },
    "3679": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "DUP4",
      "path": "18",
      "statement": 28
    },
    "3680": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3681": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9569,
        9579
      ],
      "op": "CALLER",
      "path": "18"
    },
    "3682": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "DUP11",
      "path": "18"
    },
    "3683": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3684": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "ADD",
      "path": "18"
    },
    "3685": {
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3686": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9360
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "3687": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "3689": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3690": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "3691": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3692": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP9",
      "path": "18"
    },
    "3693": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x44"
    },
    "3695": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3696": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "3697": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3698": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "GAS",
      "path": "18"
    },
    "3699": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "CALL",
      "path": "18"
    },
    "3700": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3701": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3702": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3703": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x10CB"
    },
    "3706": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3707": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "DUP11",
      "path": "18"
    },
    "3708": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3709": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x10AE"
    },
    "3712": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3713": {
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3714": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "3715": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3716": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x106B"
    },
    "3719": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3720": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9203,
        9214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x7"
    },
    "3722": {
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3723": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "3724": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3725": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "3726": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3727": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x70A08231"
    },
    "3732": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE0"
    },
    "3734": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SHL",
      "path": "18"
    },
    "3735": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "SWAP1",
      "path": "18",
      "statement": 29
    },
    "3736": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3737": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3738": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3739": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9360
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "3740": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "DUP6",
      "path": "18"
    },
    "3741": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3742": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "ADD",
      "path": "18"
    },
    "3743": {
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3744": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "DUP10",
      "path": "18"
    },
    "3745": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3746": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "3748": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3749": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "DUP8",
      "path": "18"
    },
    "3750": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "GAS",
      "path": "18"
    },
    "3751": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "STATICCALL",
      "path": "18"
    },
    "3752": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3753": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3754": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3755": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1061"
    },
    "3758": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3759": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "DUP12",
      "path": "18"
    },
    "3760": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3761": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1034"
    },
    "3764": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3765": {
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3766": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9668,
        9711
      ],
      "op": "POP",
      "path": "18"
    },
    "3767": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9668,
        9711
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3768": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9668,
        9711
      ],
      "op": "GT",
      "path": "18"
    },
    "3769": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9664,
        9792
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xFB8"
    },
    "3772": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9664,
        9792
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3773": {
      "op": "POP"
    },
    "3774": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "3775": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3776": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "3781": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3783": {
      "op": "SHL"
    },
    "3784": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "DUP2",
      "path": "18",
      "statement": 30
    },
    "3785": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3790": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3792": {
      "op": "SHL"
    },
    "3793": {
      "op": "SUB"
    },
    "3794": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "3795": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "3796": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3797": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "DUP6",
      "path": "18"
    },
    "3798": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "ADD",
      "path": "18"
    },
    "3799": {
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3800": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3801": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3802": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3804": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3805": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "3806": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "3807": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3808": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "3809": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3810": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP10",
      "path": "18"
    },
    "3811": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "3812": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "3813": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3814": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3815": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP10",
      "path": "18"
    },
    "3816": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3817": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3818": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3819": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3820": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3821": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP8",
      "path": "18"
    },
    "3822": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3823": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3824": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3825": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3827": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "3828": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "SUB",
      "path": "18"
    },
    "3829": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "3830": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "GAS",
      "path": "18"
    },
    "3831": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "CALL",
      "path": "18"
    },
    "3832": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3833": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3834": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xFAE"
    },
    "3837": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3838": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3839": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "DUP9",
      "path": "18"
    },
    "3840": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "3841": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "3842": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3843": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 31,
      "value": "0xF29"
    },
    "3846": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "SWAP9",
      "path": "18"
    },
    "3847": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "SWAP8",
      "path": "18"
    },
    "3848": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "3849": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "3850": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xF81"
    },
    "3853": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3854": {
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3855": {
      "op": "POP"
    },
    "3856": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "3857": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3858": {
      "op": "PUSH4",
      "value": "0x96F4E9F9"
    },
    "3863": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3865": {
      "op": "SHL"
    },
    "3866": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3867": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3868": {
      "offset": [
        783,
        14652
      ],
      "op": "SWAP8",
      "path": "18"
    },
    "3869": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP9",
      "path": "18"
    },
    "3870": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "3871": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "3872": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "3873": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "3874": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "3875": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3876": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "ADD",
      "path": "18"
    },
    "3877": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1FF2"
    },
    "3880": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        10056,
        10114
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3881": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3882": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "SUB",
      "path": "18"
    },
    "3883": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "3884": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "GAS",
      "path": "18"
    },
    "3885": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "CALL",
      "path": "18"
    },
    "3886": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3887": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3888": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3889": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xF78"
    },
    "3892": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3893": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "POP",
      "path": "18"
    },
    "3894": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xF4F"
    },
    "3897": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3898": {
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3899": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12383,
        12393
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x9"
    },
    "3901": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3902": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3903": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "3906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3908": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "3910": {
      "op": "SHL"
    },
    "3911": {
      "op": "SUB"
    },
    "3912": {
      "op": "NOT"
    },
    "3913": {
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "3914": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3915": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "3916": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3917": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3918": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        14652
      ],
      "op": "RETURN",
      "path": "18"
    },
    "3919": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3920": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3921": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "3922": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3923": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "GT",
      "path": "18"
    },
    "3924": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xF71"
    },
    "3927": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3928": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3929": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xF62"
    },
    "3932": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3933": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3934": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1F21"
    },
    "3937": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        10056,
        10114
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3938": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3939": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3940": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "ADD",
      "path": "18"
    },
    "3941": {
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "3942": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "3943": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x42D"
    },
    "3946": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3947": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "CODESIZE",
      "path": "18"
    },
    "3948": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3949": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xF3A"
    },
    "3952": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3953": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3954": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "POP",
      "path": "18"
    },
    "3955": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "3956": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xF58"
    },
    "3959": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3960": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3961": {
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3962": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "3963": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "3964": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3965": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "3966": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "3967": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3968": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "REVERT",
      "path": "18"
    },
    "3969": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3970": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xFA0"
    },
    "3973": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3974": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "DUP8",
      "path": "18"
    },
    "3975": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "3976": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "DUP10",
      "path": "18"
    },
    "3977": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "GT",
      "path": "18"
    },
    "3978": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xFA7"
    },
    "3981": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3982": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3983": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xF98"
    },
    "3986": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3987": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3988": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1F21"
    },
    "3991": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9910,
        9952
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3992": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3993": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3994": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "ADD",
      "path": "18"
    },
    "3995": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3996": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x20BE"
    },
    "3999": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9910,
        9952
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4000": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4001": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "POP",
      "path": "18"
    },
    "4002": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "CODESIZE",
      "path": "18"
    },
    "4003": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xF0E"
    },
    "4006": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4007": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4008": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "POP",
      "path": "18"
    },
    "4009": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "4010": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xF8E"
    },
    "4013": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4014": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4015": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP8",
      "path": "18"
    },
    "4016": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4017": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "4018": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "4019": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4020": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "4021": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "4022": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4023": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "REVERT",
      "path": "18"
    },
    "4024": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9664,
        9792
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4025": {
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4026": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP10",
      "path": "18"
    },
    "4027": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP9",
      "path": "18"
    },
    "4028": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP11",
      "path": "18"
    },
    "4029": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4030": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP8",
      "path": "18"
    },
    "4031": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "4032": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "4034": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4035": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4036": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4037": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "SWAP10",
      "path": "18"
    },
    "4038": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4039": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "4040": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4041": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4042": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9360
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "4043": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "DUP11",
      "path": "18"
    },
    "4044": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4045": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "ADD",
      "path": "18"
    },
    "4046": {
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4047": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "GAS",
      "path": "18"
    },
    "4048": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "STATICCALL",
      "path": "18"
    },
    "4049": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "4050": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4051": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4052": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1029"
    },
    "4055": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4056": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "4057": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xFF8"
    },
    "4060": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4061": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9664,
        9792
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4062": {
      "op": "POP"
    },
    "4063": {
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4064": {
      "op": "PUSH4",
      "value": "0x4787A103"
    },
    "4069": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4071": {
      "op": "SHL"
    },
    "4072": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9732,
        9792
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4073": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9732,
        9792
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4074": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9732,
        9792
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "4075": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9732,
        9792
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4076": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9732,
        9792
      ],
      "op": "ADD",
      "path": "18"
    },
    "4077": {
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4078": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "4080": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4081": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "4082": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4083": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x44"
    },
    "4085": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4086": {
      "op": "POP"
    },
    "4087": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9732,
        9792
      ],
      "op": "REVERT",
      "path": "18"
    },
    "4088": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4089": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4090": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4091": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "POP",
      "path": "18"
    },
    "4092": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4093": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4094": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "4095": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4096": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "GT",
      "path": "18"
    },
    "4097": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1022"
    },
    "4100": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4101": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4102": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100F"
    },
    "4105": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4106": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4107": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1F21"
    },
    "4110": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9749,
        9785
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4111": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4112": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4113": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "ADD",
      "path": "18"
    },
    "4114": {
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "4115": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "4116": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB4A"
    },
    "4119": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4120": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x44"
    },
    "4122": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "4123": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4124": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4125": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "DUP6",
      "path": "18"
    },
    "4126": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xFDD"
    },
    "4129": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4130": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4131": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "POP",
      "path": "18"
    },
    "4132": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "4133": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1005"
    },
    "4136": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4137": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4138": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4139": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4140": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4141": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "4142": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4143": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4144": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "4145": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "4146": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4147": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "REVERT",
      "path": "18"
    },
    "4148": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4149": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4150": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "POP",
      "path": "18"
    },
    "4151": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "DUP10",
      "path": "18"
    },
    "4152": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4153": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4154": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "4155": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4156": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "GT",
      "path": "18"
    },
    "4157": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x105A"
    },
    "4160": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4161": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4162": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x104B"
    },
    "4165": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4166": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4167": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1F21"
    },
    "4170": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9675,
        9711
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4171": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4172": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4173": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "ADD",
      "path": "18"
    },
    "4174": {
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "4175": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "4176": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB4A"
    },
    "4179": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4180": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4181": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "CODESIZE",
      "path": "18"
    },
    "4182": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xEB5"
    },
    "4185": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4186": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4187": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "POP",
      "path": "18"
    },
    "4188": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "4189": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1041"
    },
    "4192": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4193": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4194": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP10",
      "path": "18"
    },
    "4195": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4196": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "4197": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP14",
      "path": "18"
    },
    "4198": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4199": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "4200": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "4201": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4202": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "REVERT",
      "path": "18"
    },
    "4203": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4204": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "4205": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4206": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4210": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4212": {
      "op": "SHL"
    },
    "4213": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4214": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4215": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4216": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4217": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "4218": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP10",
      "path": "18"
    },
    "4219": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4220": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4221": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1A"
    },
    "4223": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "4225": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4226": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "4227": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4228": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x4E6F742070726F7669646564204C696E6B20666F722066656573000000000000"
    },
    "4261": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x44"
    },
    "4263": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4264": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "4265": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4266": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x64"
    },
    "4268": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4269": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "REVERT",
      "path": "18"
    },
    "4270": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4271": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x10C5"
    },
    "4274": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4275": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "POP",
      "path": "18"
    },
    "4276": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "DUP10",
      "path": "18"
    },
    "4277": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "4278": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "DUP12",
      "path": "18"
    },
    "4279": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "GT",
      "path": "18"
    },
    "4280": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xFA7"
    },
    "4283": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4284": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xF98"
    },
    "4287": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4288": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4289": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1F21"
    },
    "4292": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9544,
        9601
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4293": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4294": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "CODESIZE",
      "path": "18"
    },
    "4295": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xE81"
    },
    "4298": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4299": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4300": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP9",
      "path": "18"
    },
    "4301": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4302": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "4303": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP13",
      "path": "18"
    },
    "4304": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4305": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "4306": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "4307": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4308": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "REVERT",
      "path": "18"
    },
    "4309": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4310": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "4311": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "POP",
      "path": "18"
    },
    "4312": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "4313": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "POP",
      "path": "18"
    },
    "4314": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4315": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4316": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "4317": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4318": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "GT",
      "path": "18"
    },
    "4319": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1100"
    },
    "4322": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4323": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4324": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x10ED"
    },
    "4327": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4328": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4329": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1F21"
    },
    "4332": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9456,
        9512
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4333": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4334": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4335": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "ADD",
      "path": "18"
    },
    "4336": {
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "4337": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "4338": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB4A"
    },
    "4341": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4342": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP9",
      "path": "18"
    },
    "4343": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP11",
      "path": "18"
    },
    "4344": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4345": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4346": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "4347": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "CODESIZE",
      "path": "18"
    },
    "4348": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xE4D"
    },
    "4351": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4352": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4353": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "POP",
      "path": "18"
    },
    "4354": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "4355": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x10E3"
    },
    "4358": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4359": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4360": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP10",
      "path": "18"
    },
    "4361": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4362": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "4363": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4364": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4365": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "4366": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "4367": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4368": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "REVERT",
      "path": "18"
    },
    "4369": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4370": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4371": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "4372": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "POP",
      "path": "18"
    },
    "4373": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "DUP10",
      "path": "18"
    },
    "4374": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4375": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "4376": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "POP",
      "path": "18"
    },
    "4377": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "4378": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4379": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "GT",
      "path": "18"
    },
    "4380": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1144"
    },
    "4383": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4384": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4385": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x112A"
    },
    "4388": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4389": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4390": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1F21"
    },
    "4393": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9356,
        9372
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4394": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4395": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4396": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "ADD",
      "path": "18"
    },
    "4397": {
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "4398": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "4399": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA61"
    },
    "4402": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4403": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4404": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4405": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4406": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "4407": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4408": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "4409": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA61"
    },
    "4412": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4413": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4414": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4415": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "CODESIZE",
      "path": "18"
    },
    "4416": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xE16"
    },
    "4419": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4420": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4421": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "POP",
      "path": "18"
    },
    "4422": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "4423": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1120"
    },
    "4426": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4427": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4428": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP8",
      "path": "18"
    },
    "4429": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4430": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "4431": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP12",
      "path": "18"
    },
    "4432": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4433": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "4434": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "4435": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4436": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "REVERT",
      "path": "18"
    },
    "4437": {
      "offset": [
        2765,
        2875
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4438": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "4439": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4440": {
      "op": "PUSH4",
      "value": "0x6A9FF79F"
    },
    "4445": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4447": {
      "op": "SHL"
    },
    "4448": {
      "offset": [
        2828,
        2864
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4449": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        2828,
        2864
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4450": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        2828,
        2864
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4451": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        2828,
        2864
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4452": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        2828,
        2864
      ],
      "op": "ADD",
      "path": "18"
    },
    "4453": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP8",
      "path": "18"
    },
    "4454": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4455": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4456": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "4458": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4459": {
      "offset": [
        2828,
        2864
      ],
      "op": "REVERT",
      "path": "18"
    },
    "4460": {
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4461": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "4462": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4463": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "4464": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x42D"
    },
    "4467": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4468": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA0"
    },
    "4470": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "4471": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "4473": {
      "op": "NOT"
    },
    "4474": {
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "4475": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "4476": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x42D"
    },
    "4479": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4480": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1187"
    },
    "4483": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E89"
    },
    "4486": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4487": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4488": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4489": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1190"
    },
    "4492": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E33"
    },
    "4495": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4496": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4501": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4503": {
      "op": "SHL"
    },
    "4504": {
      "op": "SUB"
    },
    "4505": {
      "offset": [
        783,
        14652
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "4506": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x44"
    },
    "4508": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "4509": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "4510": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4511": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "4512": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4513": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4514": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4515": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4516": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "4517": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB4A"
    },
    "4520": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4521": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x64"
    },
    "4523": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "4524": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4525": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "4526": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4527": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "4528": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4529": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "4530": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "4531": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB4A"
    },
    "4534": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4535": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x84"
    },
    "4537": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "4538": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP8",
      "path": "18"
    },
    "4539": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4543": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4545": {
      "op": "SHL"
    },
    "4546": {
      "op": "SUB"
    },
    "4547": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP10",
      "path": "18"
    },
    "4548": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "GT",
      "path": "18"
    },
    "4549": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA5D"
    },
    "4552": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4553": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x11DB"
    },
    "4556": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1257"
    },
    "4559": {
      "offset": [
        783,
        14652
      ],
      "op": "SWAP7",
      "path": "18"
    },
    "4560": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP8",
      "path": "18"
    },
    "4561": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP9",
      "path": "18"
    },
    "4562": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP10",
      "path": "18"
    },
    "4563": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "4564": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4565": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4566": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "4567": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1F42"
    },
    "4570": {
      "fn": "UtilsMasterNode.getLinkFees",
      "jump": "i",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4571": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4572": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "DUP8",
      "path": "18"
    },
    "4573": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4574": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "4575": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4577": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP11",
      "path": "18"
    },
    "4578": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "DUP12",
      "path": "18"
    },
    "4579": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP8",
      "path": "18"
    },
    "4580": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "4581": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        942,
        962
      ],
      "op": "DUP8",
      "path": "21"
    },
    "4582": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        942,
        962
      ],
      "op": "DUP8",
      "path": "21"
    },
    "4583": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        942,
        962
      ],
      "op": "ADD",
      "path": "21"
    },
    "4584": {
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4585": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        942,
        962
      ],
      "op": "DUP7",
      "path": "21"
    },
    "4586": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        942,
        962
      ],
      "op": "DUP7",
      "path": "21"
    },
    "4587": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        942,
        962
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4588": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        942,
        962
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x11F4"
    },
    "4591": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        942,
        962
      ],
      "op": "DUP7",
      "path": "21"
    },
    "4592": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        942,
        962
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1EEB"
    },
    "4595": {
      "fn": "UtilsMasterNode.getLinkFees",
      "jump": "i",
      "offset": [
        942,
        962
      ],
      "op": "JUMP",
      "path": "21"
    },
    "4596": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        942,
        962
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "4597": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP9",
      "path": "18"
    },
    "4598": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4599": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x11FF"
    },
    "4602": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4603": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1ED0"
    },
    "4606": {
      "fn": "UtilsMasterNode.getLinkFees",
      "jump": "i",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4607": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4608": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4610": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4611": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4612": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1176,
        1333
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x121C"
    },
    "4615": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP11",
      "path": "18"
    },
    "4616": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4617": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1211"
    },
    "4620": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4621": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1ED0"
    },
    "4624": {
      "fn": "UtilsMasterNode.getLinkFees",
      "jump": "i",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4625": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4626": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1307,
        1316
      ],
      "op": "PUSH3",
      "path": "21",
      "value": "0xF4240"
    },
    "4630": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4631": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4632": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1176,
        1333
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2431"
    },
    "4635": {
      "fn": "UtilsMasterNode.getLinkFees",
      "jump": "i",
      "offset": [
        1176,
        1333
      ],
      "op": "JUMP",
      "path": "21"
    },
    "4636": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1176,
        1333
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "4637": {
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "4638": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "DUP11",
      "path": "18"
    },
    "4639": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4640": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP8",
      "path": "18"
    },
    "4641": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1229"
    },
    "4644": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "DUP10",
      "path": "18"
    },
    "4645": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E9F"
    },
    "4648": {
      "fn": "UtilsMasterNode.getLinkFees",
      "jump": "i",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4649": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4650": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "DUP9",
      "path": "18"
    },
    "4651": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4652": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        895,
        1469
      ],
      "op": "DUP9",
      "path": "21"
    },
    "4653": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        895,
        1469
      ],
      "op": "DUP9",
      "path": "21"
    },
    "4654": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        895,
        1469
      ],
      "op": "ADD",
      "path": "21"
    },
    "4655": {
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4656": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        895,
        1469
      ],
      "op": "DUP10",
      "path": "21"
    },
    "4657": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        895,
        1469
      ],
      "op": "DUP8",
      "path": "21"
    },
    "4658": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        895,
        1469
      ],
      "op": "ADD",
      "path": "21"
    },
    "4659": {
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4660": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "4662": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        895,
        1469
      ],
      "op": "DUP7",
      "path": "21"
    },
    "4663": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        895,
        1469
      ],
      "op": "ADD",
      "path": "21"
    },
    "4664": {
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4665": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x80"
    },
    "4667": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        895,
        1469
      ],
      "op": "DUP6",
      "path": "21"
    },
    "4668": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        895,
        1469
      ],
      "op": "ADD",
      "path": "21"
    },
    "4669": {
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4670": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "4671": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4672": {
      "op": "PUSH4",
      "value": "0x20487DED"
    },
    "4677": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4679": {
      "op": "SHL"
    },
    "4680": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4681": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "4682": {
      "offset": [
        783,
        14652
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "4683": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "4684": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "4685": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "4686": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "4687": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4688": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "4689": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "DUP5",
      "path": "21"
    },
    "4690": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "ADD",
      "path": "21"
    },
    "4691": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1FF2"
    },
    "4694": {
      "fn": "UtilsMasterNode.getLinkFees",
      "jump": "i",
      "offset": [
        1612,
        1660
      ],
      "op": "JUMP",
      "path": "21"
    },
    "4695": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "4696": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "SUB",
      "path": "21"
    },
    "4697": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "4698": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "GAS",
      "path": "21"
    },
    "4699": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "STATICCALL",
      "path": "21"
    },
    "4700": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "4701": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "DUP4",
      "path": "21"
    },
    "4702": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "4703": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1029"
    },
    "4706": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "4707": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "4708": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x126F"
    },
    "4711": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "4712": {
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4713": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "4714": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4715": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4716": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4717": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4718": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "RETURN",
      "path": "18"
    },
    "4719": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "4720": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4721": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "4722": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "POP",
      "path": "21"
    },
    "4723": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "DUP3",
      "path": "21"
    },
    "4724": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4725": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4726": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "RETURNDATASIZE",
      "path": "21"
    },
    "4727": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "DUP4",
      "path": "21"
    },
    "4728": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "GT",
      "path": "21"
    },
    "4729": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1297"
    },
    "4732": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "4733": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "4734": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1287"
    },
    "4737": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4738": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "DUP4",
      "path": "21"
    },
    "4739": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1F21"
    },
    "4742": {
      "fn": "UtilsMasterNode.getLinkFees",
      "jump": "i",
      "offset": [
        1612,
        1660
      ],
      "op": "JUMP",
      "path": "21"
    },
    "4743": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "4744": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "DUP2",
      "path": "21"
    },
    "4745": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "ADD",
      "path": "21"
    },
    "4746": {
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "4747": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "4748": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB4A"
    },
    "4751": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4752": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4753": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "4754": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "CODESIZE",
      "path": "21"
    },
    "4755": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1268"
    },
    "4758": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "JUMP",
      "path": "21"
    },
    "4759": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "4760": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "POP",
      "path": "21"
    },
    "4761": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "RETURNDATASIZE",
      "path": "21"
    },
    "4762": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x127D"
    },
    "4765": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1612,
        1660
      ],
      "op": "JUMP",
      "path": "21"
    },
    "4766": {
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4767": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "4768": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "4769": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "4770": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x287"
    },
    "4773": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4774": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4775": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "4777": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "NOT",
      "path": "18"
    },
    "4778": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "4779": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "4780": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "4781": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x287"
    },
    "4784": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4785": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6038,
        6076
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 32,
      "value": "0x380"
    },
    "4788": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4790": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "4791": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4792": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x12BF"
    },
    "4795": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E1D"
    },
    "4798": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4799": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4800": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4801": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "4802": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4803": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4804": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "4806": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "4807": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4808": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        14652
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "4809": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "4811": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4812": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA0"
    },
    "4814": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        14652
      ],
      "op": "SHL",
      "path": "18"
    },
    "4815": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "4816": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4817": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "4818": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4820": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4821": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4822": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4823": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6038,
        6076
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12E6"
    },
    "4826": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "4828": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "4829": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4830": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4832": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "4833": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4834": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6038,
        6076
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20D6"
    },
    "4837": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6038,
        6076
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4838": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6038,
        6076
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4839": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4840": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "4841": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6038,
        6076
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x230D"
    },
    "4844": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6038,
        6076
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4845": {
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4846": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "4847": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "4848": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "4849": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x287"
    },
    "4852": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4853": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4854": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "4856": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "NOT",
      "path": "18"
    },
    "4857": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "4858": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "4859": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "4860": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x287"
    },
    "4863": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4864": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4866": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4867": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4868": {
      "fn": "ERC20.decimals",
      "offset": [
        3173,
        3175
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 33,
      "value": "0x12"
    },
    "4870": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4871": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4872": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        14652
      ],
      "op": "RETURN",
      "path": "18"
    },
    "4873": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4874": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "4875": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4876": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4877": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        14652
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "4878": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x287"
    },
    "4881": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4882": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "4884": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "4885": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4886": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "4888": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        14652
      ],
      "op": "NOT",
      "path": "18"
    },
    "4889": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "4890": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "4891": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "4892": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x235"
    },
    "4895": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4896": {
      "fn": "MasterNode.withdraw",
      "offset": [
        12842,
        12852
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 34,
      "value": "0x9"
    },
    "4898": {
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4899": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x8"
    },
    "4901": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4902": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4903": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "SHR",
      "path": "18"
    },
    "4904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4908": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4910": {
      "op": "SHL"
    },
    "4911": {
      "op": "SUB"
    },
    "4912": {
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4913": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4914": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "4915": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "4916": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4917": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4918": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "4919": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4920": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4921": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "4922": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "4923": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4924": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4925": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "4926": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4927": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4928": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4929": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "SHR",
      "path": "18"
    },
    "4930": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "4932": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "4933": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4934": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x18B1"
    },
    "4937": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4938": {
      "fn": "MasterNode.withdraw",
      "offset": [
        12928,
        12938
      ],
      "op": "CALLER",
      "path": "18",
      "statement": 35
    },
    "4939": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "4940": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4941": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3515
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "4943": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP8",
      "path": "18"
    },
    "4944": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4945": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4946": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "4947": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        14652
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "4948": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "4949": {
      "fn": "MasterNode.withdraw",
      "offset": [
        12908,
        12939
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4950": {
      "branch": 68,
      "fn": "MasterNode.withdraw",
      "offset": [
        12908,
        12939
      ],
      "op": "GT",
      "path": "18"
    },
    "4951": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1878"
    },
    "4954": {
      "branch": 68,
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4955": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4956": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4957": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13029,
        13075
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "4958": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13029,
        13075
      ],
      "op": "DUP7",
      "path": "18"
    },
    "4959": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13029,
        13075
      ],
      "op": "DUP9",
      "path": "18"
    },
    "4960": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13029,
        13075
      ],
      "op": "DUP6",
      "path": "18"
    },
    "4961": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13029,
        13075
      ],
      "op": "ADD",
      "path": "18"
    },
    "4962": {
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4963": {
      "fn": "MasterNode.withdraw",
      "offset": [
        12928,
        12938
      ],
      "op": "CALLER",
      "path": "18"
    },
    "4964": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "4965": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "4966": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "4967": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4968": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "4970": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP8",
      "path": "18"
    },
    "4971": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4972": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "DUP10",
      "path": "18"
    },
    "4973": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "4974": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "4975": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4976": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13029,
        13075
      ],
      "op": "DUP9",
      "path": "18"
    },
    "4977": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13029,
        13075
      ],
      "op": "DUP6",
      "path": "18"
    },
    "4978": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13029,
        13075
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4979": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13029,
        13075
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x137B"
    },
    "4982": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13029,
        13075
      ],
      "op": "DUP6",
      "path": "18"
    },
    "4983": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13029,
        13075
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1F06"
    },
    "4986": {
      "fn": "MasterNode.withdraw",
      "jump": "i",
      "offset": [
        13029,
        13075
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4987": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13029,
        13075
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4988": {
      "fn": "MasterNode.withdraw",
      "offset": [
        12928,
        12938
      ],
      "op": "CALLER",
      "path": "18"
    },
    "4989": {
      "branch": 74,
      "fn": "ERC20._burn",
      "offset": [
        9505,
        9526
      ],
      "op": "ISZERO",
      "path": "0",
      "statement": 36
    },
    "4990": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x182C"
    },
    "4993": {
      "fn": "ERC20._burn",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4994": {
      "fn": "MasterNode.withdraw",
      "offset": [
        12928,
        12938
      ],
      "op": "CALLER",
      "path": "18"
    },
    "4995": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP9",
      "path": "18"
    },
    "4996": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4997": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3515
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "4999": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5000": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5001": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "5002": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        14652
      ],
      "op": "DUP9",
      "path": "18"
    },
    "5003": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        14652
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "5004": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "5005": {
      "fn": "ERC20._burn",
      "offset": [
        9696,
        9720
      ],
      "op": "SWAP9",
      "path": "0",
      "statement": 37
    },
    "5006": {
      "fn": "ERC20._burn",
      "offset": [
        9696,
        9720
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5007": {
      "fn": "ERC20._burn",
      "offset": [
        9696,
        9720
      ],
      "op": "DUP11",
      "path": "0"
    },
    "5008": {
      "branch": 75,
      "fn": "ERC20._burn",
      "offset": [
        9696,
        9720
      ],
      "op": "LT",
      "path": "0"
    },
    "5009": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x17DE"
    },
    "5012": {
      "fn": "ERC20._burn",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5013": {
      "fn": "MasterNode.withdraw",
      "offset": [
        12928,
        12938
      ],
      "op": "DUP5",
      "path": "18"
    },
    "5014": {
      "fn": "MasterNode.withdraw",
      "offset": [
        12928,
        12938
      ],
      "op": "DUP10",
      "path": "18"
    },
    "5015": {
      "fn": "MasterNode.withdraw",
      "offset": [
        12928,
        12938
      ],
      "op": "SWAP11",
      "path": "18"
    },
    "5016": {
      "fn": "MasterNode.withdraw",
      "offset": [
        12928,
        12938
      ],
      "op": "CALLER",
      "path": "18"
    },
    "5017": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP12",
      "path": "18"
    },
    "5018": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5019": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3515
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "5021": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "5022": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5023": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "5024": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        14652
      ],
      "op": "DUP9",
      "path": "18"
    },
    "5025": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        14652
      ],
      "op": "DUP11",
      "path": "18"
    },
    "5026": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        14652
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "5027": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        14652
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "5028": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "5029": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        14652
      ],
      "op": "DUP8",
      "path": "18"
    },
    "5030": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "5031": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "5032": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        14652
      ],
      "op": "DUP8",
      "path": "18"
    },
    "5033": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        14652
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "5034": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        14652
      ],
      "op": "DUP9",
      "path": "18"
    },
    "5035": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        14652
      ],
      "op": "DUP9",
      "path": "18"
    },
    "5036": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5037": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "5038": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5039": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5040": {
      "fn": "ERC20._burn",
      "offset": [
        9978,
        10015
      ],
      "op": "PUSH32",
      "path": "0",
      "statement": 38,
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "5073": {
      "fn": "MasterNode.withdraw",
      "offset": [
        12928,
        12938
      ],
      "op": "DUP5",
      "path": "18"
    },
    "5074": {
      "fn": "MasterNode.withdraw",
      "offset": [
        12928,
        12938
      ],
      "op": "CALLER",
      "path": "18"
    },
    "5075": {
      "fn": "ERC20._burn",
      "offset": [
        9978,
        10015
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5076": {
      "fn": "ERC20._burn",
      "offset": [
        9978,
        10015
      ],
      "op": "LOG3",
      "path": "0"
    },
    "5077": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "5078": {
      "fn": "MasterNode.withdraw",
      "offset": [
        12842,
        12852
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x9"
    },
    "5080": {
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "5081": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "5082": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "SHR",
      "path": "18"
    },
    "5083": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "5084": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5085": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5086": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "DUP11",
      "path": "18"
    },
    "5087": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5088": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "5089": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "5090": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5091": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "DUP9",
      "path": "18"
    },
    "5092": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "DUP11",
      "path": "18"
    },
    "5093": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "5094": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "5095": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5096": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5098": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5100": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5102": {
      "op": "SHL"
    },
    "5103": {
      "op": "SUB"
    },
    "5104": {
      "offset": [
        783,
        14652
      ],
      "op": "SWAP8",
      "path": "18"
    },
    "5105": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "DUP9",
      "path": "18"
    },
    "5106": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "5107": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x10"
    },
    "5109": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "SHR",
      "path": "18"
    },
    "5110": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "5111": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13164,
        13188
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "5112": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13164,
        13188
      ],
      "op": "DUP10",
      "path": "18"
    },
    "5113": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13164,
        13188
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "5146": {
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "5147": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13126,
        13188
      ],
      "op": "DUP5",
      "path": "18"
    },
    "5148": {
      "branch": 69,
      "fn": "MasterNode.withdraw",
      "offset": [
        13126,
        13188
      ],
      "op": "EQ",
      "path": "18"
    },
    "5149": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13122,
        13371
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "5151": {
      "offset": [
        783,
        14652
      ],
      "op": "EQ",
      "path": "18"
    },
    "5152": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x14A3"
    },
    "5155": {
      "branch": 69,
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5156": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "5157": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "5158": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "5159": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "5160": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "5161": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "5162": {
      "fn": "MasterNode.withdraw",
      "offset": [
        12842,
        12852
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x9"
    },
    "5164": {
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "5165": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5166": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "SHR",
      "path": "18"
    },
    "5167": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "5168": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13204,
        13263
      ],
      "op": "SWAP1",
      "path": "18",
      "statement": 39
    },
    "5169": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13204,
        13263
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5170": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13204,
        13263
      ],
      "op": "EXTCODESIZE",
      "path": "18"
    },
    "5171": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13204,
        13263
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5172": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13204,
        13263
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x98F"
    },
    "5175": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13204,
        13263
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5176": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "5177": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5178": {
      "op": "PUSH4",
      "value": "0x15E005B7"
    },
    "5183": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "5185": {
      "op": "SHL"
    },
    "5186": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13204,
        13263
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5187": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13204,
        13263
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5188": {
      "fn": "MasterNode.withdraw",
      "offset": [
        12928,
        12938
      ],
      "op": "CALLER",
      "path": "18"
    },
    "5189": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13204,
        13263
      ],
      "op": "DUP6",
      "path": "18"
    },
    "5190": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13204,
        13263
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5191": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13204,
        13263
      ],
      "op": "ADD",
      "path": "18"
    },
    "5192": {
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5193": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5194": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5195": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "5197": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5198": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "5199": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "5200": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5201": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "5202": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5203": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "5204": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5205": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "5206": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5207": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5208": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5209": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "5210": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5211": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5212": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5213": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5215": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "5216": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13204,
        13263
      ],
      "op": "SUB",
      "path": "18"
    },
    "5217": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13204,
        13263
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "5218": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13204,
        13263
      ],
      "op": "GAS",
      "path": "18"
    },
    "5219": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13204,
        13263
      ],
      "op": "CALL",
      "path": "18"
    },
    "5220": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13204,
        13263
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5221": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13204,
        13263
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5222": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13204,
        13263
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1499"
    },
    "5225": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13204,
        13263
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5226": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13204,
        13263
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1475"
    },
    "5229": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13204,
        13263
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5230": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13122,
        13371
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5231": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13122,
        13371
      ],
      "op": "POP",
      "path": "18"
    },
    "5232": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13122,
        13371
      ],
      "op": "POP",
      "path": "18"
    },
    "5233": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13122,
        13371
      ],
      "op": "POP",
      "path": "18"
    },
    "5234": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13122,
        13371
      ],
      "op": "POP",
      "path": "18"
    },
    "5235": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5236": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "RETURN",
      "path": "18"
    },
    "5237": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13204,
        13263
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5238": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "5239": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "GT",
      "path": "18"
    },
    "5240": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1486"
    },
    "5243": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5244": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "5245": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5246": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13204,
        13263
      ],
      "op": "CODESIZE",
      "path": "18"
    },
    "5247": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13204,
        13263
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5248": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13204,
        13263
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5249": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13204,
        13263
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5250": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13204,
        13263
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x146E"
    },
    "5253": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13204,
        13263
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5254": {
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5255": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5260": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5262": {
      "op": "SHL"
    },
    "5263": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "5264": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5265": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x41"
    },
    "5267": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5268": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5269": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "5271": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "5272": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "REVERT",
      "path": "18"
    },
    "5273": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13204,
        13263
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5274": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "5275": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5276": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "5277": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "DUP8",
      "path": "18"
    },
    "5278": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5279": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "5280": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "5281": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5282": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "REVERT",
      "path": "18"
    },
    "5283": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13122,
        13371
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5284": {
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "5285": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP8",
      "path": "18"
    },
    "5286": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "5287": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "5288": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP11",
      "path": "18"
    },
    "5289": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "5290": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "5291": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "5292": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "5294": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5295": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP8",
      "path": "18"
    },
    "5296": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "5297": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP7",
      "path": "18"
    },
    "5298": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "5299": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "5300": {
      "offset": [
        2769,
        2805
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5301": {
      "offset": [
        2765,
        2875
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1155"
    },
    "5304": {
      "fn": "MasterNode.withdraw",
      "offset": [
        2765,
        2875
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5305": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "5306": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9203,
        9214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x7"
    },
    "5308": {
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "5309": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "5310": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5311": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5312": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "5313": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x80"
    },
    "5315": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP11",
      "path": "18"
    },
    "5316": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5317": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x14CD"
    },
    "5320": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5321": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E9F"
    },
    "5324": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5325": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5326": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5327": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5328": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5329": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5330": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP14",
      "path": "18"
    },
    "5331": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5332": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "5333": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5334": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5335": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP13",
      "path": "18"
    },
    "5336": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5337": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "5338": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5339": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP14",
      "path": "18"
    },
    "5340": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "5341": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5342": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "5343": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5344": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "5345": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5346": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP9",
      "path": "18"
    },
    "5347": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5348": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10946,
        10967
      ],
      "op": "SWAP8",
      "path": "18"
    },
    "5349": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10946,
        10967
      ],
      "op": "DUP11",
      "path": "18"
    },
    "5350": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10946,
        10967
      ],
      "op": "DUP10",
      "path": "18"
    },
    "5351": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10946,
        10967
      ],
      "op": "ADD",
      "path": "18"
    },
    "5352": {
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5353": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10946,
        10967
      ],
      "op": "DUP10",
      "path": "18"
    },
    "5354": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10946,
        10967
      ],
      "op": "DUP9",
      "path": "18"
    },
    "5355": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10946,
        10967
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5356": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10946,
        10967
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x14F4"
    },
    "5359": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10946,
        10967
      ],
      "op": "DUP9",
      "path": "18"
    },
    "5360": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10946,
        10967
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1EEB"
    },
    "5363": {
      "fn": "MasterNode._buildCCIPMessage",
      "jump": "i",
      "offset": [
        10946,
        10967
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5364": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10946,
        10967
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5365": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP9",
      "path": "18"
    },
    "5366": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5367": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x14FF"
    },
    "5370": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5371": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1ED0"
    },
    "5374": {
      "fn": "MasterNode._buildCCIPMessage",
      "jump": "i",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5375": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5376": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP12",
      "path": "18"
    },
    "5377": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5378": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5379": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11191,
        11357
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1510"
    },
    "5382": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP11",
      "path": "18"
    },
    "5383": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5384": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xDC8"
    },
    "5387": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5388": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1ED0"
    },
    "5391": {
      "fn": "MasterNode._buildCCIPMessage",
      "jump": "i",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5392": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11191,
        11357
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5393": {
      "offset": [
        783,
        14652
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "5394": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP11",
      "path": "18"
    },
    "5395": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5396": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP10",
      "path": "18"
    },
    "5397": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x151D"
    },
    "5400": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP12",
      "path": "18"
    },
    "5401": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E9F"
    },
    "5404": {
      "fn": "MasterNode._buildCCIPMessage",
      "jump": "i",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5405": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5406": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP11",
      "path": "18"
    },
    "5407": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5408": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10896,
        11522
      ],
      "op": "DUP12",
      "path": "18"
    },
    "5409": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10896,
        11522
      ],
      "op": "DUP11",
      "path": "18"
    },
    "5410": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10896,
        11522
      ],
      "op": "ADD",
      "path": "18"
    },
    "5411": {
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5412": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10896,
        11522
      ],
      "op": "DUP10",
      "path": "18"
    },
    "5413": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10896,
        11522
      ],
      "op": "DUP10",
      "path": "18"
    },
    "5414": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10896,
        11522
      ],
      "op": "ADD",
      "path": "18"
    },
    "5415": {
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5416": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10896,
        11522
      ],
      "op": "DUP8",
      "path": "18"
    },
    "5417": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10896,
        11522
      ],
      "op": "ADD",
      "path": "18"
    },
    "5418": {
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5419": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x80"
    },
    "5421": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10896,
        11522
      ],
      "op": "DUP7",
      "path": "18"
    },
    "5422": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10896,
        11522
      ],
      "op": "ADD",
      "path": "18"
    },
    "5423": {
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5424": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "5425": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5426": {
      "op": "PUSH4",
      "value": "0xB0F479A1"
    },
    "5431": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5433": {
      "op": "SHL"
    },
    "5434": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5435": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5436": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10896,
        11522
      ],
      "op": "DUP8",
      "path": "18"
    },
    "5437": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5438": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9360
      ],
      "op": "DUP5",
      "path": "18"
    },
    "5439": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5440": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9360
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "5441": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "GAS",
      "path": "18"
    },
    "5442": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "STATICCALL",
      "path": "18"
    },
    "5443": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5444": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5445": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5446": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x114B"
    },
    "5449": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5450": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5451": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "DUP6",
      "path": "18"
    },
    "5452": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5453": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "DUP11",
      "path": "18"
    },
    "5454": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5455": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x17A4"
    },
    "5458": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5459": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13122,
        13371
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5460": {
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "5461": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "5462": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "5463": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "DUP9",
      "path": "18"
    },
    "5464": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "DUP8",
      "path": "18"
    },
    "5465": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5466": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "5467": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x20487DED"
    },
    "5472": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE0"
    },
    "5474": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "SHL",
      "path": "18"
    },
    "5475": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "DUP5",
      "path": "18"
    },
    "5476": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5477": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "DUP10",
      "path": "18"
    },
    "5478": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "DUP5",
      "path": "18"
    },
    "5479": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5480": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1574"
    },
    "5483": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "DUP12",
      "path": "18"
    },
    "5484": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "DUP11",
      "path": "18"
    },
    "5485": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "DUP11",
      "path": "18"
    },
    "5486": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "DUP5",
      "path": "18"
    },
    "5487": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "ADD",
      "path": "18"
    },
    "5488": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1FF2"
    },
    "5491": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9456,
        9512
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5492": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5493": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "SUB",
      "path": "18"
    },
    "5494": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5495": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "DUP11",
      "path": "18"
    },
    "5496": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "GAS",
      "path": "18"
    },
    "5497": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "STATICCALL",
      "path": "18"
    },
    "5498": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "5499": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "DUP5",
      "path": "18"
    },
    "5500": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5501": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1107"
    },
    "5504": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5505": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5506": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "DUP11",
      "path": "18"
    },
    "5507": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5508": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "DUP4",
      "path": "18"
    },
    "5509": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "5510": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1773"
    },
    "5513": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5514": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13122,
        13371
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5515": {
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "5516": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x64"
    },
    "5518": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "DUP11",
      "path": "18"
    },
    "5519": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5520": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5521": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "5522": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5523": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "5524": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x23B872DD"
    },
    "5529": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE0"
    },
    "5531": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "SHL",
      "path": "18"
    },
    "5532": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "DUP4",
      "path": "18"
    },
    "5533": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5534": {
      "fn": "MasterNode.withdraw",
      "offset": [
        12928,
        12938
      ],
      "op": "CALLER",
      "path": "18"
    },
    "5535": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "DUP11",
      "path": "18"
    },
    "5536": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "DUP5",
      "path": "18"
    },
    "5537": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "ADD",
      "path": "18"
    },
    "5538": {
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5539": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9360
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "5540": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "5542": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "5543": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "5544": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5545": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP9",
      "path": "18"
    },
    "5546": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x44"
    },
    "5548": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "5549": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "5550": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5551": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "GAS",
      "path": "18"
    },
    "5552": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "CALL",
      "path": "18"
    },
    "5553": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5554": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5555": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5556": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x10CB"
    },
    "5559": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5560": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "DUP11",
      "path": "18"
    },
    "5561": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5562": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1756"
    },
    "5565": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5566": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13122,
        13371
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5567": {
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "5568": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5569": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x106B"
    },
    "5572": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5573": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5574": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "DUP9",
      "path": "18"
    },
    "5575": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "5576": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5577": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9203,
        9214
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x7"
    },
    "5579": {
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "5580": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "5581": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5582": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP8",
      "path": "18"
    },
    "5583": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5584": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x70A08231"
    },
    "5589": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE0"
    },
    "5591": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SHL",
      "path": "18"
    },
    "5592": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5593": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5594": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5595": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5596": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9360
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "5597": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "DUP6",
      "path": "18"
    },
    "5598": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5599": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "ADD",
      "path": "18"
    },
    "5600": {
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5601": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "DUP11",
      "path": "18"
    },
    "5602": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5603": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "5605": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5606": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "DUP8",
      "path": "18"
    },
    "5607": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "GAS",
      "path": "18"
    },
    "5608": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "STATICCALL",
      "path": "18"
    },
    "5609": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5610": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5611": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5612": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x174C"
    },
    "5615": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5616": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "DUP7",
      "path": "18"
    },
    "5617": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5618": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x171F"
    },
    "5621": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5622": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13122,
        13371
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5623": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9668,
        9711
      ],
      "op": "POP",
      "path": "18"
    },
    "5624": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9668,
        9711
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5625": {
      "branch": 70,
      "fn": "MasterNode._sendMessage",
      "offset": [
        9668,
        9711
      ],
      "op": "GT",
      "path": "18"
    },
    "5626": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9664,
        9792
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x16A0"
    },
    "5629": {
      "branch": 70,
      "fn": "MasterNode._sendMessage",
      "offset": [
        9664,
        9792
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5630": {
      "op": "POP"
    },
    "5631": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP8",
      "path": "18"
    },
    "5632": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5633": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "5638": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5640": {
      "op": "SHL"
    },
    "5641": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5642": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5643": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5647": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5649": {
      "op": "SHL"
    },
    "5650": {
      "op": "SUB"
    },
    "5651": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP8",
      "path": "18"
    },
    "5652": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "5653": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "DUP5",
      "path": "18"
    },
    "5654": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5655": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "ADD",
      "path": "18"
    },
    "5656": {
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5657": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5658": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5659": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "5661": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5662": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "5663": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "5664": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5665": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "5666": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5667": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5668": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP10",
      "path": "18"
    },
    "5669": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5670": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "5671": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5672": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5673": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5674": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5675": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP8",
      "path": "18"
    },
    "5676": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5677": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5678": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5679": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "5681": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "5682": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "SUB",
      "path": "18"
    },
    "5683": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "5684": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "GAS",
      "path": "18"
    },
    "5685": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "CALL",
      "path": "18"
    },
    "5686": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5687": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5688": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xFAE"
    },
    "5691": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5692": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5693": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "DUP9",
      "path": "18"
    },
    "5694": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "5695": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "5696": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5697": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1666"
    },
    "5700": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "SWAP9",
      "path": "18"
    },
    "5701": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "SWAP8",
      "path": "18"
    },
    "5702": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "5703": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "5704": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xF81"
    },
    "5707": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9910,
        9952
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5708": {
      "op": "POP"
    },
    "5709": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "5710": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5711": {
      "op": "PUSH4",
      "value": "0x96F4E9F9"
    },
    "5716": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5718": {
      "op": "SHL"
    },
    "5719": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5720": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5721": {
      "offset": [
        783,
        14652
      ],
      "op": "SWAP8",
      "path": "18"
    },
    "5722": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP9",
      "path": "18"
    },
    "5723": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "5724": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "5725": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "5726": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "5727": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "5728": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "DUP5",
      "path": "18"
    },
    "5729": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "ADD",
      "path": "18"
    },
    "5730": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1FF2"
    },
    "5733": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        10056,
        10114
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5734": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5735": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "SUB",
      "path": "18"
    },
    "5736": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "5737": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "GAS",
      "path": "18"
    },
    "5738": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "CALL",
      "path": "18"
    },
    "5739": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5740": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5741": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5742": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xF78"
    },
    "5745": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5746": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "POP",
      "path": "18"
    },
    "5747": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x167B"
    },
    "5750": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5751": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13122,
        13371
      ],
      "op": "POP",
      "path": "18"
    },
    "5752": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13122,
        13371
      ],
      "op": "POP",
      "path": "18"
    },
    "5753": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5754": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        14652
      ],
      "op": "RETURN",
      "path": "18"
    },
    "5755": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5756": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5757": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "5758": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "DUP4",
      "path": "18"
    },
    "5759": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "GT",
      "path": "18"
    },
    "5760": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1699"
    },
    "5763": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5764": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5765": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x168E"
    },
    "5768": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5769": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "DUP4",
      "path": "18"
    },
    "5770": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1F21"
    },
    "5773": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        10056,
        10114
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5774": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5775": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5776": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "ADD",
      "path": "18"
    },
    "5777": {
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "5778": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "5779": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x42D"
    },
    "5782": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5783": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5784": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "RETURN",
      "path": "18"
    },
    "5785": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5786": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "POP",
      "path": "18"
    },
    "5787": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "5788": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1684"
    },
    "5791": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10056,
        10114
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5792": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9664,
        9792
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5793": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP10",
      "path": "18"
    },
    "5794": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5795": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "5796": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5797": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP11",
      "path": "18"
    },
    "5798": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "5799": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "5801": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "5802": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5803": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5804": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "5805": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5806": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "5807": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5808": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5809": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9360
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "5810": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "DUP11",
      "path": "18"
    },
    "5811": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "DUP4",
      "path": "18"
    },
    "5812": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "ADD",
      "path": "18"
    },
    "5813": {
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5814": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "GAS",
      "path": "18"
    },
    "5815": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "STATICCALL",
      "path": "18"
    },
    "5816": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "5817": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "DUP4",
      "path": "18"
    },
    "5818": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "5819": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1715"
    },
    "5822": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5823": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "DUP7",
      "path": "18"
    },
    "5824": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "5825": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x16E1"
    },
    "5828": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5829": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9664,
        9792
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5830": {
      "op": "POP"
    },
    "5831": {
      "op": "POP"
    },
    "5832": {
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5833": {
      "op": "PUSH4",
      "value": "0x4787A103"
    },
    "5838": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "5840": {
      "op": "SHL"
    },
    "5841": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9732,
        9792
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5842": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9732,
        9792
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5843": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9732,
        9792
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "5844": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9732,
        9792
      ],
      "op": "DUP4",
      "path": "18"
    },
    "5845": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9732,
        9792
      ],
      "op": "ADD",
      "path": "18"
    },
    "5846": {
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5847": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "5849": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5850": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "5851": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5852": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x44"
    },
    "5854": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5855": {
      "op": "POP"
    },
    "5856": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9732,
        9792
      ],
      "op": "REVERT",
      "path": "18"
    },
    "5857": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5858": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5859": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5860": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "5861": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "5862": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "POP",
      "path": "18"
    },
    "5863": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5864": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "5865": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "DUP4",
      "path": "18"
    },
    "5866": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "GT",
      "path": "18"
    },
    "5867": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x170E"
    },
    "5870": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5871": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5872": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x16F9"
    },
    "5875": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5876": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "DUP4",
      "path": "18"
    },
    "5877": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1F21"
    },
    "5880": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9749,
        9785
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5881": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5882": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5883": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "ADD",
      "path": "18"
    },
    "5884": {
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "5885": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "5886": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x90A"
    },
    "5889": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5890": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x44"
    },
    "5892": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "5893": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "5894": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5895": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5896": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "DUP6",
      "path": "18"
    },
    "5897": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "DUP1",
      "path": "18"
    },
    "5898": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x16C5"
    },
    "5901": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5902": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5903": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "POP",
      "path": "18"
    },
    "5904": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "5905": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x16EF"
    },
    "5908": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5909": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9749,
        9785
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5910": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5911": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5912": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "5913": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP9",
      "path": "18"
    },
    "5914": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5915": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "5916": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "5917": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5918": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "REVERT",
      "path": "18"
    },
    "5919": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5920": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5921": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "POP",
      "path": "18"
    },
    "5922": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "DUP11",
      "path": "18"
    },
    "5923": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5924": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5925": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "5926": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "DUP4",
      "path": "18"
    },
    "5927": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "GT",
      "path": "18"
    },
    "5928": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1745"
    },
    "5931": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5932": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5933": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1736"
    },
    "5936": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5937": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "DUP4",
      "path": "18"
    },
    "5938": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1F21"
    },
    "5941": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9675,
        9711
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5942": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5943": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5944": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "ADD",
      "path": "18"
    },
    "5945": {
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "5946": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "5947": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x98F"
    },
    "5950": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5951": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5952": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "CODESIZE",
      "path": "18"
    },
    "5953": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x15F6"
    },
    "5956": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5957": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5958": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "POP",
      "path": "18"
    },
    "5959": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "5960": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x172C"
    },
    "5963": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5964": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9675,
        9711
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5965": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP11",
      "path": "18"
    },
    "5966": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "5967": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "5968": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP9",
      "path": "18"
    },
    "5969": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "5970": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "5971": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "5972": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "5973": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "REVERT",
      "path": "18"
    },
    "5974": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5975": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x176D"
    },
    "5978": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "5979": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "POP",
      "path": "18"
    },
    "5980": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "DUP10",
      "path": "18"
    },
    "5981": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "5982": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "DUP12",
      "path": "18"
    },
    "5983": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "GT",
      "path": "18"
    },
    "5984": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xFA7"
    },
    "5987": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "5988": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xF98"
    },
    "5991": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "DUP2",
      "path": "18"
    },
    "5992": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "DUP4",
      "path": "18"
    },
    "5993": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1F21"
    },
    "5996": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9544,
        9601
      ],
      "op": "JUMP",
      "path": "18"
    },
    "5997": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "5998": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "CODESIZE",
      "path": "18"
    },
    "5999": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x15BE"
    },
    "6002": {
      "branch": 71,
      "fn": "MasterNode._sendMessage",
      "offset": [
        9544,
        9601
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6003": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6004": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6005": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6006": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "6007": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "6008": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "SWAP7",
      "path": "18"
    },
    "6009": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "POP",
      "path": "18"
    },
    "6010": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "6011": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6012": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "GT",
      "path": "18"
    },
    "6013": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x179D"
    },
    "6016": {
      "branch": 71,
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6017": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6018": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x178B"
    },
    "6021": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6022": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6023": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1F21"
    },
    "6026": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9456,
        9512
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6027": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6028": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6029": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "ADD",
      "path": "18"
    },
    "6030": {
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "6031": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "6032": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x287"
    },
    "6035": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6036": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP10",
      "path": "18"
    },
    "6037": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6038": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6039": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "6040": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "CODESIZE",
      "path": "18"
    },
    "6041": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x158A"
    },
    "6044": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6045": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6046": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "POP",
      "path": "18"
    },
    "6047": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "6048": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1781"
    },
    "6051": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9456,
        9512
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6052": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6053": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6054": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "6055": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "POP",
      "path": "18"
    },
    "6056": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "DUP10",
      "path": "18"
    },
    "6057": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6058": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "6059": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "POP",
      "path": "18"
    },
    "6060": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "6061": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6062": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "GT",
      "path": "18"
    },
    "6063": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x17D7"
    },
    "6066": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6067": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6068": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x17BD"
    },
    "6071": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6072": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6073": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1F21"
    },
    "6076": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9356,
        9372
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6077": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6078": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6079": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "ADD",
      "path": "18"
    },
    "6080": {
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "6081": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "6082": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA61"
    },
    "6085": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6086": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6087": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "6088": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6089": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "6090": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6091": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "6092": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA61"
    },
    "6095": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6096": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "DUP5",
      "path": "18"
    },
    "6097": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6098": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "CODESIZE",
      "path": "18"
    },
    "6099": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1553"
    },
    "6102": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6103": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6104": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "POP",
      "path": "18"
    },
    "6105": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "6106": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x17B3"
    },
    "6109": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9356,
        9372
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6110": {
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6111": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP8",
      "path": "18"
    },
    "6112": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6113": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6117": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6119": {
      "op": "SHL"
    },
    "6120": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6121": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6122": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6123": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP9",
      "path": "18"
    },
    "6124": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "6125": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6126": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6127": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6128": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x22"
    },
    "6130": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "6132": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6133": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "6134": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6135": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
    },
    "6168": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x44"
    },
    "6170": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6171": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "6172": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6173": {
      "op": "PUSH2",
      "value": "0x6365"
    },
    "6176": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "6178": {
      "op": "SHL"
    },
    "6179": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x64"
    },
    "6181": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6182": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "6183": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6184": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x84"
    },
    "6186": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6187": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "REVERT",
      "path": "18"
    },
    "6188": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6189": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "6190": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x84"
    },
    "6192": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6193": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP9",
      "path": "18"
    },
    "6194": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6195": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6196": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH3",
      "path": "18",
      "value": "0x461BCD"
    },
    "6200": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE5"
    },
    "6202": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SHL",
      "path": "18"
    },
    "6203": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6204": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6205": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6206": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "6207": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6208": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x21"
    },
    "6210": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "6212": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6213": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "6214": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6215": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
    },
    "6248": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x44"
    },
    "6250": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6251": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "6252": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6253": {
      "op": "PUSH1",
      "value": "0x73"
    },
    "6255": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "6257": {
      "op": "SHL"
    },
    "6258": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x64"
    },
    "6260": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6261": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "6262": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6263": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "REVERT",
      "path": "18"
    },
    "6264": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6265": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "6266": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6267": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6271": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6273": {
      "op": "SHL"
    },
    "6274": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6275": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6276": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6277": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "6278": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "6279": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP9",
      "path": "18"
    },
    "6280": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6281": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6282": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x13"
    },
    "6284": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "6286": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6287": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "6288": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6289": {
      "op": "PUSH19",
      "value": "0x4E6F7420656E6F756768742062616C616E6365"
    },
    "6309": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "6311": {
      "op": "SHL"
    },
    "6312": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x44"
    },
    "6314": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6315": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "6316": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6317": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x64"
    },
    "6319": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6320": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "REVERT",
      "path": "18"
    },
    "6321": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6322": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "6323": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6324": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6328": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6330": {
      "op": "SHL"
    },
    "6331": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6332": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6333": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6334": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "6335": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "6336": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP9",
      "path": "18"
    },
    "6337": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6338": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6339": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x12"
    },
    "6341": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "6343": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6344": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "6345": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6346": {
      "op": "PUSH18",
      "value": "0x4E6F6465206973206E6F7420416374697665"
    },
    "6365": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "6367": {
      "op": "SHL"
    },
    "6368": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x44"
    },
    "6370": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6371": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "6372": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6373": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x64"
    },
    "6375": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6376": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "REVERT",
      "path": "18"
    },
    "6377": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6378": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "6379": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6380": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6381": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "6382": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x287"
    },
    "6385": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6386": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "6388": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "6389": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "6391": {
      "op": "NOT"
    },
    "6392": {
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "6393": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "6394": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x287"
    },
    "6397": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6398": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1905"
    },
    "6401": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E1D"
    },
    "6404": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6405": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6406": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x190D"
    },
    "6409": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E33"
    },
    "6412": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6413": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6418": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6420": {
      "op": "SHL"
    },
    "6421": {
      "op": "SUB"
    },
    "6422": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6423": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "6424": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "6425": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6426": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "6428": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "6430": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6431": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6432": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6433": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "6434": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "6435": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        14652
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "6436": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "6437": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "6438": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6439": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6440": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6441": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "6442": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "6443": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6444": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        14652
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "6445": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "6446": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x44"
    },
    "6448": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "6449": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "6450": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "6451": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "6453": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11351,
        11388
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6454": {
      "branch": 76,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11351,
        11388
      ],
      "op": "ADD",
      "path": "0"
    },
    "6455": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1949"
    },
    "6458": {
      "branch": 76,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6459": {
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6460": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "6462": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5441,
        5447
      ],
      "op": "DUP7",
      "path": "0",
      "statement": 40
    },
    "6463": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5441,
        5447
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x380"
    },
    "6466": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5441,
        5447
      ],
      "op": "DUP8",
      "path": "0"
    },
    "6467": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5441,
        5447
      ],
      "op": "DUP8",
      "path": "0"
    },
    "6468": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5441,
        5447
      ],
      "op": "DUP8",
      "path": "0"
    },
    "6469": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5441,
        5447
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20F9"
    },
    "6472": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5441,
        5447
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6473": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6474": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11412,
        11438
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 41
    },
    "6475": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11412,
        11438
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6476": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11412,
        11438
      ],
      "op": "LT",
      "path": "0"
    },
    "6477": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1972"
    },
    "6480": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6481": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "6482": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6483": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6484": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6485": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11539,
        11564
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 42,
      "value": "0x1967"
    },
    "6488": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "6490": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP7",
      "path": "18"
    },
    "6491": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "6492": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5441,
        5447
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x380"
    },
    "6495": {
      "offset": [
        783,
        14652
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "6496": {
      "fn": "ERC20.transferFrom",
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "6497": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "6498": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11539,
        11564
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6499": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11539,
        11564
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x230D"
    },
    "6502": {
      "fn": "ERC20._spendAllowance",
      "jump": "i",
      "offset": [
        11539,
        11564
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6503": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11539,
        11564
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6504": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6505": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "6506": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "6507": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6508": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "6509": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "POP",
      "path": "0"
    },
    "6510": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x193B"
    },
    "6513": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6514": {
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6515": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x64"
    },
    "6517": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6518": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "6520": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "DUP8",
      "path": "18"
    },
    "6521": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6522": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6523": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH3",
      "path": "18",
      "value": "0x461BCD"
    },
    "6527": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE5"
    },
    "6529": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "SHL",
      "path": "18"
    },
    "6530": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6531": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6532": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6533": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "6534": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6535": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1D"
    },
    "6537": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "6539": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6540": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "6541": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6542": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
    },
    "6575": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x44"
    },
    "6577": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6578": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "6579": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6580": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "REVERT",
      "path": "18"
    },
    "6581": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6582": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "6583": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6584": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "6585": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x42D"
    },
    "6588": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6589": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6590": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "6592": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "NOT",
      "path": "18"
    },
    "6593": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "6594": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "6595": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "6596": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x42D"
    },
    "6599": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6600": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x19CF"
    },
    "6603": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E1D"
    },
    "6606": {
      "fn": "ERC20._spendAllowance",
      "jump": "i",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6607": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6608": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "6609": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x19D8"
    },
    "6612": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E33"
    },
    "6615": {
      "fn": "ERC20._spendAllowance",
      "jump": "i",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6616": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6617": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6618": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "6620": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6621": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA0"
    },
    "6623": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "SHL",
      "path": "18"
    },
    "6624": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "6625": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6626": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "6627": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "6628": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "6629": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6630": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6631": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6632": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        13813
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 43,
      "value": "0x8"
    },
    "6634": {
      "offset": [
        783,
        14652
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "6635": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "6637": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP7",
      "path": "18"
    },
    "6638": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6639": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP9",
      "path": "18"
    },
    "6640": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6641": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "6642": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6643": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "6644": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "6645": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "6647": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6648": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "6650": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP10",
      "path": "18"
    },
    "6651": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "6652": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "6653": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "SHR",
      "path": "18"
    },
    "6654": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "6655": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "6656": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "6657": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        13847
      ],
      "op": "EQ",
      "path": "18"
    },
    "6658": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        13907
      ],
      "op": "SWAP8",
      "path": "18"
    },
    "6659": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        13907
      ],
      "op": "DUP9",
      "path": "18"
    },
    "6660": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        13907
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1B12"
    },
    "6663": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        13907
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6664": {
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6665": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        13971
      ],
      "op": "POP",
      "path": "18"
    },
    "6666": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        13971
      ],
      "op": "DUP8",
      "path": "18"
    },
    "6667": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        13971
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1AFE"
    },
    "6670": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        13971
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6671": {
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6672": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        14052
      ],
      "op": "DUP8",
      "path": "18"
    },
    "6673": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        14052
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1ADF"
    },
    "6676": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        14052
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6677": {
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6678": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        14149
      ],
      "op": "DUP8",
      "path": "18"
    },
    "6679": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        14149
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1AA8"
    },
    "6682": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        14149
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6683": {
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6684": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        14212
      ],
      "op": "DUP8",
      "path": "18"
    },
    "6685": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        14212
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1A8E"
    },
    "6688": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        14212
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6689": {
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6690": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        14277
      ],
      "op": "POP",
      "path": "18"
    },
    "6691": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        14277
      ],
      "op": "DUP7",
      "path": "18"
    },
    "6692": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        14277
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1A75"
    },
    "6695": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        14277
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6696": {
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6697": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        14331
      ],
      "op": "DUP7",
      "path": "18"
    },
    "6698": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        14331
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1A60"
    },
    "6701": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        14331
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6702": {
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6703": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        14434
      ],
      "op": "DUP7",
      "path": "18"
    },
    "6704": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        14434
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1A3F"
    },
    "6707": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        14434
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6708": {
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6709": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP9",
      "path": "18"
    },
    "6710": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP8",
      "path": "18"
    },
    "6711": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP10",
      "path": "18"
    },
    "6712": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6713": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6714": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "6715": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "6716": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6717": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6718": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "RETURN",
      "path": "18"
    },
    "6719": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        14434
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6720": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6721": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6722": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP8",
      "path": "18"
    },
    "6723": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6724": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "6725": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6726": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "6727": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14347,
        14381
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6728": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14347,
        14381
      ],
      "op": "ADD",
      "path": "18"
    },
    "6729": {
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "6730": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "6731": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "6732": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6733": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6734": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "6735": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6736": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "6737": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14396,
        14434
      ],
      "op": "ADD",
      "path": "18"
    },
    "6738": {
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "6739": {
      "op": "GT"
    },
    "6740": {
      "op": "SWAP1"
    },
    "6741": {
      "op": "POP"
    },
    "6742": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        14434
      ],
      "op": "CODESIZE",
      "path": "18"
    },
    "6743": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        14434
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6744": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        14434
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6745": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        14434
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6746": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        14434
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6747": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        14434
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6748": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        14434
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1A34"
    },
    "6751": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        14434
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6752": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        14331
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6753": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6754": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "6755": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6756": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6757": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP10",
      "path": "18"
    },
    "6758": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6759": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP8",
      "path": "18"
    },
    "6760": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "6761": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "6762": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14293,
        14327
      ],
      "op": "DUP6",
      "path": "18"
    },
    "6763": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14293,
        14327
      ],
      "op": "ADD",
      "path": "18"
    },
    "6764": {
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "6765": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14293,
        14331
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "6766": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14293,
        14331
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "6767": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14293,
        14331
      ],
      "op": "SWAP7",
      "path": "18"
    },
    "6768": {
      "op": "POP"
    },
    "6769": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        14331
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1A2E"
    },
    "6772": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        14331
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6773": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        14277
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6774": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "6775": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "6776": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "6777": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "6778": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6779": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6780": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP10",
      "path": "18"
    },
    "6781": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6782": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP8",
      "path": "18"
    },
    "6783": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "6784": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "6785": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "6786": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6787": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "SHR",
      "path": "18"
    },
    "6788": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "6790": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "6791": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "6792": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP7",
      "path": "18"
    },
    "6793": {
      "op": "POP"
    },
    "6794": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        14277
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1A28"
    },
    "6797": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        14277
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6798": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        14212
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6799": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "6800": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "6801": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "6802": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "6803": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6804": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6805": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP11",
      "path": "18"
    },
    "6806": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6807": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP9",
      "path": "18"
    },
    "6808": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "6809": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "6810": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "6811": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "6813": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "6814": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "6815": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "6816": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14165,
        14212
      ],
      "op": "EQ",
      "path": "18"
    },
    "6817": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14165,
        14212
      ],
      "op": "SWAP7",
      "path": "18"
    },
    "6818": {
      "op": "POP"
    },
    "6819": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        14212
      ],
      "op": "CODESIZE",
      "path": "18"
    },
    "6820": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        14212
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1A21"
    },
    "6823": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        14212
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6824": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        14149
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6825": {
      "offset": [
        783,
        14652
      ],
      "op": "SWAP7",
      "path": "18"
    },
    "6826": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "6827": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6828": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "6829": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "6830": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "6831": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6832": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6833": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP10",
      "path": "18"
    },
    "6834": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6835": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "6836": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP9",
      "path": "18"
    },
    "6837": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "6838": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "6839": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14068,
        14112
      ],
      "op": "ADD",
      "path": "18"
    },
    "6840": {
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "6841": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14115,
        14119
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xE10"
    },
    "6844": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6845": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "6846": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6847": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6848": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "GT",
      "path": "18"
    },
    "6849": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1ACC"
    },
    "6852": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6853": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14134,
        14149
      ],
      "op": "TIMESTAMP",
      "path": "18"
    },
    "6854": {
      "op": "LT"
    },
    "6855": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        14149
      ],
      "op": "SWAP7",
      "path": "18"
    },
    "6856": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        14149
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1A1B"
    },
    "6859": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        14149
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6860": {
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6861": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6866": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6868": {
      "op": "SHL"
    },
    "6869": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "6870": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6871": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x11"
    },
    "6873": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "6874": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6875": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "6877": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "6878": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "REVERT",
      "path": "18"
    },
    "6879": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        14052
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6880": {
      "offset": [
        783,
        14652
      ],
      "op": "SWAP7",
      "path": "18"
    },
    "6881": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "6882": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6883": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "6884": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6885": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "6886": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP9",
      "path": "18"
    },
    "6887": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "6888": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "6889": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13987,
        14027
      ],
      "op": "ADD",
      "path": "18"
    },
    "6890": {
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "6891": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14030,
        14034
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xE10"
    },
    "6894": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6895": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "6896": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "6897": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "6898": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "GT",
      "path": "18"
    },
    "6899": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1ACC"
    },
    "6902": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6903": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14037,
        14052
      ],
      "op": "TIMESTAMP",
      "path": "18"
    },
    "6904": {
      "op": "LT"
    },
    "6905": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        14052
      ],
      "op": "SWAP7",
      "path": "18"
    },
    "6906": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        14052
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1A15"
    },
    "6909": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        14052
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6910": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        13971
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6911": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "6912": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "6913": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "6914": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "6915": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6916": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP9",
      "path": "18"
    },
    "6917": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "6918": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "6919": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13923,
        13967
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6920": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13923,
        13967
      ],
      "op": "ADD",
      "path": "18"
    },
    "6921": {
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "6922": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13923,
        13971
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "6923": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13923,
        13971
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "6924": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13923,
        13971
      ],
      "op": "SWAP8",
      "path": "18"
    },
    "6925": {
      "op": "POP"
    },
    "6926": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        13971
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1A0F"
    },
    "6929": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        13971
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6930": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        13907
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6931": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13863,
        13903
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6932": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13863,
        13903
      ],
      "op": "ADD",
      "path": "18"
    },
    "6933": {
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "6934": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13863,
        13907
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "6935": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13863,
        13907
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "6936": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13863,
        13907
      ],
      "op": "SWAP8",
      "path": "18"
    },
    "6937": {
      "op": "POP"
    },
    "6938": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        13907
      ],
      "op": "CODESIZE",
      "path": "18"
    },
    "6939": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        13907
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1A08"
    },
    "6942": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        13803,
        13907
      ],
      "op": "JUMP",
      "path": "18"
    },
    "6943": {
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6944": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "6945": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "6946": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x235"
    },
    "6949": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6950": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "6951": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "6953": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "NOT",
      "path": "18"
    },
    "6954": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "6955": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "6956": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "6957": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x235"
    },
    "6960": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6961": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "6963": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "6964": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "6965": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "6966": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6967": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "6968": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "6969": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6970": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "6971": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "RETURN",
      "path": "18"
    },
    "6972": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "6973": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "6974": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "6975": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "6976": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x287"
    },
    "6979": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6980": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "6981": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "6983": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "NOT",
      "path": "18"
    },
    "6984": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "6985": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "6986": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "6987": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x287"
    },
    "6990": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "6991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6995": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6997": {
      "op": "SHL"
    },
    "6998": {
      "op": "SUB"
    },
    "6999": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7000": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "7002": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "7003": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "7005": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7006": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA0"
    },
    "7008": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "SHL",
      "path": "18"
    },
    "7009": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "7010": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        14620,
        14630
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 44,
      "value": "0x9"
    },
    "7012": {
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "7013": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x8"
    },
    "7015": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        14652
      ],
      "op": "SHR",
      "path": "18"
    },
    "7016": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "7017": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7018": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7019": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x8"
    },
    "7021": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "7022": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7023": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        14652
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "7024": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "7025": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x10"
    },
    "7027": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        14652
      ],
      "op": "SHR",
      "path": "18"
    },
    "7028": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "7029": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7030": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "7031": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7032": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7033": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7034": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        14652
      ],
      "op": "RETURN",
      "path": "18"
    },
    "7035": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7036": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "7037": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7038": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        14652
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "7039": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x235"
    },
    "7042": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7043": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "7045": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "7046": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "7048": {
      "op": "NOT"
    },
    "7049": {
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "7050": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "7051": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x235"
    },
    "7054": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7055": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1B96"
    },
    "7058": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E1D"
    },
    "7061": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "jump": "i",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "7062": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7063": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "7064": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "7066": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "7067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7069": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7071": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7073": {
      "op": "SHL"
    },
    "7074": {
      "op": "SUB"
    },
    "7075": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7076": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "7077": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7078": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "7079": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x90A"
    },
    "7082": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7083": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x44"
    },
    "7085": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "7086": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "7087": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "7088": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        14652
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "7089": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        14652
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "7090": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "7091": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "7092": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "7093": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "7094": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA5D"
    },
    "7097": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7098": {
      "offset": [
        2032,
        2091
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1BC1"
    },
    "7101": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        2032,
        2091
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2468"
    },
    "7104": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "jump": "i",
      "offset": [
        2032,
        2091
      ],
      "op": "JUMP",
      "path": "9"
    },
    "7105": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        2032,
        2091
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "7106": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "7108": {
      "branch": 72,
      "fn": "MasterNode.addValidNode",
      "offset": [
        3354,
        3368
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 45,
      "value": "0x9"
    },
    "7110": {
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "7111": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "7112": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "7113": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1C18"
    },
    "7116": {
      "branch": 72,
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7117": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "7118": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7119": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "7121": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "7122": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "7123": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7124": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA0"
    },
    "7126": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "SHL",
      "path": "18"
    },
    "7127": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "7128": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "7129": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "7130": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "DUP8",
      "path": "18"
    },
    "7131": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7132": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        3404,
        3414
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 46,
      "value": "0x8"
    },
    "7134": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "7136": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7137": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "7138": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "7139": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "7140": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xFF00"
    },
    "7143": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH10",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFF0000"
    },
    "7154": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "7155": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "7156": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "7157": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x10"
    },
    "7159": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "SHL",
      "path": "18"
    },
    "7160": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "7161": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "7162": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH10",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFFFFFF"
    },
    "7173": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "NOT",
      "path": "18"
    },
    "7174": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "7175": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "7176": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        3404,
        3414
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x8"
    },
    "7178": {
      "offset": [
        783,
        14652
      ],
      "op": "SHL",
      "path": "18"
    },
    "7179": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "7180": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "OR",
      "path": "18"
    },
    "7181": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "OR",
      "path": "18"
    },
    "7182": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "OR",
      "path": "18"
    },
    "7183": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7184": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "7185": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        3577,
        3644
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x967"
    },
    "7188": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        3577,
        3644
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7189": {
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "7190": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7191": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "RETURN",
      "path": "18"
    },
    "7192": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7193": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "7195": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x64"
    },
    "7197": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "7198": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "7199": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "7200": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH3",
      "path": "18",
      "value": "0x461BCD"
    },
    "7204": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE5"
    },
    "7206": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "SHL",
      "path": "18"
    },
    "7207": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "7208": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7209": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "7210": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "7211": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7212": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x15"
    },
    "7214": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "7216": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "7217": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "7218": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7219": {
      "op": "PUSH21",
      "value": "0x139BC81B5BDC99481B9BD9195CC8185B1B1BDDD959"
    },
    "7241": {
      "op": "PUSH1",
      "value": "0x5A"
    },
    "7243": {
      "op": "SHL"
    },
    "7244": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x44"
    },
    "7246": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "7247": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "7248": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7249": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "REVERT",
      "path": "18"
    },
    "7250": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7251": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "7252": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "7253": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "7254": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x287"
    },
    "7257": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7258": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7259": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "7261": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "NOT",
      "path": "18"
    },
    "7262": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "7263": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "7264": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "7265": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x287"
    },
    "7268": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7269": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "7271": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7272": {
      "fn": "ERC20.approve",
      "offset": [
        4593,
        4599
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 47,
      "value": "0x380"
    },
    "7275": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1C72"
    },
    "7278": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E1D"
    },
    "7281": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "7282": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7283": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "7285": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "7286": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7287": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "7288": {
      "fn": "ERC20.approve",
      "offset": [
        4593,
        4599
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x230D"
    },
    "7291": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4593,
        4599
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7292": {
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7293": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "7294": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "7295": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        14652
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "7296": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x42D"
    },
    "7299": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7300": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7301": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "7303": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        14652
      ],
      "op": "NOT",
      "path": "18"
    },
    "7304": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "7305": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "7306": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "7307": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x42D"
    },
    "7310": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7311": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7312": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "7313": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "7314": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7315": {
      "fn": "ERC20.name",
      "offset": [
        2240,
        2245
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 48,
      "value": "0x5"
    },
    "7317": {
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "7318": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "7319": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "7321": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "7322": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7323": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "SHR",
      "path": "18"
    },
    "7324": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "7325": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7326": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "7327": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "7328": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "7329": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "7330": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "7331": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1D3F"
    },
    "7334": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7335": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7336": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "7338": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP7",
      "path": "18"
    },
    "7339": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "DUP8",
      "path": "18"
    },
    "7340": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "7341": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "LT",
      "path": "18"
    },
    "7342": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7343": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "EQ",
      "path": "18"
    },
    "7344": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x698"
    },
    "7347": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7348": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "DUP9",
      "path": "18"
    },
    "7349": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP10",
      "path": "18"
    },
    "7350": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "7351": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP7",
      "path": "18"
    },
    "7352": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "DUP9",
      "path": "18"
    },
    "7353": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP7",
      "path": "18"
    },
    "7354": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP8",
      "path": "18"
    },
    "7355": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "7356": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "7357": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP11",
      "path": "18"
    },
    "7358": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7359": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "7360": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "7361": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "7363": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "EQ",
      "path": "18"
    },
    "7364": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x671"
    },
    "7367": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7368": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "7369": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "7370": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "7372": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "EQ",
      "path": "18"
    },
    "7373": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1CE3"
    },
    "7376": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7377": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "7378": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "7379": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "7380": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x611"
    },
    "7383": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "7384": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "7385": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x602"
    },
    "7388": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "7389": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "7390": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "7391": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1F21"
    },
    "7394": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "7395": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7396": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "7397": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7398": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "7399": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "7400": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "7401": {
      "fn": "ERC20.name",
      "offset": [
        2240,
        2245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "7403": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "7404": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7405": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0"
    },
    "7438": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7439": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "7440": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "7441": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "LT",
      "path": "18"
    },
    "7442": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1D27"
    },
    "7445": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7446": {
      "op": "POP"
    },
    "7447": {
      "op": "POP"
    },
    "7448": {
      "op": "POP"
    },
    "7449": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "7450": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "7451": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "7452": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7453": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x602"
    },
    "7456": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x611"
    },
    "7459": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5EF"
    },
    "7462": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "7463": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7464": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7465": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "7466": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "7467": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "DUP11",
      "path": "18"
    },
    "7468": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "7469": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "7470": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "7471": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7472": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "DUP9",
      "path": "18"
    },
    "7473": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "7474": {
      "op": "POP"
    },
    "7475": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP8",
      "path": "18"
    },
    "7476": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "7477": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7478": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "7479": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "7480": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "7481": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7482": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "7483": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1D0E"
    },
    "7486": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "7487": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7488": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "7489": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x7F"
    },
    "7491": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "7492": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "7493": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1CA7"
    },
    "7496": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "7497": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7498": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "7499": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "7500": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x235"
    },
    "7503": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7504": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7505": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "7507": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "NOT",
      "path": "18"
    },
    "7508": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "7509": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "7510": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "7511": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x235"
    },
    "7514": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7515": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1D62"
    },
    "7518": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E1D"
    },
    "7521": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "7522": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7523": {
      "offset": [
        2976,
        2986
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "7524": {
      "fn": "ERC20.name",
      "offset": [
        2976,
        2986
      ],
      "op": "CALLER",
      "path": "18"
    },
    "7525": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "7526": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7527": {
      "offset": [
        2965,
        2975
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x8"
    },
    "7529": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "7531": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7532": {
      "offset": [
        2944,
        3090
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1DA8"
    },
    "7535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7539": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7541": {
      "op": "SHL"
    },
    "7542": {
      "op": "SUB"
    },
    "7543": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7544": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "7545": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "DUP8",
      "path": "18"
    },
    "7546": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "7547": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "7548": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x10"
    },
    "7550": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "SHR",
      "path": "18"
    },
    "7551": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "7552": {
      "offset": [
        3003,
        3027
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7553": {
      "fn": "ERC20.name",
      "offset": [
        3003,
        3027
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x0"
    },
    "7586": {
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "7587": {
      "offset": [
        2965,
        3027
      ],
      "op": "EQ",
      "path": "18"
    },
    "7588": {
      "offset": [
        2944,
        3090
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1F98"
    },
    "7591": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2944,
        3090
      ],
      "op": "JUMP",
      "path": "18"
    },
    "7592": {
      "fn": "ERC20.name",
      "offset": [
        2944,
        3090
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7593": {
      "offset": [
        2976,
        2986
      ],
      "op": "CALLER",
      "path": "18"
    },
    "7594": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "7595": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7596": {
      "offset": [
        2965,
        2975
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x8"
    },
    "7598": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "7600": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7601": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "7603": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7604": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "7605": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "7606": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "7607": {
      "fn": "ERC20.name",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "7608": {
      "offset": [
        2769,
        2805
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "7609": {
      "offset": [
        2765,
        2875
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x583"
    },
    "7612": {
      "offset": [
        2765,
        2875
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7613": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "7614": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        4526,
        4532
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 49,
      "value": "0x907"
    },
    "7617": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "7619": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "7620": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "7621": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        4526,
        4532
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2269"
    },
    "7624": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "jump": "i",
      "offset": [
        4526,
        4532
      ],
      "op": "JUMP",
      "path": "18"
    },
    "7625": {
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7626": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "7627": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "7628": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "7629": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "7630": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x235"
    },
    "7633": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7634": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "7636": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "7637": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "7639": {
      "op": "NOT"
    },
    "7640": {
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "7641": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "7642": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x235"
    },
    "7645": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7646": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "7647": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFFFFFFFF"
    },
    "7652": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE0"
    },
    "7654": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "SHL",
      "path": "18"
    },
    "7655": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7656": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "7657": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7658": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "7659": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "7660": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x235"
    },
    "7663": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7664": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "7666": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "7667": {
      "op": "POP"
    },
    "7668": {
      "op": "PUSH4",
      "value": "0x85572FFB"
    },
    "7673": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7675": {
      "op": "SHL"
    },
    "7676": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1565
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 50
    },
    "7677": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1565
      ],
      "op": "EQ",
      "path": "4"
    },
    "7678": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1565
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7679": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1609
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7680": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1609
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "7681": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1609
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E0C"
    },
    "7684": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1609
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "7685": {
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7686": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "7687": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "7688": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "7689": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7690": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7691": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "RETURN",
      "path": "18"
    },
    "7692": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1609
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7693": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "7698": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7700": {
      "op": "SHL"
    },
    "7701": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1569,
        1609
      ],
      "op": "EQ",
      "path": "4"
    },
    "7702": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1569,
        1609
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7703": {
      "op": "POP"
    },
    "7704": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1609
      ],
      "op": "CODESIZE",
      "path": "4"
    },
    "7705": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1609
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E05"
    },
    "7708": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1609
      ],
      "op": "JUMP",
      "path": "4"
    },
    "7709": {
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7710": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "7712": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "7713": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7718": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7720": {
      "op": "SHL"
    },
    "7721": {
      "op": "SUB"
    },
    "7722": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "7723": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "7724": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "7725": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "7726": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB4A"
    },
    "7729": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7730": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "7731": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7732": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "7734": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "7735": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7738": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7740": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7742": {
      "op": "SHL"
    },
    "7743": {
      "op": "SUB"
    },
    "7744": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "7745": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "7746": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "7747": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "7748": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB4A"
    },
    "7751": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7752": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "7753": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7754": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "7755": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7756": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "7757": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "7758": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "7759": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "7760": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "7761": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7762": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "7764": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7765": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "7766": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7767": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "LT",
      "path": "18"
    },
    "7768": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E75"
    },
    "7771": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7772": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "7773": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "7774": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "7775": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "7777": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "7779": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7780": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "7781": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "7782": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "7783": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "7784": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "7785": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7786": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "7788": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7789": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "NOT",
      "path": "18"
    },
    "7790": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "7791": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "7792": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "7793": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "7794": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "7795": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7796": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "7797": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7798": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "7800": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7801": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "7802": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "7803": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7804": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "7805": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "7806": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "7807": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "7808": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "7809": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "7810": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "7811": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7812": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "7813": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E54"
    },
    "7816": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "7817": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7818": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "7820": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "7821": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7826": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7828": {
      "op": "SHL"
    },
    "7829": {
      "op": "SUB"
    },
    "7830": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "7831": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "7832": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "7833": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "7834": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB4A"
    },
    "7837": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7838": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "7839": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7840": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA0"
    },
    "7842": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7843": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "7844": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7845": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7846": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "LT",
      "path": "18"
    },
    "7847": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7851": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7853": {
      "op": "SHL"
    },
    "7854": {
      "op": "SUB"
    },
    "7855": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "7856": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "GT",
      "path": "18"
    },
    "7857": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "OR",
      "path": "18"
    },
    "7858": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1EBA"
    },
    "7861": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7862": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "7864": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7865": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "7866": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7867": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x4E487B71"
    },
    "7872": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE0"
    },
    "7874": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SHL",
      "path": "18"
    },
    "7875": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "7877": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7878": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x41"
    },
    "7880": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "7882": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7883": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "7885": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "7887": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "REVERT",
      "path": "18"
    },
    "7888": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7889": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "7891": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7892": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "7893": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7894": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7895": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "LT",
      "path": "18"
    },
    "7896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7900": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7902": {
      "op": "SHL"
    },
    "7903": {
      "op": "SUB"
    },
    "7904": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "7905": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "GT",
      "path": "18"
    },
    "7906": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "OR",
      "path": "18"
    },
    "7907": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1EBA"
    },
    "7910": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7911": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "7913": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7914": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "7915": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7916": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "7918": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7919": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "7920": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7921": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7922": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "LT",
      "path": "18"
    },
    "7923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7927": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7929": {
      "op": "SHL"
    },
    "7930": {
      "op": "SUB"
    },
    "7931": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "7932": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "GT",
      "path": "18"
    },
    "7933": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "OR",
      "path": "18"
    },
    "7934": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1EBA"
    },
    "7937": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7938": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "7940": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7941": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "7942": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7943": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x80"
    },
    "7945": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7946": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "7947": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7948": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7949": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "LT",
      "path": "18"
    },
    "7950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7954": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7956": {
      "op": "SHL"
    },
    "7957": {
      "op": "SUB"
    },
    "7958": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "7959": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "GT",
      "path": "18"
    },
    "7960": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "OR",
      "path": "18"
    },
    "7961": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1EBA"
    },
    "7964": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7965": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "7967": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7968": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "7969": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7970": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7971": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "7973": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7974": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "NOT",
      "path": "18"
    },
    "7975": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "7976": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "7977": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "7978": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7979": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "7980": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7981": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7982": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "LT",
      "path": "18"
    },
    "7983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7987": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7989": {
      "op": "SHL"
    },
    "7990": {
      "op": "SUB"
    },
    "7991": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "7992": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "GT",
      "path": "18"
    },
    "7993": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "OR",
      "path": "18"
    },
    "7994": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1EBA"
    },
    "7997": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7998": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8000": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8001": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "8002": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8003": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8004": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "8006": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8007": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "8008": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "8009": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "8010": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB4A"
    },
    "8013": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "8014": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8015": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "8016": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8017": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8021": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8023": {
      "op": "SHL"
    },
    "8024": {
      "op": "SUB"
    },
    "8025": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8026": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "GT",
      "path": "18"
    },
    "8027": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1EBA"
    },
    "8030": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "8031": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8033": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8034": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "8035": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1F76"
    },
    "8038": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "8040": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "8041": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "8042": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8044": {
      "op": "NOT"
    },
    "8045": {
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "8046": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "8048": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "8049": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "8050": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1F21"
    },
    "8053": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "i",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "8054": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8055": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8056": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "8057": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8058": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "8060": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "8061": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "8062": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "8063": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "8064": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "GT",
      "path": "18"
    },
    "8065": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB4A"
    },
    "8068": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "8069": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8070": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8072": {
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "8073": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "8075": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8076": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "8077": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "8078": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "8079": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "8080": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "8081": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "CALLDATACOPY",
      "path": "18"
    },
    "8082": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "8083": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "8084": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "8085": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8086": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8087": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "8088": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8089": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "8090": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1F9F"
    },
    "8093": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "8094": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "8095": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8096": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8098": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8099": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8103": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8105": {
      "op": "SHL"
    },
    "8106": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8107": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8108": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "8110": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "8112": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8113": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "8114": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8115": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x25"
    },
    "8117": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "8119": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8120": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "8121": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8122": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x52657175697265206D617374657220616E64206E6F646520696E2073616D6520"
    },
    "8155": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x44"
    },
    "8157": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8158": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "8159": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8160": {
      "op": "PUSH5",
      "value": "0x31B430B4B7"
    },
    "8166": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "8168": {
      "op": "SHL"
    },
    "8169": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x64"
    },
    "8171": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8172": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "8173": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8174": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x84"
    },
    "8176": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8177": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "REVERT",
      "path": "18"
    },
    "8178": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8179": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8184": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8186": {
      "op": "SHL"
    },
    "8187": {
      "op": "SUB"
    },
    "8188": {
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8189": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "8190": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "8191": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "8192": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "8193": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8194": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8195": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8197": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "8199": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "8200": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8201": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "8202": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8203": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "8204": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8205": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2021"
    },
    "8208": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "8209": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8210": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA0"
    },
    "8212": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "8213": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "8214": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "8215": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8216": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE0"
    },
    "8218": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "8219": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "8220": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8221": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E49"
    },
    "8224": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "i",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "8225": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8226": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "8227": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x203D"
    },
    "8230": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "8231": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP8",
      "path": "18"
    },
    "8232": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "8233": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8234": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "8235": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3F"
    },
    "8237": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "NOT",
      "path": "18"
    },
    "8238": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "8239": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "8240": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "8241": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "8242": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "8243": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "8244": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "8246": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "8247": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "8248": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8249": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E49"
    },
    "8252": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "i",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "8253": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8254": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8255": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP8",
      "path": "18"
    },
    "8256": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "8257": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8258": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "8259": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "8260": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "8261": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "8262": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "8263": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "8264": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x80"
    },
    "8266": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "8267": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "8268": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8269": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8270": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8271": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP8",
      "path": "18"
    },
    "8272": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8273": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "8274": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "8275": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8276": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8277": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "8278": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP7",
      "path": "18"
    },
    "8279": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "8280": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "8281": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "8283": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8284": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8285": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "8286": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8287": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "LT",
      "path": "18"
    },
    "8288": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2095"
    },
    "8291": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "8292": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "8293": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "8294": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "8295": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "8296": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "POP",
      "path": "18"
    },
    "8297": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xC0"
    },
    "8299": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x80"
    },
    "8301": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2092"
    },
    "8304": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "8305": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP7",
      "path": "18"
    },
    "8306": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "8308": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8309": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA0"
    },
    "8311": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SHL",
      "path": "18"
    },
    "8312": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "8313": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "8315": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8316": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "8317": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8318": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "8319": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA0"
    },
    "8321": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "8322": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "8323": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8324": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "8325": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8326": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "8327": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8328": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "8329": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "8330": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "8331": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "8332": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "8333": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8334": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E49"
    },
    "8337": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "i",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "8338": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8339": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8340": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "8341": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8342": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "8343": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8344": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8345": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8350": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8352": {
      "op": "SHL"
    },
    "8353": {
      "op": "SUB"
    },
    "8354": {
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "8355": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP10",
      "path": "18"
    },
    "8356": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8357": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "8358": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "8359": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8360": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP9",
      "path": "18"
    },
    "8361": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "8362": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "8363": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8364": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP7",
      "path": "18"
    },
    "8365": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP8",
      "path": "18"
    },
    "8366": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "8367": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP7",
      "path": "18"
    },
    "8368": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "8369": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8370": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "8371": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "8372": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "8374": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8375": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "8376": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "8377": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8378": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x205C"
    },
    "8381": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "8382": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8383": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8384": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8385": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "8387": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "8388": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "8389": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SLT",
      "path": "18"
    },
    "8390": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB4A"
    },
    "8393": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "8394": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8395": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8396": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "8397": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "8398": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8399": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "8400": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB4A"
    },
    "8403": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "8404": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8405": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "8406": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8407": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "8408": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8409": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8410": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "8411": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8412": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "8413": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "GT",
      "path": "18"
    },
    "8414": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x20E3"
    },
    "8417": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "8418": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "8419": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8420": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x4E487B71"
    },
    "8425": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE0"
    },
    "8427": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "SHL",
      "path": "18"
    },
    "8428": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "8430": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8431": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x11"
    },
    "8433": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "8435": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8436": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "8438": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "8440": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        14652
      ],
      "op": "REVERT",
      "path": "18"
    },
    "8441": {
      "fn": "ERC20._transfer",
      "offset": [
        7473,
        8291
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8446": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8448": {
      "op": "SHL"
    },
    "8449": {
      "op": "SUB"
    },
    "8450": {
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8451": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8452": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "8453": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "8454": {
      "fn": "ERC20._transfer",
      "offset": [
        7599,
        7617
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 51
    },
    "8455": {
      "fn": "ERC20._transfer",
      "offset": [
        7599,
        7617
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8456": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2216"
    },
    "8459": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "8460": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "8461": {
      "fn": "ERC20._transfer",
      "offset": [
        7677,
        7693
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 52
    },
    "8462": {
      "fn": "ERC20._transfer",
      "offset": [
        7677,
        7693
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8463": {
      "fn": "ERC20._transfer",
      "offset": [
        7677,
        7693
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8464": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x21C5"
    },
    "8467": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "8468": {
      "fn": "ERC20._transfer",
      "offset": [
        7615,
        7616
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8470": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8471": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8472": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8473": {
      "fn": "ERC20._transfer",
      "offset": [
        7815,
        7824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "8475": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "8477": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8478": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8480": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8481": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "8482": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "8483": {
      "fn": "ERC20._transfer",
      "offset": [
        7848,
        7869
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 53
    },
    "8484": {
      "fn": "ERC20._transfer",
      "offset": [
        7848,
        7869
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8485": {
      "fn": "ERC20._transfer",
      "offset": [
        7848,
        7869
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8486": {
      "fn": "ERC20._transfer",
      "offset": [
        7848,
        7869
      ],
      "op": "LT",
      "path": "0"
    },
    "8487": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2171"
    },
    "8490": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "8491": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8493": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8494": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8495": {
      "fn": "ERC20._transfer",
      "offset": [
        8210,
        8236
      ],
      "op": "PUSH32",
      "path": "0",
      "statement": 54,
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "8528": {
      "offset": [
        783,
        14652
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "8529": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "DUP8",
      "path": "18"
    },
    "8530": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "8532": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP7",
      "path": "18"
    },
    "8533": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8534": {
      "fn": "ERC20._transfer",
      "offset": [
        7815,
        7824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "8536": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "8537": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8538": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "8539": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8540": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8541": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "8542": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "8543": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "DUP7",
      "path": "18"
    },
    "8544": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8545": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8546": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "8547": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8548": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8549": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "8550": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "8551": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8552": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "8553": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8555": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8556": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8557": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8558": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8559": {
      "fn": "ERC20._transfer",
      "offset": [
        8210,
        8236
      ],
      "op": "LOG3",
      "path": "0"
    },
    "8560": {
      "fn": "ERC20._transfer",
      "jump": "o",
      "offset": [
        7473,
        8291
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8561": {
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8562": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8564": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8565": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8569": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8571": {
      "op": "SHL"
    },
    "8572": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8573": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8574": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "8576": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "8578": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8579": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "8580": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8581": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x26"
    },
    "8583": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "8585": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8586": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "8587": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8588": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "8621": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x44"
    },
    "8623": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8624": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "8625": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8626": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "8633": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "8635": {
      "op": "SHL"
    },
    "8636": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x64"
    },
    "8638": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8639": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "8640": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8641": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x84"
    },
    "8643": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8644": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "REVERT",
      "path": "18"
    },
    "8645": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8646": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8648": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8649": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8653": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8655": {
      "op": "SHL"
    },
    "8656": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8657": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8658": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "8660": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "8662": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8663": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "8664": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8665": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x23"
    },
    "8667": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "8669": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8670": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "8671": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8672": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "8705": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x44"
    },
    "8707": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8708": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "8709": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8710": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "8714": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "8716": {
      "op": "SHL"
    },
    "8717": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x64"
    },
    "8719": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8720": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "8721": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8722": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x84"
    },
    "8724": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8725": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "REVERT",
      "path": "18"
    },
    "8726": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8727": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8729": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8730": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8734": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8736": {
      "op": "SHL"
    },
    "8737": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8738": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8739": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "8741": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "8743": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8744": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "8745": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8746": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x25"
    },
    "8748": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "8750": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8751": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "8752": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8753": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "8786": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x44"
    },
    "8788": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8789": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "8790": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8791": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "8797": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "8799": {
      "op": "SHL"
    },
    "8800": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x64"
    },
    "8802": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8803": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "8804": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8805": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x84"
    },
    "8807": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8808": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        14652
      ],
      "op": "REVERT",
      "path": "18"
    },
    "8809": {
      "fn": "ERC20._mint",
      "offset": [
        8567,
        9102
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8810": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8812": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8814": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8816": {
      "op": "SHL"
    },
    "8817": {
      "op": "SUB"
    },
    "8818": {
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "8819": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8820": {
      "fn": "ERC20._mint",
      "offset": [
        8650,
        8671
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 55
    },
    "8821": {
      "fn": "ERC20._mint",
      "offset": [
        8650,
        8671
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8822": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x22C8"
    },
    "8825": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "8826": {
      "fn": "ERC20._mint",
      "offset": [
        8999,
        9036
      ],
      "op": "PUSH32",
      "path": "0",
      "statement": 56,
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "8859": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "8861": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8862": {
      "fn": "ERC20._mint",
      "offset": [
        8778,
        8800
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 57,
      "value": "0x22AB"
    },
    "8865": {
      "fn": "ERC20._mint",
      "offset": [
        8669,
        8670
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8867": {
      "offset": [
        783,
        14652
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "8868": {
      "fn": "ERC20._mint",
      "offset": [
        8778,
        8800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8870": {
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "8871": {
      "fn": "ERC20._mint",
      "offset": [
        8778,
        8800
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20D6"
    },
    "8874": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8778,
        8800
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8875": {
      "fn": "ERC20._mint",
      "offset": [
        8778,
        8800
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8876": {
      "fn": "ERC20._mint",
      "offset": [
        8778,
        8800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8878": {
      "offset": [
        783,
        14652
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "8879": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "8880": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "8881": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8882": {
      "fn": "ERC20._mint",
      "offset": [
        8946,
        8955
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 58,
      "value": "0x2"
    },
    "8884": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8885": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8886": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8888": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        14652
      ],
      "op": "DUP5",
      "path": "18"
    },
    "8889": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        14652
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "8890": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8891": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8892": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "8893": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "8894": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8895": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        14652
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "8896": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8898": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8899": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8900": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8901": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8902": {
      "fn": "ERC20._mint",
      "offset": [
        8999,
        9036
      ],
      "op": "LOG3",
      "path": "0"
    },
    "8903": {
      "fn": "ERC20._mint",
      "jump": "o",
      "offset": [
        8567,
        9102
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8904": {
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8905": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8907": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "8908": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8912": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8914": {
      "op": "SHL"
    },
    "8915": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8916": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8917": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "8919": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "8921": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8922": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "8923": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8924": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "8926": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "8928": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8929": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "8930": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8931": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "8964": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x44"
    },
    "8966": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8967": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "8968": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8969": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x64"
    },
    "8971": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8972": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        14652
      ],
      "op": "REVERT",
      "path": "18"
    },
    "8973": {
      "fn": "ERC20._approve",
      "offset": [
        10504,
        10874
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8978": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8980": {
      "op": "SHL"
    },
    "8981": {
      "op": "SUB"
    },
    "8982": {
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8983": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8984": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "8985": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "8986": {
      "fn": "ERC20._approve",
      "offset": [
        10635,
        10654
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 59
    },
    "8987": {
      "fn": "ERC20._approve",
      "offset": [
        10635,
        10654
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8988": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x23BE"
    },
    "8991": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "8992": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "8993": {
      "fn": "ERC20._approve",
      "offset": [
        10713,
        10734
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 60
    },
    "8994": {
      "fn": "ERC20._approve",
      "offset": [
        10713,
        10734
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8995": {
      "fn": "ERC20._approve",
      "offset": [
        10713,
        10734
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8996": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x236E"
    },
    "8999": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "9000": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "9002": {
      "fn": "ERC20._approve",
      "offset": [
        10835,
        10867
      ],
      "op": "PUSH32",
      "path": "0",
      "statement": 61,
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "9035": {
      "offset": [
        783,
        14652
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "9036": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "DUP4",
      "path": "18"
    },
    "9037": {
      "fn": "ERC20._approve",
      "offset": [
        10652,
        10653
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9039": {
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9040": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10795
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 62,
      "value": "0x3"
    },
    "9042": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "9043": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9044": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "9046": {
      "fn": "ERC20._approve",
      "offset": [
        10652,
        10653
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9048": {
      "offset": [
        783,
        14652
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "9049": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "DUP6",
      "path": "18"
    },
    "9050": {
      "fn": "ERC20._approve",
      "offset": [
        10652,
        10653
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9052": {
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9053": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "9054": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9055": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "9056": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "9058": {
      "fn": "ERC20._approve",
      "offset": [
        10652,
        10653
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9060": {
      "offset": [
        783,
        14652
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "9061": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "9062": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "9064": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "9065": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9066": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "9067": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9068": {
      "fn": "ERC20._approve",
      "offset": [
        10835,
        10867
      ],
      "op": "LOG3",
      "path": "0"
    },
    "9069": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        10504,
        10874
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9070": {
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "9071": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "9073": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "9074": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9078": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9080": {
      "op": "SHL"
    },
    "9081": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "9082": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9083": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "9085": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "9087": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "9088": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "9089": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9090": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x22"
    },
    "9092": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "9094": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "9095": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "9096": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9097": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "9130": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x44"
    },
    "9132": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "9133": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "9134": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9135": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "9138": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "9140": {
      "op": "SHL"
    },
    "9141": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x64"
    },
    "9143": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "9144": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "9145": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9146": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x84"
    },
    "9148": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9149": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "REVERT",
      "path": "18"
    },
    "9150": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "9151": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "9153": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "9154": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9158": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9160": {
      "op": "SHL"
    },
    "9161": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "9162": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9163": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "9165": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "9167": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "9168": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "9169": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9170": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "9172": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "DUP1",
      "path": "18"
    },
    "9173": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "9174": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "9175": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9176": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "9209": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x44"
    },
    "9211": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "9212": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "9213": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9214": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "9219": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9221": {
      "op": "SHL"
    },
    "9222": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x64"
    },
    "9224": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "9225": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "9226": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9227": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x84"
    },
    "9229": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9230": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "REVERT",
      "path": "18"
    },
    "9231": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "9232": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "9233": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9238": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9240": {
      "op": "SHL"
    },
    "9241": {
      "op": "SUB"
    },
    "9242": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "9243": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "9244": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "9245": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "9246": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB4A"
    },
    "9249": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "9250": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "9251": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "9252": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "9253": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9254": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "9256": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "9257": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "9258": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "9259": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "SUB",
      "path": "18"
    },
    "9260": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB4A"
    },
    "9263": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "9264": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        783,
        14652
      ],
      "op": "JUMP",
      "path": "18"
    },
    "9265": {
      "fn": "Client._argsToBytes",
      "offset": [
        1285,
        1455
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "9266": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "9268": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "9269": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9270": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x97A657C9"
    },
    "9275": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE0"
    },
    "9277": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        14652
      ],
      "op": "SHL",
      "path": "18"
    },
    "9278": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 63,
      "value": "0x20"
    },
    "9280": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "DUP4",
      "path": "7"
    },
    "9281": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "ADD",
      "path": "7"
    },
    "9282": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "9283": {
      "offset": [
        1218,
        1228
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "9284": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x24"
    },
    "9286": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "DUP3",
      "path": "7"
    },
    "9287": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "ADD",
      "path": "7"
    },
    "9288": {
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9289": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x24"
    },
    "9291": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "DUP2",
      "path": "7"
    },
    "9292": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "9293": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "9295": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "9296": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "9297": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "9298": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "9299": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        14652
      ],
      "op": "LT",
      "path": "18"
    },
    "9300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9304": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9306": {
      "op": "SHL"
    },
    "9307": {
      "op": "SUB"
    },
    "9308": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "9309": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        14652
      ],
      "op": "GT",
      "path": "18"
    },
    "9310": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        14652
      ],
      "op": "OR",
      "path": "18"
    },
    "9311": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1EBA"
    },
    "9314": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "9315": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "9317": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9318": {
      "fn": "Client._argsToBytes",
      "offset": [
        1285,
        1455
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "9319": {
      "fn": "Client._argsToBytes",
      "jump": "o",
      "offset": [
        1285,
        1455
      ],
      "op": "JUMP",
      "path": "7"
    },
    "9320": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        1797,
        1955
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "9321": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        1916,
        1923
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 64,
      "value": "0x0"
    },
    "9323": {
      "offset": [
        783,
        14652
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "9324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9328": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9330": {
      "op": "SHL"
    },
    "9331": {
      "op": "SUB"
    },
    "9332": {
      "offset": [
        783,
        14652
      ],
      "op": "AND",
      "path": "18"
    },
    "9333": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        1902,
        1912
      ],
      "op": "CALLER",
      "path": "9"
    },
    "9334": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        1902,
        1923
      ],
      "op": "SUB",
      "path": "9"
    },
    "9335": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x247C"
    },
    "9338": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "9339": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "jump": "o",
      "offset": [
        1797,
        1955
      ],
      "op": "JUMP",
      "path": "9"
    },
    "9340": {
      "offset": [
        783,
        14652
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "9341": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "9343": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "9344": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9348": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9350": {
      "op": "SHL"
    },
    "9351": {
      "offset": [
        783,
        14652
      ],
      "op": "DUP2",
      "path": "18"
    },
    "9352": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9353": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "9355": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "9357": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "9358": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "9359": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9360": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x16"
    },
    "9362": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "9364": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "9365": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "9366": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9367": {
      "op": "PUSH22",
      "value": "0x27B7363C9031B0B63630B1363290313C9037BBB732B9"
    },
    "9390": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "9392": {
      "op": "SHL"
    },
    "9393": {
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x44"
    },
    "9395": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "DUP3",
      "path": "18"
    },
    "9396": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "ADD",
      "path": "18"
    },
    "9397": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "9398": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x64"
    },
    "9400": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "9401": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        14652
      ],
      "op": "REVERT",
      "path": "18"
    }
  },
  "sha1": "98456df693ed6a0f751767f3d751e39f13be2dd5",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.19;\n\nimport {IRouterClient} from \"@chainlink/contracts/src/v0.8/ccip/interfaces/IRouterClient.sol\";\nimport {OwnerIsCreator} from \"@chainlink/contracts/src/v0.8/shared/access/OwnerIsCreator.sol\";\nimport {Client} from \"@chainlink/contracts/src/v0.8/ccip/libraries/Client.sol\";\nimport {CCIPReceiver} from \"@chainlink/contracts/src/v0.8/ccip/applications/CCIPReceiver.sol\";\n\nimport {LinkTokenInterface} from \"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol\";\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"./utils_node/UtilsMasterNode.sol\";\n\n// Node interface\nimport \"../interfaces/INode.sol\";\n\n/// @title - A simple messenger contract for transferring/receiving tokens and data across chains.\ncontract MasterNode is CCIPReceiver, OwnerIsCreator, ERC20, UtilsMasterNode {\n    // Custom errors to provide more descriptive revert messages.\n    error NotEnoughBalance(uint256 currentBalance, uint256 calculatedFees); // Used to make sure contract has enough balance to cover the fees.\n    error NothingToWithdraw(); // Used when trying to withdraw Ether but there's nothing to withdraw.\n    error FailedToWithdrawEth(address owner, address target, uint256 value); // Used when the withdrawal of Ether fails.\n    error DestinationNodeNotValid(address nodeAddress); // Used when the destination address has not been allowlisted by the contract owner.\n    error SourceChainNotAllowed(uint64 sourceChainSelector); // Used when the source chain has not been allowlisted by the contract owner.\n    error SenderNotAllowed(address sender); // Used when the sender has not been allowlisted by the contract owner.\n    error InvalidReceiverAddress(); // Used when the receiver address is 0.\n\n    LinkTokenInterface private s_linkToken;\n\n    uint64 public immutable MASTER_CONTRACT_CHAIN_ID;\n\n    struct ValidNodes {\n        bool isValidNode;\n        bool isActiveNode;\n        uint64 chainCCIPid;\n        uint256 lastDataFromAave;\n        uint256 totalUsdcSupply;\n        uint256 totalUsdcBorrow;\n        uint256 supplyRate;\n    }\n\n    mapping(address => ValidNodes) public validNodes;\n\n    bool public allowMoreNodes = true;\n    address public activeNode;\n\n    /// @notice Constructor initializes the contract with the router address.\n    /// @param _router The address of the router contract.\n    /// @param _link The address of the link contract.\n    constructor(\n        address _router,\n        address _link,\n        uint64 _MASTER_CONTRACT_CHAIN_ID\n    ) CCIPReceiver(_router) ERC20(\"WarpYield\", \"aWRP\") {\n        s_linkToken = LinkTokenInterface(_link);\n        MASTER_CONTRACT_CHAIN_ID = _MASTER_CONTRACT_CHAIN_ID;\n    }\n\n    modifier onlyValidNodes(address nodeAddress) {\n        if (!validNodes[nodeAddress].isValidNode) {\n            revert DestinationNodeNotValid(nodeAddress);\n        }\n        _;\n    }\n\n    modifier masterAndNodeInSameChain() {\n        require(\n            validNodes[msg.sender].chainCCIPid == MASTER_CONTRACT_CHAIN_ID,\n            \"Require master and node in same chain\"\n        );\n        _;\n    }\n\n    function stopAddingNodes() external onlyOwner {\n        allowMoreNodes = false;\n    }\n\n    function addValidNode(\n        address nodeAddress,\n        uint64 chainCCIPid,\n        bool isActiveNode\n    ) external onlyOwner {\n        require(allowMoreNodes, \"No more nodes allowed\");\n        validNodes[nodeAddress].isValidNode = true;\n        validNodes[nodeAddress].isActiveNode = isActiveNode;\n        validNodes[nodeAddress].chainCCIPid = chainCCIPid;\n\n        if (isActiveNode) {\n            activeNode = nodeAddress;\n        }\n    }\n\n    /////////////////////////////////////////////////////////////////////////\n    ////////////////////  INCOMING DEPOSIT => MINT aWRP  ///////////////////\n    ////////////////////////  COMMAND == 0  ///////////////////////////////\n    //////////////////////////////////////////////////////////////////////\n\n    function _aWarpTokenMinter(\n        Client.Any2EVMMessage memory _any2EvmMessage\n    ) internal {\n        (, address userAddress, uint256 shares) = abi.decode(\n            _any2EvmMessage.data,\n            (uint8, address, uint256)\n        );\n\n        _mint(userAddress, shares);\n    }\n\n    ///////////////////  DEPOSIT, MASTER AND NODE IN SAME CHAIN  /////////////////\n\n    function aWarpTokenMinterFromSameChain(\n        address userAddress,\n        uint256 shares\n    ) external masterAndNodeInSameChain onlyValidNodes(msg.sender) {\n        _mint(userAddress, shares);\n    }\n\n    /////////////////////////////////////////////////////////////////////////\n    //////////////////////  RESUME PROTOCOL OPERATIONS  ////////////////////\n    ////////////////////////  COMMAND == 1  ///////////////////////////////\n    //////////////////////////////////////////////////////////////////////\n\n    function _resmumeOperations(\n        Client.Any2EVMMessage memory _any2EvmMessage\n    ) internal {\n        validNodes[abi.decode(_any2EvmMessage.sender, (address))]\n            .isActiveNode = true;\n        activeNode = abi.decode(_any2EvmMessage.sender, (address));\n    }\n\n    ///////////  RESUME OPERATIONS, MASTER AND NODE IN SAME CHAIN  //////////\n\n    function _resmumeOperationsFromSameChain()\n        external\n        masterAndNodeInSameChain\n        onlyValidNodes(msg.sender)\n    {\n        validNodes[msg.sender].isActiveNode = true;\n        activeNode = msg.sender;\n    }\n\n    /////////////////////////////////////////////////////////////////////////\n    /////////////////////////  DATA AAVE FROM NODE  ////////////////////////\n    ////////////////////////  COMMAND == 2  ///////////////////////////////\n    //////////////////////////////////////////////////////////////////////\n\n    function _nodeAaveFeed(\n        Client.Any2EVMMessage memory _any2EvmMessage\n    ) internal {\n        (\n            ,\n            uint256 totalUsdcSupply,\n            uint256 totalUsdcBorrow,\n            uint256 supplyRate\n        ) = abi.decode(\n                _any2EvmMessage.data,\n                (uint8, uint256, uint256, uint256)\n            );\n\n        validNodes[abi.decode(_any2EvmMessage.sender, (address))]\n            .lastDataFromAave = block.timestamp;\n        validNodes[abi.decode(_any2EvmMessage.sender, (address))]\n            .totalUsdcSupply = totalUsdcSupply;\n        validNodes[abi.decode(_any2EvmMessage.sender, (address))]\n            .totalUsdcBorrow = totalUsdcBorrow;\n        validNodes[abi.decode(_any2EvmMessage.sender, (address))]\n            .supplyRate = supplyRate;\n    }\n\n    ////////////////  DATA AAVE, MASTER AND NODE IN SAME CHAIN  //////////////\n\n    function nodeAaveFeedFromSameChain(\n        uint256 totalUsdcSupply,\n        uint256 totalUsdcBorrow,\n        uint256 supplyRate\n    ) external masterAndNodeInSameChain onlyValidNodes(msg.sender) {\n        validNodes[msg.sender].lastDataFromAave = block.timestamp;\n        validNodes[msg.sender].totalUsdcSupply = totalUsdcSupply;\n        validNodes[msg.sender].totalUsdcBorrow = totalUsdcBorrow;\n        validNodes[msg.sender].supplyRate = supplyRate;\n    }\n\n    //////////////////////////////////////////////////////////////////////////\n    /////////////////////////////////////////////////////////////////////////\n    ////////////////////////  INCOMING MESAGE HANDLER  /////////////////////\n    /////////////////  THIS FUNC IS CALLED BY CHAINLINK  //////////////////\n    //////////////////////////////////////////////////////////////////////\n    /////////////////////////////////////////////////////////////////////\n\n    function _ccipReceive(\n        Client.Any2EVMMessage memory _any2EvmMessage\n    )\n        internal\n        override\n        onlyValidNodes(abi.decode(_any2EvmMessage.sender, (address)))\n    {\n        require(\n            validNodes[abi.decode(_any2EvmMessage.sender, (address))]\n                .isValidNode,\n            \"Incoming Message not from a valid node\"\n        );\n        uint8 command = _internalCommandRouter(_any2EvmMessage);\n        if (command == 0) {\n            _aWarpTokenMinter(_any2EvmMessage);\n        } else if (command == 1) {\n            _resmumeOperations(_any2EvmMessage);\n        } else if (command == 2) {\n            _nodeAaveFeed(_any2EvmMessage);\n        } else {\n            revert(\"invalid command from Node\");\n        }\n    }\n\n    /////////////////////////////////////////////////////////////////////////\n    ////////////////////////////////////////////////////////////////////////\n    ///////////////////////  OUTGOING MESAGES HANDLER  ////////////////////\n    //////////////////////////////////////////////////////////////////////\n    /////////////////////////////////////////////////////////////////////\n\n    function _sendMessage(\n        uint64 _destinationChainSelector,\n        address _receiver,\n        bytes memory _data\n    ) internal onlyValidNodes(_receiver) returns (bytes32 messageId) {\n        // Create an EVM2AnyMessage struct in memory with necessary information for sending a cross-chain message\n        // address(linkToken) means fees are paid in LINK\n        Client.EVM2AnyMessage memory evm2AnyMessage = _buildCCIPMessage(\n            _receiver,\n            _data,\n            address(s_linkToken)\n        );\n\n        // Initialize a router client instance to interact with cross-chain router\n        IRouterClient router = IRouterClient(this.getRouter());\n\n        // Get the fee required to send the CCIP message\n        uint256 fees = router.getFee(_destinationChainSelector, evm2AnyMessage);\n\n        require(\n            s_linkToken.transferFrom(msg.sender, address(this), fees),\n            \"Not provided Link for fees\"\n        );\n\n        if (fees > s_linkToken.balanceOf(address(this)))\n            revert NotEnoughBalance(s_linkToken.balanceOf(address(this)), fees);\n\n        // approve the Router to transfer LINK tokens on contract's behalf. It will spend the fees in LINK\n        s_linkToken.approve(address(router), fees);\n\n        // Send the message through the router and store the returned message ID\n        messageId = router.ccipSend(_destinationChainSelector, evm2AnyMessage);\n\n        // Return the message ID\n        return messageId;\n    }\n\n    /// @notice Construct a CCIP message.\n    /// @dev This function will create an EVM2AnyMessage struct with all the necessary information for programmable tokens transfer.\n    /// @param _receiver The address of the receiver.\n    /// @param _data The bytes data to be sent.\n    /// @param _feeTokenAddress The address of the token used for fees. Set address(0) for native gas.\n    /// @return Client.EVM2AnyMessage Returns an EVM2AnyMessage struct which contains information for sending a CCIP message.\n    function _buildCCIPMessage(\n        address _receiver,\n        bytes memory _data,\n        address _feeTokenAddress\n    ) private pure returns (Client.EVM2AnyMessage memory) {\n        return\n            Client.EVM2AnyMessage({\n                receiver: abi.encode(_receiver), // ABI-encoded receiver address\n                data: _data, // ABI-encoded string\n                tokenAmounts: new Client.EVMTokenAmount[](0), // The amount and type of token being transferred\n                extraArgs: Client._argsToBytes(\n                    // Additional arguments, setting gas limit\n                    Client.EVMExtraArgsV1({gasLimit: 2_000_000})\n                ),\n                // Set the feeToken to a feeTokenAddress, indicating specific asset will be used for fees\n                feeToken: _feeTokenAddress\n            });\n    }\n\n    /// @notice Fallback function to allow the contract to receive Ether.\n    /// @dev This function has no function body, making it a default function for receiving Ether.\n    /// It is automatically called when Ether is sent to the contract without any data.\n    receive() external payable {}\n\n    /////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////  WARP ASSETS  //////////////////////////\n    ///////////////////////////////////////////////////////////////////////\n\n    function warpAssets(\n        uint64 _destinationCCIPid,\n        address _destinationNodeAddress\n    ) external {\n        uint8 commandWarpAssets = 1;\n\n        bytes memory data = abi.encode(\n            commandWarpAssets,\n            _destinationCCIPid,\n            _destinationNodeAddress\n        );\n        validNodes[activeNode].isActiveNode = false;\n\n        _sendMessage(validNodes[activeNode].chainCCIPid, activeNode, data);\n        activeNode = address(0);\n    }\n\n    /////////////////////////////////////////////////////////////////////////\n    /////////////////////////////  WITHDRAW  ///////////////////////////////\n    ///////////////////////////////////////////////////////////////////////\n\n    function withdraw(uint256 shares) external {\n        require(validNodes[activeNode].isActiveNode, \"Node is not Active\");\n\n        require(shares <= balanceOf(msg.sender), \"Not enought balance\");\n\n        uint8 commandWitdraw = 0;\n\n        bytes memory data = abi.encode(commandWitdraw, msg.sender, shares);\n\n        _burn(msg.sender, shares);\n\n        if (validNodes[activeNode].chainCCIPid == MASTER_CONTRACT_CHAIN_ID) {\n            INode(activeNode).withdrawFromSameChain(msg.sender, shares);\n        } else {\n            _sendMessage(validNodes[activeNode].chainCCIPid, activeNode, data);\n        }\n    }\n\n    /////////////////////////////////////////////////////////////////////////\n    /////////////////////////////   UTILS   ////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////\n\n    function checkApprovedWarp(\n        address _activeNode,\n        address destinationNode\n    ) public view returns (bool) {\n        //require 24 after last warp\n        return\n            validNodes[_activeNode].isActiveNode == true &&\n            validNodes[_activeNode].lastDataFromAave > 0 &&\n            validNodes[destinationNode].lastDataFromAave > 0 &&\n            validNodes[_activeNode].lastDataFromAave + 3600 > block.timestamp &&\n            validNodes[destinationNode].lastDataFromAave + 3600 >\n            block.timestamp &&\n            validNodes[destinationNode].isValidNode == true &&\n            validNodes[destinationNode].isActiveNode == false &&\n            validNodes[_activeNode].supplyRate > 0 &&\n            validNodes[_activeNode].supplyRate <\n            validNodes[destinationNode].supplyRate;\n    }\n\n    // get ChainId from active node, only for frontend, no impact in contract\n    function getChainIdFromActiveNode() external view returns (uint64) {\n        return validNodes[activeNode].chainCCIPid;\n    }\n}\n",
  "sourceMap": "783:13869:18:-:0;;;;-1:-1:-1;;783:13869:18;-1:-1:-1;;;;;783:13869:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;783:13869:18;;;;;;:::i;:::-;;;;;-1:-1:-1;;;783:13869:18;;;;;-1:-1:-1;;;;;783:13869:18;;;;542:20:4;538:58;;602:21;;291:10:10;594:22:9;783:13869:18;;-1:-1:-1;783:13869:18;;-1:-1:-1;;;;;;783:13869:18;;;291:10:10;783:13869:18;;;;;;;-1:-1:-1;;291:10:10;783:13869:18;;;;;2042:13:0;783:13869:18;;;;;;;;;;;;;;;;-1:-1:-1;783:13869:18;;;;;;;;;;;;;;-1:-1:-1;783:13869:18;;;;;;;;;;;;;;;-1:-1:-1;;;;783:13869:18;;;;;;;;;;;;;;;;;;;;;2065:17:0;783:13869:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;783:13869:18;;;;;;;;;;;2065:17:0;783:13869:18;;;;;;;;;;;;2596:39;783:13869;;;2596:39;783:13869;;2645:52;783:13869;;;;;;;;602:21:4;783:13869:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;783:13869:18;;;;;2065:17:0;783:13869:18;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;783:13869:18;;;;;;;;;2065:17:0;783:13869:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2065:17:0;783:13869:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;783:13869:18;;;;;;;;;;;;;-1:-1:-1;;;;783:13869:18;;;;;;;;;;;;;;;;-1:-1:-1;;;783:13869:18;;;;;;;;;;;;-1:-1:-1;783:13869:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;783:13869:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;783:13869:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:13869:18;;;;;;;;;;;;;;;;;;;;;538:58:4;783:13869:18;;-1:-1:-1;;;571:25:4;;-1:-1:-1;571:25:4;;;783:13869:18;;;571:25:4;783:13869:18;-1:-1:-1;783:13869:18;;;;;;-1:-1:-1;783:13869:18;;;;;-1:-1:-1;783:13869:18;;;;;;;;;-1:-1:-1;;;;;783:13869:18;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;783:13869:18;;;;;;:::o",
  "sourcePath": "contracts/MasterNode.sol",
  "type": "contract"
}