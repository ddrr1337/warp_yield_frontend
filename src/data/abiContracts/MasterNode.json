{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_router",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_link",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "_MASTER_CONTRACT_CHAIN_ID",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nodeAddress",
          "type": "address"
        }
      ],
      "name": "DestinationNodeNotValid",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "FailedToWithdrawEth",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidReceiverAddress",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "router",
          "type": "address"
        }
      ],
      "name": "InvalidRouter",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "currentBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "calculatedFees",
          "type": "uint256"
        }
      ],
      "name": "NotEnoughBalance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NothingToWithdraw",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "SenderNotAllowed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "sourceChainSelector",
          "type": "uint64"
        }
      ],
      "name": "SourceChainNotAllowed",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferRequested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MASTER_CONTRACT_CHAIN_ID",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_resmumeOperationsFromSameChain",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "aWarpTokenMinterFromSameChain",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "activeNode",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nodeAddress",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "chainCCIPid",
          "type": "uint64"
        },
        {
          "internalType": "bool",
          "name": "isActiveNode",
          "type": "bool"
        }
      ],
      "name": "addValidNode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allowMoreNodes",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "totalUsdcSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalUsdcBorrow",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "supplyRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "addCapital",
          "type": "uint256"
        }
      ],
      "name": "calculateNewSupplyRates",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "messageId",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "sourceChainSelector",
              "type": "uint64"
            },
            {
              "internalType": "bytes",
              "name": "sender",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Client.EVMTokenAmount[]",
              "name": "destTokenAmounts",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Client.Any2EVMMessage",
          "name": "message",
          "type": "tuple"
        }
      ],
      "name": "ccipReceive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_activeNode",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "destinationNode",
          "type": "address"
        }
      ],
      "name": "checkApprovedWarp",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getChainIdFromActiveNode",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "destinationCCIPid",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "s_linkTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "routerAddress",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "getLinkFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRouter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isProtocolInTestMode",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastActiveNode",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastTimeWarped",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "totalUsdcSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalUsdcBorrow",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "supplyRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalAusdcNode",
          "type": "uint256"
        }
      ],
      "name": "nodeAaveFeedFromSameChain",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stopAddingNodes",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "validNodes",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isValidNode",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isActiveNode",
          "type": "bool"
        },
        {
          "internalType": "uint64",
          "name": "chainCCIPid",
          "type": "uint64"
        },
        {
          "internalType": "uint256",
          "name": "lastDataFromAave",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalUsdcSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalUsdcBorrow",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "supplyRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalAusdcNode",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "_destinationCCIPid",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "_destinationNodeAddress",
          "type": "address"
        }
      ],
      "name": "warpAssets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/incae/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.3/contracts/token/ERC20/ERC20.sol",
    "1": "C:/Users/incae/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.3/contracts/token/ERC20/IERC20.sol",
    "10": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/shared/access/OwnerIsCreator.sol",
    "11": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/shared/interfaces/IOwnable.sol",
    "12": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol",
    "13": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/vendor/openzeppelin-solidity/v4.8.3/contracts/utils/introspection/IERC165.sol",
    "14": "contracts/MasterNode.sol",
    "15": "contracts/utils_node/UtilsMasterNode.sol",
    "16": "interfaces/INode.sol",
    "2": "C:/Users/incae/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.3/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "3": "C:/Users/incae/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.3/contracts/utils/Context.sol",
    "4": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/ccip/applications/CCIPReceiver.sol",
    "5": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol",
    "6": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/ccip/interfaces/IRouterClient.sol",
    "7": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/ccip/libraries/Client.sol",
    "8": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/shared/access/ConfirmedOwner.sol",
    "9": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol"
  },
  "ast": {
    "absolutePath": "contracts/MasterNode.sol",
    "exportedSymbols": {
      "CCIPReceiver": [
        1677
      ],
      "Client": [
        1784
      ],
      "Context": [
        2167
      ],
      "ERC20": [
        1557
      ],
      "IERC20": [
        2120
      ],
      "IERC20Metadata": [
        2145
      ],
      "INode": [
        2042
      ],
      "IRouterClient": [
        1729
      ],
      "LinkTokenInterface": [
        1895
      ],
      "MasterNode": [
        970
      ],
      "OwnerIsCreator": [
        1800
      ],
      "UtilsMasterNode": [
        2025
      ]
    },
    "id": 971,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:14"
      },
      {
        "absolutePath": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/ccip/interfaces/IRouterClient.sol",
        "file": "@chainlink/contracts/src/v0.8/ccip/interfaces/IRouterClient.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 971,
        "sourceUnit": 1730,
        "src": "57:94:14",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2,
              "name": "IRouterClient",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1729,
              "src": "65:13:14",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/shared/access/OwnerIsCreator.sol",
        "file": "@chainlink/contracts/src/v0.8/shared/access/OwnerIsCreator.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 971,
        "sourceUnit": 1801,
        "src": "152:94:14",
        "symbolAliases": [
          {
            "foreign": {
              "id": 4,
              "name": "OwnerIsCreator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1800,
              "src": "160:14:14",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/ccip/libraries/Client.sol",
        "file": "@chainlink/contracts/src/v0.8/ccip/libraries/Client.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 971,
        "sourceUnit": 1785,
        "src": "247:79:14",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6,
              "name": "Client",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1784,
              "src": "255:6:14",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/ccip/applications/CCIPReceiver.sol",
        "file": "@chainlink/contracts/src/v0.8/ccip/applications/CCIPReceiver.sol",
        "id": 9,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 971,
        "sourceUnit": 1678,
        "src": "327:94:14",
        "symbolAliases": [
          {
            "foreign": {
              "id": 8,
              "name": "CCIPReceiver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1677,
              "src": "335:12:14",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol",
        "file": "@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol",
        "id": 11,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 971,
        "sourceUnit": 1896,
        "src": "423:106:14",
        "symbolAliases": [
          {
            "foreign": {
              "id": 10,
              "name": "LinkTokenInterface",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1895,
              "src": "431:18:14",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/incae/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.3/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 12,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 971,
        "sourceUnit": 1558,
        "src": "531:55:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/utils_node/UtilsMasterNode.sol",
        "file": "./utils_node/UtilsMasterNode.sol",
        "id": 13,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 971,
        "sourceUnit": 2026,
        "src": "587:42:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/INode.sol",
        "file": "../interfaces/INode.sol",
        "id": 14,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 971,
        "sourceUnit": 2043,
        "src": "649:33:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 16,
              "name": "CCIPReceiver",
              "nameLocations": [
                "806:12:14"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1677,
              "src": "806:12:14"
            },
            "id": 17,
            "nodeType": "InheritanceSpecifier",
            "src": "806:12:14"
          },
          {
            "baseName": {
              "id": 18,
              "name": "OwnerIsCreator",
              "nameLocations": [
                "820:14:14"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1800,
              "src": "820:14:14"
            },
            "id": 19,
            "nodeType": "InheritanceSpecifier",
            "src": "820:14:14"
          },
          {
            "baseName": {
              "id": 20,
              "name": "ERC20",
              "nameLocations": [
                "836:5:14"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1557,
              "src": "836:5:14"
            },
            "id": 21,
            "nodeType": "InheritanceSpecifier",
            "src": "836:5:14"
          },
          {
            "baseName": {
              "id": 22,
              "name": "UtilsMasterNode",
              "nameLocations": [
                "843:15:14"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2025,
              "src": "843:15:14"
            },
            "id": 23,
            "nodeType": "InheritanceSpecifier",
            "src": "843:15:14"
          }
        ],
        "canonicalName": "MasterNode",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 15,
          "nodeType": "StructuredDocumentation",
          "src": "684:99:14",
          "text": "@title - A simple messenger contract for transferring/receiving tokens and data across chains."
        },
        "fullyImplemented": true,
        "id": 970,
        "linearizedBaseContracts": [
          970,
          2025,
          1557,
          2145,
          2120,
          2167,
          1800,
          2213,
          2376,
          2392,
          1677,
          2192,
          2180
        ],
        "name": "MasterNode",
        "nameLocation": "792:10:14",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "errorSelector": "8f0f4206",
            "id": 29,
            "name": "NotEnoughBalance",
            "nameLocation": "937:16:14",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25,
                  "mutability": "mutable",
                  "name": "currentBalance",
                  "nameLocation": "962:14:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "954:22:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "954:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27,
                  "mutability": "mutable",
                  "name": "calculatedFees",
                  "nameLocation": "986:14:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "978:22:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "978:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "953:48:14"
            },
            "src": "931:71:14"
          },
          {
            "errorSelector": "d0d04f60",
            "id": 31,
            "name": "NothingToWithdraw",
            "nameLocation": "1081:17:14",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1098:2:14"
            },
            "src": "1075:26:14"
          },
          {
            "errorSelector": "9d11f563",
            "id": 39,
            "name": "FailedToWithdrawEth",
            "nameLocation": "1183:19:14",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1211:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "1203:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1203:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "1226:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "1218:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1218:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1242:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "1234:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1234:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1202:46:14"
            },
            "src": "1177:72:14"
          },
          {
            "errorSelector": "d53fef3e",
            "id": 43,
            "name": "DestinationNodeNotValid",
            "nameLocation": "1304:23:14",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41,
                  "mutability": "mutable",
                  "name": "nodeAddress",
                  "nameLocation": "1336:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "1328:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1328:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1327:21:14"
            },
            "src": "1298:51:14"
          },
          {
            "errorSelector": "213c2678",
            "id": 47,
            "name": "SourceChainNotAllowed",
            "nameLocation": "1445:21:14",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45,
                  "mutability": "mutable",
                  "name": "sourceChainSelector",
                  "nameLocation": "1474:19:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "1467:26:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1467:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1466:28:14"
            },
            "src": "1439:56:14"
          },
          {
            "errorSelector": "d0d25976",
            "id": 51,
            "name": "SenderNotAllowed",
            "nameLocation": "1584:16:14",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1609:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "1601:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1601:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1600:16:14"
            },
            "src": "1578:39:14"
          },
          {
            "errorSelector": "a05ff47e",
            "id": 53,
            "name": "InvalidReceiverAddress",
            "nameLocation": "1700:22:14",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1722:2:14"
            },
            "src": "1694:31:14"
          },
          {
            "constant": false,
            "functionSelector": "ddf85603",
            "id": 56,
            "mutability": "mutable",
            "name": "isProtocolInTestMode",
            "nameLocation": "1783:20:14",
            "nodeType": "VariableDeclaration",
            "scope": 970,
            "src": "1771:39:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 54,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1771:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "74727565",
              "id": 55,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1806:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "true"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 59,
            "mutability": "mutable",
            "name": "s_linkToken",
            "nameLocation": "1844:11:14",
            "nodeType": "VariableDeclaration",
            "scope": 970,
            "src": "1817:38:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LinkTokenInterface_$1895",
              "typeString": "contract LinkTokenInterface"
            },
            "typeName": {
              "id": 58,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 57,
                "name": "LinkTokenInterface",
                "nameLocations": [
                  "1817:18:14"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1895,
                "src": "1817:18:14"
              },
              "referencedDeclaration": 1895,
              "src": "1817:18:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LinkTokenInterface_$1895",
                "typeString": "contract LinkTokenInterface"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "8cf19d19",
            "id": 61,
            "mutability": "immutable",
            "name": "MASTER_CONTRACT_CHAIN_ID",
            "nameLocation": "1885:24:14",
            "nodeType": "VariableDeclaration",
            "scope": 970,
            "src": "1861:48:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 60,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "1861:6:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "654e8e0c",
            "id": 64,
            "mutability": "mutable",
            "name": "allowMoreNodes",
            "nameLocation": "1927:14:14",
            "nodeType": "VariableDeclaration",
            "scope": 970,
            "src": "1915:33:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 62,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1915:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "74727565",
              "id": 63,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1944:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "true"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "61ac3f99",
            "id": 66,
            "mutability": "mutable",
            "name": "lastActiveNode",
            "nameLocation": "1969:14:14",
            "nodeType": "VariableDeclaration",
            "scope": 970,
            "src": "1954:29:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 65,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1954:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6c1dc077",
            "id": 68,
            "mutability": "mutable",
            "name": "activeNode",
            "nameLocation": "2004:10:14",
            "nodeType": "VariableDeclaration",
            "scope": 970,
            "src": "1989:25:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 67,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1989:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e12b948b",
            "id": 70,
            "mutability": "mutable",
            "name": "lastTimeWarped",
            "nameLocation": "2035:14:14",
            "nodeType": "VariableDeclaration",
            "scope": 970,
            "src": "2020:29:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 69,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2020:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "MasterNode.ValidNodes",
            "id": 87,
            "members": [
              {
                "constant": false,
                "id": 72,
                "mutability": "mutable",
                "name": "isValidNode",
                "nameLocation": "2089:11:14",
                "nodeType": "VariableDeclaration",
                "scope": 87,
                "src": "2084:16:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 71,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2084:4:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 74,
                "mutability": "mutable",
                "name": "isActiveNode",
                "nameLocation": "2115:12:14",
                "nodeType": "VariableDeclaration",
                "scope": 87,
                "src": "2110:17:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 73,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2110:4:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 76,
                "mutability": "mutable",
                "name": "chainCCIPid",
                "nameLocation": "2144:11:14",
                "nodeType": "VariableDeclaration",
                "scope": 87,
                "src": "2137:18:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 75,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "2137:6:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 78,
                "mutability": "mutable",
                "name": "lastDataFromAave",
                "nameLocation": "2173:16:14",
                "nodeType": "VariableDeclaration",
                "scope": 87,
                "src": "2165:24:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 77,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2165:7:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 80,
                "mutability": "mutable",
                "name": "totalUsdcSupply",
                "nameLocation": "2207:15:14",
                "nodeType": "VariableDeclaration",
                "scope": 87,
                "src": "2199:23:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 79,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2199:7:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 82,
                "mutability": "mutable",
                "name": "totalUsdcBorrow",
                "nameLocation": "2240:15:14",
                "nodeType": "VariableDeclaration",
                "scope": 87,
                "src": "2232:23:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 81,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2232:7:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 84,
                "mutability": "mutable",
                "name": "supplyRate",
                "nameLocation": "2273:10:14",
                "nodeType": "VariableDeclaration",
                "scope": 87,
                "src": "2265:18:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 83,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2265:7:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 86,
                "mutability": "mutable",
                "name": "totalAusdcNode",
                "nameLocation": "2301:14:14",
                "nodeType": "VariableDeclaration",
                "scope": 87,
                "src": "2293:22:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 85,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2293:7:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ValidNodes",
            "nameLocation": "2063:10:14",
            "nodeType": "StructDefinition",
            "scope": 970,
            "src": "2056:266:14",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b2d92955",
            "id": 92,
            "mutability": "mutable",
            "name": "validNodes",
            "nameLocation": "2366:10:14",
            "nodeType": "VariableDeclaration",
            "scope": 970,
            "src": "2328:48:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$87_storage_$",
              "typeString": "mapping(address => struct MasterNode.ValidNodes)"
            },
            "typeName": {
              "id": 91,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 88,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2336:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2328:30:14",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$87_storage_$",
                "typeString": "mapping(address => struct MasterNode.ValidNodes)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 90,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 89,
                  "name": "ValidNodes",
                  "nameLocations": [
                    "2347:10:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 87,
                  "src": "2347:10:14"
                },
                "referencedDeclaration": 87,
                "src": "2347:10:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ValidNodes_$87_storage_ptr",
                  "typeString": "struct MasterNode.ValidNodes"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 118,
              "nodeType": "Block",
              "src": "2540:118:14",
              "statements": [
                {
                  "expression": {
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 108,
                      "name": "s_linkToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
                      "src": "2550:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LinkTokenInterface_$1895",
                        "typeString": "contract LinkTokenInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 110,
                          "name": "_link",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 96,
                          "src": "2583:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 109,
                        "name": "LinkTokenInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1895,
                        "src": "2564:18:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LinkTokenInterface_$1895_$",
                          "typeString": "type(contract LinkTokenInterface)"
                        }
                      },
                      "id": 111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2564:25:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LinkTokenInterface_$1895",
                        "typeString": "contract LinkTokenInterface"
                      }
                    },
                    "src": "2550:39:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LinkTokenInterface_$1895",
                      "typeString": "contract LinkTokenInterface"
                    }
                  },
                  "id": 113,
                  "nodeType": "ExpressionStatement",
                  "src": "2550:39:14"
                },
                {
                  "expression": {
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 114,
                      "name": "MASTER_CONTRACT_CHAIN_ID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "2599:24:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 115,
                      "name": "_MASTER_CONTRACT_CHAIN_ID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98,
                      "src": "2626:25:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "2599:52:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 117,
                  "nodeType": "ExpressionStatement",
                  "src": "2599:52:14"
                }
              ]
            },
            "id": 119,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 101,
                    "name": "_router",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 94,
                    "src": "2504:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 102,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 100,
                  "name": "CCIPReceiver",
                  "nameLocations": [
                    "2491:12:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1677,
                  "src": "2491:12:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "2491:21:14"
              },
              {
                "arguments": [
                  {
                    "hexValue": "576172705969656c64",
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2519:11:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6e5bd3a7f1ed96a77cd5f67b9871f9bbaf8246a034059514102ca756c979a0ad",
                      "typeString": "literal_string \"WarpYield\""
                    },
                    "value": "WarpYield"
                  },
                  {
                    "hexValue": "61575250",
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2532:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_5c2aa465d21b20af1889df7f97d25d68ec9b8540df778db221765393d1ff7929",
                      "typeString": "literal_string \"aWRP\""
                    },
                    "value": "aWRP"
                  }
                ],
                "id": 106,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 103,
                  "name": "ERC20",
                  "nameLocations": [
                    "2513:5:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1557,
                  "src": "2513:5:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "2513:26:14"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 94,
                  "mutability": "mutable",
                  "name": "_router",
                  "nameLocation": "2412:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "2404:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2404:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 96,
                  "mutability": "mutable",
                  "name": "_link",
                  "nameLocation": "2437:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "2429:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2429:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98,
                  "mutability": "mutable",
                  "name": "_MASTER_CONTRACT_CHAIN_ID",
                  "nameLocation": "2459:25:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "2452:32:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2452:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2394:96:14"
            },
            "returnParameters": {
              "id": 107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2540:0:14"
            },
            "scope": 970,
            "src": "2383:275:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 135,
              "nodeType": "Block",
              "src": "2709:137:14",
              "statements": [
                {
                  "condition": {
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2723:36:14",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 123,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92,
                          "src": "2724:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$87_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 125,
                        "indexExpression": {
                          "id": 124,
                          "name": "nodeAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 121,
                          "src": "2735:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2724:23:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$87_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 126,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2748:11:14",
                      "memberName": "isValidNode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72,
                      "src": "2724:35:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 133,
                  "nodeType": "IfStatement",
                  "src": "2719:110:14",
                  "trueBody": {
                    "id": 132,
                    "nodeType": "Block",
                    "src": "2761:68:14",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 129,
                              "name": "nodeAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 121,
                              "src": "2806:11:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 128,
                            "name": "DestinationNodeNotValid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "2782:23:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                              "typeString": "function (address) pure"
                            }
                          },
                          "id": 130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2782:36:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 131,
                        "nodeType": "RevertStatement",
                        "src": "2775:43:14"
                      }
                    ]
                  }
                },
                {
                  "id": 134,
                  "nodeType": "PlaceholderStatement",
                  "src": "2838:1:14"
                }
              ]
            },
            "id": 136,
            "name": "onlyValidNodes",
            "nameLocation": "2673:14:14",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 121,
                  "mutability": "mutable",
                  "name": "nodeAddress",
                  "nameLocation": "2696:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "2688:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 120,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2688:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2687:21:14"
            },
            "src": "2664:182:14",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 150,
              "nodeType": "Block",
              "src": "2888:174:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 139,
                              "name": "validNodes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 92,
                              "src": "2919:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$87_storage_$",
                                "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                              }
                            },
                            "id": 142,
                            "indexExpression": {
                              "expression": {
                                "id": 140,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2930:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 141,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2934:6:14",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2930:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2919:22:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ValidNodes_$87_storage",
                              "typeString": "struct MasterNode.ValidNodes storage ref"
                            }
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2942:11:14",
                          "memberName": "chainCCIPid",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 76,
                          "src": "2919:34:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 144,
                          "name": "MASTER_CONTRACT_CHAIN_ID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61,
                          "src": "2957:24:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "2919:62:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52657175697265206d617374657220616e64206e6f646520696e2073616d6520636861696e",
                        "id": 146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2995:39:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5f03148fc98866fc88ba0b74aa8942ff4bdb75490412a503e1b1f86ebc254af6",
                          "typeString": "literal_string \"Require master and node in same chain\""
                        },
                        "value": "Require master and node in same chain"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5f03148fc98866fc88ba0b74aa8942ff4bdb75490412a503e1b1f86ebc254af6",
                          "typeString": "literal_string \"Require master and node in same chain\""
                        }
                      ],
                      "id": 138,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2898:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2898:146:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 148,
                  "nodeType": "ExpressionStatement",
                  "src": "2898:146:14"
                },
                {
                  "id": 149,
                  "nodeType": "PlaceholderStatement",
                  "src": "3054:1:14"
                }
              ]
            },
            "id": 151,
            "name": "masterAndNodeInSameChain",
            "nameLocation": "2861:24:14",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 137,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2885:2:14"
            },
            "src": "2852:210:14",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 160,
              "nodeType": "Block",
              "src": "3114:39:14",
              "statements": [
                {
                  "expression": {
                    "id": 158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 156,
                      "name": "allowMoreNodes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "3124:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3141:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3124:22:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 159,
                  "nodeType": "ExpressionStatement",
                  "src": "3124:22:14"
                }
              ]
            },
            "functionSelector": "6c98d513",
            "id": 161,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 154,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 153,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3104:9:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2375,
                  "src": "3104:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "3104:9:14"
              }
            ],
            "name": "stopAddingNodes",
            "nameLocation": "3077:15:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 152,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3092:2:14"
            },
            "returnParameters": {
              "id": 155,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3114:0:14"
            },
            "scope": 970,
            "src": "3068:85:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 209,
              "nodeType": "Block",
              "src": "3290:356:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 173,
                        "name": "allowMoreNodes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "3308:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f206d6f7265206e6f64657320616c6c6f776564",
                        "id": 174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3324:23:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_14986cb525690d9998a9e460f0aca8b42b9aa5faddc27699fe8d3c65ad4113cd",
                          "typeString": "literal_string \"No more nodes allowed\""
                        },
                        "value": "No more nodes allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_14986cb525690d9998a9e460f0aca8b42b9aa5faddc27699fe8d3c65ad4113cd",
                          "typeString": "literal_string \"No more nodes allowed\""
                        }
                      ],
                      "id": 172,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3300:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3300:48:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 176,
                  "nodeType": "ExpressionStatement",
                  "src": "3300:48:14"
                },
                {
                  "expression": {
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 177,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92,
                          "src": "3358:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$87_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 179,
                        "indexExpression": {
                          "id": 178,
                          "name": "nodeAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 163,
                          "src": "3369:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3358:23:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$87_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 180,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3382:11:14",
                      "memberName": "isValidNode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72,
                      "src": "3358:35:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3396:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3358:42:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 183,
                  "nodeType": "ExpressionStatement",
                  "src": "3358:42:14"
                },
                {
                  "expression": {
                    "id": 189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 184,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92,
                          "src": "3410:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$87_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 186,
                        "indexExpression": {
                          "id": 185,
                          "name": "nodeAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 163,
                          "src": "3421:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3410:23:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$87_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 187,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3434:12:14",
                      "memberName": "isActiveNode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74,
                      "src": "3410:36:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 188,
                      "name": "isActiveNode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 167,
                      "src": "3449:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3410:51:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 190,
                  "nodeType": "ExpressionStatement",
                  "src": "3410:51:14"
                },
                {
                  "expression": {
                    "id": 196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 191,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92,
                          "src": "3471:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$87_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 193,
                        "indexExpression": {
                          "id": 192,
                          "name": "nodeAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 163,
                          "src": "3482:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3471:23:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$87_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 194,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3495:11:14",
                      "memberName": "chainCCIPid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 76,
                      "src": "3471:35:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 195,
                      "name": "chainCCIPid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 165,
                      "src": "3509:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "3471:49:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 197,
                  "nodeType": "ExpressionStatement",
                  "src": "3471:49:14"
                },
                {
                  "condition": {
                    "id": 198,
                    "name": "isActiveNode",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 167,
                    "src": "3535:12:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 208,
                  "nodeType": "IfStatement",
                  "src": "3531:109:14",
                  "trueBody": {
                    "id": 207,
                    "nodeType": "Block",
                    "src": "3549:91:14",
                    "statements": [
                      {
                        "expression": {
                          "id": 201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 199,
                            "name": "lastActiveNode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66,
                            "src": "3563:14:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 200,
                            "name": "nodeAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 163,
                            "src": "3580:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3563:28:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 202,
                        "nodeType": "ExpressionStatement",
                        "src": "3563:28:14"
                      },
                      {
                        "expression": {
                          "id": 205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 203,
                            "name": "activeNode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68,
                            "src": "3605:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 204,
                            "name": "nodeAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 163,
                            "src": "3618:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3605:24:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 206,
                        "nodeType": "ExpressionStatement",
                        "src": "3605:24:14"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "10a78df8",
            "id": 210,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 170,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 169,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3280:9:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2375,
                  "src": "3280:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "3280:9:14"
              }
            ],
            "name": "addValidNode",
            "nameLocation": "3168:12:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 163,
                  "mutability": "mutable",
                  "name": "nodeAddress",
                  "nameLocation": "3198:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 210,
                  "src": "3190:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3190:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 165,
                  "mutability": "mutable",
                  "name": "chainCCIPid",
                  "nameLocation": "3226:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 210,
                  "src": "3219:18:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "3219:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 167,
                  "mutability": "mutable",
                  "name": "isActiveNode",
                  "nameLocation": "3252:12:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 210,
                  "src": "3247:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 166,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3247:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3180:90:14"
            },
            "returnParameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3290:0:14"
            },
            "scope": 970,
            "src": "3159:487:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 238,
              "nodeType": "Block",
              "src": "4055:189:14",
              "statements": [
                {
                  "assignments": [
                    null,
                    217,
                    219
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 217,
                      "mutability": "mutable",
                      "name": "userAddress",
                      "nameLocation": "4076:11:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 238,
                      "src": "4068:19:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 216,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4068:7:14",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 219,
                      "mutability": "mutable",
                      "name": "shares",
                      "nameLocation": "4097:6:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 238,
                      "src": "4089:14:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 218,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4089:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 232,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 222,
                          "name": "_any2EvmMessage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 213,
                          "src": "4131:15:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Any2EVMMessage_$1749_memory_ptr",
                            "typeString": "struct Client.Any2EVMMessage memory"
                          }
                        },
                        "id": 223,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4147:4:14",
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1744,
                        "src": "4131:20:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 225,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4166:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": {
                              "id": 224,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "4166:5:14",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 227,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4173:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 226,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4173:7:14",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 229,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4182:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 228,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4182:7:14",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 230,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "4165:25:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint8_$_$_t_type$_t_address_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(uint8),type(address),type(uint256))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint8_$_$_t_type$_t_address_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(uint8),type(address),type(uint256))"
                        }
                      ],
                      "expression": {
                        "id": 220,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "4107:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "4111:6:14",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "4107:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4107:93:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_address_payable_$_t_uint256_$",
                      "typeString": "tuple(uint8,address payable,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4065:135:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 234,
                        "name": "userAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 217,
                        "src": "4217:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 235,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 219,
                        "src": "4230:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 233,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1374,
                      "src": "4211:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4211:26:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 237,
                  "nodeType": "ExpressionStatement",
                  "src": "4211:26:14"
                }
              ]
            },
            "id": 239,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_aWarpTokenMinter",
            "nameLocation": "3968:17:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 213,
                  "mutability": "mutable",
                  "name": "_any2EvmMessage",
                  "nameLocation": "4024:15:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 239,
                  "src": "3995:44:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Any2EVMMessage_$1749_memory_ptr",
                    "typeString": "struct Client.Any2EVMMessage"
                  },
                  "typeName": {
                    "id": 212,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 211,
                      "name": "Client.Any2EVMMessage",
                      "nameLocations": [
                        "3995:6:14",
                        "4002:14:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1749,
                      "src": "3995:21:14"
                    },
                    "referencedDeclaration": 1749,
                    "src": "3995:21:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Any2EVMMessage_$1749_storage_ptr",
                      "typeString": "struct Client.Any2EVMMessage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3985:60:14"
            },
            "returnParameters": {
              "id": 215,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4055:0:14"
            },
            "scope": 970,
            "src": "3959:285:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 257,
              "nodeType": "Block",
              "src": "4493:43:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 253,
                        "name": "userAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 241,
                        "src": "4509:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 254,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 243,
                        "src": "4522:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 252,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1374,
                      "src": "4503:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4503:26:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 256,
                  "nodeType": "ExpressionStatement",
                  "src": "4503:26:14"
                }
              ]
            },
            "functionSelector": "04783ea4",
            "id": 258,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 246,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 245,
                  "name": "masterAndNodeInSameChain",
                  "nameLocations": [
                    "4441:24:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 151,
                  "src": "4441:24:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "4441:24:14"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 248,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "4481:3:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4485:6:14",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "4481:10:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 250,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 247,
                  "name": "onlyValidNodes",
                  "nameLocations": [
                    "4466:14:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 136,
                  "src": "4466:14:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "4466:26:14"
              }
            ],
            "name": "aWarpTokenMinterFromSameChain",
            "nameLocation": "4343:29:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 244,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 241,
                  "mutability": "mutable",
                  "name": "userAddress",
                  "nameLocation": "4390:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 258,
                  "src": "4382:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 240,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4382:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 243,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "4419:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 258,
                  "src": "4411:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 242,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4411:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4372:59:14"
            },
            "returnParameters": {
              "id": 251,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4493:0:14"
            },
            "scope": 970,
            "src": "4334:202:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 289,
              "nodeType": "Block",
              "src": "4946:176:14",
              "statements": [
                {
                  "expression": {
                    "id": 276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 264,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92,
                          "src": "4956:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$87_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 273,
                        "indexExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 267,
                                "name": "_any2EvmMessage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 261,
                                "src": "4978:15:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Any2EVMMessage_$1749_memory_ptr",
                                  "typeString": "struct Client.Any2EVMMessage memory"
                                }
                              },
                              "id": 268,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4994:6:14",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1742,
                              "src": "4978:22:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 270,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5003:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 269,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5003:7:14",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 271,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5002:9:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            ],
                            "expression": {
                              "id": 265,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "4967:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 266,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "4971:6:14",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "4967:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4967:45:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4956:57:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$87_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 274,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "5027:12:14",
                      "memberName": "isActiveNode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74,
                      "src": "4956:83:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5042:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4956:90:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 277,
                  "nodeType": "ExpressionStatement",
                  "src": "4956:90:14"
                },
                {
                  "expression": {
                    "id": 287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 278,
                      "name": "activeNode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "5057:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 281,
                            "name": "_any2EvmMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 261,
                            "src": "5081:15:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Any2EVMMessage_$1749_memory_ptr",
                              "typeString": "struct Client.Any2EVMMessage memory"
                            }
                          },
                          "id": 282,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5097:6:14",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1742,
                          "src": "5081:22:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "components": [
                            {
                              "id": 284,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5106:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 283,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5106:7:14",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "id": 285,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "5105:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          }
                        ],
                        "expression": {
                          "id": 279,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "5070:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "5074:6:14",
                        "memberName": "decode",
                        "nodeType": "MemberAccess",
                        "src": "5070:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5070:45:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "5057:58:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 288,
                  "nodeType": "ExpressionStatement",
                  "src": "5057:58:14"
                }
              ]
            },
            "id": 290,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_resmumeOperations",
            "nameLocation": "4858:18:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 262,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 261,
                  "mutability": "mutable",
                  "name": "_any2EvmMessage",
                  "nameLocation": "4915:15:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 290,
                  "src": "4886:44:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Any2EVMMessage_$1749_memory_ptr",
                    "typeString": "struct Client.Any2EVMMessage"
                  },
                  "typeName": {
                    "id": 260,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 259,
                      "name": "Client.Any2EVMMessage",
                      "nameLocations": [
                        "4886:6:14",
                        "4893:14:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1749,
                      "src": "4886:21:14"
                    },
                    "referencedDeclaration": 1749,
                    "src": "4886:21:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Any2EVMMessage_$1749_storage_ptr",
                      "typeString": "struct Client.Any2EVMMessage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4876:60:14"
            },
            "returnParameters": {
              "id": 263,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4946:0:14"
            },
            "scope": 970,
            "src": "4849:273:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 312,
              "nodeType": "Block",
              "src": "5339:92:14",
              "statements": [
                {
                  "expression": {
                    "id": 305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 299,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92,
                          "src": "5349:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$87_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 302,
                        "indexExpression": {
                          "expression": {
                            "id": 300,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5360:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5364:6:14",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5360:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5349:22:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$87_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 303,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "5372:12:14",
                      "memberName": "isActiveNode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74,
                      "src": "5349:35:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5387:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5349:42:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 306,
                  "nodeType": "ExpressionStatement",
                  "src": "5349:42:14"
                },
                {
                  "expression": {
                    "id": 310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 307,
                      "name": "activeNode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "5401:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 308,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "5414:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5418:6:14",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5414:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5401:23:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 311,
                  "nodeType": "ExpressionStatement",
                  "src": "5401:23:14"
                }
              ]
            },
            "functionSelector": "995714ae",
            "id": 313,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 293,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 292,
                  "name": "masterAndNodeInSameChain",
                  "nameLocations": [
                    "5275:24:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 151,
                  "src": "5275:24:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "5275:24:14"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 295,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "5323:3:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "5327:6:14",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "5323:10:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 297,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 294,
                  "name": "onlyValidNodes",
                  "nameLocations": [
                    "5308:14:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 136,
                  "src": "5308:14:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "5308:26:14"
              }
            ],
            "name": "_resmumeOperationsFromSameChain",
            "nameLocation": "5216:31:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 291,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5247:2:14"
            },
            "returnParameters": {
              "id": 298,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5339:0:14"
            },
            "scope": 970,
            "src": "5207:224:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 415,
              "nodeType": "Block",
              "src": "5836:869:14",
              "statements": [
                {
                  "assignments": [
                    null,
                    320,
                    322,
                    324,
                    326
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 320,
                      "mutability": "mutable",
                      "name": "totalUsdcSupply",
                      "nameLocation": "5882:15:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 415,
                      "src": "5874:23:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 319,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5874:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 322,
                      "mutability": "mutable",
                      "name": "totalUsdcBorrow",
                      "nameLocation": "5919:15:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 415,
                      "src": "5911:23:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 321,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5911:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 324,
                      "mutability": "mutable",
                      "name": "supplyRate",
                      "nameLocation": "5956:10:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 415,
                      "src": "5948:18:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 323,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5948:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 326,
                      "mutability": "mutable",
                      "name": "totalAusdcNode",
                      "nameLocation": "5988:14:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 415,
                      "src": "5980:22:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 325,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5980:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 343,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 329,
                          "name": "_any2EvmMessage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 316,
                          "src": "6043:15:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Any2EVMMessage_$1749_memory_ptr",
                            "typeString": "struct Client.Any2EVMMessage memory"
                          }
                        },
                        "id": 330,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6059:4:14",
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1744,
                        "src": "6043:20:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 332,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6082:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": {
                              "id": 331,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "6082:5:14",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 334,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6089:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 333,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6089:7:14",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 336,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6098:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 335,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6098:7:14",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 338,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6107:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 337,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6107:7:14",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 340,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6116:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 339,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6116:7:14",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 341,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "6081:43:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint8_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(uint8),type(uint256),type(uint256),type(uint256),type(uint256))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint8_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(uint8),type(uint256),type(uint256),type(uint256),type(uint256))"
                        }
                      ],
                      "expression": {
                        "id": 327,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "6015:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 328,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "6019:6:14",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "6015:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6015:123:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint8,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5846:292:14"
                },
                {
                  "expression": {
                    "id": 357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 344,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92,
                          "src": "6149:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$87_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 353,
                        "indexExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 347,
                                "name": "_any2EvmMessage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 316,
                                "src": "6171:15:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Any2EVMMessage_$1749_memory_ptr",
                                  "typeString": "struct Client.Any2EVMMessage memory"
                                }
                              },
                              "id": 348,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6187:6:14",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1742,
                              "src": "6171:22:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 350,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6196:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 349,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6196:7:14",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 351,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "6195:9:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            ],
                            "expression": {
                              "id": 345,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "6160:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 346,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "6164:6:14",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "6160:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6160:45:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6149:57:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$87_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 354,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6220:16:14",
                      "memberName": "lastDataFromAave",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 78,
                      "src": "6149:87:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 355,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "6239:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 356,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6245:9:14",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "6239:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6149:105:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 358,
                  "nodeType": "ExpressionStatement",
                  "src": "6149:105:14"
                },
                {
                  "expression": {
                    "id": 371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 359,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92,
                          "src": "6264:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$87_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 368,
                        "indexExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 362,
                                "name": "_any2EvmMessage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 316,
                                "src": "6286:15:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Any2EVMMessage_$1749_memory_ptr",
                                  "typeString": "struct Client.Any2EVMMessage memory"
                                }
                              },
                              "id": 363,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6302:6:14",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1742,
                              "src": "6286:22:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 365,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6311:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 364,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6311:7:14",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 366,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "6310:9:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            ],
                            "expression": {
                              "id": 360,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "6275:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 361,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "6279:6:14",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "6275:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6275:45:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6264:57:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$87_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 369,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6335:15:14",
                      "memberName": "totalUsdcSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 80,
                      "src": "6264:86:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 370,
                      "name": "totalUsdcSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 320,
                      "src": "6353:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6264:104:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 372,
                  "nodeType": "ExpressionStatement",
                  "src": "6264:104:14"
                },
                {
                  "expression": {
                    "id": 385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 373,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92,
                          "src": "6378:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$87_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 382,
                        "indexExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 376,
                                "name": "_any2EvmMessage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 316,
                                "src": "6400:15:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Any2EVMMessage_$1749_memory_ptr",
                                  "typeString": "struct Client.Any2EVMMessage memory"
                                }
                              },
                              "id": 377,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6416:6:14",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1742,
                              "src": "6400:22:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 379,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6425:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 378,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6425:7:14",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 380,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "6424:9:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            ],
                            "expression": {
                              "id": 374,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "6389:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 375,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "6393:6:14",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "6389:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6389:45:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6378:57:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$87_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 383,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6449:15:14",
                      "memberName": "totalUsdcBorrow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 82,
                      "src": "6378:86:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 384,
                      "name": "totalUsdcBorrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 322,
                      "src": "6467:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6378:104:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 386,
                  "nodeType": "ExpressionStatement",
                  "src": "6378:104:14"
                },
                {
                  "expression": {
                    "id": 399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 387,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92,
                          "src": "6492:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$87_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 396,
                        "indexExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 390,
                                "name": "_any2EvmMessage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 316,
                                "src": "6514:15:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Any2EVMMessage_$1749_memory_ptr",
                                  "typeString": "struct Client.Any2EVMMessage memory"
                                }
                              },
                              "id": 391,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6530:6:14",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1742,
                              "src": "6514:22:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 393,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6539:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 392,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6539:7:14",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 394,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "6538:9:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            ],
                            "expression": {
                              "id": 388,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "6503:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 389,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "6507:6:14",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "6503:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6503:45:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6492:57:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$87_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 397,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6563:10:14",
                      "memberName": "supplyRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 84,
                      "src": "6492:81:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 398,
                      "name": "supplyRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 324,
                      "src": "6576:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6492:94:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 400,
                  "nodeType": "ExpressionStatement",
                  "src": "6492:94:14"
                },
                {
                  "expression": {
                    "id": 413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 401,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92,
                          "src": "6596:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$87_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 410,
                        "indexExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 404,
                                "name": "_any2EvmMessage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 316,
                                "src": "6618:15:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Any2EVMMessage_$1749_memory_ptr",
                                  "typeString": "struct Client.Any2EVMMessage memory"
                                }
                              },
                              "id": 405,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6634:6:14",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1742,
                              "src": "6618:22:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 407,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6643:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 406,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6643:7:14",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 408,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "6642:9:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            ],
                            "expression": {
                              "id": 402,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "6607:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 403,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "6611:6:14",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "6607:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6607:45:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6596:57:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$87_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 411,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6667:14:14",
                      "memberName": "totalAusdcNode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 86,
                      "src": "6596:85:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 412,
                      "name": "totalAusdcNode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 326,
                      "src": "6684:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6596:102:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 414,
                  "nodeType": "ExpressionStatement",
                  "src": "6596:102:14"
                }
              ]
            },
            "id": 416,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_nodeAaveFeed",
            "nameLocation": "5753:13:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 317,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 316,
                  "mutability": "mutable",
                  "name": "_any2EvmMessage",
                  "nameLocation": "5805:15:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 416,
                  "src": "5776:44:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Any2EVMMessage_$1749_memory_ptr",
                    "typeString": "struct Client.Any2EVMMessage"
                  },
                  "typeName": {
                    "id": 315,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 314,
                      "name": "Client.Any2EVMMessage",
                      "nameLocations": [
                        "5776:6:14",
                        "5783:14:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1749,
                      "src": "5776:21:14"
                    },
                    "referencedDeclaration": 1749,
                    "src": "5776:21:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Any2EVMMessage_$1749_storage_ptr",
                      "typeString": "struct Client.Any2EVMMessage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5766:60:14"
            },
            "returnParameters": {
              "id": 318,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5836:0:14"
            },
            "scope": 970,
            "src": "5744:961:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 474,
              "nodeType": "Block",
              "src": "7019:326:14",
              "statements": [
                {
                  "expression": {
                    "id": 440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 433,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92,
                          "src": "7029:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$87_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 436,
                        "indexExpression": {
                          "expression": {
                            "id": 434,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7040:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7044:6:14",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7040:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7029:22:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$87_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 437,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7052:16:14",
                      "memberName": "lastDataFromAave",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 78,
                      "src": "7029:39:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 438,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "7071:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7077:9:14",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "7071:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7029:57:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 441,
                  "nodeType": "ExpressionStatement",
                  "src": "7029:57:14"
                },
                {
                  "expression": {
                    "id": 448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 442,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92,
                          "src": "7096:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$87_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 445,
                        "indexExpression": {
                          "expression": {
                            "id": 443,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7107:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7111:6:14",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7107:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7096:22:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$87_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 446,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7119:15:14",
                      "memberName": "totalUsdcSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 80,
                      "src": "7096:38:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 447,
                      "name": "totalUsdcSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 418,
                      "src": "7137:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7096:56:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 449,
                  "nodeType": "ExpressionStatement",
                  "src": "7096:56:14"
                },
                {
                  "expression": {
                    "id": 456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 450,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92,
                          "src": "7162:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$87_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 453,
                        "indexExpression": {
                          "expression": {
                            "id": 451,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7173:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7177:6:14",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7173:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7162:22:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$87_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 454,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7185:15:14",
                      "memberName": "totalUsdcBorrow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 82,
                      "src": "7162:38:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 455,
                      "name": "totalUsdcBorrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 420,
                      "src": "7203:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7162:56:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 457,
                  "nodeType": "ExpressionStatement",
                  "src": "7162:56:14"
                },
                {
                  "expression": {
                    "id": 464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 458,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92,
                          "src": "7228:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$87_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 461,
                        "indexExpression": {
                          "expression": {
                            "id": 459,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7239:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7243:6:14",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7239:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7228:22:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$87_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 462,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7251:10:14",
                      "memberName": "supplyRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 84,
                      "src": "7228:33:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 463,
                      "name": "supplyRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 422,
                      "src": "7264:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7228:46:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 465,
                  "nodeType": "ExpressionStatement",
                  "src": "7228:46:14"
                },
                {
                  "expression": {
                    "id": 472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 466,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92,
                          "src": "7284:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$87_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 469,
                        "indexExpression": {
                          "expression": {
                            "id": 467,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7295:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7299:6:14",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7295:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7284:22:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$87_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 470,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7307:14:14",
                      "memberName": "totalAusdcNode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 86,
                      "src": "7284:37:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 471,
                      "name": "totalAusdcNode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 424,
                      "src": "7324:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7284:54:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 473,
                  "nodeType": "ExpressionStatement",
                  "src": "7284:54:14"
                }
              ]
            },
            "functionSelector": "08a767fe",
            "id": 475,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 427,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 426,
                  "name": "masterAndNodeInSameChain",
                  "nameLocations": [
                    "6967:24:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 151,
                  "src": "6967:24:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "6967:24:14"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 429,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "7007:3:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "7011:6:14",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "7007:10:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 431,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 428,
                  "name": "onlyValidNodes",
                  "nameLocations": [
                    "6992:14:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 136,
                  "src": "6992:14:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "6992:26:14"
              }
            ],
            "name": "nodeAaveFeedFromSameChain",
            "nameLocation": "6800:25:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 425,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 418,
                  "mutability": "mutable",
                  "name": "totalUsdcSupply",
                  "nameLocation": "6843:15:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 475,
                  "src": "6835:23:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 417,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6835:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 420,
                  "mutability": "mutable",
                  "name": "totalUsdcBorrow",
                  "nameLocation": "6876:15:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 475,
                  "src": "6868:23:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 419,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6868:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 422,
                  "mutability": "mutable",
                  "name": "supplyRate",
                  "nameLocation": "6909:10:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 475,
                  "src": "6901:18:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 421,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6901:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 424,
                  "mutability": "mutable",
                  "name": "totalAusdcNode",
                  "nameLocation": "6937:14:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 475,
                  "src": "6929:22:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 423,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6929:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6825:132:14"
            },
            "returnParameters": {
              "id": 432,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7019:0:14"
            },
            "scope": 970,
            "src": "6791:554:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1642
            ],
            "body": {
              "id": 530,
              "nodeType": "Block",
              "src": "8001:387:14",
              "statements": [
                {
                  "assignments": [
                    493
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 493,
                      "mutability": "mutable",
                      "name": "command",
                      "nameLocation": "8017:7:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 530,
                      "src": "8011:13:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 492,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "8011:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 497,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 495,
                        "name": "_any2EvmMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 478,
                        "src": "8050:15:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Any2EVMMessage_$1749_memory_ptr",
                          "typeString": "struct Client.Any2EVMMessage memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Any2EVMMessage_$1749_memory_ptr",
                          "typeString": "struct Client.Any2EVMMessage memory"
                        }
                      ],
                      "id": 494,
                      "name": "_internalCommandRouter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1923,
                      "src": "8027:22:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Any2EVMMessage_$1749_memory_ptr_$returns$_t_uint8_$",
                        "typeString": "function (struct Client.Any2EVMMessage memory) returns (uint8)"
                      }
                    },
                    "id": 496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8027:39:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8011:55:14"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 498,
                      "name": "command",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 493,
                      "src": "8080:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 499,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8091:1:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8080:12:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 508,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 506,
                        "name": "command",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 493,
                        "src": "8163:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8174:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "8163:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 514,
                          "name": "command",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 493,
                          "src": "8247:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8258:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "8247:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 526,
                        "nodeType": "Block",
                        "src": "8322:60:14",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "696e76616c696420636f6d6d616e642066726f6d204e6f6465",
                                  "id": 523,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8343:27:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_5ae3160618806915eb95e7eff27bdd789150f31a91a3a3ee805c28ae74beda69",
                                    "typeString": "literal_string \"invalid command from Node\""
                                  },
                                  "value": "invalid command from Node"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_5ae3160618806915eb95e7eff27bdd789150f31a91a3a3ee805c28ae74beda69",
                                    "typeString": "literal_string \"invalid command from Node\""
                                  }
                                ],
                                "id": 522,
                                "name": "revert",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -19,
                                  -19
                                ],
                                "referencedDeclaration": -19,
                                "src": "8336:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (string memory) pure"
                                }
                              },
                              "id": 524,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8336:35:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 525,
                            "nodeType": "ExpressionStatement",
                            "src": "8336:35:14"
                          }
                        ]
                      },
                      "id": 527,
                      "nodeType": "IfStatement",
                      "src": "8243:139:14",
                      "trueBody": {
                        "id": 521,
                        "nodeType": "Block",
                        "src": "8261:55:14",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 518,
                                  "name": "_any2EvmMessage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 478,
                                  "src": "8289:15:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Any2EVMMessage_$1749_memory_ptr",
                                    "typeString": "struct Client.Any2EVMMessage memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_struct$_Any2EVMMessage_$1749_memory_ptr",
                                    "typeString": "struct Client.Any2EVMMessage memory"
                                  }
                                ],
                                "id": 517,
                                "name": "_nodeAaveFeed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 416,
                                "src": "8275:13:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Any2EVMMessage_$1749_memory_ptr_$returns$__$",
                                  "typeString": "function (struct Client.Any2EVMMessage memory)"
                                }
                              },
                              "id": 519,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8275:30:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 520,
                            "nodeType": "ExpressionStatement",
                            "src": "8275:30:14"
                          }
                        ]
                      }
                    },
                    "id": 528,
                    "nodeType": "IfStatement",
                    "src": "8159:223:14",
                    "trueBody": {
                      "id": 513,
                      "nodeType": "Block",
                      "src": "8177:60:14",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 510,
                                "name": "_any2EvmMessage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 478,
                                "src": "8210:15:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Any2EVMMessage_$1749_memory_ptr",
                                  "typeString": "struct Client.Any2EVMMessage memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Any2EVMMessage_$1749_memory_ptr",
                                  "typeString": "struct Client.Any2EVMMessage memory"
                                }
                              ],
                              "id": 509,
                              "name": "_resmumeOperations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 290,
                              "src": "8191:18:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Any2EVMMessage_$1749_memory_ptr_$returns$__$",
                                "typeString": "function (struct Client.Any2EVMMessage memory)"
                              }
                            },
                            "id": 511,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8191:35:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 512,
                          "nodeType": "ExpressionStatement",
                          "src": "8191:35:14"
                        }
                      ]
                    }
                  },
                  "id": 529,
                  "nodeType": "IfStatement",
                  "src": "8076:306:14",
                  "trueBody": {
                    "id": 505,
                    "nodeType": "Block",
                    "src": "8094:59:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 502,
                              "name": "_any2EvmMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 478,
                              "src": "8126:15:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Any2EVMMessage_$1749_memory_ptr",
                                "typeString": "struct Client.Any2EVMMessage memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Any2EVMMessage_$1749_memory_ptr",
                                "typeString": "struct Client.Any2EVMMessage memory"
                              }
                            ],
                            "id": 501,
                            "name": "_aWarpTokenMinter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 239,
                            "src": "8108:17:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Any2EVMMessage_$1749_memory_ptr_$returns$__$",
                              "typeString": "function (struct Client.Any2EVMMessage memory)"
                            }
                          },
                          "id": 503,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8108:34:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 504,
                        "nodeType": "ExpressionStatement",
                        "src": "8108:34:14"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 531,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "expression": {
                          "id": 484,
                          "name": "_any2EvmMessage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 478,
                          "src": "7961:15:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Any2EVMMessage_$1749_memory_ptr",
                            "typeString": "struct Client.Any2EVMMessage memory"
                          }
                        },
                        "id": 485,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7977:6:14",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1742,
                        "src": "7961:22:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 487,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7986:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 486,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7986:7:14",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 488,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "7985:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        }
                      ],
                      "expression": {
                        "id": 482,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "7950:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 483,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "7954:6:14",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "7950:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7950:45:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 490,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 481,
                  "name": "onlyValidNodes",
                  "nameLocations": [
                    "7935:14:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 136,
                  "src": "7935:14:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "7935:61:14"
              }
            ],
            "name": "_ccipReceive",
            "nameLocation": "7820:12:14",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 480,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7918:8:14"
            },
            "parameters": {
              "id": 479,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 478,
                  "mutability": "mutable",
                  "name": "_any2EvmMessage",
                  "nameLocation": "7871:15:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 531,
                  "src": "7842:44:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Any2EVMMessage_$1749_memory_ptr",
                    "typeString": "struct Client.Any2EVMMessage"
                  },
                  "typeName": {
                    "id": 477,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 476,
                      "name": "Client.Any2EVMMessage",
                      "nameLocations": [
                        "7842:6:14",
                        "7849:14:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1749,
                      "src": "7842:21:14"
                    },
                    "referencedDeclaration": 1749,
                    "src": "7842:21:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Any2EVMMessage_$1749_storage_ptr",
                      "typeString": "struct Client.Any2EVMMessage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7832:60:14"
            },
            "returnParameters": {
              "id": 491,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8001:0:14"
            },
            "scope": 970,
            "src": "7811:577:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 631,
              "nodeType": "Block",
              "src": "8963:1287:14",
              "statements": [
                {
                  "assignments": [
                    549
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 549,
                      "mutability": "mutable",
                      "name": "evm2AnyMessage",
                      "nameLocation": "9174:14:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 631,
                      "src": "9145:43:14",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EVM2AnyMessage_$1762_memory_ptr",
                        "typeString": "struct Client.EVM2AnyMessage"
                      },
                      "typeName": {
                        "id": 548,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 547,
                          "name": "Client.EVM2AnyMessage",
                          "nameLocations": [
                            "9145:6:14",
                            "9152:14:14"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1762,
                          "src": "9145:21:14"
                        },
                        "referencedDeclaration": 1762,
                        "src": "9145:21:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EVM2AnyMessage_$1762_storage_ptr",
                          "typeString": "struct Client.EVM2AnyMessage"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 558,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 551,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 535,
                        "src": "9222:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 552,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 537,
                        "src": "9245:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 555,
                            "name": "s_linkToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59,
                            "src": "9272:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LinkTokenInterface_$1895",
                              "typeString": "contract LinkTokenInterface"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LinkTokenInterface_$1895",
                              "typeString": "contract LinkTokenInterface"
                            }
                          ],
                          "id": 554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9264:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 553,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9264:7:14",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9264:20:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 550,
                      "name": "_buildCCIPMessage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 669,
                      "src": "9191:17:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$_t_address_$returns$_t_struct$_EVM2AnyMessage_$1762_memory_ptr_$",
                        "typeString": "function (address,bytes memory,address) pure returns (struct Client.EVM2AnyMessage memory)"
                      }
                    },
                    "id": 557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9191:103:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EVM2AnyMessage_$1762_memory_ptr",
                      "typeString": "struct Client.EVM2AnyMessage memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9145:149:14"
                },
                {
                  "assignments": [
                    561
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 561,
                      "mutability": "mutable",
                      "name": "router",
                      "nameLocation": "9402:6:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 631,
                      "src": "9388:20:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRouterClient_$1729",
                        "typeString": "contract IRouterClient"
                      },
                      "typeName": {
                        "id": 560,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 559,
                          "name": "IRouterClient",
                          "nameLocations": [
                            "9388:13:14"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1729,
                          "src": "9388:13:14"
                        },
                        "referencedDeclaration": 1729,
                        "src": "9388:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRouterClient_$1729",
                          "typeString": "contract IRouterClient"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 567,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 563,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "9425:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MasterNode_$970",
                              "typeString": "contract MasterNode"
                            }
                          },
                          "id": 564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9430:9:14",
                          "memberName": "getRouter",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1654,
                          "src": "9425:14:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9425:16:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 562,
                      "name": "IRouterClient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1729,
                      "src": "9411:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IRouterClient_$1729_$",
                        "typeString": "type(contract IRouterClient)"
                      }
                    },
                    "id": 566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9411:31:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRouterClient_$1729",
                      "typeString": "contract IRouterClient"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9388:54:14"
                },
                {
                  "assignments": [
                    569
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 569,
                      "mutability": "mutable",
                      "name": "fees",
                      "nameLocation": "9518:4:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 631,
                      "src": "9510:12:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 568,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9510:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 575,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 572,
                        "name": "_destinationChainSelector",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 533,
                        "src": "9539:25:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 573,
                        "name": "evm2AnyMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 549,
                        "src": "9566:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EVM2AnyMessage_$1762_memory_ptr",
                          "typeString": "struct Client.EVM2AnyMessage memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_struct$_EVM2AnyMessage_$1762_memory_ptr",
                          "typeString": "struct Client.EVM2AnyMessage memory"
                        }
                      ],
                      "expression": {
                        "id": 570,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 561,
                        "src": "9525:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRouterClient_$1729",
                          "typeString": "contract IRouterClient"
                        }
                      },
                      "id": 571,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9532:6:14",
                      "memberName": "getFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1717,
                      "src": "9525:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint64_$_t_struct$_EVM2AnyMessage_$1762_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint64,struct Client.EVM2AnyMessage memory) view external returns (uint256)"
                      }
                    },
                    "id": 574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9525:56:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9510:71:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 579,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "9638:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 580,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9642:6:14",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "9638:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 583,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "9658:4:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MasterNode_$970",
                                  "typeString": "contract MasterNode"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MasterNode_$970",
                                  "typeString": "contract MasterNode"
                                }
                              ],
                              "id": 582,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9650:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 581,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9650:7:14",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 584,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9650:13:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 585,
                            "name": "fees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 569,
                            "src": "9665:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 577,
                            "name": "s_linkToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59,
                            "src": "9613:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LinkTokenInterface_$1895",
                              "typeString": "contract LinkTokenInterface"
                            }
                          },
                          "id": 578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9625:12:14",
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1894,
                          "src": "9613:24:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9613:57:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f742070726f7669646564204c696e6b20666f722066656573",
                        "id": 587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9684:28:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_afb0688769ed3833a956fba5ec2b64712f3f707f42b0b0fcc105794bfc66fab0",
                          "typeString": "literal_string \"Not provided Link for fees\""
                        },
                        "value": "Not provided Link for fees"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_afb0688769ed3833a956fba5ec2b64712f3f707f42b0b0fcc105794bfc66fab0",
                          "typeString": "literal_string \"Not provided Link for fees\""
                        }
                      ],
                      "id": 576,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9592:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9592:130:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 589,
                  "nodeType": "ExpressionStatement",
                  "src": "9592:130:14"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 590,
                      "name": "fees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 569,
                      "src": "9737:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 595,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "9774:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MasterNode_$970",
                                "typeString": "contract MasterNode"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MasterNode_$970",
                                "typeString": "contract MasterNode"
                              }
                            ],
                            "id": 594,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9766:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 593,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9766:7:14",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9766:13:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 591,
                          "name": "s_linkToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59,
                          "src": "9744:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LinkTokenInterface_$1895",
                            "typeString": "contract LinkTokenInterface"
                          }
                        },
                        "id": 592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9756:9:14",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1827,
                        "src": "9744:21:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 597,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9744:36:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9737:43:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 610,
                  "nodeType": "IfStatement",
                  "src": "9733:128:14",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 604,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "9848:4:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MasterNode_$970",
                                    "typeString": "contract MasterNode"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MasterNode_$970",
                                    "typeString": "contract MasterNode"
                                  }
                                ],
                                "id": 603,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9840:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 602,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9840:7:14",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 605,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9840:13:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 600,
                              "name": "s_linkToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59,
                              "src": "9818:11:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LinkTokenInterface_$1895",
                                "typeString": "contract LinkTokenInterface"
                              }
                            },
                            "id": 601,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9830:9:14",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1827,
                            "src": "9818:21:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9818:36:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 607,
                          "name": "fees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 569,
                          "src": "9856:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 599,
                        "name": "NotEnoughBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "9801:16:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                          "typeString": "function (uint256,uint256) pure"
                        }
                      },
                      "id": 608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9801:60:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 609,
                    "nodeType": "RevertStatement",
                    "src": "9794:67:14"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 616,
                            "name": "router",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 561,
                            "src": "10007:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IRouterClient_$1729",
                              "typeString": "contract IRouterClient"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IRouterClient_$1729",
                              "typeString": "contract IRouterClient"
                            }
                          ],
                          "id": 615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9999:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 614,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9999:7:14",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9999:15:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 618,
                        "name": "fees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 569,
                        "src": "10016:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 611,
                        "name": "s_linkToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "9979:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LinkTokenInterface_$1895",
                          "typeString": "contract LinkTokenInterface"
                        }
                      },
                      "id": 613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9991:7:14",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1820,
                      "src": "9979:19:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9979:42:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 620,
                  "nodeType": "ExpressionStatement",
                  "src": "9979:42:14"
                },
                {
                  "expression": {
                    "id": 627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 621,
                      "name": "messageId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 543,
                      "src": "10113:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 624,
                          "name": "_destinationChainSelector",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 533,
                          "src": "10141:25:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        {
                          "id": 625,
                          "name": "evm2AnyMessage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 549,
                          "src": "10168:14:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_EVM2AnyMessage_$1762_memory_ptr",
                            "typeString": "struct Client.EVM2AnyMessage memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          {
                            "typeIdentifier": "t_struct$_EVM2AnyMessage_$1762_memory_ptr",
                            "typeString": "struct Client.EVM2AnyMessage memory"
                          }
                        ],
                        "expression": {
                          "id": 622,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 561,
                          "src": "10125:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IRouterClient_$1729",
                            "typeString": "contract IRouterClient"
                          }
                        },
                        "id": 623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10132:8:14",
                        "memberName": "ccipSend",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1728,
                        "src": "10125:15:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint64_$_t_struct$_EVM2AnyMessage_$1762_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (uint64,struct Client.EVM2AnyMessage memory) payable external returns (bytes32)"
                        }
                      },
                      "id": 626,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10125:58:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "10113:70:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 628,
                  "nodeType": "ExpressionStatement",
                  "src": "10113:70:14"
                },
                {
                  "expression": {
                    "id": 629,
                    "name": "messageId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 543,
                    "src": "10234:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 544,
                  "id": 630,
                  "nodeType": "Return",
                  "src": "10227:16:14"
                }
              ]
            },
            "id": 632,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 540,
                    "name": "_receiver",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 535,
                    "src": "8924:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 541,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 539,
                  "name": "onlyValidNodes",
                  "nameLocations": [
                    "8909:14:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 136,
                  "src": "8909:14:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "8909:25:14"
              }
            ],
            "name": "_sendMessage",
            "nameLocation": "8784:12:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 538,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 533,
                  "mutability": "mutable",
                  "name": "_destinationChainSelector",
                  "nameLocation": "8813:25:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 632,
                  "src": "8806:32:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 532,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "8806:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 535,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "8856:9:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 632,
                  "src": "8848:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 534,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8848:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 537,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "8888:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 632,
                  "src": "8875:18:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 536,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8875:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8796:103:14"
            },
            "returnParameters": {
              "id": 544,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 543,
                  "mutability": "mutable",
                  "name": "messageId",
                  "nameLocation": "8952:9:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 632,
                  "src": "8944:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 542,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8944:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8943:19:14"
            },
            "scope": 970,
            "src": "8775:1475:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 668,
              "nodeType": "Block",
              "src": "10936:662:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 649,
                            "name": "_receiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 635,
                            "src": "11026:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 647,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "11015:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "11019:6:14",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "11015:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11015:21:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 651,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 637,
                        "src": "11092:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 656,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11179:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "11151:27:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_EVMTokenAmount_$1736_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (struct Client.EVMTokenAmount memory[] memory)"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 653,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 652,
                                "name": "Client.EVMTokenAmount",
                                "nameLocations": [
                                  "11155:6:14",
                                  "11162:14:14"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1736,
                                "src": "11155:21:14"
                              },
                              "referencedDeclaration": 1736,
                              "src": "11155:21:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_EVMTokenAmount_$1736_storage_ptr",
                                "typeString": "struct Client.EVMTokenAmount"
                              }
                            },
                            "id": 654,
                            "nodeType": "ArrayTypeName",
                            "src": "11155:23:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$1736_storage_$dyn_storage_ptr",
                              "typeString": "struct Client.EVMTokenAmount[]"
                            }
                          }
                        },
                        "id": 657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11151:30:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$1736_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Client.EVMTokenAmount memory[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "325f3030305f303030",
                                "id": 662,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11397:9:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2000000_by_1",
                                  "typeString": "int_const 2000000"
                                },
                                "value": "2_000_000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_2000000_by_1",
                                  "typeString": "int_const 2000000"
                                }
                              ],
                              "expression": {
                                "id": 660,
                                "name": "Client",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1784,
                                "src": "11364:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Client_$1784_$",
                                  "typeString": "type(library Client)"
                                }
                              },
                              "id": 661,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11371:14:14",
                              "memberName": "EVMExtraArgsV1",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1768,
                              "src": "11364:21:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_EVMExtraArgsV1_$1768_storage_ptr_$",
                                "typeString": "type(struct Client.EVMExtraArgsV1 storage pointer)"
                              }
                            },
                            "id": 663,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [
                              "11387:8:14"
                            ],
                            "names": [
                              "gasLimit"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "11364:44:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_EVMExtraArgsV1_$1768_memory_ptr",
                              "typeString": "struct Client.EVMExtraArgsV1 memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_EVMExtraArgsV1_$1768_memory_ptr",
                              "typeString": "struct Client.EVMExtraArgsV1 memory"
                            }
                          ],
                          "expression": {
                            "id": 658,
                            "name": "Client",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1784,
                            "src": "11260:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Client_$1784_$",
                              "typeString": "type(library Client)"
                            }
                          },
                          "id": 659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11267:12:14",
                          "memberName": "_argsToBytes",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1783,
                          "src": "11260:19:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_EVMExtraArgsV1_$1768_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (struct Client.EVMExtraArgsV1 memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11260:166:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 665,
                        "name": "_feeTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 639,
                        "src": "11560:16:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$1736_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Client.EVMTokenAmount memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 645,
                        "name": "Client",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1784,
                        "src": "10965:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Client_$1784_$",
                          "typeString": "type(library Client)"
                        }
                      },
                      "id": 646,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10972:14:14",
                      "memberName": "EVM2AnyMessage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1762,
                      "src": "10965:21:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_EVM2AnyMessage_$1762_storage_ptr_$",
                        "typeString": "type(struct Client.EVM2AnyMessage storage pointer)"
                      }
                    },
                    "id": 666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "11005:8:14",
                      "11086:4:14",
                      "11137:12:14",
                      "11249:9:14",
                      "11550:8:14"
                    ],
                    "names": [
                      "receiver",
                      "data",
                      "tokenAmounts",
                      "extraArgs",
                      "feeToken"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "10965:626:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EVM2AnyMessage_$1762_memory_ptr",
                      "typeString": "struct Client.EVM2AnyMessage memory"
                    }
                  },
                  "functionReturnParameters": 644,
                  "id": 667,
                  "nodeType": "Return",
                  "src": "10946:645:14"
                }
              ]
            },
            "documentation": {
              "id": 633,
              "nodeType": "StructuredDocumentation",
              "src": "10256:501:14",
              "text": "@notice Construct a CCIP message.\n @dev This function will create an EVM2AnyMessage struct with all the necessary information for programmable tokens transfer.\n @param _receiver The address of the receiver.\n @param _data The bytes data to be sent.\n @param _feeTokenAddress The address of the token used for fees. Set address(0) for native gas.\n @return Client.EVM2AnyMessage Returns an EVM2AnyMessage struct which contains information for sending a CCIP message."
            },
            "id": 669,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_buildCCIPMessage",
            "nameLocation": "10771:17:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 640,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 635,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "10806:9:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 669,
                  "src": "10798:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 634,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10798:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 637,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "10838:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 669,
                  "src": "10825:18:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 636,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10825:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 639,
                  "mutability": "mutable",
                  "name": "_feeTokenAddress",
                  "nameLocation": "10861:16:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 669,
                  "src": "10853:24:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 638,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10853:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10788:95:14"
            },
            "returnParameters": {
              "id": 644,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 643,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 669,
                  "src": "10906:28:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_EVM2AnyMessage_$1762_memory_ptr",
                    "typeString": "struct Client.EVM2AnyMessage"
                  },
                  "typeName": {
                    "id": 642,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 641,
                      "name": "Client.EVM2AnyMessage",
                      "nameLocations": [
                        "10906:6:14",
                        "10913:14:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1762,
                      "src": "10906:21:14"
                    },
                    "referencedDeclaration": 1762,
                    "src": "10906:21:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EVM2AnyMessage_$1762_storage_ptr",
                      "typeString": "struct Client.EVM2AnyMessage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10905:30:14"
            },
            "scope": 970,
            "src": "10762:836:14",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 673,
              "nodeType": "Block",
              "src": "11892:2:14",
              "statements": []
            },
            "documentation": {
              "id": 670,
              "nodeType": "StructuredDocumentation",
              "src": "11604:256:14",
              "text": "@notice Fallback function to allow the contract to receive Ether.\n @dev This function has no function body, making it a default function for receiving Ether.\n It is automatically called when Ether is sent to the contract without any data."
            },
            "id": 674,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 671,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11872:2:14"
            },
            "returnParameters": {
              "id": 672,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11892:0:14"
            },
            "scope": 970,
            "src": "11865:29:14",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 763,
              "nodeType": "Block",
              "src": "12243:1080:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 682,
                            "name": "validNodes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 92,
                            "src": "12274:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$87_storage_$",
                              "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                            }
                          },
                          "id": 684,
                          "indexExpression": {
                            "id": 683,
                            "name": "_destinationNodeAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 678,
                            "src": "12285:23:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12274:35:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ValidNodes_$87_storage",
                            "typeString": "struct MasterNode.ValidNodes storage ref"
                          }
                        },
                        "id": 685,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12310:11:14",
                        "memberName": "isValidNode",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 72,
                        "src": "12274:47:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "44657374696e6174696f6e204e6f6465206973206e6f74207661696c64",
                        "id": 686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12335:31:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b414758b125486fc8ed6ba85f765624ef198cd04669cbe6ffb0971f2edf95c73",
                          "typeString": "literal_string \"Destination Node is not vaild\""
                        },
                        "value": "Destination Node is not vaild"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b414758b125486fc8ed6ba85f765624ef198cd04669cbe6ffb0971f2edf95c73",
                          "typeString": "literal_string \"Destination Node is not vaild\""
                        }
                      ],
                      "id": 681,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12253:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12253:123:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 688,
                  "nodeType": "ExpressionStatement",
                  "src": "12253:123:14"
                },
                {
                  "condition": {
                    "id": 690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "12445:21:14",
                    "subExpression": {
                      "id": 689,
                      "name": "isProtocolInTestMode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "12446:20:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 700,
                  "nodeType": "IfStatement",
                  "src": "12441:190:14",
                  "trueBody": {
                    "id": 699,
                    "nodeType": "Block",
                    "src": "12468:163:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 693,
                                  "name": "activeNode",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 68,
                                  "src": "12525:10:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 694,
                                  "name": "_destinationNodeAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 678,
                                  "src": "12537:23:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 692,
                                "name": "checkApprovedWarp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 945,
                                "src": "12507:17:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address,address) view returns (bool)"
                                }
                              },
                              "id": 695,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12507:54:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "436f6e646974696f6e20746f2077617270206e6f74206d6574",
                              "id": 696,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12579:27:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f70ce457302d2edbd68a4c1955414d27cfaaadb35a052a336e2e0cc2fd2c2238",
                                "typeString": "literal_string \"Condition to warp not met\""
                              },
                              "value": "Condition to warp not met"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f70ce457302d2edbd68a4c1955414d27cfaaadb35a052a336e2e0cc2fd2c2238",
                                "typeString": "literal_string \"Condition to warp not met\""
                              }
                            ],
                            "id": 691,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "12482:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12482:138:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 698,
                        "nodeType": "ExpressionStatement",
                        "src": "12482:138:14"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    702
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 702,
                      "mutability": "mutable",
                      "name": "commandWarpAssets",
                      "nameLocation": "12646:17:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 763,
                      "src": "12640:23:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 701,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "12640:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 704,
                  "initialValue": {
                    "hexValue": "31",
                    "id": 703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12666:1:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12640:27:14"
                },
                {
                  "assignments": [
                    706
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 706,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "12691:4:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 763,
                      "src": "12678:17:14",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 705,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "12678:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 713,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 709,
                        "name": "commandWarpAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 702,
                        "src": "12722:17:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 710,
                        "name": "_destinationCCIPid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 676,
                        "src": "12753:18:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 711,
                        "name": "_destinationNodeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 678,
                        "src": "12785:23:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 707,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "12698:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 708,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "12702:6:14",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "12698:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12698:120:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12678:140:14"
                },
                {
                  "expression": {
                    "id": 719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 714,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92,
                          "src": "12828:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$87_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 716,
                        "indexExpression": {
                          "id": 715,
                          "name": "activeNode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68,
                          "src": "12839:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12828:22:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$87_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 717,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "12851:12:14",
                      "memberName": "isActiveNode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74,
                      "src": "12828:35:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 718,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12866:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "12828:43:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 720,
                  "nodeType": "ExpressionStatement",
                  "src": "12828:43:14"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    },
                    "id": 726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 721,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92,
                          "src": "12886:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$87_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 723,
                        "indexExpression": {
                          "id": 722,
                          "name": "activeNode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68,
                          "src": "12897:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12886:22:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$87_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 724,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12909:11:14",
                      "memberName": "chainCCIPid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 76,
                      "src": "12886:34:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 725,
                      "name": "MASTER_CONTRACT_CHAIN_ID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "12924:24:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "12886:62:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 745,
                    "nodeType": "Block",
                    "src": "13113:91:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 737,
                                  "name": "validNodes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 92,
                                  "src": "13140:10:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$87_storage_$",
                                    "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                                  }
                                },
                                "id": 739,
                                "indexExpression": {
                                  "id": 738,
                                  "name": "activeNode",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 68,
                                  "src": "13151:10:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "13140:22:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ValidNodes_$87_storage",
                                  "typeString": "struct MasterNode.ValidNodes storage ref"
                                }
                              },
                              "id": 740,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13163:11:14",
                              "memberName": "chainCCIPid",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 76,
                              "src": "13140:34:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            {
                              "id": 741,
                              "name": "activeNode",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68,
                              "src": "13176:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 742,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 706,
                              "src": "13188:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 736,
                            "name": "_sendMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 632,
                            "src": "13127:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint64_$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (uint64,address,bytes memory) returns (bytes32)"
                            }
                          },
                          "id": 743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13127:66:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 744,
                        "nodeType": "ExpressionStatement",
                        "src": "13127:66:14"
                      }
                    ]
                  },
                  "id": 746,
                  "nodeType": "IfStatement",
                  "src": "12882:322:14",
                  "trueBody": {
                    "id": 735,
                    "nodeType": "Block",
                    "src": "12950:157:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 731,
                              "name": "_destinationCCIPid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 676,
                              "src": "13023:18:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            {
                              "id": 732,
                              "name": "_destinationNodeAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 678,
                              "src": "13059:23:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 728,
                                  "name": "activeNode",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 68,
                                  "src": "12970:10:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 727,
                                "name": "INode",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2042,
                                "src": "12964:5:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_INode_$2042_$",
                                  "typeString": "type(contract INode)"
                                }
                              },
                              "id": 729,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12964:17:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_INode_$2042",
                                "typeString": "contract INode"
                              }
                            },
                            "id": 730,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12982:23:14",
                            "memberName": "warpAssetsFromSameChain",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2041,
                            "src": "12964:41:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint64_$_t_address_$returns$__$",
                              "typeString": "function (uint64,address) external"
                            }
                          },
                          "id": 733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12964:132:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 734,
                        "nodeType": "ExpressionStatement",
                        "src": "12964:132:14"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 747,
                      "name": "lastActiveNode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "13214:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 748,
                      "name": "activeNode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "13231:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13214:27:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 750,
                  "nodeType": "ExpressionStatement",
                  "src": "13214:27:14"
                },
                {
                  "expression": {
                    "id": 756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 751,
                      "name": "activeNode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "13251:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13272:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "13264:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 752,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13264:7:14",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 755,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13264:10:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13251:23:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 757,
                  "nodeType": "ExpressionStatement",
                  "src": "13251:23:14"
                },
                {
                  "expression": {
                    "id": 761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 758,
                      "name": "lastTimeWarped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "13284:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 759,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "13301:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 760,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13307:9:14",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "13301:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13284:32:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 762,
                  "nodeType": "ExpressionStatement",
                  "src": "13284:32:14"
                }
              ]
            },
            "functionSelector": "5c292be5",
            "id": 764,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "warpAssets",
            "nameLocation": "12141:10:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 679,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 676,
                  "mutability": "mutable",
                  "name": "_destinationCCIPid",
                  "nameLocation": "12168:18:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 764,
                  "src": "12161:25:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 675,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "12161:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 678,
                  "mutability": "mutable",
                  "name": "_destinationNodeAddress",
                  "nameLocation": "12204:23:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 764,
                  "src": "12196:31:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 677,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12196:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12151:82:14"
            },
            "returnParameters": {
              "id": 680,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12243:0:14"
            },
            "scope": 970,
            "src": "12132:1191:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 834,
              "nodeType": "Block",
              "src": "13604:564:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 770,
                            "name": "validNodes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 92,
                            "src": "13622:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$87_storage_$",
                              "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                            }
                          },
                          "id": 772,
                          "indexExpression": {
                            "id": 771,
                            "name": "activeNode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68,
                            "src": "13633:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13622:22:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ValidNodes_$87_storage",
                            "typeString": "struct MasterNode.ValidNodes storage ref"
                          }
                        },
                        "id": 773,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13645:12:14",
                        "memberName": "isActiveNode",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 74,
                        "src": "13622:35:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f6465206973206e6f7420416374697665",
                        "id": 774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13659:20:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_036926b7eb2047bdf695035566f1e9989601a3dea1b4917f558eca27485e05b9",
                          "typeString": "literal_string \"Node is not Active\""
                        },
                        "value": "Node is not Active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_036926b7eb2047bdf695035566f1e9989601a3dea1b4917f558eca27485e05b9",
                          "typeString": "literal_string \"Node is not Active\""
                        }
                      ],
                      "id": 769,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13614:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13614:66:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 776,
                  "nodeType": "ExpressionStatement",
                  "src": "13614:66:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 778,
                          "name": "shares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 766,
                          "src": "13699:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 780,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "13719:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 781,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13723:6:14",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "13719:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 779,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1069,
                            "src": "13709:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13709:21:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13699:31:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f756768742062616c616e6365",
                        "id": 784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13732:21:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8b745e1e49bc3a21dc0e85a5fcefdac1a659905f53d03b0cfc0a9455e9c5156d",
                          "typeString": "literal_string \"Not enought balance\""
                        },
                        "value": "Not enought balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8b745e1e49bc3a21dc0e85a5fcefdac1a659905f53d03b0cfc0a9455e9c5156d",
                          "typeString": "literal_string \"Not enought balance\""
                        }
                      ],
                      "id": 777,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13691:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13691:63:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 786,
                  "nodeType": "ExpressionStatement",
                  "src": "13691:63:14"
                },
                {
                  "assignments": [
                    788
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 788,
                      "mutability": "mutable",
                      "name": "commandWitdraw",
                      "nameLocation": "13771:14:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 834,
                      "src": "13765:20:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 787,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "13765:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 790,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "13788:1:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13765:24:14"
                },
                {
                  "assignments": [
                    792
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 792,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "13813:4:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 834,
                      "src": "13800:17:14",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 791,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "13800:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 800,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 795,
                        "name": "commandWitdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 788,
                        "src": "13831:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "expression": {
                          "id": 796,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "13847:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13851:6:14",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "13847:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 798,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 766,
                        "src": "13859:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 793,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "13820:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 794,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "13824:6:14",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "13820:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13820:46:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13800:66:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 802,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "13883:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13887:6:14",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "13883:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 804,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 766,
                        "src": "13895:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 801,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1446,
                      "src": "13877:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13877:25:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 806,
                  "nodeType": "ExpressionStatement",
                  "src": "13877:25:14"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    },
                    "id": 812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 807,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92,
                          "src": "13917:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$87_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 809,
                        "indexExpression": {
                          "id": 808,
                          "name": "activeNode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68,
                          "src": "13928:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13917:22:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$87_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 810,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13940:11:14",
                      "memberName": "chainCCIPid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 76,
                      "src": "13917:34:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 811,
                      "name": "MASTER_CONTRACT_CHAIN_ID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "13955:24:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "13917:62:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 832,
                    "nodeType": "Block",
                    "src": "14071:91:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 824,
                                  "name": "validNodes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 92,
                                  "src": "14098:10:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$87_storage_$",
                                    "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                                  }
                                },
                                "id": 826,
                                "indexExpression": {
                                  "id": 825,
                                  "name": "activeNode",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 68,
                                  "src": "14109:10:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "14098:22:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ValidNodes_$87_storage",
                                  "typeString": "struct MasterNode.ValidNodes storage ref"
                                }
                              },
                              "id": 827,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14121:11:14",
                              "memberName": "chainCCIPid",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 76,
                              "src": "14098:34:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            {
                              "id": 828,
                              "name": "activeNode",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68,
                              "src": "14134:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 829,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 792,
                              "src": "14146:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 823,
                            "name": "_sendMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 632,
                            "src": "14085:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint64_$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (uint64,address,bytes memory) returns (bytes32)"
                            }
                          },
                          "id": 830,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14085:66:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 831,
                        "nodeType": "ExpressionStatement",
                        "src": "14085:66:14"
                      }
                    ]
                  },
                  "id": 833,
                  "nodeType": "IfStatement",
                  "src": "13913:249:14",
                  "trueBody": {
                    "id": 822,
                    "nodeType": "Block",
                    "src": "13981:84:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 817,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "14035:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 818,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14039:6:14",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "14035:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 819,
                              "name": "shares",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 766,
                              "src": "14047:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 814,
                                  "name": "activeNode",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 68,
                                  "src": "14001:10:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 813,
                                "name": "INode",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2042,
                                "src": "13995:5:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_INode_$2042_$",
                                  "typeString": "type(contract INode)"
                                }
                              },
                              "id": 815,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13995:17:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_INode_$2042",
                                "typeString": "contract INode"
                              }
                            },
                            "id": 816,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14013:21:14",
                            "memberName": "withdrawFromSameChain",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2034,
                            "src": "13995:39:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13995:59:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 821,
                        "nodeType": "ExpressionStatement",
                        "src": "13995:59:14"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "2e1a7d4d",
            "id": 835,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "13570:8:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 767,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 766,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "13587:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 835,
                  "src": "13579:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 765,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13579:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13578:16:14"
            },
            "returnParameters": {
              "id": 768,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13604:0:14"
            },
            "scope": 970,
            "src": "13561:607:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 944,
              "nodeType": "Block",
              "src": "14528:1019:14",
              "statements": [
                {
                  "assignments": [
                    845
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 845,
                      "mutability": "mutable",
                      "name": "newSupplyRate",
                      "nameLocation": "14583:13:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 944,
                      "src": "14575:21:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 844,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14575:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 864,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 847,
                            "name": "validNodes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 92,
                            "src": "14636:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$87_storage_$",
                              "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                            }
                          },
                          "id": 849,
                          "indexExpression": {
                            "id": 848,
                            "name": "destinationNode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 839,
                            "src": "14647:15:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14636:27:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ValidNodes_$87_storage",
                            "typeString": "struct MasterNode.ValidNodes storage ref"
                          }
                        },
                        "id": 850,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14664:15:14",
                        "memberName": "totalUsdcSupply",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 80,
                        "src": "14636:43:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 851,
                            "name": "validNodes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 92,
                            "src": "14693:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$87_storage_$",
                              "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                            }
                          },
                          "id": 853,
                          "indexExpression": {
                            "id": 852,
                            "name": "destinationNode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 839,
                            "src": "14704:15:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14693:27:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ValidNodes_$87_storage",
                            "typeString": "struct MasterNode.ValidNodes storage ref"
                          }
                        },
                        "id": 854,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14721:15:14",
                        "memberName": "totalUsdcBorrow",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 82,
                        "src": "14693:43:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 855,
                            "name": "validNodes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 92,
                            "src": "14750:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$87_storage_$",
                              "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                            }
                          },
                          "id": 857,
                          "indexExpression": {
                            "id": 856,
                            "name": "destinationNode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 839,
                            "src": "14761:15:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14750:27:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ValidNodes_$87_storage",
                            "typeString": "struct MasterNode.ValidNodes storage ref"
                          }
                        },
                        "id": 858,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14778:10:14",
                        "memberName": "supplyRate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 84,
                        "src": "14750:38:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 859,
                            "name": "validNodes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 92,
                            "src": "14802:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$87_storage_$",
                              "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                            }
                          },
                          "id": 861,
                          "indexExpression": {
                            "id": 860,
                            "name": "destinationNode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 839,
                            "src": "14813:15:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14802:27:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ValidNodes_$87_storage",
                            "typeString": "struct MasterNode.ValidNodes storage ref"
                          }
                        },
                        "id": 862,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14830:14:14",
                        "memberName": "totalAusdcNode",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 86,
                        "src": "14802:42:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 846,
                      "name": "calculateNewSupplyRates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2024,
                      "src": "14599:23:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14599:255:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14575:279:14"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 935,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 914,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 904,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 894,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 887,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 880,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 873,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 870,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 865,
                                          "name": "lastTimeWarped",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 70,
                                          "src": "14884:14:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_rational_86400_by_1",
                                                "typeString": "int_const 86400"
                                              },
                                              "id": 868,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "hexValue": "33363030",
                                                "id": 866,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "14902:4:14",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_3600_by_1",
                                                  "typeString": "int_const 3600"
                                                },
                                                "value": "3600"
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "*",
                                              "rightExpression": {
                                                "hexValue": "3234",
                                                "id": 867,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "14909:2:14",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_24_by_1",
                                                  "typeString": "int_const 24"
                                                },
                                                "value": "24"
                                              },
                                              "src": "14902:9:14",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_86400_by_1",
                                                "typeString": "int_const 86400"
                                              }
                                            }
                                          ],
                                          "id": 869,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "14901:11:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_86400_by_1",
                                            "typeString": "int_const 86400"
                                          }
                                        },
                                        "src": "14884:28:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<",
                                      "rightExpression": {
                                        "expression": {
                                          "id": 871,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -4,
                                          "src": "14915:5:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 872,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "14921:9:14",
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "14915:15:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "14884:46:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&&",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "id": 879,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 874,
                                            "name": "validNodes",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 92,
                                            "src": "14946:10:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$87_storage_$",
                                              "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                                            }
                                          },
                                          "id": 876,
                                          "indexExpression": {
                                            "id": 875,
                                            "name": "_activeNode",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 837,
                                            "src": "14957:11:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "14946:23:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_ValidNodes_$87_storage",
                                            "typeString": "struct MasterNode.ValidNodes storage ref"
                                          }
                                        },
                                        "id": 877,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "14970:12:14",
                                        "memberName": "isActiveNode",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 74,
                                        "src": "14946:36:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "hexValue": "74727565",
                                        "id": 878,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "14986:4:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "true"
                                      },
                                      "src": "14946:44:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "14884:106:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "&&",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 886,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 881,
                                          "name": "validNodes",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 92,
                                          "src": "15006:10:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$87_storage_$",
                                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                                          }
                                        },
                                        "id": 883,
                                        "indexExpression": {
                                          "id": 882,
                                          "name": "_activeNode",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 837,
                                          "src": "15017:11:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "15006:23:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_ValidNodes_$87_storage",
                                          "typeString": "struct MasterNode.ValidNodes storage ref"
                                        }
                                      },
                                      "id": 884,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "15030:16:14",
                                      "memberName": "lastDataFromAave",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 78,
                                      "src": "15006:40:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 885,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "15049:1:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "15006:44:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "14884:166:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 893,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 888,
                                        "name": "validNodes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 92,
                                        "src": "15066:10:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$87_storage_$",
                                          "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                                        }
                                      },
                                      "id": 890,
                                      "indexExpression": {
                                        "id": 889,
                                        "name": "destinationNode",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 839,
                                        "src": "15077:15:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "15066:27:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ValidNodes_$87_storage",
                                        "typeString": "struct MasterNode.ValidNodes storage ref"
                                      }
                                    },
                                    "id": 891,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "15094:16:14",
                                    "memberName": "lastDataFromAave",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 78,
                                    "src": "15066:44:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 892,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "15113:1:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "15066:48:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "14884:230:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 903,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 900,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 895,
                                        "name": "validNodes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 92,
                                        "src": "15130:10:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$87_storage_$",
                                          "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                                        }
                                      },
                                      "id": 897,
                                      "indexExpression": {
                                        "id": 896,
                                        "name": "_activeNode",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 837,
                                        "src": "15141:11:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "15130:23:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ValidNodes_$87_storage",
                                        "typeString": "struct MasterNode.ValidNodes storage ref"
                                      }
                                    },
                                    "id": 898,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "15154:16:14",
                                    "memberName": "lastDataFromAave",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 78,
                                    "src": "15130:40:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "hexValue": "33363030",
                                    "id": 899,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "15173:4:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_3600_by_1",
                                      "typeString": "int_const 3600"
                                    },
                                    "value": "3600"
                                  },
                                  "src": "15130:47:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "expression": {
                                    "id": 901,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "15180:5:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 902,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "15186:9:14",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "15180:15:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15130:65:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "14884:311:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 913,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 910,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 905,
                                      "name": "validNodes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 92,
                                      "src": "15211:10:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$87_storage_$",
                                        "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                                      }
                                    },
                                    "id": 907,
                                    "indexExpression": {
                                      "id": 906,
                                      "name": "destinationNode",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 839,
                                      "src": "15222:15:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "15211:27:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ValidNodes_$87_storage",
                                      "typeString": "struct MasterNode.ValidNodes storage ref"
                                    }
                                  },
                                  "id": 908,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "15239:16:14",
                                  "memberName": "lastDataFromAave",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 78,
                                  "src": "15211:44:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "hexValue": "33363030",
                                  "id": 909,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "15258:4:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_3600_by_1",
                                    "typeString": "int_const 3600"
                                  },
                                  "value": "3600"
                                },
                                "src": "15211:51:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "expression": {
                                  "id": 911,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "15277:5:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 912,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "15283:9:14",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "15277:15:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "15211:81:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "14884:408:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 920,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 915,
                                  "name": "validNodes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 92,
                                  "src": "15308:10:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$87_storage_$",
                                    "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                                  }
                                },
                                "id": 917,
                                "indexExpression": {
                                  "id": 916,
                                  "name": "destinationNode",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 839,
                                  "src": "15319:15:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "15308:27:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ValidNodes_$87_storage",
                                  "typeString": "struct MasterNode.ValidNodes storage ref"
                                }
                              },
                              "id": 918,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15336:11:14",
                              "memberName": "isValidNode",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 72,
                              "src": "15308:39:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "74727565",
                              "id": 919,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15351:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            "src": "15308:47:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "14884:471:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 927,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 922,
                                "name": "validNodes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 92,
                                "src": "15371:10:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$87_storage_$",
                                  "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                                }
                              },
                              "id": 924,
                              "indexExpression": {
                                "id": 923,
                                "name": "destinationNode",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 839,
                                "src": "15382:15:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15371:27:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ValidNodes_$87_storage",
                                "typeString": "struct MasterNode.ValidNodes storage ref"
                              }
                            },
                            "id": 925,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "15399:12:14",
                            "memberName": "isActiveNode",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 74,
                            "src": "15371:40:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "66616c7365",
                            "id": 926,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15415:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "15371:49:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "14884:536:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 929,
                              "name": "validNodes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 92,
                              "src": "15436:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$87_storage_$",
                                "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                              }
                            },
                            "id": 931,
                            "indexExpression": {
                              "id": 930,
                              "name": "_activeNode",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 837,
                              "src": "15447:11:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15436:23:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ValidNodes_$87_storage",
                              "typeString": "struct MasterNode.ValidNodes storage ref"
                            }
                          },
                          "id": 932,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15460:10:14",
                          "memberName": "supplyRate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 84,
                          "src": "15436:34:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 933,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15473:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "15436:38:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "14884:590:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 941,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 936,
                            "name": "validNodes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 92,
                            "src": "15490:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$87_storage_$",
                              "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                            }
                          },
                          "id": 938,
                          "indexExpression": {
                            "id": 937,
                            "name": "_activeNode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 837,
                            "src": "15501:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "15490:23:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ValidNodes_$87_storage",
                            "typeString": "struct MasterNode.ValidNodes storage ref"
                          }
                        },
                        "id": 939,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15514:10:14",
                        "memberName": "supplyRate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 84,
                        "src": "15490:34:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 940,
                        "name": "newSupplyRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 845,
                        "src": "15527:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "15490:50:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "14884:656:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 843,
                  "id": 943,
                  "nodeType": "Return",
                  "src": "14865:675:14"
                }
              ]
            },
            "functionSelector": "1d880928",
            "id": 945,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkApprovedWarp",
            "nameLocation": "14415:17:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 840,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 837,
                  "mutability": "mutable",
                  "name": "_activeNode",
                  "nameLocation": "14450:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 945,
                  "src": "14442:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 836,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14442:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 839,
                  "mutability": "mutable",
                  "name": "destinationNode",
                  "nameLocation": "14479:15:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 945,
                  "src": "14471:23:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 838,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14471:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14432:68:14"
            },
            "returnParameters": {
              "id": 843,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 842,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 945,
                  "src": "14522:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 841,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14522:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14521:6:14"
            },
            "scope": 970,
            "src": "14406:1141:14",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 968,
              "nodeType": "Block",
              "src": "15743:168:14",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 950,
                      "name": "activeNode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "15757:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15779:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "15771:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 951,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15771:7:14",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 954,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15771:10:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "15757:24:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 962,
                  "nodeType": "IfStatement",
                  "src": "15753:100:14",
                  "trueBody": {
                    "id": 961,
                    "nodeType": "Block",
                    "src": "15783:70:14",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 956,
                              "name": "validNodes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 92,
                              "src": "15804:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$87_storage_$",
                                "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                              }
                            },
                            "id": 958,
                            "indexExpression": {
                              "id": 957,
                              "name": "lastActiveNode",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66,
                              "src": "15815:14:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15804:26:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ValidNodes_$87_storage",
                              "typeString": "struct MasterNode.ValidNodes storage ref"
                            }
                          },
                          "id": 959,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15831:11:14",
                          "memberName": "chainCCIPid",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 76,
                          "src": "15804:38:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "functionReturnParameters": 949,
                        "id": 960,
                        "nodeType": "Return",
                        "src": "15797:45:14"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 963,
                        "name": "validNodes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92,
                        "src": "15870:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$87_storage_$",
                          "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                        }
                      },
                      "id": 965,
                      "indexExpression": {
                        "id": 964,
                        "name": "activeNode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68,
                        "src": "15881:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "15870:22:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ValidNodes_$87_storage",
                        "typeString": "struct MasterNode.ValidNodes storage ref"
                      }
                    },
                    "id": 966,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "15893:11:14",
                    "memberName": "chainCCIPid",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 76,
                    "src": "15870:34:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "functionReturnParameters": 949,
                  "id": 967,
                  "nodeType": "Return",
                  "src": "15863:41:14"
                }
              ]
            },
            "functionSelector": "1803c2f5",
            "id": 969,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getChainIdFromActiveNode",
            "nameLocation": "15685:24:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 946,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15709:2:14"
            },
            "returnParameters": {
              "id": 949,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 948,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 969,
                  "src": "15735:6:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 947,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "15735:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15734:8:14"
            },
            "scope": 970,
            "src": "15676:235:14",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 971,
        "src": "783:15130:14",
        "usedErrors": [
          29,
          31,
          39,
          43,
          47,
          51,
          53,
          1658
        ]
      }
    ],
    "src": "32:15882:14"
  },
  "bytecode": "",
  "bytecodeSha1": "8cc455145e5a53b62d7cfd6cd8512ea3d6b2ce12",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.19+commit.7dd6d404"
  },
  "contractName": "MasterNode",
  "coverageMap": {
    "branches": {
      "0": {
        "ERC20._burn": {
          "85": [
            9505,
            9526,
            true
          ],
          "86": [
            9696,
            9720,
            true
          ]
        },
        "ERC20._spendAllowance": {
          "87": [
            11351,
            11388,
            false
          ]
        },
        "ERC20.decreaseAllowance": {
          "84": [
            6809,
            6844,
            true
          ]
        }
      },
      "1": {},
      "10": {},
      "11": {},
      "12": {},
      "13": {},
      "14": {
        "MasterNode._ccipReceive": {
          "72": [
            8080,
            8092,
            false
          ],
          "73": [
            8163,
            8175,
            false
          ],
          "74": [
            8247,
            8259,
            false
          ]
        },
        "MasterNode._sendMessage": {
          "80": [
            9737,
            9780,
            false
          ],
          "81": [
            9613,
            9670,
            true
          ]
        },
        "MasterNode.addValidNode": {
          "82": [
            3308,
            3322,
            true
          ]
        },
        "MasterNode.getChainIdFromActiveNode": {
          "83": [
            15757,
            15781,
            false
          ]
        },
        "MasterNode.warpAssets": {
          "75": [
            12886,
            12948,
            false
          ],
          "76": [
            12446,
            12466,
            false
          ],
          "77": [
            12507,
            12561,
            true
          ]
        },
        "MasterNode.withdraw": {
          "78": [
            13699,
            13730,
            true
          ],
          "79": [
            13917,
            13979,
            false
          ]
        }
      },
      "15": {},
      "16": {},
      "2": {},
      "3": {},
      "4": {},
      "5": {},
      "6": {},
      "7": {},
      "8": {},
      "9": {}
    },
    "statements": {
      "0": {
        "ERC20._approve": {
          "66": [
            10627,
            10695
          ],
          "67": [
            10705,
            10773
          ],
          "68": [
            10830,
            10867
          ],
          "69": [
            10784,
            10820
          ]
        },
        "ERC20._burn": {
          "36": [
            9497,
            9564
          ],
          "37": [
            9688,
            9759
          ],
          "38": [
            9973,
            10015
          ]
        },
        "ERC20._mint": {
          "62": [
            8642,
            8707
          ],
          "63": [
            8994,
            9036
          ],
          "64": [
            8778,
            8800
          ],
          "65": [
            8946,
            8974
          ]
        },
        "ERC20._spendAllowance": {
          "41": [
            11404,
            11472
          ],
          "42": [
            11514,
            11565
          ]
        },
        "ERC20._transfer": {
          "58": [
            7591,
            7659
          ],
          "59": [
            7669,
            7733
          ],
          "60": [
            7840,
            7912
          ],
          "61": [
            8205,
            8236
          ]
        },
        "ERC20.approve": {
          "46": [
            4568,
            4600
          ]
        },
        "ERC20.balanceOf": {
          "20": [
            3499,
            3524
          ]
        },
        "ERC20.decimals": {
          "33": [
            3166,
            3175
          ]
        },
        "ERC20.decreaseAllowance": {
          "5": [
            6801,
            6886
          ],
          "6": [
            6920,
            6980
          ]
        },
        "ERC20.increaseAllowance": {
          "32": [
            6013,
            6077
          ]
        },
        "ERC20.name": {
          "52": [
            2233,
            2245
          ]
        },
        "ERC20.symbol": {
          "8": [
            2446,
            2460
          ]
        },
        "ERC20.transfer": {
          "3": [
            3860,
            3888
          ]
        },
        "ERC20.transferFrom": {
          "40": [
            5421,
            5448
          ]
        }
      },
      "1": {},
      "10": {},
      "11": {},
      "12": {},
      "13": {},
      "14": {
        "MasterNode._aWarpTokenMinter": {
          "9": [
            4211,
            4237
          ]
        },
        "MasterNode._buildCCIPMessage": {
          "26": [
            10946,
            11591
          ]
        },
        "MasterNode._ccipReceive": {
          "17": [
            8336,
            8371
          ]
        },
        "MasterNode._nodeAaveFeed": {
          "12": [
            6149,
            6254
          ],
          "13": [
            6264,
            6368
          ],
          "14": [
            6378,
            6482
          ],
          "15": [
            6492,
            6586
          ],
          "16": [
            6596,
            6698
          ]
        },
        "MasterNode._resmumeOperations": {
          "10": [
            4956,
            5046
          ],
          "11": [
            5057,
            5115
          ]
        },
        "MasterNode._resmumeOperationsFromSameChain": {
          "7": [
            5401,
            5424
          ]
        },
        "MasterNode._sendMessage": {
          "27": [
            9592,
            9722
          ],
          "28": [
            9733,
            9861
          ],
          "29": [
            9979,
            10021
          ],
          "30": [
            10113,
            10183
          ]
        },
        "MasterNode.aWarpTokenMinterFromSameChain": {
          "53": [
            4503,
            4529
          ]
        },
        "MasterNode.addValidNode": {
          "43": [
            3300,
            3348
          ],
          "44": [
            3358,
            3400
          ],
          "45": [
            3605,
            3629
          ]
        },
        "MasterNode.checkApprovedWarp": {
          "55": [
            14865,
            15540
          ]
        },
        "MasterNode.getChainIdFromActiveNode": {
          "56": [
            15863,
            15904
          ],
          "57": [
            15797,
            15842
          ]
        },
        "MasterNode.nodeAaveFeedFromSameChain": {
          "47": [
            7284,
            7338
          ],
          "48": [
            7029,
            7086
          ],
          "49": [
            7096,
            7152
          ],
          "50": [
            7162,
            7218
          ],
          "51": [
            7228,
            7274
          ]
        },
        "MasterNode.stopAddingNodes": {
          "21": [
            3124,
            3146
          ]
        },
        "MasterNode.warpAssets": {
          "22": [
            12253,
            12376
          ],
          "23": [
            12828,
            12871
          ],
          "24": [
            12964,
            13096
          ],
          "25": [
            13284,
            13316
          ],
          "31": [
            12482,
            12620
          ]
        },
        "MasterNode.withdraw": {
          "34": [
            13614,
            13680
          ],
          "35": [
            13691,
            13754
          ],
          "39": [
            13995,
            14054
          ]
        }
      },
      "15": {},
      "16": {},
      "2": {},
      "3": {
        "Context._msgSender": {
          "4": [
            712,
            729
          ]
        }
      },
      "4": {
        "CCIPReceiver.getRouter": {
          "2": [
            2262,
            2290
          ]
        },
        "CCIPReceiver.supportsInterface": {
          "54": [
            1502,
            1609
          ]
        }
      },
      "5": {},
      "6": {},
      "7": {
        "Client._argsToBytes": {
          "70": [
            1387,
            1450
          ]
        }
      },
      "8": {},
      "9": {
        "ConfirmedOwnerWithProposal._transferOwnership": {
          "0": [
            1629,
            1681
          ],
          "1": [
            1714,
            1758
          ]
        },
        "ConfirmedOwnerWithProposal._validateOwnership": {
          "71": [
            1894,
            1950
          ]
        },
        "ConfirmedOwnerWithProposal.acceptOwnership": {
          "18": [
            1120,
            1183
          ],
          "19": [
            1282,
            1329
          ]
        }
      }
    }
  },
  "dependencies": [
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/CCIPReceiver",
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/Client",
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/ConfirmedOwner",
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/ConfirmedOwnerWithProposal",
    "OpenZeppelin/openzeppelin-contracts@4.8.3/Context",
    "OpenZeppelin/openzeppelin-contracts@4.8.3/ERC20",
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/IAny2EVMMessageReceiver",
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.8.3/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.8.3/IERC20Metadata",
    "INode",
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/IOwnable",
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/IRouterClient",
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/LinkTokenInterface",
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/OwnerIsCreator",
    "UtilsMasterNode"
  ],
  "deployedBytecode": "60806040818152600480361015610021575b505050361561001f57600080fd5b005b600092833560e01c90816301ffc9a714611f1a5750806304783ea414611e8357806306fdde0314611db657806308a767fe14611d0b578063095ea7b314611ce157806310a78df814611be65780631803c2f514611bb957806318160ddd14611b9c5780631d88092814611b6557806323b872dd14611a995780632e1a7d4d14611440578063313ce5671461142457806339509351146113d5578063544b1709146112a35780635c292be514610c9057806361ac3f9914610c67578063654e8e0c14610c405780636c1dc07714610c175780636c98d51314610bee57806370a0823114610bb657806379ba509714610b0f57806385572ffb146107075780638cf19d19146106c35780638da5cb5b1461069b57806395d89b4114610580578063995714ae146104d1578063a457c2d714610428578063a9059cbb146103f7578063b0f479a1146103b3578063b2d9295514610320578063c1586af8146102fa578063dd62ed3e146102ac578063ddf8560314610288578063e12b948b146102655763f2fde38b036100115734610261576020366003190112610261576101c4611f6e565b906101cd612834565b6001600160a01b039182169233841461021e575050600180546001600160a01b031916831790558254167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12788380a380f35b906020606492519162461bcd60e51b8352820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152fd5b8280fd5b505034610284578160031936011261028457602090600a549051908152f35b5080fd5b50503461028457816003193601126102845760209060ff6007541690519015158152f35b5050346102845780600319360112610284576020916102c9611f6e565b826102d2611f84565b6001600160a01b03928316845260038652922091166000908152908352819020549051908152f35b5050346102845760209061031961031036611fda565b929190916127dc565b9051908152f35b509034610261576020366003190112610261576101009281906001600160a01b03610349611f6e565b168152600b6020522080549260018201546002830154906005600385015493850154940154946001600160401b0381519760ff81161515895260ff8160081c16151560208a015260101c16908701526060860152608085015260a084015260c083015260e0820152f35b505034610284578160031936011261028457517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b505034610284578060031936011261028457602090610421610417611f6e565b602435903361246d565b5160018152f35b5082346104ce57826003193601126104ce57610442611f6e565b91836024359233815260036020522060018060a01b03841660005260205283600020549082821061047d576020856104218585038733612681565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b80fd5b5034610261578260031936011261026157338352600b6020526105276001600160401b03808486205460101c16907f0000000000000000000000000000000000000000000000000000000000000000161461211a565b338352600b60205260ff82842054161561056a5750338252600b602052812061010061ff0019825416179055336001600160601b0360a01b600954161760095580f35b6024915190636a9ff79f60e11b82523390820152fd5b5091346104ce57806003193601126104ce578151918160065492600184811c91818616958615610691575b602096878510811461067e578899509688969785829a5291826000146106575750506001146105fb575b5050506105f792916105e89103856120a3565b51928284938452830190611f9a565b0390f35b9190869350600683527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f5b82841061063f57505050820101816105e86105f76105d5565b8054848a018601528895508794909301928101610626565b60ff19168782015293151560051b860190930193508492506105e891506105f790506105d5565b634e487b7160e01b835260228a52602483fd5b92607f16926105ab565b505034610284578160031936011261028457905490516001600160a01b039091168152602090f35b505034610284578160031936011261028457602090516001600160401b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b5090346102615760209160031983813601126108c3578135906001600160401b0390818311610a435760a0908336030112610940576001600160a01b03927f000000000000000000000000000000000000000000000000000000000000000084163303610af85784519161077a8361200e565b838201358352602490818501358181168103610ad757888501526044850135818111610a3b576107af908436918801016120c4565b938781019485526064860135828111610a3f576107d1908536918901016120c4565b9560608201968752608481013590838211610af4570136602382011215610a3f5784810135928311610ae05788519261080f8b8260051b01856120a3565b808452848b85019160061b83010191368311610adc578501905b828210610a9d575050506080015282518781805181010312610a375761085188879201612783565b16808952600b885260ff878a20541615610a88575083518781805181010312610a37576108818860ff9201612797565b16806108c7575050505051916060838051810103126108c3576108b66060916108ae6108c0968601612797565b508401612783565b92015191166125dd565b80f35b8480fd5b6001819897959394969814600014610944575050505081518381805181010312610940576108f784869201612783565b168552600b8352842061010061ff00198254161790555190808280518101031261093c576109259101612783565b166001600160601b0360a01b600954161760095580f35b8380fd5b8580fd5b9296939492600203610a4757505160a081805181010312610a435761096a858201612797565b508381015195606082015160a060808401519301519784518881805181010312610a3f5761099a89889201612783565b168a52600b8852426001888c20015584518881805181010312610a3f576109c389889201612783565b168a526002878b20015583518781805181010312610a3b576109e788879201612783565b1689526003868a20015582518681805181010312610a3757610a0b87869201612783565b168852848820015551838180518101031261094057600593610a2d9101612783565b1684528320015580f35b8880fd5b8980fd5b8a80fd5b8680fd5b8660196064928888519362461bcd60e51b85528401528201527f696e76616c696420636f6d6d616e642066726f6d204e6f6465000000000000006044820152fd5b8651636a9ff79f60e11b815280840191909152fd5b8a82360312610adc578a5190610ab28261206d565b8235908b82168203610ad757828e928e94528285013583820152815201910190610829565b600080fd5b8c80fd5b83604186634e487b7160e01b600052526000fd5b8b80fd5b6024908551906335fdcccd60e21b82523390820152fd5b509034610261578260031936011261026157600154916001600160a01b03918284163303610b7a57505082546001600160a01b03198082163390811786559316600155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020606492519162461bcd60e51b8352820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b6044820152fd5b5050346102845760203660031901126102845760209181906001600160a01b03610bde611f6e565b1681526002845220549051908152f35b83346104ce57806003193601126104ce57610c07612834565b6007805460ff60a81b1916905580f35b50503461028457816003193601126102845760095490516001600160a01b039091168152602090f35b50503461028457816003193601126102845760209060ff60075460a81c1690519015158152f35b50503461028457816003193601126102845760085490516001600160a01b039091168152602090f35b50829034610284578260031936011261028457610cab611ff8565b610cb3611f84565b9360018060a01b0392838616928386526020600b815260ff84882054161561126157869760ff60079897985416156111fa575b5083516001828201526001600160401b038093169283868301526060908782840152818352610d1483612088565b89600954168952600b845286892061ff00198154169055896009541692838a52878a2054828160101c16927f0000000000000000000000000000000000000000000000000000000000000000168314600014610def575050505050508560095416803b156109405785928360449286519788958694634bb297ff60e11b865285015260248401525af1908115610de65750610dd2575b50505b6009546001600160601b0360a01b9181168260085416176008551660095542600a5580f35b610ddb9061205a565b610284578183610daa565b513d84823e3d90fd5b9195509296975060ff919593985016156111e3578760075460081c1684819560808951610e1b8161200e565b828152828c820152828b8201528d83820152015287519689880152888752610e428761206d565b8751610e4d8161203f565b60008152610e6a8951610e5f8161203f565b621e848081526127a5565b93895198610e778a61200e565b89528a890152888801528601526080850152845163b0f479a160e01b815286818381305afa9081156111d9579088918a9161119f575b5086516320487ded60e01b81529116938990888380610ecf8a89898401612174565b0381895afa928315611195579089918394611163575b5060648951809481936323b872dd60e01b835233898401523060248401528760448401525af1908115611159578a9161113c575b50156110f9578760075460081c169086516370a0823160e01b9081815230858201528981602481875afa9081156110ef578c916110c2575b5082116110465750865163095ea7b360e01b81526001600160a01b03861681850190815260208101929092528a939290918991839182908790829060400103925af1801561103c579188959391610fc59897959361100f575b5086516396f4e9f960e01b8152978895869485938401612174565b03925af19081156110065750610fdd575b5050610dad565b813d8311610fff575b610ff081836120a3565b81010312610284578280610fd6565b503d610fe6565b513d86823e3d90fd5b61102e90873d8911611035575b61102681836120a3565b810190612240565b508b610faa565b503d61101c565b87513d85823e3d90fd5b908a888a80879560248451809981938252308a8301525afa9283156110b75792611086575b5051634787a10360e11b815292830152602482015260449150fd5b90915084813d83116110b0575b61109d81836120a3565b81010312610ad75760449351908561106b565b503d611093565b8251903d90823e3d90fd5b90508981813d83116110e8575b6110d981836120a3565b81010312610ad757518c610f51565b503d6110cf565b89513d8e823e3d90fd5b855162461bcd60e51b8152808301889052601a60248201527f4e6f742070726f7669646564204c696e6b20666f7220666565730000000000006044820152606490fd5b6111539150883d8a116110355761102681836120a3565b8a610f19565b87513d8c823e3d90fd5b9250925081813d831161118e575b61117b81836120a3565b81010312610ad757878a9151928c610ee5565b503d611171565b88513d84823e3d90fd5b809250888092503d83116111d2575b6111b881836120a3565b81010312610a3757518781168103610a375787908a610ead565b503d6111ae565b86513d8b823e3d90fd5b8551636a9ff79f60e11b8152808301869052602490fd5b61120e91929394959650876009541661227b565b1561121f5790869493929188610ce6565b9050606492519162461bcd60e51b8352820152601960248201527f436f6e646974696f6e20746f2077617270206e6f74206d6574000000000000006044820152fd5b9050606492519162461bcd60e51b8352820152601d60248201527f44657374696e6174696f6e204e6f6465206973206e6f74207661696c640000006044820152fd5b5091346104ce5760a03660031901126104ce576112be611ff8565b916112c7611f84565b6001600160a01b03936044358581169190829003610ad75760643590868216809203610ad757608435976001600160401b038911610a435761131261138e96979899369083016120c4565b87519460209a8b97168787015286865261132b8661206d565b88516113368161203f565b600081526113538a516113488161203f565b620f424081526127a5565b928a51976113608961200e565b885288880152898701526060860152608085015286516320487ded60e01b8152958694859384938401612174565b03915afa9283156110b757926113a6575b5051908152f35b9091508281813d83116113ce575b6113be81836120a3565b81010312610ad75751903861139f565b503d6113b4565b505034610284578060031936011261028457610421602092826113f6611f6e565b91338152600386522060018060a01b038216600052845261141d6024358460002054612258565b9033612681565b5050346102845781600319360112610284576020905160128152f35b508290346102845760209283600319360112610261576009546001600160a01b039081168452600b8552818420548335919060081c60ff1615611a615733855260028652828520548211611a285782519585818801523384880152606083818901528088526114ae88612088565b33156119db5733875260028252848720549784891061198d57848899989697983388526002855203878720558488540388558587518681527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef853392a3836009541691828752600b845287872054916001600160401b0392838160101c16937f00000000000000000000000000000000000000000000000000000000000000001684146000146115af5750505050505060095416803b156102615783516315e005b760e31b8152339581019586526020860192909252909384919082908490829060400103925af1908115610de657506115a6575080f35b6108c09061205a565b909295965060ff919397509893981615611976578460075460081c1682819360808a516115db8161200e565b828152828d820152828c8201528d8382015201528851978a8901528988526116028861206d565b885161160d8161203f565b8b815261161e8a51610e5f8161203f565b938a519961162b8b61200e565b8a528b8a0152898901528701526080860152855163b0f479a160e01b815287818481305afa90811561196c579085918a91611932575b501693888751926320487ded60e01b84528984806116828b8a8a8401612174565b03818a5afa93841561192857908a9183956118f7575b5060648a51809481936323b872dd60e01b8352338a8401523060248401528860448401525af19081156118ed578a916118d0575b501561188d579088929160075460081c169087516370a0823160e01b9081815230858201528a81602481875afa908115611883578691611856575b5082116117d75750875163095ea7b360e01b81526001600160a01b038716848201908152602081019290925291899183919082908790829060400103925af1801561103c579188959391611777989795936117ba575086516396f4e9f960e01b8152978895869485938401612174565b03925af19081156117b1575061178c57505080f35b813d83116117aa575b61179f81836120a3565b810103126104ce5780f35b503d611795565b513d85823e3d90fd5b6117d090873d89116110355761102681836120a3565b508a610faa565b899192828a9260248451809481938252308a8301525afa92831561184c578693611818575b505051634787a10360e11b815292830152602482015260449150fd5b9080929350813d8311611845575b61183081836120a3565b810103126108c35760449450519085806117fc565b503d611826565b82513d88823e3d90fd5b90508a81813d831161187c575b61186d81836120a3565b8101031261094057518c611707565b503d611863565b8a513d88823e3d90fd5b865162461bcd60e51b8152808401899052601a60248201527f4e6f742070726f7669646564204c696e6b20666f7220666565730000000000006044820152606490fd5b6118e79150893d8b116110355761102681836120a3565b8a6116cc565b88513d8c823e3d90fd5b8281939296503d8311611921575b61190f81836120a3565b8101031261028457899051938c611698565b503d611905565b89513d84823e3d90fd5b809250898092503d8311611965575b61194b81836120a3565b81010312610a3757518481168103610a375784908a611661565b503d611941565b87513d8b823e3d90fd5b8651636a9ff79f60e11b8152808401879052602490fd5b855162461bcd60e51b8152808801849052602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608490fd5b845162461bcd60e51b8152808701839052602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608490fd5b825162461bcd60e51b815280850187905260136024820152724e6f7420656e6f756768742062616c616e636560681b6044820152606490fd5b825162461bcd60e51b815280850187905260126024820152714e6f6465206973206e6f742041637469766560701b6044820152606490fd5b5082903461028457606036600319011261028457611ab5611f6e565b611abd611f84565b6001600160a01b03821684526003602090815285852033865290529284902054604435939260018201611af9575b60208661042187878761246d565b848210611b225750918391611b176020969561042195033383612681565b919394819350611aeb565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b505034610284578060031936011261028457602090611b93611b85611f6e565b611b8d611f84565b9061227b565b90519015158152f35b503461026157826003193601126102615760209250549051908152f35b5050346102845781600319360112610284576020906001600160401b03611bde612417565b915191168152f35b503461026157606036600319011261026157611c00611f6e565b906024356001600160401b03811681036108c3576044359283151592838503610a4357611c2b612834565b60ff60075460a81c1615611ca6575090600191828060a01b031694858752600b60205286209261ff0069ffffffffffffffff000085549360101b169269ffffffffffffffffffff19169160081b161717179055611c86575080f35b6001600160601b0360a01b81816008541617600855600954161760095580f35b606490602087519162461bcd60e51b83528201526015602482015274139bc81b5bdc99481b9bd9195cc8185b1b1bddd959605a1b6044820152fd5b505034610284578060031936011261028457602090610421611d01611f6e565b6024359033612681565b5082903461028457611d1c36611fda565b939091338652600b602052611d646001600160401b03808989205460101c16907f0000000000000000000000000000000000000000000000000000000000000000161461211a565b338652600b60205260ff878720541615611da0576005949596338852600b60205287209342600186015560028501556003840155820155015580f35b8651636a9ff79f60e11b81523381840152602490fd5b5091346104ce57806003193601126104ce578151918160055492600184811c91818616958615611e79575b602096878510811461067e578899509688969785829a529182600014610657575050600114611e1d575050506105f792916105e89103856120a3565b9190869350600583527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db05b828410611e6157505050820101816105e86105f76105d5565b8054848a018601528895508794909301928101611e48565b92607f1692611de1565b5034610261578160031936011261026157611e9c611f6e565b91338452600b602052611ee26001600160401b03808387205460101c16907f0000000000000000000000000000000000000000000000000000000000000000161461211a565b338452600b60205260ff818520541615611f0357836108c0602435856125dd565b602492505190636a9ff79f60e11b82523390820152fd5b92505034610261576020366003190112610261573563ffffffff60e01b811680910361026157602092506385572ffb60e01b8114908115611f5d575b5015158152f35b6301ffc9a760e01b14905038611f56565b600435906001600160a01b0382168203610ad757565b602435906001600160a01b0382168203610ad757565b919082519283825260005b848110611fc6575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611fa5565b6080906003190112610ad75760043590602435906044359060643590565b600435906001600160401b0382168203610ad757565b60a081019081106001600160401b0382111761202957604052565b634e487b7160e01b600052604160045260246000fd5b602081019081106001600160401b0382111761202957604052565b6001600160401b03811161202957604052565b604081019081106001600160401b0382111761202957604052565b608081019081106001600160401b0382111761202957604052565b90601f801991011681019081106001600160401b0382111761202957604052565b81601f82011215610ad7578035906001600160401b03821161202957604051926120f8601f8401601f1916602001856120a3565b82845260208383010111610ad757816000926020809301838601378301015290565b1561212157565b60405162461bcd60e51b815260206004820152602560248201527f52657175697265206d617374657220616e64206e6f646520696e2073616d652060448201526431b430b4b760d91b6064820152608490fd5b906001600160401b0390939293168152604060209181838201526121a3855160a08484015260e0830190611f9a565b916121bf8487015193603f199485858303016060860152611f9a565b8187015194848483030160808501528080875193848152019601926000905b83821061221757505050505060c06080612214959660018060a01b0360608201511660a085015201519282850301910152611f9a565b90565b845180516001600160a01b031689528301518884015296870196938201936001909101906121de565b90816020910312610ad757518015158103610ad75790565b9190820180921161226557565b634e487b7160e01b600052601160045260246000fd5b60018060a01b03809216916000838152600b90602091808352604092838320946122bb600287015460038801549760049860058a830154920154926127dc565b96600a5462015180810180911161239357421198896123f9575b896123e1575b896123cb575b896123a6575b89612370575b89612357575b8961233f575b5088612328575b88612311575b505050505050505090565b168352522001541090503880808080808080612306565b818116855283835285852087015415159850612300565b85528383528585205460081c60ff16159850386122f9565b8086528484528686205460ff16151560011499506122f3565b809950855283835260018686200154610e108101809111612393574210986122ed565b634e487b7160e01b865260118852602486fd5b9850818116855283835260018686200154610e108101809111612393574210986122e7565b80865284845286862060010154151599506122e1565b818316865284845286862060010154151599506122db565b81831686528484528686205460081c60ff16151560011499506122d5565b6009546001600160a01b0390811690811561244a5750600052600b6020526001600160401b0360406000205460101c1690565b905060085416600052600b6020526001600160401b0360406000205460101c1690565b6001600160a01b0390811691821561258a571691821561253957600082815260026020526040812054918083106124e557604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef95876020965260028652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b031690811561263c577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60208261261f600094600454612258565b6004558484526002825260408420818154019055604051908152a3565b60405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606490fd5b6001600160a01b0390811691821561273257169182156126e25760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260038252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b51906001600160a01b0382168203610ad757565b519060ff82168203610ad757565b604051906397a657c960e01b602083015251602482015260248152606081018181106001600160401b038211176120295760405290565b926127e79193612258565b670de0b6b3a7640000928381029080820485149015171561226557811561281e570490818102918183041490151715612265570490565b634e487b7160e01b600052601260045260246000fd5b6000546001600160a01b0316330361284857565b60405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b6044820152606490fdfea26469706673582212204a373fcc2a03e47a61655fa4bf0aca8ae1415658bfe07b0b78ce35cf3fa28cd164736f6c63430008130033",
  "deployedSourceMap": "783:15130:14:-:0;;;;;;;;;;;;-1:-1:-1;783:15130:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;783:15130:14;;;;;;:::i;:::-;2032:59:9;;;:::i;:::-;-1:-1:-1;;;;;783:15130:14;;;;1643:10:9;1637:16;;783:15130:14;;-1:-1:-1;;783:15130:14;;;-1:-1:-1;;;;;;783:15130:14;;;;;;;;1719:39:9;783:15130:14;;1719:39:9;783:15130:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:29;783:15130;;;;;;;;;;;;;;;;;;;;;;;;;;;;1771:39;783:15130;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;-1:-1:-1;;;;;783:15130:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;783:15130:14;;;;;;;;-1:-1:-1;;;;;783:15130:14;;:::i;:::-;;;;2328:48;783:15130;;;;;2328:48;783:15130;2328:48;;783:15130;2328:48;;;783:15130;2328:48;;783:15130;2328:48;;783:15130;2328:48;;;783:15130;2328:48;;783:15130;;-1:-1:-1;;;;;783:15130:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2277:12:4;-1:-1:-1;;;;;783:15130:14;;;;;;;;;;;;;;;;;;;;;;3881:6:0;783:15130:14;;:::i;:::-;;;719:10:3;;3881:6:0;:::i;:::-;783:15130:14;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;719:10:3;;783:15130:14;;;;;;;;;;;;;;;;;;;;;6809:35:0;;;;783:15130:14;;;;6945:34:0;783:15130:14;;;;719:10:3;6945:34:0;:::i;783:15130:14:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:15130:14;;;;;;;;;;;;;;;;;;;;;2930:10;783:15130;;2919:10;783:15130;;2898:146;-1:-1:-1;;;;;783:15130:14;;;;;;;;2957:24;;783:15130;2919:62;2898:146;:::i;:::-;2930:10;783:15130;;2919:10;783:15130;;;;;;;;2723:36;2719:110;;2930:10;;783:15130;;2919:10;783:15130;;;;;;;;;;;;;2930:10;-1:-1:-1;;;;;783:15130:14;;5401:23;783:15130;;;5401:23;783:15130;;;2719:110;783:15130;;;2782:36;;;;;;2930:10;2782:36;;;783:15130;2782:36;783:15130;;;;;;;;;;;;;;;;;;2453:7:0;783:15130:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;2453:7:0;783:15130:14;;;;;;;;;-1:-1:-1;;;783:15130:14;;;;;;;;;;;;;;;;;;;-1:-1:-1;783:15130:14;;;;;;;;;;;-1:-1:-1;;783:15130:14;;;;;;;;;;;;;;;;-1:-1:-1;783:15130:14;;-1:-1:-1;783:15130:14;;-1:-1:-1;783:15130:14;;-1:-1:-1;783:15130:14;;;-1:-1:-1;;;783:15130:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;783:15130:14;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1861:48:14;783:15130;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;783:15130:14;;;;;;;;;;;;;;;-1:-1:-1;;;;;783:15130:14;2449:12:4;783:15130:14;;2427:10:4;:35;2423:73;;783:15130:14;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7961:22;;783:15130;;;;7950:45;;783:15130;;;;;7950:45;;;;783:15130;:::i;:::-;;;;;2724:10;783:15130;;;;;;;;2723:36;2719:110;;477:20:15;;;783:15130:14;;;;466:41:15;;783:15130:14;;;;;466:41:15;783:15130:14;466:41:15;;783:15130:14;:::i;:::-;;8080:12;;;4131:20;;;;;783:15130;;;;;4107:93;;783:15130;;;;;;4107:93;783:15130;4230:6;4107:93;;;783:15130;:::i;:::-;;;;;:::i;:::-;;;;;;4230:6;:::i;:::-;783:15130;;;;;;8076:306;783:15130;8163:12;;;;;;;;;8159:223;783:15130;;;4978:22;;;;;;783:15130;;;;4967:45;;783:15130;;;;;4967:45;;;;783:15130;:::i;:::-;;;;2724:10;783:15130;;;;;;;;;;;;;5081:22;783:15130;;;;;5070:45;;783:15130;;;;;5070:45;;783:15130;:::i;:::-;;-1:-1:-1;;;;;783:15130:14;;5057:58;783:15130;;;5057:58;783:15130;;;;;;;;;;;8159:223;8247:12;;;;;8258:1;8247:12;8258:1;;6043:20;;783:15130;;;;6015:123;;783:15130;;;;;6015:123;;;783:15130;:::i;:::-;;;;;;;;;;;;;;;;;;;6171:22;;;783:15130;;;;6160:45;;783:15130;;;;;6160:45;;;;783:15130;:::i;:::-;;;;2724:10;783:15130;;6239:15;783:15130;;;;6149:87;783:15130;6286:22;;783:15130;;;;6275:45;;783:15130;;;;;6275:45;;;;783:15130;:::i;:::-;;;;8258:1;783:15130;;;6264:86;783:15130;6400:22;;783:15130;;;;6389:45;;783:15130;;;;;6389:45;;;;783:15130;:::i;:::-;;;;;;;;6378:86;783:15130;6514:22;;783:15130;;;;6503:45;;783:15130;;;;;6503:45;;;;783:15130;:::i;:::-;;;;;;;6492:81;783:15130;6618:22;783:15130;;;;6607:45;;783:15130;;;;;6607:45;783:15130;6607:45;;783:15130;:::i;:::-;;;;;;6596:85;783:15130;;;;;;;;;;;;;;;;;;;8243:139;783:15130;;;;;;;;;;;8336:35;;;;783:15130;;;;;;;;;8336:35;2719:110;783:15130;;-1:-1:-1;;;2782:36:14;;;;;783:15130;;;;2782:36;783:15130;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2423:73:4;783:15130:14;;;;2471:25:4;;;;;;2427:10;2471:25;;;783:15130:14;2471:25:4;783:15130:14;;;;;;;;;;;;;;1142:14:9;783:15130:14;;-1:-1:-1;;;;;783:15130:14;;;;1128:10:9;:28;783:15130:14;;-1:-1:-1;;783:15130:14;;-1:-1:-1;;;;;;783:15130:14;;;1128:10:9;783:15130:14;;;;;;;-1:-1:-1;783:15130:14;;1287:42:9;783:15130:14;;1287:42:9;783:15130:14;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:15130:14;;;;;;;;;;;;;-1:-1:-1;;783:15130:14;;;;;;;;-1:-1:-1;;;;;783:15130:14;;:::i;:::-;;;;3506:9:0;783:15130:14;;;;;;;;;;;;;;;;;;;;;;;2032:59:9;;:::i;:::-;3124:22:14;783:15130;;-1:-1:-1;;;;783:15130:14;;;;;;;;;;;;;;;;;;;1989:25;783:15130;;;-1:-1:-1;;;;;783:15130:14;;;;;;;;;;;;;;;;;;;;;;;;;1915:33;783:15130;;;;;;;;;;;;;;;;;;;;;;;;;;1954:29;783:15130;;;-1:-1:-1;;;;;783:15130:14;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;12274:10;783:15130;;;;;;;;;;;;;;12446:20;783:15130;;;;;12445:21;12441:190;;783:15130;;;;;12698:120;;;783:15130;-1:-1:-1;;;;;783:15130:14;;;;;;;;;;;;;;;;12698:120;;;;;;:::i;:::-;783:15130;12839:10;783:15130;;;;12274:10;783:15130;;;;;;;;;;;;;12839:10;783:15130;;;;;;;;;;;;;;;12924:24;;783:15130;12886:62;;12882:322;783:15130;;;;;;;;;;12839:10;783:15130;;12964:132;;;;;783:15130;;;;;;;;;;;;;;;12964:132;;;;783:15130;;;;;12964:132;;;;;;;;;;12882:322;;;;12839:10;783:15130;-1:-1:-1;;;;;783:15130:14;;;;;;;;;;;;;12839:10;783:15130;13301:15;13284:32;783:15130;;;12964:132;;;;:::i;:::-;783:15130;;12964:132;;;;;783:15130;;;;;;;;12882:322;783:15130;;;;;;;;;;;;;;2723:36;2719:110;;783:15130;12446:20;783:15130;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;11015:21;;;;783:15130;11015:21;;;;;;:::i;:::-;783:15130;;;;;:::i;:::-;;;;11260:166;783:15130;;;;;:::i;:::-;11397:9;783:15130;;11260:166;:::i;:::-;783:15130;;;;;;;:::i;:::-;;;10965:626;;;783:15130;10965:626;;;783:15130;10965:626;;783:15130;;10965:626;;783:15130;;;-1:-1:-1;;;9425:16:14;;10965:626;783:15130;9425:4;783:15130;9425:4;:16;;;;;;;;;;;;;;12882:322;-1:-1:-1;783:15130:14;;-1:-1:-1;;;9525:56:14;;783:15130;;;;;9525:56;783:15130;;9525:56;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;12882:322;783:15130;;;;;;;;;;;9613:57;;9638:10;9613:57;;;783:15130;9425:4;783:15130;;;;;;;;;9613:57;;;;;;;;;;;12882:322;783:15130;;;;;12446:20;783:15130;;;;;;;;;;9744:36;;;;9425:4;9744:36;;;783:15130;9744:36;;783:15130;9744:36;;;;;;;;;;;;;12882:322;9737:43;;;9733:128;;-1:-1:-1;783:15130:14;;-1:-1:-1;;;9979:42:14;;-1:-1:-1;;;;;783:15130:14;;9979:42;;;783:15130;;;;;;;;;;;;;;;;;;;;;;;;;;;9979:42;;;;;;;;;;;;;10125:58;9979:42;;;;;;12882:322;-1:-1:-1;783:15130:14;;-1:-1:-1;;;10125:58:14;;783:15130;;;;;;;10125:58;;;:::i;:::-;;;;;;;;;;;;;12882:322;;;;;10125:58;;;;;;;;;;;;:::i;:::-;;;783:15130;;;;10125:58;;;;;;;;;;783:15130;;;;;;;;9979:42;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;783:15130;;;;;;;;;9733:128;783:15130;;;;;;;;;;9818:36;;;;;;9425:4;9818:36;;;783:15130;9818:36;;;;;;;;;;9733:128;-1:-1:-1;783:15130:14;-1:-1:-1;;;9801:60:14;;;;;783:15130;;;;;;;-1:-1:-1;9801:60:14;9818:36;;;;;;;;;;;;;;;;:::i;:::-;;;783:15130;;;;;;;9818:36;;;;;;;;;;783:15130;;;;;;;;;;9744:36;;;;;;;;;;;;;;;;:::i;:::-;;;783:15130;;;;;9744:36;;;;;;;;;783:15130;;;;;;;;;;;;-1:-1:-1;;;783:15130:14;;;;;;;;;;;;;;;;;;;;;9613:57;;;;;;;;;;;;;;:::i;:::-;;;;;783:15130;;;;;;;;;9525:56;;;;;;;;;;;;;;;;;:::i;:::-;;;783:15130;;;;;;;;9525:56;;;;;;;;;;783:15130;;;;;;;;;9425:16;;;;;;;;;;;;;;;;;;:::i;:::-;;;783:15130;;;;;;;;;;;;9425:16;;;;;;;;;;;783:15130;;;;;;;;;2719:110;783:15130;;-1:-1:-1;;;2782:36:14;;;;;783:15130;;;;;2782:36;12441:190;12507:54;783:15130;;;;;;;;12525:10;783:15130;;12507:54;:::i;:::-;783:15130;;;12441:190;;;;;;;;;783:15130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;783:15130:14;;;;;;:::i;:::-;;;;:::i;:::-;-1:-1:-1;;;;;783:15130:14;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;783:15130:14;;;;;1662:48:15;783:15130:14;;;;;;;;;:::i;:::-;;;;;;;;;992:20:15;;;783:15130:14;992:20:15;;;;;;:::i;:::-;783:15130:14;;;;;:::i;:::-;;;;1226:157:15;783:15130:14;;;;;:::i;:::-;1357:9:15;783:15130:14;;1226:157:15;:::i;:::-;783:15130:14;;;;;;;:::i;:::-;;;945:574:15;;;783:15130:14;945:574:15;;;783:15130:14;;945:574:15;;783:15130:14;;945:574:15;;783:15130:14;;;-1:-1:-1;;;1662:48:15;;783:15130:14;;;;;;;1662:48:15;;;:::i;:::-;;;;;;;;;;;;;783:15130:14;;;;;;;1662:48:15;;;;;;;;;;;;;;;;;:::i;:::-;;;783:15130:14;;;;;1662:48:15;;;;;;;;;783:15130:14;;;;;;;;;;;;;;6038:38:0;783:15130:14;;;;;:::i;:::-;719:10:3;;783:15130:14;;;;;;;;;;;;;;;;;6038:38:0;783:15130:14;;;;;;6038:38:0;:::i;:::-;719:10:3;;6038:38:0;:::i;783:15130:14:-;;;;;;;;;;;;;;;;;3173:2:0;783:15130:14;;;;;;;;;;;;;;;;;;;;13633:10;783:15130;-1:-1:-1;;;;;783:15130:14;;;;;13622:10;783:15130;;;;;;;;;;;;;;;;;13719:10;783:15130;;3506:9:0;783:15130:14;;;;;;13699:31;;783:15130;;;;13820:46;;;;;783:15130;13719:10;783:15130;;;;;;;;;;13820:46;;;;;;:::i;:::-;13719:10;9505:21:0;783:15130:14;;13719:10;783:15130;;3506:9:0;783:15130:14;;;;;;9696:24:0;;;;783:15130:14;;13719:10;;;;;;;;783:15130;;3506:9:0;783:15130:14;;;;;;;;;;;;;;;;;;;9978:37:0;13719:10:14;;9978:37:0;;783:15130:14;13633:10;783:15130;;;;;;13622:10;783:15130;;;;;;;-1:-1:-1;;;;;783:15130:14;;;;;;13955:24;;783:15130;13917:62;;13913:249;783:15130;;;;;;;;;13633:10;783:15130;;13995:59;;;;;783:15130;;-1:-1:-1;;;13995:59:14;;13719:10;13995:59;;;783:15130;;;;;;;;;;;;;;-1:-1:-1;783:15130:14;;;;;;;;13995:59;;;;;;;;;;;;13913:249;783:15130;;13995:59;;;;:::i;13913:249::-;783:15130;;;;;;;;;;;;;;2723:36;2719:110;;783:15130;9272:11;783:15130;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;11015:21;;;;783:15130;11015:21;;;;;;:::i;:::-;783:15130;;;;;:::i;:::-;;;;11260:166;783:15130;;;;;:::i;11260:166::-;783:15130;;;;;;;:::i;:::-;;;10965:626;;;783:15130;10965:626;;;783:15130;10965:626;;783:15130;;10965:626;;783:15130;;;-1:-1:-1;;;9425:16:14;;10965:626;783:15130;9425:4;783:15130;9425:4;:16;;;;;;;;;;;;;;13913:249;783:15130;;;;;;;;;;9525:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;13913:249;783:15130;;;;;;;;;;;9613:57;;13719:10;9613:57;;;783:15130;9425:4;783:15130;;;;;;;;;9613:57;;;;;;;;;;;13913:249;783:15130;;;;;;;;9272:11;783:15130;;;;;;;;;;9744:36;;;;9425:4;9744:36;;;783:15130;9744:36;;783:15130;9744:36;;;;;;;;;;;;;13913:249;9737:43;;;9733:128;;-1:-1:-1;783:15130:14;;-1:-1:-1;;;9979:42:14;;-1:-1:-1;;;;;783:15130:14;;9979:42;;;783:15130;;;;;;;;;;;;;;;;;;;;;;;;9979:42;;;;;;;;;;;;;10125:58;9979:42;;;;;;-1:-1:-1;783:15130:14;;-1:-1:-1;;;10125:58:14;;783:15130;;;;;;;10125:58;;;:::i;:::-;;;;;;;;;;;;;13913:249;;783:15130;;10125:58;;;;;;;;;;;;:::i;:::-;;;783:15130;;;;;;10125:58;;;;;;783:15130;;;;;;;;9979:42;;;;;;;;;;;;;:::i;:::-;;;;;9733:128;783:15130;;;;;;;;;9818:36;;;;;;9425:4;9818:36;;;783:15130;9818:36;;;;;;;;;;;9733:128;-1:-1:-1;;783:15130:14;-1:-1:-1;;;9801:60:14;;;;;783:15130;;;;;;;-1:-1:-1;9801:60:14;9818:36;;;;;;;;;;;;;;;;;:::i;:::-;;;783:15130;;;;;;;;9818:36;;;;;;;;;;;783:15130;;;;;;;;;9744:36;;;;;;;;;;;;;;;;:::i;:::-;;;783:15130;;;;;9744:36;;;;;;;;;783:15130;;;;;;;;;;;;-1:-1:-1;;;783:15130:14;;;;;;;;;;;;;;;;;;;;;9613:57;;;;;;;;;;;;;;:::i;:::-;;;;;783:15130;;;;;;;;;9525:56;;;;;;;;;;;;;;;;;:::i;:::-;;;783:15130;;;;;;;9525:56;;;;;;;;;;783:15130;;;;;;;;;9425:16;;;;;;;;;;;;;;;;;;:::i;:::-;;;783:15130;;;;;;;;;;;;9425:16;;;;;;;;;;;783:15130;;;;;;;;;2719:110;783:15130;;-1:-1:-1;;;2782:36:14;;;;;783:15130;;;;;2782:36;783:15130;;;-1:-1:-1;;;783:15130:14;;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:15130:14;;;;;;;;;;-1:-1:-1;;;783:15130:14;;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:15130:14;;;;;;;;;;-1:-1:-1;;;783:15130:14;;;;;;;;;;;;;-1:-1:-1;;;783:15130:14;;;;;;;;;;-1:-1:-1;;;783:15130:14;;;;;;;;;;;;;-1:-1:-1;;;783:15130:14;;;;;;;;;;;;;;;;-1:-1:-1;;783:15130:14;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;783:15130:14;;;;;;;;;;;;719:10:3;783:15130:14;;;;;;;;;;;;;;11351:37:0;;11347:243;;783:15130:14;;5441:6:0;;;;;;:::i;11347:243::-;11412:26;;;783:15130:14;;;;;;11539:25:0;783:15130:14;;;5441:6:0;783:15130:14;;719:10:3;11539:25:0;;:::i;:::-;11347:243;;;;;;;;783:15130:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;783:15130:14;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;783:15130:14;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;783:15130:14;;;;;;;;;;;;;;;;;;2032:59:9;;:::i;:::-;783:15130:14;3308:14;783:15130;;;;;;;;;;;;;;;;;;;;;3358:10;783:15130;;;;;;;;;;;;;;;;;;;;;;;;;;3531:109;;783:15130;;;3531:109;-1:-1:-1;;;;;783:15130:14;;;;;;;;;;3605:24;783:15130;;;3605:24;783:15130;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:15130:14;;;;;;;;;;;;;;;;;;;;;4593:6:0;783:15130:14;;:::i;:::-;;;719:10:3;;4593:6:0;:::i;783:15130:14:-;;;;;;;;;;:::i;:::-;2930:10;;;;783:15130;;2919:10;783:15130;;2898:146;-1:-1:-1;;;;;783:15130:14;;;;;;;;2957:24;;783:15130;2919:62;2898:146;:::i;:::-;2930:10;783:15130;;2919:10;783:15130;;;;;;;;2723:36;2719:110;;7284:37;2930:10;;;;783:15130;;2919:10;783:15130;;;;7071:15;;7029:39;;;783:15130;7096:38;;;783:15130;7162:38;;;783:15130;7228:33;;783:15130;7284:37;783:15130;;;2719:110;783:15130;;-1:-1:-1;;;2782:36:14;;2930:10;2782:36;;;783:15130;;;2782:36;783:15130;;;;;;;;;;;;;;;;;;2240:5:0;783:15130:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;2240:5:0;783:15130:14;;;;;;;;;-1:-1:-1;;;783:15130:14;;;;;;;;;;;;;;;;;;;-1:-1:-1;783:15130:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2930:10;;783:15130;;2919:10;783:15130;;2898:146;-1:-1:-1;;;;;783:15130:14;;;;;;;;2957:24;;783:15130;2919:62;2898:146;:::i;:::-;2930:10;783:15130;;2919:10;783:15130;;;;;;;;2723:36;2719:110;;783:15130;4522:6;783:15130;;;4522:6;:::i;2719:110::-;783:15130;;;;2782:36;;;;;;2930:10;2782:36;;;783:15130;2782:36;783:15130;;;;;;;;;-1:-1:-1;;783:15130:14;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1509:56:4;;;:100;;;;783:15130:14;;;;;;;1509:100:4;-1:-1:-1;;;1569:40:4;;-1:-1:-1;1509:100:4;;;783:15130:14;;;;-1:-1:-1;;;;;783:15130:14;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;783:15130:14;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;783:15130:14;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;783:15130:14;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;783:15130:14;;;;;;;:::o;:::-;-1:-1:-1;;;;;783:15130:14;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;783:15130:14;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;783:15130:14;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;783:15130:14;;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;;;;783:15130:14;;;;;;;;;;;-1:-1:-1;;783:15130:14;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;783:15130:14;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;783:15130:14;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:15130:14;;;;;;;;;-1:-1:-1;;;;;783:15130:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;-1:-1:-1;;;;;783:15130:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;14406:1141;783:15130;;;;;;;;-1:-1:-1;;783:15130:14;;;14636:10;783:15130;;;;;;;;;;;14636:43;14599:255;14636:43;;;783:15130;14693:43;;;783:15130;14750:38;;;14802:42;14750:38;;;783:15130;14802:42;;783:15130;14599:255;;:::i;:::-;783:15130;14884:14;783:15130;14902:9;783:15130;;;;;;;14915:15;-1:-1:-1;14884:106:14;;;;14406:1141;14884:166;;;14406:1141;14884:230;;;14406:1141;14884:311;;;14406:1141;14884:408;;;14406:1141;14884:471;;;14406:1141;14884:536;;;14406:1141;14884:590;;;;14406:1141;14884:656;;;14406:1141;14865:675;;;;;;;;14406:1141;:::o;14884:656::-;783:15130;;;;;15490:34;783:15130;15490:50;;-1:-1:-1;14884:656:14;;;;;;;;;;:590;783:15130;;;;;;;;;;;15436:34;;783:15130;15436:38;;;-1:-1:-1;14884:590:14;;:536;783:15130;;;;;;;;;;;;;;;-1:-1:-1;14884:536:14;;;:471;783:15130;;;;;;;;;;;;;;;15308:47;;-1:-1:-1;14884:471:14;;:408;783:15130;;;;;;;;;;;;15211:44;783:15130;15258:4;783:15130;;;;;;;14915:15;-1:-1:-1;14884:408:14;;;783:15130;-1:-1:-1;;;783:15130:14;;;;;;;;14884:311;783:15130;;;;;;;;;;;;;;15130:40;783:15130;15173:4;783:15130;;;;;;;14915:15;-1:-1:-1;14884:311:14;;;:230;783:15130;;;;;;;;;;15066:44;783:15130;15066:48;;;-1:-1:-1;14884:230:14;;:166;783:15130;;;;;;;;;;;;15006:40;783:15130;15006:44;;;-1:-1:-1;14884:166:14;;:106;783:15130;;;;;;;;;;;;;;;;;;;14946:44;;-1:-1:-1;14884:106:14;;15676:235;15757:10;783:15130;-1:-1:-1;;;;;783:15130:14;;;;15757:24;;15753:100;;783:15130;-1:-1:-1;783:15130:14;15870:10;783:15130;;-1:-1:-1;;;;;783:15130:14;-1:-1:-1;783:15130:14;;;;;15676:235;:::o;15753:100::-;783:15130;;15815:14;783:15130;;-1:-1:-1;783:15130:14;15804:10;783:15130;;-1:-1:-1;;;;;783:15130:14;-1:-1:-1;783:15130:14;;;;;15797:45;:::o;7473:818:0:-;-1:-1:-1;;;;;783:15130:14;;;;7599:18:0;;783:15130:14;;;7677:16:0;;;783:15130:14;;7615:1:0;783:15130:14;;;7815:9:0;783:15130:14;;;;;;7848:21:0;;;;783:15130:14;;;;;8210:26:0;783:15130:14;;;;;7815:9:0;783:15130:14;;;;;;;;;;;;;;;;;;;;;;8210:26:0;7473:818::o;783:15130:14:-;;;-1:-1:-1;;;783:15130:14;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:15130:14;;;;;;;;;;-1:-1:-1;;;783:15130:14;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:15130:14;;;;;;;;;;-1:-1:-1;;;783:15130:14;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:15130:14;;;;;;;8567:535:0;-1:-1:-1;;;;;783:15130:14;;8650:21:0;;783:15130:14;;8999:37:0;783:15130:14;;8778:22:0;8669:1;783:15130:14;8778:22:0;783:15130:14;8778:22:0;:::i;:::-;;783:15130:14;;;;8946:9:0;783:15130:14;;;;;;;;;;;;;;;;8999:37:0;8567:535::o;783:15130:14:-;;;-1:-1:-1;;;783:15130:14;;;;;;;;;;;;;;;;;;;;10504:370:0;-1:-1:-1;;;;;783:15130:14;;;;10635:19:0;;783:15130:14;;;10713:21:0;;;783:15130:14;;;10835:32:0;783:15130:14;;10652:1:0;783:15130:14;10784:11:0;783:15130:14;;;10652:1:0;783:15130:14;;10652:1:0;783:15130:14;;;;;10652:1:0;783:15130:14;;;;;;;10835:32:0;10504:370::o;783:15130:14:-;;;-1:-1:-1;;;783:15130:14;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:15130:14;;;;;;;;;;-1:-1:-1;;;783:15130:14;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:15130:14;;;;;;;;;;-1:-1:-1;;;;;783:15130:14;;;;;;:::o;:::-;;;;;;;;;;:::o;1285:170:7:-;783:15130:14;;;;;;1394:56:7;;;;1218:10;1394:56;;;783:15130:14;1394:56:7;;;783:15130:14;;;;;;-1:-1:-1;;;;;783:15130:14;;;;;;;1285:170:7;:::o;1748:636:15:-;;2050:28;1748:636;;2050:28;:::i;:::-;2186:4;783:15130:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1748:636:15;:::o;783:15130:14:-;;;;-1:-1:-1;783:15130:14;;;;;-1:-1:-1;783:15130:14;1797:158:9;1916:7;783:15130:14;-1:-1:-1;;;;;783:15130:14;1902:10:9;:21;783:15130:14;;1797:158:9:o;783:15130:14:-;;;-1:-1:-1;;;783:15130:14;;;;;;;;;;;;-1:-1:-1;;;783:15130:14;;;;;;",
  "language": "Solidity",
  "natspec": {
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "acceptOwnership()": {
        "notice": "Allows an ownership transfer to be completed by the recipient."
      },
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))": {
        "details": "Note ensure you check the msg.sender is the OffRampRouter",
        "notice": "Called by the Router to deliver a message. If this reverts, any token transfers also revert. The message will move to a FAILED state and become available for manual execution.",
        "params": {
          "message": "CCIP Message"
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "getRouter()": {
        "notice": "Return the current router",
        "returns": {
          "_0": "CCIP router address"
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "notice": "Get the current owner"
      },
      "supportsInterface(bytes4)": {
        "details": "Should indicate whether the contract implements IAny2EVMMessageReceiver e.g. return interfaceId == type(IAny2EVMMessageReceiver).interfaceId || interfaceId == type(IERC165).interfaceId This allows CCIP to check if ccipReceive is available before calling it. If this returns false or reverts, only tokens are transferred to the receiver. If this returns true, tokens are transferred and ccipReceive is called atomically. Additionally, if the receiver address does not have code associated with it at the time of execution (EXTCODESIZE returns 0), only tokens will be transferred.",
        "notice": "IERC165 supports an interfaceId",
        "params": {
          "interfaceId": "The interfaceId to check"
        },
        "returns": {
          "_0": "true if the interfaceId is supported"
        }
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "notice": "Allows an owner to begin transferring ownership to a new address."
      }
    },
    "title": "- A simple messenger contract for transferring/receiving tokens and data across chains.",
    "version": 1
  },
  "offset": [
    783,
    15913
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x21 JUMPI JUMPDEST POP POP POP CALLDATASIZE ISZERO PUSH2 0x1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x1F1A JUMPI POP DUP1 PUSH4 0x4783EA4 EQ PUSH2 0x1E83 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1DB6 JUMPI DUP1 PUSH4 0x8A767FE EQ PUSH2 0x1D0B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1CE1 JUMPI DUP1 PUSH4 0x10A78DF8 EQ PUSH2 0x1BE6 JUMPI DUP1 PUSH4 0x1803C2F5 EQ PUSH2 0x1BB9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1B9C JUMPI DUP1 PUSH4 0x1D880928 EQ PUSH2 0x1B65 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A99 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1440 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1424 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x13D5 JUMPI DUP1 PUSH4 0x544B1709 EQ PUSH2 0x12A3 JUMPI DUP1 PUSH4 0x5C292BE5 EQ PUSH2 0xC90 JUMPI DUP1 PUSH4 0x61AC3F99 EQ PUSH2 0xC67 JUMPI DUP1 PUSH4 0x654E8E0C EQ PUSH2 0xC40 JUMPI DUP1 PUSH4 0x6C1DC077 EQ PUSH2 0xC17 JUMPI DUP1 PUSH4 0x6C98D513 EQ PUSH2 0xBEE JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xBB6 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0xB0F JUMPI DUP1 PUSH4 0x85572FFB EQ PUSH2 0x707 JUMPI DUP1 PUSH4 0x8CF19D19 EQ PUSH2 0x6C3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x69B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x580 JUMPI DUP1 PUSH4 0x995714AE EQ PUSH2 0x4D1 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x428 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0xB0F479A1 EQ PUSH2 0x3B3 JUMPI DUP1 PUSH4 0xB2D92955 EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0xC1586AF8 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0xDDF85603 EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0xE12B948B EQ PUSH2 0x265 JUMPI PUSH4 0xF2FDE38B SUB PUSH2 0x11 JUMPI CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH2 0x1C4 PUSH2 0x1F6E JUMP JUMPDEST SWAP1 PUSH2 0x1CD PUSH2 0x2834 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 CALLER DUP5 EQ PUSH2 0x21E JUMPI POP POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP4 OR SWAP1 SSTORE DUP3 SLOAD AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x284 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x284 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xA SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x284 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x284 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x7 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x284 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x284 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x2C9 PUSH2 0x1F6E JUMP JUMPDEST DUP3 PUSH2 0x2D2 PUSH2 0x1F84 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP5 MSTORE PUSH1 0x3 DUP7 MSTORE SWAP3 KECCAK256 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 DUP4 MSTORE DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x284 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x319 PUSH2 0x310 CALLDATASIZE PUSH2 0x1FDA JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0x27DC JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH2 0x100 SWAP3 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x349 PUSH2 0x1F6E JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE KECCAK256 DUP1 SLOAD SWAP3 PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD SWAP1 PUSH1 0x5 PUSH1 0x3 DUP6 ADD SLOAD SWAP4 DUP6 ADD SLOAD SWAP5 ADD SLOAD SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 MLOAD SWAP8 PUSH1 0xFF DUP2 AND ISZERO ISZERO DUP10 MSTORE PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND ISZERO ISZERO PUSH1 0x20 DUP11 ADD MSTORE PUSH1 0x10 SHR AND SWAP1 DUP8 ADD MSTORE PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP3 ADD MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x284 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x284 JUMPI MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x284 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x284 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x421 PUSH2 0x417 PUSH2 0x1F6E JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x246D JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP DUP3 CALLVALUE PUSH2 0x4CE JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x4CE JUMPI PUSH2 0x442 PUSH2 0x1F6E JUMP JUMPDEST SWAP2 DUP4 PUSH1 0x24 CALLDATALOAD SWAP3 CALLER DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP4 PUSH1 0x0 KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0x47D JUMPI PUSH1 0x20 DUP6 PUSH2 0x421 DUP6 DUP6 SUB DUP8 CALLER PUSH2 0x2681 JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x261 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x261 JUMPI CALLER DUP4 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH2 0x527 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP5 DUP7 KECCAK256 SLOAD PUSH1 0x10 SHR AND SWAP1 PUSH32 0x0 AND EQ PUSH2 0x211A JUMP JUMPDEST CALLER DUP4 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0xFF DUP3 DUP5 KECCAK256 SLOAD AND ISZERO PUSH2 0x56A JUMPI POP CALLER DUP3 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE DUP2 KECCAK256 PUSH2 0x100 PUSH2 0xFF00 NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x9 SLOAD AND OR PUSH1 0x9 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x24 SWAP2 MLOAD SWAP1 PUSH4 0x6A9FF79F PUSH1 0xE1 SHL DUP3 MSTORE CALLER SWAP1 DUP3 ADD MSTORE REVERT JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x4CE JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x4CE JUMPI DUP2 MLOAD SWAP2 DUP2 PUSH1 0x6 SLOAD SWAP3 PUSH1 0x1 DUP5 DUP2 SHR SWAP2 DUP2 DUP7 AND SWAP6 DUP7 ISZERO PUSH2 0x691 JUMPI JUMPDEST PUSH1 0x20 SWAP7 DUP8 DUP6 LT DUP2 EQ PUSH2 0x67E JUMPI DUP9 SWAP10 POP SWAP7 DUP9 SWAP7 SWAP8 DUP6 DUP3 SWAP11 MSTORE SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x657 JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x5FB JUMPI JUMPDEST POP POP POP PUSH2 0x5F7 SWAP3 SWAP2 PUSH2 0x5E8 SWAP2 SUB DUP6 PUSH2 0x20A3 JUMP JUMPDEST MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x1F9A JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP1 DUP7 SWAP4 POP PUSH1 0x6 DUP4 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F JUMPDEST DUP3 DUP5 LT PUSH2 0x63F JUMPI POP POP POP DUP3 ADD ADD DUP2 PUSH2 0x5E8 PUSH2 0x5F7 PUSH2 0x5D5 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP11 ADD DUP7 ADD MSTORE DUP9 SWAP6 POP DUP8 SWAP5 SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x626 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP3 ADD MSTORE SWAP4 ISZERO ISZERO PUSH1 0x5 SHL DUP7 ADD SWAP1 SWAP4 ADD SWAP4 POP DUP5 SWAP3 POP PUSH2 0x5E8 SWAP2 POP PUSH2 0x5F7 SWAP1 POP PUSH2 0x5D5 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x22 DUP11 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x5AB JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x284 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x284 JUMPI SWAP1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x284 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x284 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x3 NOT DUP4 DUP2 CALLDATASIZE ADD SLT PUSH2 0x8C3 JUMPI DUP2 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 DUP4 GT PUSH2 0xA43 JUMPI PUSH1 0xA0 SWAP1 DUP4 CALLDATASIZE SUB ADD SLT PUSH2 0x940 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 PUSH32 0x0 DUP5 AND CALLER SUB PUSH2 0xAF8 JUMPI DUP5 MLOAD SWAP2 PUSH2 0x77A DUP4 PUSH2 0x200E JUMP JUMPDEST DUP4 DUP3 ADD CALLDATALOAD DUP4 MSTORE PUSH1 0x24 SWAP1 DUP2 DUP6 ADD CALLDATALOAD DUP2 DUP2 AND DUP2 SUB PUSH2 0xAD7 JUMPI DUP9 DUP6 ADD MSTORE PUSH1 0x44 DUP6 ADD CALLDATALOAD DUP2 DUP2 GT PUSH2 0xA3B JUMPI PUSH2 0x7AF SWAP1 DUP5 CALLDATASIZE SWAP2 DUP9 ADD ADD PUSH2 0x20C4 JUMP JUMPDEST SWAP4 DUP8 DUP2 ADD SWAP5 DUP6 MSTORE PUSH1 0x64 DUP7 ADD CALLDATALOAD DUP3 DUP2 GT PUSH2 0xA3F JUMPI PUSH2 0x7D1 SWAP1 DUP6 CALLDATASIZE SWAP2 DUP10 ADD ADD PUSH2 0x20C4 JUMP JUMPDEST SWAP6 PUSH1 0x60 DUP3 ADD SWAP7 DUP8 MSTORE PUSH1 0x84 DUP2 ADD CALLDATALOAD SWAP1 DUP4 DUP3 GT PUSH2 0xAF4 JUMPI ADD CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0xA3F JUMPI DUP5 DUP2 ADD CALLDATALOAD SWAP3 DUP4 GT PUSH2 0xAE0 JUMPI DUP9 MLOAD SWAP3 PUSH2 0x80F DUP12 DUP3 PUSH1 0x5 SHL ADD DUP6 PUSH2 0x20A3 JUMP JUMPDEST DUP1 DUP5 MSTORE DUP5 DUP12 DUP6 ADD SWAP2 PUSH1 0x6 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0xADC JUMPI DUP6 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xA9D JUMPI POP POP POP PUSH1 0x80 ADD MSTORE DUP3 MLOAD DUP8 DUP2 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0xA37 JUMPI PUSH2 0x851 DUP9 DUP8 SWAP3 ADD PUSH2 0x2783 JUMP JUMPDEST AND DUP1 DUP10 MSTORE PUSH1 0xB DUP9 MSTORE PUSH1 0xFF DUP8 DUP11 KECCAK256 SLOAD AND ISZERO PUSH2 0xA88 JUMPI POP DUP4 MLOAD DUP8 DUP2 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0xA37 JUMPI PUSH2 0x881 DUP9 PUSH1 0xFF SWAP3 ADD PUSH2 0x2797 JUMP JUMPDEST AND DUP1 PUSH2 0x8C7 JUMPI POP POP POP POP MLOAD SWAP2 PUSH1 0x60 DUP4 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0x8C3 JUMPI PUSH2 0x8B6 PUSH1 0x60 SWAP2 PUSH2 0x8AE PUSH2 0x8C0 SWAP7 DUP7 ADD PUSH2 0x2797 JUMP JUMPDEST POP DUP5 ADD PUSH2 0x2783 JUMP JUMPDEST SWAP3 ADD MLOAD SWAP2 AND PUSH2 0x25DD JUMP JUMPDEST DUP1 RETURN JUMPDEST DUP5 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 SWAP9 SWAP8 SWAP6 SWAP4 SWAP5 SWAP7 SWAP9 EQ PUSH1 0x0 EQ PUSH2 0x944 JUMPI POP POP POP POP DUP2 MLOAD DUP4 DUP2 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0x940 JUMPI PUSH2 0x8F7 DUP5 DUP7 SWAP3 ADD PUSH2 0x2783 JUMP JUMPDEST AND DUP6 MSTORE PUSH1 0xB DUP4 MSTORE DUP5 KECCAK256 PUSH2 0x100 PUSH2 0xFF00 NOT DUP3 SLOAD AND OR SWAP1 SSTORE MLOAD SWAP1 DUP1 DUP3 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0x93C JUMPI PUSH2 0x925 SWAP2 ADD PUSH2 0x2783 JUMP JUMPDEST AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x9 SLOAD AND OR PUSH1 0x9 SSTORE DUP1 RETURN JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST SWAP3 SWAP7 SWAP4 SWAP5 SWAP3 PUSH1 0x2 SUB PUSH2 0xA47 JUMPI POP MLOAD PUSH1 0xA0 DUP2 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0xA43 JUMPI PUSH2 0x96A DUP6 DUP3 ADD PUSH2 0x2797 JUMP JUMPDEST POP DUP4 DUP2 ADD MLOAD SWAP6 PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0xA0 PUSH1 0x80 DUP5 ADD MLOAD SWAP4 ADD MLOAD SWAP8 DUP5 MLOAD DUP9 DUP2 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0xA3F JUMPI PUSH2 0x99A DUP10 DUP9 SWAP3 ADD PUSH2 0x2783 JUMP JUMPDEST AND DUP11 MSTORE PUSH1 0xB DUP9 MSTORE TIMESTAMP PUSH1 0x1 DUP9 DUP13 KECCAK256 ADD SSTORE DUP5 MLOAD DUP9 DUP2 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0xA3F JUMPI PUSH2 0x9C3 DUP10 DUP9 SWAP3 ADD PUSH2 0x2783 JUMP JUMPDEST AND DUP11 MSTORE PUSH1 0x2 DUP8 DUP12 KECCAK256 ADD SSTORE DUP4 MLOAD DUP8 DUP2 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0xA3B JUMPI PUSH2 0x9E7 DUP9 DUP8 SWAP3 ADD PUSH2 0x2783 JUMP JUMPDEST AND DUP10 MSTORE PUSH1 0x3 DUP7 DUP11 KECCAK256 ADD SSTORE DUP3 MLOAD DUP7 DUP2 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0xA37 JUMPI PUSH2 0xA0B DUP8 DUP7 SWAP3 ADD PUSH2 0x2783 JUMP JUMPDEST AND DUP9 MSTORE DUP5 DUP9 KECCAK256 ADD SSTORE MLOAD DUP4 DUP2 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0x940 JUMPI PUSH1 0x5 SWAP4 PUSH2 0xA2D SWAP2 ADD PUSH2 0x2783 JUMP JUMPDEST AND DUP5 MSTORE DUP4 KECCAK256 ADD SSTORE DUP1 RETURN JUMPDEST DUP9 DUP1 REVERT JUMPDEST DUP10 DUP1 REVERT JUMPDEST DUP11 DUP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x19 PUSH1 0x64 SWAP3 DUP9 DUP9 MLOAD SWAP4 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x696E76616C696420636F6D6D616E642066726F6D204E6F646500000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP7 MLOAD PUSH4 0x6A9FF79F PUSH1 0xE1 SHL DUP2 MSTORE DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE REVERT JUMPDEST DUP11 DUP3 CALLDATASIZE SUB SLT PUSH2 0xADC JUMPI DUP11 MLOAD SWAP1 PUSH2 0xAB2 DUP3 PUSH2 0x206D JUMP JUMPDEST DUP3 CALLDATALOAD SWAP1 DUP12 DUP3 AND DUP3 SUB PUSH2 0xAD7 JUMPI DUP3 DUP15 SWAP3 DUP15 SWAP5 MSTORE DUP3 DUP6 ADD CALLDATALOAD DUP4 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x829 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP13 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x41 DUP7 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x0 REVERT JUMPDEST DUP12 DUP1 REVERT JUMPDEST PUSH1 0x24 SWAP1 DUP6 MLOAD SWAP1 PUSH4 0x35FDCCCD PUSH1 0xE2 SHL DUP3 MSTORE CALLER SWAP1 DUP3 ADD MSTORE REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x261 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x261 JUMPI PUSH1 0x1 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 DUP5 AND CALLER SUB PUSH2 0xB7A JUMPI POP POP DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP3 AND CALLER SWAP1 DUP2 OR DUP7 SSTORE SWAP4 AND PUSH1 0x1 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x26BAB9BA10313290383937B837B9B2B21037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x284 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x284 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xBDE PUSH2 0x1F6E JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x2 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x4CE JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x4CE JUMPI PUSH2 0xC07 PUSH2 0x2834 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND SWAP1 SSTORE DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x284 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x284 JUMPI PUSH1 0x9 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x284 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x284 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x7 SLOAD PUSH1 0xA8 SHR AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x284 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x284 JUMPI PUSH1 0x8 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x284 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x284 JUMPI PUSH2 0xCAB PUSH2 0x1FF8 JUMP JUMPDEST PUSH2 0xCB3 PUSH2 0x1F84 JUMP JUMPDEST SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 DUP7 AND SWAP3 DUP4 DUP7 MSTORE PUSH1 0x20 PUSH1 0xB DUP2 MSTORE PUSH1 0xFF DUP5 DUP9 KECCAK256 SLOAD AND ISZERO PUSH2 0x1261 JUMPI DUP7 SWAP8 PUSH1 0xFF PUSH1 0x7 SWAP9 SWAP8 SWAP9 SLOAD AND ISZERO PUSH2 0x11FA JUMPI JUMPDEST POP DUP4 MLOAD PUSH1 0x1 DUP3 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 SWAP4 AND SWAP3 DUP4 DUP7 DUP4 ADD MSTORE PUSH1 0x60 SWAP1 DUP8 DUP3 DUP5 ADD MSTORE DUP2 DUP4 MSTORE PUSH2 0xD14 DUP4 PUSH2 0x2088 JUMP JUMPDEST DUP10 PUSH1 0x9 SLOAD AND DUP10 MSTORE PUSH1 0xB DUP5 MSTORE DUP7 DUP10 KECCAK256 PUSH2 0xFF00 NOT DUP2 SLOAD AND SWAP1 SSTORE DUP10 PUSH1 0x9 SLOAD AND SWAP3 DUP4 DUP11 MSTORE DUP8 DUP11 KECCAK256 SLOAD DUP3 DUP2 PUSH1 0x10 SHR AND SWAP3 PUSH32 0x0 AND DUP4 EQ PUSH1 0x0 EQ PUSH2 0xDEF JUMPI POP POP POP POP POP POP DUP6 PUSH1 0x9 SLOAD AND DUP1 EXTCODESIZE ISZERO PUSH2 0x940 JUMPI DUP6 SWAP3 DUP4 PUSH1 0x44 SWAP3 DUP7 MLOAD SWAP8 DUP9 SWAP6 DUP7 SWAP5 PUSH4 0x4BB297FF PUSH1 0xE1 SHL DUP7 MSTORE DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xDE6 JUMPI POP PUSH2 0xDD2 JUMPI JUMPDEST POP POP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL SWAP2 DUP2 AND DUP3 PUSH1 0x8 SLOAD AND OR PUSH1 0x8 SSTORE AND PUSH1 0x9 SSTORE TIMESTAMP PUSH1 0xA SSTORE DUP1 RETURN JUMPDEST PUSH2 0xDDB SWAP1 PUSH2 0x205A JUMP JUMPDEST PUSH2 0x284 JUMPI DUP2 DUP4 PUSH2 0xDAA JUMP JUMPDEST MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 SWAP6 POP SWAP3 SWAP7 SWAP8 POP PUSH1 0xFF SWAP2 SWAP6 SWAP4 SWAP9 POP AND ISZERO PUSH2 0x11E3 JUMPI DUP8 PUSH1 0x7 SLOAD PUSH1 0x8 SHR AND DUP5 DUP2 SWAP6 PUSH1 0x80 DUP10 MLOAD PUSH2 0xE1B DUP2 PUSH2 0x200E JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 DUP13 DUP3 ADD MSTORE DUP3 DUP12 DUP3 ADD MSTORE DUP14 DUP4 DUP3 ADD MSTORE ADD MSTORE DUP8 MLOAD SWAP7 DUP10 DUP9 ADD MSTORE DUP9 DUP8 MSTORE PUSH2 0xE42 DUP8 PUSH2 0x206D JUMP JUMPDEST DUP8 MLOAD PUSH2 0xE4D DUP2 PUSH2 0x203F JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH2 0xE6A DUP10 MLOAD PUSH2 0xE5F DUP2 PUSH2 0x203F JUMP JUMPDEST PUSH3 0x1E8480 DUP2 MSTORE PUSH2 0x27A5 JUMP JUMPDEST SWAP4 DUP10 MLOAD SWAP9 PUSH2 0xE77 DUP11 PUSH2 0x200E JUMP JUMPDEST DUP10 MSTORE DUP11 DUP10 ADD MSTORE DUP9 DUP9 ADD MSTORE DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD MSTORE DUP5 MLOAD PUSH4 0xB0F479A1 PUSH1 0xE0 SHL DUP2 MSTORE DUP7 DUP2 DUP4 DUP2 ADDRESS GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x11D9 JUMPI SWAP1 DUP9 SWAP2 DUP11 SWAP2 PUSH2 0x119F JUMPI JUMPDEST POP DUP7 MLOAD PUSH4 0x20487DED PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 AND SWAP4 DUP10 SWAP1 DUP9 DUP4 DUP1 PUSH2 0xECF DUP11 DUP10 DUP10 DUP5 ADD PUSH2 0x2174 JUMP JUMPDEST SUB DUP2 DUP10 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x1195 JUMPI SWAP1 DUP10 SWAP2 DUP4 SWAP5 PUSH2 0x1163 JUMPI JUMPDEST POP PUSH1 0x64 DUP10 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP4 MSTORE CALLER DUP10 DUP5 ADD MSTORE ADDRESS PUSH1 0x24 DUP5 ADD MSTORE DUP8 PUSH1 0x44 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x1159 JUMPI DUP11 SWAP2 PUSH2 0x113C JUMPI JUMPDEST POP ISZERO PUSH2 0x10F9 JUMPI DUP8 PUSH1 0x7 SLOAD PUSH1 0x8 SHR AND SWAP1 DUP7 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL SWAP1 DUP2 DUP2 MSTORE ADDRESS DUP6 DUP3 ADD MSTORE DUP10 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x10EF JUMPI DUP13 SWAP2 PUSH2 0x10C2 JUMPI JUMPDEST POP DUP3 GT PUSH2 0x1046 JUMPI POP DUP7 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 DUP6 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP11 SWAP4 SWAP3 SWAP1 SWAP2 DUP10 SWAP2 DUP4 SWAP2 DUP3 SWAP1 DUP8 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x103C JUMPI SWAP2 DUP9 SWAP6 SWAP4 SWAP2 PUSH2 0xFC5 SWAP9 SWAP8 SWAP6 SWAP4 PUSH2 0x100F JUMPI JUMPDEST POP DUP7 MLOAD PUSH4 0x96F4E9F9 PUSH1 0xE0 SHL DUP2 MSTORE SWAP8 DUP9 SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 ADD PUSH2 0x2174 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x1006 JUMPI POP PUSH2 0xFDD JUMPI JUMPDEST POP POP PUSH2 0xDAD JUMP JUMPDEST DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xFFF JUMPI JUMPDEST PUSH2 0xFF0 DUP2 DUP4 PUSH2 0x20A3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x284 JUMPI DUP3 DUP1 PUSH2 0xFD6 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xFE6 JUMP JUMPDEST MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x102E SWAP1 DUP8 RETURNDATASIZE DUP10 GT PUSH2 0x1035 JUMPI JUMPDEST PUSH2 0x1026 DUP2 DUP4 PUSH2 0x20A3 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2240 JUMP JUMPDEST POP DUP12 PUSH2 0xFAA JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x101C JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 DUP11 DUP9 DUP11 DUP1 DUP8 SWAP6 PUSH1 0x24 DUP5 MLOAD DUP1 SWAP10 DUP2 SWAP4 DUP3 MSTORE ADDRESS DUP11 DUP4 ADD MSTORE GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x10B7 JUMPI SWAP3 PUSH2 0x1086 JUMPI JUMPDEST POP MLOAD PUSH4 0x4787A103 PUSH1 0xE1 SHL DUP2 MSTORE SWAP3 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP2 POP REVERT JUMPDEST SWAP1 SWAP2 POP DUP5 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x10B0 JUMPI JUMPDEST PUSH2 0x109D DUP2 DUP4 PUSH2 0x20A3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xAD7 JUMPI PUSH1 0x44 SWAP4 MLOAD SWAP1 DUP6 PUSH2 0x106B JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1093 JUMP JUMPDEST DUP3 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP DUP10 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x10E8 JUMPI JUMPDEST PUSH2 0x10D9 DUP2 DUP4 PUSH2 0x20A3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xAD7 JUMPI MLOAD DUP13 PUSH2 0xF51 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x10CF JUMP JUMPDEST DUP10 MLOAD RETURNDATASIZE DUP15 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP4 ADD DUP9 SWAP1 MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F742070726F7669646564204C696E6B20666F722066656573000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x1153 SWAP2 POP DUP9 RETURNDATASIZE DUP11 GT PUSH2 0x1035 JUMPI PUSH2 0x1026 DUP2 DUP4 PUSH2 0x20A3 JUMP JUMPDEST DUP11 PUSH2 0xF19 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP3 POP SWAP3 POP DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x118E JUMPI JUMPDEST PUSH2 0x117B DUP2 DUP4 PUSH2 0x20A3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xAD7 JUMPI DUP8 DUP11 SWAP2 MLOAD SWAP3 DUP13 PUSH2 0xEE5 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1171 JUMP JUMPDEST DUP9 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP DUP9 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x11D2 JUMPI JUMPDEST PUSH2 0x11B8 DUP2 DUP4 PUSH2 0x20A3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xA37 JUMPI MLOAD DUP8 DUP2 AND DUP2 SUB PUSH2 0xA37 JUMPI DUP8 SWAP1 DUP11 PUSH2 0xEAD JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x11AE JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH4 0x6A9FF79F PUSH1 0xE1 SHL DUP2 MSTORE DUP1 DUP4 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH2 0x120E SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 POP DUP8 PUSH1 0x9 SLOAD AND PUSH2 0x227B JUMP JUMPDEST ISZERO PUSH2 0x121F JUMPI SWAP1 DUP7 SWAP5 SWAP4 SWAP3 SWAP2 DUP9 PUSH2 0xCE6 JUMP JUMPDEST SWAP1 POP PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E646974696F6E20746F2077617270206E6F74206D657400000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44657374696E6174696F6E204E6F6465206973206E6F74207661696C64000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x4CE JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x4CE JUMPI PUSH2 0x12BE PUSH2 0x1FF8 JUMP JUMPDEST SWAP2 PUSH2 0x12C7 PUSH2 0x1F84 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 PUSH1 0x44 CALLDATALOAD DUP6 DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0xAD7 JUMPI PUSH1 0x64 CALLDATALOAD SWAP1 DUP7 DUP3 AND DUP1 SWAP3 SUB PUSH2 0xAD7 JUMPI PUSH1 0x84 CALLDATALOAD SWAP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP10 GT PUSH2 0xA43 JUMPI PUSH2 0x1312 PUSH2 0x138E SWAP7 SWAP8 SWAP9 SWAP10 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x20C4 JUMP JUMPDEST DUP8 MLOAD SWAP5 PUSH1 0x20 SWAP11 DUP12 SWAP8 AND DUP8 DUP8 ADD MSTORE DUP7 DUP7 MSTORE PUSH2 0x132B DUP7 PUSH2 0x206D JUMP JUMPDEST DUP9 MLOAD PUSH2 0x1336 DUP2 PUSH2 0x203F JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH2 0x1353 DUP11 MLOAD PUSH2 0x1348 DUP2 PUSH2 0x203F JUMP JUMPDEST PUSH3 0xF4240 DUP2 MSTORE PUSH2 0x27A5 JUMP JUMPDEST SWAP3 DUP11 MLOAD SWAP8 PUSH2 0x1360 DUP10 PUSH2 0x200E JUMP JUMPDEST DUP9 MSTORE DUP9 DUP9 ADD MSTORE DUP10 DUP8 ADD MSTORE PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD MSTORE DUP7 MLOAD PUSH4 0x20487DED PUSH1 0xE0 SHL DUP2 MSTORE SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 DUP5 ADD PUSH2 0x2174 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x10B7 JUMPI SWAP3 PUSH2 0x13A6 JUMPI JUMPDEST POP MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 POP DUP3 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x13CE JUMPI JUMPDEST PUSH2 0x13BE DUP2 DUP4 PUSH2 0x20A3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xAD7 JUMPI MLOAD SWAP1 CODESIZE PUSH2 0x139F JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x13B4 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x284 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x284 JUMPI PUSH2 0x421 PUSH1 0x20 SWAP3 DUP3 PUSH2 0x13F6 PUSH2 0x1F6E JUMP JUMPDEST SWAP2 CALLER DUP2 MSTORE PUSH1 0x3 DUP7 MSTORE KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 MSTORE DUP5 MSTORE PUSH2 0x141D PUSH1 0x24 CALLDATALOAD DUP5 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2258 JUMP JUMPDEST SWAP1 CALLER PUSH2 0x2681 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x284 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x284 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x284 JUMPI PUSH1 0x20 SWAP3 DUP4 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x261 JUMPI PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 MSTORE PUSH1 0xB DUP6 MSTORE DUP2 DUP5 KECCAK256 SLOAD DUP4 CALLDATALOAD SWAP2 SWAP1 PUSH1 0x8 SHR PUSH1 0xFF AND ISZERO PUSH2 0x1A61 JUMPI CALLER DUP6 MSTORE PUSH1 0x2 DUP7 MSTORE DUP3 DUP6 KECCAK256 SLOAD DUP3 GT PUSH2 0x1A28 JUMPI DUP3 MLOAD SWAP6 DUP6 DUP2 DUP9 ADD MSTORE CALLER DUP5 DUP9 ADD MSTORE PUSH1 0x60 DUP4 DUP2 DUP10 ADD MSTORE DUP1 DUP9 MSTORE PUSH2 0x14AE DUP9 PUSH2 0x2088 JUMP JUMPDEST CALLER ISZERO PUSH2 0x19DB JUMPI CALLER DUP8 MSTORE PUSH1 0x2 DUP3 MSTORE DUP5 DUP8 KECCAK256 SLOAD SWAP8 DUP5 DUP10 LT PUSH2 0x198D JUMPI DUP5 DUP9 SWAP10 SWAP9 SWAP7 SWAP8 SWAP9 CALLER DUP9 MSTORE PUSH1 0x2 DUP6 MSTORE SUB DUP8 DUP8 KECCAK256 SSTORE DUP5 DUP9 SLOAD SUB DUP9 SSTORE DUP6 DUP8 MLOAD DUP7 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 CALLER SWAP3 LOG3 DUP4 PUSH1 0x9 SLOAD AND SWAP2 DUP3 DUP8 MSTORE PUSH1 0xB DUP5 MSTORE DUP8 DUP8 KECCAK256 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 DUP4 DUP2 PUSH1 0x10 SHR AND SWAP4 PUSH32 0x0 AND DUP5 EQ PUSH1 0x0 EQ PUSH2 0x15AF JUMPI POP POP POP POP POP POP PUSH1 0x9 SLOAD AND DUP1 EXTCODESIZE ISZERO PUSH2 0x261 JUMPI DUP4 MLOAD PUSH4 0x15E005B7 PUSH1 0xE3 SHL DUP2 MSTORE CALLER SWAP6 DUP2 ADD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP4 DUP5 SWAP2 SWAP1 DUP3 SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xDE6 JUMPI POP PUSH2 0x15A6 JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x8C0 SWAP1 PUSH2 0x205A JUMP JUMPDEST SWAP1 SWAP3 SWAP6 SWAP7 POP PUSH1 0xFF SWAP2 SWAP4 SWAP8 POP SWAP9 SWAP4 SWAP9 AND ISZERO PUSH2 0x1976 JUMPI DUP5 PUSH1 0x7 SLOAD PUSH1 0x8 SHR AND DUP3 DUP2 SWAP4 PUSH1 0x80 DUP11 MLOAD PUSH2 0x15DB DUP2 PUSH2 0x200E JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 DUP14 DUP3 ADD MSTORE DUP3 DUP13 DUP3 ADD MSTORE DUP14 DUP4 DUP3 ADD MSTORE ADD MSTORE DUP9 MLOAD SWAP8 DUP11 DUP10 ADD MSTORE DUP10 DUP9 MSTORE PUSH2 0x1602 DUP9 PUSH2 0x206D JUMP JUMPDEST DUP9 MLOAD PUSH2 0x160D DUP2 PUSH2 0x203F JUMP JUMPDEST DUP12 DUP2 MSTORE PUSH2 0x161E DUP11 MLOAD PUSH2 0xE5F DUP2 PUSH2 0x203F JUMP JUMPDEST SWAP4 DUP11 MLOAD SWAP10 PUSH2 0x162B DUP12 PUSH2 0x200E JUMP JUMPDEST DUP11 MSTORE DUP12 DUP11 ADD MSTORE DUP10 DUP10 ADD MSTORE DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD MSTORE DUP6 MLOAD PUSH4 0xB0F479A1 PUSH1 0xE0 SHL DUP2 MSTORE DUP8 DUP2 DUP5 DUP2 ADDRESS GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x196C JUMPI SWAP1 DUP6 SWAP2 DUP11 SWAP2 PUSH2 0x1932 JUMPI JUMPDEST POP AND SWAP4 DUP9 DUP8 MLOAD SWAP3 PUSH4 0x20487DED PUSH1 0xE0 SHL DUP5 MSTORE DUP10 DUP5 DUP1 PUSH2 0x1682 DUP12 DUP11 DUP11 DUP5 ADD PUSH2 0x2174 JUMP JUMPDEST SUB DUP2 DUP11 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x1928 JUMPI SWAP1 DUP11 SWAP2 DUP4 SWAP6 PUSH2 0x18F7 JUMPI JUMPDEST POP PUSH1 0x64 DUP11 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP4 MSTORE CALLER DUP11 DUP5 ADD MSTORE ADDRESS PUSH1 0x24 DUP5 ADD MSTORE DUP9 PUSH1 0x44 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x18ED JUMPI DUP11 SWAP2 PUSH2 0x18D0 JUMPI JUMPDEST POP ISZERO PUSH2 0x188D JUMPI SWAP1 DUP9 SWAP3 SWAP2 PUSH1 0x7 SLOAD PUSH1 0x8 SHR AND SWAP1 DUP8 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL SWAP1 DUP2 DUP2 MSTORE ADDRESS DUP6 DUP3 ADD MSTORE DUP11 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1883 JUMPI DUP7 SWAP2 PUSH2 0x1856 JUMPI JUMPDEST POP DUP3 GT PUSH2 0x17D7 JUMPI POP DUP8 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 DUP10 SWAP2 DUP4 SWAP2 SWAP1 DUP3 SWAP1 DUP8 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x103C JUMPI SWAP2 DUP9 SWAP6 SWAP4 SWAP2 PUSH2 0x1777 SWAP9 SWAP8 SWAP6 SWAP4 PUSH2 0x17BA JUMPI POP DUP7 MLOAD PUSH4 0x96F4E9F9 PUSH1 0xE0 SHL DUP2 MSTORE SWAP8 DUP9 SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 ADD PUSH2 0x2174 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x17B1 JUMPI POP PUSH2 0x178C JUMPI POP POP DUP1 RETURN JUMPDEST DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x17AA JUMPI JUMPDEST PUSH2 0x179F DUP2 DUP4 PUSH2 0x20A3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x4CE JUMPI DUP1 RETURN JUMPDEST POP RETURNDATASIZE PUSH2 0x1795 JUMP JUMPDEST MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x17D0 SWAP1 DUP8 RETURNDATASIZE DUP10 GT PUSH2 0x1035 JUMPI PUSH2 0x1026 DUP2 DUP4 PUSH2 0x20A3 JUMP JUMPDEST POP DUP11 PUSH2 0xFAA JUMP JUMPDEST DUP10 SWAP2 SWAP3 DUP3 DUP11 SWAP3 PUSH1 0x24 DUP5 MLOAD DUP1 SWAP5 DUP2 SWAP4 DUP3 MSTORE ADDRESS DUP11 DUP4 ADD MSTORE GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x184C JUMPI DUP7 SWAP4 PUSH2 0x1818 JUMPI JUMPDEST POP POP MLOAD PUSH4 0x4787A103 PUSH1 0xE1 SHL DUP2 MSTORE SWAP3 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP2 POP REVERT JUMPDEST SWAP1 DUP1 SWAP3 SWAP4 POP DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1845 JUMPI JUMPDEST PUSH2 0x1830 DUP2 DUP4 PUSH2 0x20A3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x8C3 JUMPI PUSH1 0x44 SWAP5 POP MLOAD SWAP1 DUP6 DUP1 PUSH2 0x17FC JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1826 JUMP JUMPDEST DUP3 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP DUP11 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x187C JUMPI JUMPDEST PUSH2 0x186D DUP2 DUP4 PUSH2 0x20A3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x940 JUMPI MLOAD DUP13 PUSH2 0x1707 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1863 JUMP JUMPDEST DUP11 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP10 SWAP1 MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F742070726F7669646564204C696E6B20666F722066656573000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x18E7 SWAP2 POP DUP10 RETURNDATASIZE DUP12 GT PUSH2 0x1035 JUMPI PUSH2 0x1026 DUP2 DUP4 PUSH2 0x20A3 JUMP JUMPDEST DUP11 PUSH2 0x16CC JUMP JUMPDEST DUP9 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP2 SWAP4 SWAP3 SWAP7 POP RETURNDATASIZE DUP4 GT PUSH2 0x1921 JUMPI JUMPDEST PUSH2 0x190F DUP2 DUP4 PUSH2 0x20A3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x284 JUMPI DUP10 SWAP1 MLOAD SWAP4 DUP13 PUSH2 0x1698 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1905 JUMP JUMPDEST DUP10 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP DUP10 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x1965 JUMPI JUMPDEST PUSH2 0x194B DUP2 DUP4 PUSH2 0x20A3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xA37 JUMPI MLOAD DUP5 DUP2 AND DUP2 SUB PUSH2 0xA37 JUMPI DUP5 SWAP1 DUP11 PUSH2 0x1661 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1941 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP7 MLOAD PUSH4 0x6A9FF79F PUSH1 0xE1 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP8 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP9 ADD DUP5 SWAP1 MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP8 ADD DUP4 SWAP1 MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP6 ADD DUP8 SWAP1 MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E6F7420656E6F756768742062616C616E6365 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP6 ADD DUP8 SWAP1 MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4E6F6465206973206E6F7420416374697665 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x284 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x284 JUMPI PUSH2 0x1AB5 PUSH2 0x1F6E JUMP JUMPDEST PUSH2 0x1ABD PUSH2 0x1F84 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP5 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP6 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 MSTORE SWAP3 DUP5 SWAP1 KECCAK256 SLOAD PUSH1 0x44 CALLDATALOAD SWAP4 SWAP3 PUSH1 0x1 DUP3 ADD PUSH2 0x1AF9 JUMPI JUMPDEST PUSH1 0x20 DUP7 PUSH2 0x421 DUP8 DUP8 DUP8 PUSH2 0x246D JUMP JUMPDEST DUP5 DUP3 LT PUSH2 0x1B22 JUMPI POP SWAP2 DUP4 SWAP2 PUSH2 0x1B17 PUSH1 0x20 SWAP7 SWAP6 PUSH2 0x421 SWAP6 SUB CALLER DUP4 PUSH2 0x2681 JUMP JUMPDEST SWAP2 SWAP4 SWAP5 DUP2 SWAP4 POP PUSH2 0x1AEB JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x284 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x284 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x1B93 PUSH2 0x1B85 PUSH2 0x1F6E JUMP JUMPDEST PUSH2 0x1B8D PUSH2 0x1F84 JUMP JUMPDEST SWAP1 PUSH2 0x227B JUMP JUMPDEST SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x261 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x261 JUMPI PUSH1 0x20 SWAP3 POP SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x284 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x284 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x1BDE PUSH2 0x2417 JUMP JUMPDEST SWAP2 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI PUSH2 0x1C00 PUSH2 0x1F6E JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x8C3 JUMPI PUSH1 0x44 CALLDATALOAD SWAP3 DUP4 ISZERO ISZERO SWAP3 DUP4 DUP6 SUB PUSH2 0xA43 JUMPI PUSH2 0x1C2B PUSH2 0x2834 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x7 SLOAD PUSH1 0xA8 SHR AND ISZERO PUSH2 0x1CA6 JUMPI POP SWAP1 PUSH1 0x1 SWAP2 DUP3 DUP1 PUSH1 0xA0 SHL SUB AND SWAP5 DUP6 DUP8 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE DUP7 KECCAK256 SWAP3 PUSH2 0xFF00 PUSH10 0xFFFFFFFFFFFFFFFF0000 DUP6 SLOAD SWAP4 PUSH1 0x10 SHL AND SWAP3 PUSH10 0xFFFFFFFFFFFFFFFFFFFF NOT AND SWAP2 PUSH1 0x8 SHL AND OR OR OR SWAP1 SSTORE PUSH2 0x1C86 JUMPI POP DUP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP2 DUP2 PUSH1 0x8 SLOAD AND OR PUSH1 0x8 SSTORE PUSH1 0x9 SLOAD AND OR PUSH1 0x9 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x139BC81B5BDC99481B9BD9195CC8185B1B1BDDD959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x284 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x284 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x421 PUSH2 0x1D01 PUSH2 0x1F6E JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x2681 JUMP JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x284 JUMPI PUSH2 0x1D1C CALLDATASIZE PUSH2 0x1FDA JUMP JUMPDEST SWAP4 SWAP1 SWAP2 CALLER DUP7 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH2 0x1D64 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP10 DUP10 KECCAK256 SLOAD PUSH1 0x10 SHR AND SWAP1 PUSH32 0x0 AND EQ PUSH2 0x211A JUMP JUMPDEST CALLER DUP7 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0xFF DUP8 DUP8 KECCAK256 SLOAD AND ISZERO PUSH2 0x1DA0 JUMPI PUSH1 0x5 SWAP5 SWAP6 SWAP7 CALLER DUP9 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE DUP8 KECCAK256 SWAP4 TIMESTAMP PUSH1 0x1 DUP7 ADD SSTORE PUSH1 0x2 DUP6 ADD SSTORE PUSH1 0x3 DUP5 ADD SSTORE DUP3 ADD SSTORE ADD SSTORE DUP1 RETURN JUMPDEST DUP7 MLOAD PUSH4 0x6A9FF79F PUSH1 0xE1 SHL DUP2 MSTORE CALLER DUP2 DUP5 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x4CE JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x4CE JUMPI DUP2 MLOAD SWAP2 DUP2 PUSH1 0x5 SLOAD SWAP3 PUSH1 0x1 DUP5 DUP2 SHR SWAP2 DUP2 DUP7 AND SWAP6 DUP7 ISZERO PUSH2 0x1E79 JUMPI JUMPDEST PUSH1 0x20 SWAP7 DUP8 DUP6 LT DUP2 EQ PUSH2 0x67E JUMPI DUP9 SWAP10 POP SWAP7 DUP9 SWAP7 SWAP8 DUP6 DUP3 SWAP11 MSTORE SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x657 JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x1E1D JUMPI POP POP POP PUSH2 0x5F7 SWAP3 SWAP2 PUSH2 0x5E8 SWAP2 SUB DUP6 PUSH2 0x20A3 JUMP JUMPDEST SWAP2 SWAP1 DUP7 SWAP4 POP PUSH1 0x5 DUP4 MSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 JUMPDEST DUP3 DUP5 LT PUSH2 0x1E61 JUMPI POP POP POP DUP3 ADD ADD DUP2 PUSH2 0x5E8 PUSH2 0x5F7 PUSH2 0x5D5 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP11 ADD DUP7 ADD MSTORE DUP9 SWAP6 POP DUP8 SWAP5 SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x1E48 JUMP JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x1DE1 JUMP JUMPDEST POP CALLVALUE PUSH2 0x261 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x261 JUMPI PUSH2 0x1E9C PUSH2 0x1F6E JUMP JUMPDEST SWAP2 CALLER DUP5 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH2 0x1EE2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP4 DUP8 KECCAK256 SLOAD PUSH1 0x10 SHR AND SWAP1 PUSH32 0x0 AND EQ PUSH2 0x211A JUMP JUMPDEST CALLER DUP5 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0xFF DUP2 DUP6 KECCAK256 SLOAD AND ISZERO PUSH2 0x1F03 JUMPI DUP4 PUSH2 0x8C0 PUSH1 0x24 CALLDATALOAD DUP6 PUSH2 0x25DD JUMP JUMPDEST PUSH1 0x24 SWAP3 POP MLOAD SWAP1 PUSH4 0x6A9FF79F PUSH1 0xE1 SHL DUP3 MSTORE CALLER SWAP1 DUP3 ADD MSTORE REVERT JUMPDEST SWAP3 POP POP CALLVALUE PUSH2 0x261 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x261 JUMPI CALLDATALOAD PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 AND DUP1 SWAP2 SUB PUSH2 0x261 JUMPI PUSH1 0x20 SWAP3 POP PUSH4 0x85572FFB PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x1F5D JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP CODESIZE PUSH2 0x1F56 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xAD7 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xAD7 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x1FC6 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1FA5 JUMP JUMPDEST PUSH1 0x80 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0xAD7 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x64 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xAD7 JUMPI JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x2029 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x2029 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2029 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x2029 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x2029 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x2029 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0xAD7 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x2029 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x20F8 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x20A3 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0xAD7 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2121 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52657175697265206D617374657220616E64206E6F646520696E2073616D6520 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x31B430B4B7 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP4 SWAP3 SWAP4 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 SWAP2 DUP2 DUP4 DUP3 ADD MSTORE PUSH2 0x21A3 DUP6 MLOAD PUSH1 0xA0 DUP5 DUP5 ADD MSTORE PUSH1 0xE0 DUP4 ADD SWAP1 PUSH2 0x1F9A JUMP JUMPDEST SWAP2 PUSH2 0x21BF DUP5 DUP8 ADD MLOAD SWAP4 PUSH1 0x3F NOT SWAP5 DUP6 DUP6 DUP4 SUB ADD PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x1F9A JUMP JUMPDEST DUP2 DUP8 ADD MLOAD SWAP5 DUP5 DUP5 DUP4 SUB ADD PUSH1 0x80 DUP6 ADD MSTORE DUP1 DUP1 DUP8 MLOAD SWAP4 DUP5 DUP2 MSTORE ADD SWAP7 ADD SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0x2217 JUMPI POP POP POP POP POP PUSH1 0xC0 PUSH1 0x80 PUSH2 0x2214 SWAP6 SWAP7 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x60 DUP3 ADD MLOAD AND PUSH1 0xA0 DUP6 ADD MSTORE ADD MLOAD SWAP3 DUP3 DUP6 SUB ADD SWAP2 ADD MSTORE PUSH2 0x1F9A JUMP JUMPDEST SWAP1 JUMP JUMPDEST DUP5 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 MSTORE DUP4 ADD MLOAD DUP9 DUP5 ADD MSTORE SWAP7 DUP8 ADD SWAP7 SWAP4 DUP3 ADD SWAP4 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x21DE JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xAD7 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0xAD7 JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x2265 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND SWAP2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xB SWAP1 PUSH1 0x20 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 DUP4 DUP4 KECCAK256 SWAP5 PUSH2 0x22BB PUSH1 0x2 DUP8 ADD SLOAD PUSH1 0x3 DUP9 ADD SLOAD SWAP8 PUSH1 0x4 SWAP9 PUSH1 0x5 DUP11 DUP4 ADD SLOAD SWAP3 ADD SLOAD SWAP3 PUSH2 0x27DC JUMP JUMPDEST SWAP7 PUSH1 0xA SLOAD PUSH3 0x15180 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x2393 JUMPI TIMESTAMP GT SWAP9 DUP10 PUSH2 0x23F9 JUMPI JUMPDEST DUP10 PUSH2 0x23E1 JUMPI JUMPDEST DUP10 PUSH2 0x23CB JUMPI JUMPDEST DUP10 PUSH2 0x23A6 JUMPI JUMPDEST DUP10 PUSH2 0x2370 JUMPI JUMPDEST DUP10 PUSH2 0x2357 JUMPI JUMPDEST DUP10 PUSH2 0x233F JUMPI JUMPDEST POP DUP9 PUSH2 0x2328 JUMPI JUMPDEST DUP9 PUSH2 0x2311 JUMPI JUMPDEST POP POP POP POP POP POP POP POP SWAP1 JUMP JUMPDEST AND DUP4 MSTORE MSTORE KECCAK256 ADD SLOAD LT SWAP1 POP CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x2306 JUMP JUMPDEST DUP2 DUP2 AND DUP6 MSTORE DUP4 DUP4 MSTORE DUP6 DUP6 KECCAK256 DUP8 ADD SLOAD ISZERO ISZERO SWAP9 POP PUSH2 0x2300 JUMP JUMPDEST DUP6 MSTORE DUP4 DUP4 MSTORE DUP6 DUP6 KECCAK256 SLOAD PUSH1 0x8 SHR PUSH1 0xFF AND ISZERO SWAP9 POP CODESIZE PUSH2 0x22F9 JUMP JUMPDEST DUP1 DUP7 MSTORE DUP5 DUP5 MSTORE DUP7 DUP7 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ SWAP10 POP PUSH2 0x22F3 JUMP JUMPDEST DUP1 SWAP10 POP DUP6 MSTORE DUP4 DUP4 MSTORE PUSH1 0x1 DUP7 DUP7 KECCAK256 ADD SLOAD PUSH2 0xE10 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x2393 JUMPI TIMESTAMP LT SWAP9 PUSH2 0x22ED JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 DUP9 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST SWAP9 POP DUP2 DUP2 AND DUP6 MSTORE DUP4 DUP4 MSTORE PUSH1 0x1 DUP7 DUP7 KECCAK256 ADD SLOAD PUSH2 0xE10 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x2393 JUMPI TIMESTAMP LT SWAP9 PUSH2 0x22E7 JUMP JUMPDEST DUP1 DUP7 MSTORE DUP5 DUP5 MSTORE DUP7 DUP7 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO ISZERO SWAP10 POP PUSH2 0x22E1 JUMP JUMPDEST DUP2 DUP4 AND DUP7 MSTORE DUP5 DUP5 MSTORE DUP7 DUP7 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO ISZERO SWAP10 POP PUSH2 0x22DB JUMP JUMPDEST DUP2 DUP4 AND DUP7 MSTORE DUP5 DUP5 MSTORE DUP7 DUP7 KECCAK256 SLOAD PUSH1 0x8 SHR PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ SWAP10 POP PUSH2 0x22D5 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x244A JUMPI POP PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x10 SHR AND SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x8 SLOAD AND PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x10 SHR AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x258A JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x2539 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 DUP1 DUP4 LT PUSH2 0x24E5 JUMPI PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE PUSH1 0x2 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x263C JUMPI PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP3 PUSH2 0x261F PUSH1 0x0 SWAP5 PUSH1 0x4 SLOAD PUSH2 0x2258 JUMP JUMPDEST PUSH1 0x4 SSTORE DUP5 DUP5 MSTORE PUSH1 0x2 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x2732 JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x26E2 JUMPI PUSH1 0x20 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x3 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xAD7 JUMPI JUMP JUMPDEST MLOAD SWAP1 PUSH1 0xFF DUP3 AND DUP3 SUB PUSH2 0xAD7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH4 0x97A657C9 PUSH1 0xE0 SHL PUSH1 0x20 DUP4 ADD MSTORE MLOAD PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x60 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x2029 JUMPI PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST SWAP3 PUSH2 0x27E7 SWAP2 SWAP4 PUSH2 0x2258 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP3 DUP4 DUP2 MUL SWAP1 DUP1 DUP3 DIV DUP6 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x2265 JUMPI DUP2 ISZERO PUSH2 0x281E JUMPI DIV SWAP1 DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x2265 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2848 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27B7363C9031B0B63630B1363290313C9037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A CALLDATACOPY EXTCODEHASH 0xCC 0x2A SUB 0xE4 PUSH27 0x61655FA4BF0ACA8AE1415658BFE07B0B78CE35CF3FA28CD164736F PUSH13 0x63430008130033000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "9": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "10": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "11": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "LT",
      "path": "14"
    },
    "12": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "13": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x21"
    },
    "16": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "17": {
      "op": "JUMPDEST"
    },
    "18": {
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "19": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "20": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "21": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "22": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "23": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F"
    },
    "26": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "27": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "29": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "30": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "REVERT",
      "path": "14"
    },
    "31": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "32": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "STOP",
      "path": "14"
    },
    "33": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "34": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "36": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "37": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "38": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "39": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "41": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "SHR",
      "path": "14"
    },
    "42": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "43": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "44": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x1FFC9A7"
    },
    "49": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "EQ",
      "path": "14"
    },
    "50": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F1A"
    },
    "53": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "54": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "55": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "56": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x4783EA4"
    },
    "61": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "EQ",
      "path": "14"
    },
    "62": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1E83"
    },
    "65": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "66": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "67": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x6FDDE03"
    },
    "72": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "EQ",
      "path": "14"
    },
    "73": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1DB6"
    },
    "76": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "77": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "78": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x8A767FE"
    },
    "83": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "EQ",
      "path": "14"
    },
    "84": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1D0B"
    },
    "87": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "88": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "89": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x95EA7B3"
    },
    "94": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "EQ",
      "path": "14"
    },
    "95": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1CE1"
    },
    "98": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "99": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "100": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x10A78DF8"
    },
    "105": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "EQ",
      "path": "14"
    },
    "106": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1BE6"
    },
    "109": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "110": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "111": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x1803C2F5"
    },
    "116": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "EQ",
      "path": "14"
    },
    "117": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1BB9"
    },
    "120": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "121": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "122": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x18160DDD"
    },
    "127": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "EQ",
      "path": "14"
    },
    "128": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1B9C"
    },
    "131": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "132": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "133": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x1D880928"
    },
    "138": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "EQ",
      "path": "14"
    },
    "139": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1B65"
    },
    "142": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "143": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "144": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x23B872DD"
    },
    "149": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "EQ",
      "path": "14"
    },
    "150": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1A99"
    },
    "153": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "154": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "155": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x2E1A7D4D"
    },
    "160": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "EQ",
      "path": "14"
    },
    "161": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1440"
    },
    "164": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "165": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "166": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x313CE567"
    },
    "171": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "EQ",
      "path": "14"
    },
    "172": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1424"
    },
    "175": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "176": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "177": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x39509351"
    },
    "182": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "EQ",
      "path": "14"
    },
    "183": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x13D5"
    },
    "186": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "187": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "188": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x544B1709"
    },
    "193": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "EQ",
      "path": "14"
    },
    "194": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x12A3"
    },
    "197": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "198": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "199": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x5C292BE5"
    },
    "204": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "EQ",
      "path": "14"
    },
    "205": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC90"
    },
    "208": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "209": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "210": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x61AC3F99"
    },
    "215": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "EQ",
      "path": "14"
    },
    "216": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC67"
    },
    "219": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "220": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "221": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x654E8E0C"
    },
    "226": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "EQ",
      "path": "14"
    },
    "227": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC40"
    },
    "230": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "231": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "232": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x6C1DC077"
    },
    "237": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "EQ",
      "path": "14"
    },
    "238": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC17"
    },
    "241": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "242": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "243": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x6C98D513"
    },
    "248": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "EQ",
      "path": "14"
    },
    "249": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xBEE"
    },
    "252": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "253": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "254": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x70A08231"
    },
    "259": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "EQ",
      "path": "14"
    },
    "260": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xBB6"
    },
    "263": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "264": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "265": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x79BA5097"
    },
    "270": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "EQ",
      "path": "14"
    },
    "271": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB0F"
    },
    "274": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "275": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "276": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x85572FFB"
    },
    "281": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "EQ",
      "path": "14"
    },
    "282": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x707"
    },
    "285": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "286": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "287": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x8CF19D19"
    },
    "292": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "EQ",
      "path": "14"
    },
    "293": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x6C3"
    },
    "296": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "297": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "298": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x8DA5CB5B"
    },
    "303": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "EQ",
      "path": "14"
    },
    "304": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x69B"
    },
    "307": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "308": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "309": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x95D89B41"
    },
    "314": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "EQ",
      "path": "14"
    },
    "315": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x580"
    },
    "318": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "319": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "320": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x995714AE"
    },
    "325": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "EQ",
      "path": "14"
    },
    "326": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4D1"
    },
    "329": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "330": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "331": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xA457C2D7"
    },
    "336": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "EQ",
      "path": "14"
    },
    "337": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x428"
    },
    "340": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "341": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "342": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xA9059CBB"
    },
    "347": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "EQ",
      "path": "14"
    },
    "348": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3F7"
    },
    "351": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "352": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "353": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xB0F479A1"
    },
    "358": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "EQ",
      "path": "14"
    },
    "359": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3B3"
    },
    "362": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "363": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "364": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xB2D92955"
    },
    "369": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "EQ",
      "path": "14"
    },
    "370": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x320"
    },
    "373": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "374": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "375": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xC1586AF8"
    },
    "380": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "EQ",
      "path": "14"
    },
    "381": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2FA"
    },
    "384": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "385": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "386": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xDD62ED3E"
    },
    "391": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "EQ",
      "path": "14"
    },
    "392": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2AC"
    },
    "395": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "396": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "397": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xDDF85603"
    },
    "402": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "EQ",
      "path": "14"
    },
    "403": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x288"
    },
    "406": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "407": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "408": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xE12B948B"
    },
    "413": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "EQ",
      "path": "14"
    },
    "414": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x265"
    },
    "417": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "418": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xF2FDE38B"
    },
    "423": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "424": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x11"
    },
    "427": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "428": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "429": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x261"
    },
    "432": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "433": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "435": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "436": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "438": {
      "op": "NOT"
    },
    "439": {
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "440": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "441": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x261"
    },
    "444": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "445": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1C4"
    },
    "448": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F6E"
    },
    "451": {
      "fn": null,
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "452": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "453": {
      "offset": [
        2032,
        2091
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "454": {
      "fn": null,
      "offset": [
        2032,
        2091
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1CD"
    },
    "457": {
      "fn": null,
      "offset": [
        2032,
        2091
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2834"
    },
    "460": {
      "fn": null,
      "jump": "i",
      "offset": [
        2032,
        2091
      ],
      "op": "JUMP",
      "path": "9"
    },
    "461": {
      "fn": null,
      "offset": [
        2032,
        2091
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "466": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "468": {
      "op": "SHL"
    },
    "469": {
      "op": "SUB"
    },
    "470": {
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "471": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "472": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "473": {
      "fn": null,
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "474": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1643,
        1653
      ],
      "op": "CALLER",
      "path": "9",
      "statement": 0
    },
    "475": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1637,
        1653
      ],
      "op": "DUP5",
      "path": "9"
    },
    "476": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1637,
        1653
      ],
      "op": "EQ",
      "path": "9"
    },
    "477": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x21E"
    },
    "480": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "481": {
      "op": "POP"
    },
    "482": {
      "op": "POP"
    },
    "483": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "485": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "486": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "491": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "493": {
      "op": "SHL"
    },
    "494": {
      "op": "SUB"
    },
    "495": {
      "op": "NOT"
    },
    "496": {
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "497": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "498": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "OR",
      "path": "14"
    },
    "499": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "500": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "501": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "502": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "503": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "504": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1719,
        1758
      ],
      "op": "PUSH32",
      "path": "9",
      "statement": 1,
      "value": "0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278"
    },
    "537": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "538": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "539": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1719,
        1758
      ],
      "op": "LOG3",
      "path": "9"
    },
    "540": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "541": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "RETURN",
      "path": "14"
    },
    "542": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "543": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "544": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "546": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "548": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "549": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "550": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "551": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x461BCD"
    },
    "555": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE5"
    },
    "557": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "SHL",
      "path": "14"
    },
    "558": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "559": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "560": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "561": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "562": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "563": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x17"
    },
    "565": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "567": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "568": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "569": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "570": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000"
    },
    "603": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "605": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "606": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "607": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "608": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "REVERT",
      "path": "14"
    },
    "609": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "610": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "611": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "612": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "REVERT",
      "path": "14"
    },
    "613": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "614": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "615": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "616": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "617": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "620": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "621": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "622": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "624": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "NOT",
      "path": "14"
    },
    "625": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "626": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "627": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "628": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "631": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "632": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "634": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "635": {
      "offset": [
        2020,
        2049
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA"
    },
    "637": {
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "638": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "639": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "640": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "641": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "642": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "643": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "RETURN",
      "path": "14"
    },
    "644": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "645": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "646": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "647": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "REVERT",
      "path": "14"
    },
    "648": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "649": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "650": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "651": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "652": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "655": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "656": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "657": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "659": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "NOT",
      "path": "14"
    },
    "660": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "661": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "662": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "663": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "666": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "667": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "669": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "670": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "672": {
      "offset": [
        1771,
        1810
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x7"
    },
    "674": {
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "675": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "676": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "677": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "678": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "679": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "680": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "681": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "682": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "683": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "RETURN",
      "path": "14"
    },
    "684": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "685": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "686": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "687": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "688": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "691": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "692": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "693": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "695": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "NOT",
      "path": "14"
    },
    "696": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "697": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "698": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "699": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "702": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "703": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "705": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "706": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2C9"
    },
    "709": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F6E"
    },
    "712": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "713": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "714": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "715": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2D2"
    },
    "718": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F84"
    },
    "721": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "722": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "727": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "729": {
      "op": "SHL"
    },
    "730": {
      "op": "SUB"
    },
    "731": {
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "732": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "733": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "734": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "735": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "736": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "738": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "739": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "740": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "741": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "742": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "743": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "744": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "746": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "747": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "748": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "749": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "750": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "751": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "752": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "753": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "754": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "755": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "756": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "757": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "758": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "759": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "760": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "761": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "RETURN",
      "path": "14"
    },
    "762": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "763": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "764": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "765": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "766": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "769": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "770": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "772": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "773": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x319"
    },
    "776": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x310"
    },
    "779": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "780": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FDA"
    },
    "783": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "784": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "785": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "786": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "787": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "788": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "789": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x27DC"
    },
    "792": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "793": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "794": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "795": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "796": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "797": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "798": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "799": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "RETURN",
      "path": "14"
    },
    "800": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "801": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "802": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "803": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "804": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x261"
    },
    "807": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "808": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "810": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "811": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "813": {
      "op": "NOT"
    },
    "814": {
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "815": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "816": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x261"
    },
    "819": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "820": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x100"
    },
    "823": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "824": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "825": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "826": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "830": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "832": {
      "op": "SHL"
    },
    "833": {
      "op": "SUB"
    },
    "834": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x349"
    },
    "837": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F6E"
    },
    "840": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "841": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "842": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "843": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "844": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "845": {
      "offset": [
        2328,
        2376
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "847": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "849": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "850": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "851": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "852": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "853": {
      "offset": [
        2328,
        2376
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "854": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "856": {
      "offset": [
        2328,
        2376
      ],
      "op": "DUP3",
      "path": "14"
    },
    "857": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        2328,
        2376
      ],
      "op": "ADD",
      "path": "14"
    },
    "858": {
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "859": {
      "offset": [
        2328,
        2376
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "861": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        2328,
        2376
      ],
      "op": "DUP4",
      "path": "14"
    },
    "862": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        2328,
        2376
      ],
      "op": "ADD",
      "path": "14"
    },
    "863": {
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "864": {
      "offset": [
        2328,
        2376
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "865": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        2328,
        2376
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x5"
    },
    "867": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "869": {
      "offset": [
        2328,
        2376
      ],
      "op": "DUP6",
      "path": "14"
    },
    "870": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        2328,
        2376
      ],
      "op": "ADD",
      "path": "14"
    },
    "871": {
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "872": {
      "offset": [
        2328,
        2376
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "873": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        2328,
        2376
      ],
      "op": "DUP6",
      "path": "14"
    },
    "874": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        2328,
        2376
      ],
      "op": "ADD",
      "path": "14"
    },
    "875": {
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "876": {
      "offset": [
        2328,
        2376
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "877": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        2328,
        2376
      ],
      "op": "ADD",
      "path": "14"
    },
    "878": {
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "879": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "880": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "884": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "886": {
      "op": "SHL"
    },
    "887": {
      "op": "SUB"
    },
    "888": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "889": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "890": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "891": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "893": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "894": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "895": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "896": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "897": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "DUP10",
      "path": "14"
    },
    "898": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "899": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "901": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "902": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "904": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "SHR",
      "path": "14"
    },
    "905": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "906": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "907": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "908": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "910": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "DUP11",
      "path": "14"
    },
    "911": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "912": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "913": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x10"
    },
    "915": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "SHR",
      "path": "14"
    },
    "916": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "917": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "918": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "919": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "920": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "921": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "923": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "924": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "925": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "926": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "928": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "929": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "930": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "931": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "933": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "934": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "935": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "936": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xC0"
    },
    "938": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "939": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "940": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "941": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "943": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "944": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "945": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "946": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "RETURN",
      "path": "14"
    },
    "947": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "948": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "949": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "950": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "951": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "954": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "955": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "956": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "958": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "NOT",
      "path": "14"
    },
    "959": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "960": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "961": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "962": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "965": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "966": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "967": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        2277,
        2289
      ],
      "op": "PUSH32",
      "path": "4",
      "statement": 2,
      "value": "0x0"
    },
    "1000": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1002": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1004": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1006": {
      "op": "SHL"
    },
    "1007": {
      "op": "SUB"
    },
    "1008": {
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "1009": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1010": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1011": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1013": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1014": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15913
      ],
      "op": "RETURN",
      "path": "14"
    },
    "1015": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1016": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "1017": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "1018": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15913
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "1019": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "1022": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1023": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1024": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "1026": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15913
      ],
      "op": "NOT",
      "path": "14"
    },
    "1027": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "1028": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "1029": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "1030": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "1033": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1034": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1036": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1037": {
      "fn": "ERC20.transfer",
      "offset": [
        3881,
        3887
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 3,
      "value": "0x421"
    },
    "1040": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x417"
    },
    "1043": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F6E"
    },
    "1046": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1047": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1048": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "1050": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "1051": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "3",
      "statement": 4
    },
    "1052": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1053": {
      "fn": "ERC20.transfer",
      "offset": [
        3881,
        3887
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x246D"
    },
    "1056": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3881,
        3887
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1057": {
      "fn": "ERC20.transfer",
      "offset": [
        3881,
        3887
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1058": {
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1059": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "1061": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1062": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1063": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15913
      ],
      "op": "RETURN",
      "path": "14"
    },
    "1064": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1065": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "1066": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1067": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15913
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "1068": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4CE"
    },
    "1071": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1072": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1073": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "1075": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15913
      ],
      "op": "NOT",
      "path": "14"
    },
    "1076": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "1077": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "1078": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "1079": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4CE"
    },
    "1082": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1083": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x442"
    },
    "1086": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F6E"
    },
    "1089": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1090": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1091": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1092": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1093": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "1095": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "1096": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1097": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1098": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1099": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1100": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "1102": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1104": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1105": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15913
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1106": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "1108": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1109": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "1111": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15913
      ],
      "op": "SHL",
      "path": "14"
    },
    "1112": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "1113": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1114": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "1115": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1117": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1118": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1120": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1121": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1122": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1124": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15913
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1125": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1126": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6809,
        6844
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 5
    },
    "1127": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6809,
        6844
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1128": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6809,
        6844
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1129": {
      "branch": 84,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6809,
        6844
      ],
      "op": "LT",
      "path": "0"
    },
    "1130": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x47D"
    },
    "1133": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1134": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1136": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1137": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6945,
        6979
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 6,
      "value": "0x421"
    },
    "1140": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1141": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1142": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "1143": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "1144": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1145": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6945,
        6979
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2681"
    },
    "1148": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6945,
        6979
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1149": {
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1150": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x84"
    },
    "1152": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1153": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1155": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "1156": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1157": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1158": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x461BCD"
    },
    "1162": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE5"
    },
    "1164": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "SHL",
      "path": "14"
    },
    "1165": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1166": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1167": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1168": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "1169": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1170": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x25"
    },
    "1172": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "1174": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1175": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "1176": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1177": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "1210": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "1212": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1213": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "1214": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1215": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "1221": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "1223": {
      "op": "SHL"
    },
    "1224": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "1226": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1227": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "1228": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1229": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1230": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1231": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1232": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1233": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1234": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "1235": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "1236": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x261"
    },
    "1239": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1240": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1241": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "1243": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "NOT",
      "path": "14"
    },
    "1244": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "1245": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "1246": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "1247": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x261"
    },
    "1250": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1251": {
      "offset": [
        2930,
        2940
      ],
      "op": "CALLER",
      "path": "14"
    },
    "1252": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1253": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1254": {
      "offset": [
        2919,
        2929
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "1256": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1258": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1259": {
      "offset": [
        2898,
        3044
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x527"
    },
    "1262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1266": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1268": {
      "op": "SHL"
    },
    "1269": {
      "op": "SUB"
    },
    "1270": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1271": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1272": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "1273": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1274": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1275": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x10"
    },
    "1277": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "SHR",
      "path": "14"
    },
    "1278": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "1279": {
      "offset": [
        2957,
        2981
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1280": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        2957,
        2981
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x0"
    },
    "1313": {
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "1314": {
      "offset": [
        2919,
        2981
      ],
      "op": "EQ",
      "path": "14"
    },
    "1315": {
      "offset": [
        2898,
        3044
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x211A"
    },
    "1318": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        2898,
        3044
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1319": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        2898,
        3044
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1320": {
      "offset": [
        2930,
        2940
      ],
      "op": "CALLER",
      "path": "14"
    },
    "1321": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1322": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1323": {
      "offset": [
        2919,
        2929
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "1325": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1327": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1328": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "1330": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1331": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1332": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1333": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1334": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "1335": {
      "offset": [
        2723,
        2759
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1336": {
      "offset": [
        2719,
        2829
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x56A"
    },
    "1339": {
      "offset": [
        2719,
        2829
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1340": {
      "offset": [
        2930,
        2940
      ],
      "op": "POP",
      "path": "14"
    },
    "1341": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        2930,
        2940
      ],
      "op": "CALLER",
      "path": "14"
    },
    "1342": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1343": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1344": {
      "offset": [
        2919,
        2929
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "1346": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1348": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1349": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1350": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1351": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x100"
    },
    "1354": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xFF00"
    },
    "1357": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "NOT",
      "path": "14"
    },
    "1358": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1359": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1360": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "1361": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "OR",
      "path": "14"
    },
    "1362": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1363": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "1364": {
      "offset": [
        2930,
        2940
      ],
      "op": "CALLER",
      "path": "14"
    },
    "1365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1369": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1371": {
      "op": "SHL"
    },
    "1372": {
      "op": "SUB"
    },
    "1373": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "1375": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "SHL",
      "path": "14"
    },
    "1376": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        5401,
        5424
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 7,
      "value": "0x9"
    },
    "1378": {
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1379": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "1380": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "OR",
      "path": "14"
    },
    "1381": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        5401,
        5424
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9"
    },
    "1383": {
      "offset": [
        783,
        15913
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "1384": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1385": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "RETURN",
      "path": "14"
    },
    "1386": {
      "offset": [
        2719,
        2829
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1387": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "1389": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1390": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1391": {
      "offset": [
        2782,
        2818
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1392": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        2782,
        2818
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x6A9FF79F"
    },
    "1397": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        2782,
        2818
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE1"
    },
    "1399": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        2782,
        2818
      ],
      "op": "SHL",
      "path": "14"
    },
    "1400": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        2782,
        2818
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1401": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        2782,
        2818
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1402": {
      "offset": [
        2930,
        2940
      ],
      "op": "CALLER",
      "path": "14"
    },
    "1403": {
      "offset": [
        2782,
        2818
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1404": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        2782,
        2818
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1405": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        2782,
        2818
      ],
      "op": "ADD",
      "path": "14"
    },
    "1406": {
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1407": {
      "offset": [
        2782,
        2818
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1408": {
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1409": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "1410": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1411": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "1412": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4CE"
    },
    "1415": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1416": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1417": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "1419": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "NOT",
      "path": "14"
    },
    "1420": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "1421": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "1422": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "1423": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4CE"
    },
    "1426": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1427": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1428": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1429": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1430": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1431": {
      "fn": "ERC20.symbol",
      "offset": [
        2453,
        2460
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 8,
      "value": "0x6"
    },
    "1433": {
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1434": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1435": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "1437": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1438": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1439": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SHR",
      "path": "14"
    },
    "1440": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1441": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1442": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "1443": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "1444": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "1445": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "1446": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1447": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x691"
    },
    "1450": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1451": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1452": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1454": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "1455": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "1456": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1457": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "LT",
      "path": "14"
    },
    "1458": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1459": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "EQ",
      "path": "14"
    },
    "1460": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x67E"
    },
    "1463": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1464": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP9",
      "path": "14"
    },
    "1465": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP10",
      "path": "14"
    },
    "1466": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "1467": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "1468": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP9",
      "path": "14"
    },
    "1469": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "1470": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "1471": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1472": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1473": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP11",
      "path": "14"
    },
    "1474": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1475": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1476": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1477": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1479": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "EQ",
      "path": "14"
    },
    "1480": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x657"
    },
    "1483": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1484": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "1485": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "1486": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "1488": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "EQ",
      "path": "14"
    },
    "1489": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5FB"
    },
    "1492": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1493": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1494": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "1495": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "1496": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "1497": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5F7"
    },
    "1500": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1501": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1502": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5E8"
    },
    "1505": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1506": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "1507": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1508": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x20A3"
    },
    "1511": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1512": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1513": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1514": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1515": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1516": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1517": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1518": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1519": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1520": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1521": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "1522": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1523": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F9A"
    },
    "1526": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1527": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1528": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "1529": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1530": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "RETURN",
      "path": "14"
    },
    "1531": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1532": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1533": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1534": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "1535": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1536": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "1537": {
      "fn": "ERC20.symbol",
      "offset": [
        2453,
        2460
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "1539": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1540": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1541": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F"
    },
    "1574": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1575": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1576": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1577": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "LT",
      "path": "14"
    },
    "1578": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x63F"
    },
    "1581": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1582": {
      "op": "POP"
    },
    "1583": {
      "op": "POP"
    },
    "1584": {
      "op": "POP"
    },
    "1585": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1586": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "1587": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "1588": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1589": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5E8"
    },
    "1592": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5F7"
    },
    "1595": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5D5"
    },
    "1598": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1599": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1600": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1601": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1602": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1603": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP11",
      "path": "14"
    },
    "1604": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "1605": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "1606": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "1607": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1608": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP9",
      "path": "14"
    },
    "1609": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "1610": {
      "op": "POP"
    },
    "1611": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "1612": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "1613": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1614": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1615": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "1616": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1617": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1618": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "1619": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x626"
    },
    "1622": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1623": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1624": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1626": {
      "op": "NOT"
    },
    "1627": {
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "1628": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "1629": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1630": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "1631": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1632": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1633": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1634": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1635": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x5"
    },
    "1637": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SHL",
      "path": "14"
    },
    "1638": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "1639": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "1640": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1641": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1642": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "1643": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1644": {
      "op": "POP"
    },
    "1645": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1646": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1647": {
      "op": "POP"
    },
    "1648": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5E8"
    },
    "1651": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1652": {
      "op": "POP"
    },
    "1653": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5F7"
    },
    "1656": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1657": {
      "op": "POP"
    },
    "1658": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5D5"
    },
    "1661": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1662": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1663": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1668": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1670": {
      "op": "SHL"
    },
    "1671": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1672": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1673": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x22"
    },
    "1675": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP11",
      "path": "14"
    },
    "1676": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1677": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "1679": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1680": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1681": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1682": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1683": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x7F"
    },
    "1685": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "1686": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1687": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5AB"
    },
    "1690": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1691": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1692": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "1693": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "1694": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "1695": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "1698": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1699": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1700": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "1702": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "NOT",
      "path": "14"
    },
    "1703": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "1704": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "1705": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "1706": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "1709": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1710": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1711": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1712": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1713": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1718": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1720": {
      "op": "SHL"
    },
    "1721": {
      "op": "SUB"
    },
    "1722": {
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1723": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1724": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "1725": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1726": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1727": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1729": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1730": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "RETURN",
      "path": "14"
    },
    "1731": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1732": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "1733": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "1734": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "1735": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "1738": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1739": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1740": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "1742": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "NOT",
      "path": "14"
    },
    "1743": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "1744": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "1745": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "1746": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "1749": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1750": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1752": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1753": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1758": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1760": {
      "op": "SHL"
    },
    "1761": {
      "op": "SUB"
    },
    "1762": {
      "offset": [
        1861,
        1909
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x0"
    },
    "1795": {
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "1796": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1797": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1798": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "RETURN",
      "path": "14"
    },
    "1799": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1800": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "1801": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1802": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "1803": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x261"
    },
    "1806": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1807": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1809": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1810": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "1812": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "NOT",
      "path": "14"
    },
    "1813": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1814": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1815": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "1816": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "1817": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "1818": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x8C3"
    },
    "1821": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1822": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1823": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "1824": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1825": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1827": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1829": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1831": {
      "op": "SHL"
    },
    "1832": {
      "op": "SUB"
    },
    "1833": {
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1834": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1835": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1836": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "GT",
      "path": "14"
    },
    "1837": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA43"
    },
    "1840": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1841": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "1843": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1844": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1845": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "1846": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "1847": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "1848": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "1849": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x940"
    },
    "1852": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1855": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1857": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1859": {
      "op": "SHL"
    },
    "1860": {
      "op": "SUB"
    },
    "1861": {
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1862": {
      "offset": [
        2449,
        2461
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x0"
    },
    "1895": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1896": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "1897": {
      "offset": [
        2427,
        2437
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1898": {
      "offset": [
        2427,
        2462
      ],
      "op": "SUB",
      "path": "4"
    },
    "1899": {
      "offset": [
        2423,
        2496
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xAF8"
    },
    "1902": {
      "offset": [
        2423,
        2496
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1903": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1904": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1905": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1906": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x77A"
    },
    "1909": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1910": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x200E"
    },
    "1913": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1914": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1915": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1916": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1917": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "1918": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "1919": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1920": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1921": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "1923": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1924": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1925": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1926": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "1927": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "1928": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1929": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1930": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "1931": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1932": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "1933": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAD7"
    },
    "1936": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1937": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP9",
      "path": "14"
    },
    "1938": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1939": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "1940": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1941": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "1943": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1944": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "1945": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "1946": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1947": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1948": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "GT",
      "path": "14"
    },
    "1949": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA3B"
    },
    "1952": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1953": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x7AF"
    },
    "1956": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1957": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1958": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "1959": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1960": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP9",
      "path": "14"
    },
    "1961": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "1962": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "1963": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x20C4"
    },
    "1966": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1967": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1968": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1969": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "1970": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1971": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "1972": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "1973": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1974": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1975": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "1977": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "1978": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "1979": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "1980": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1981": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1982": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "GT",
      "path": "14"
    },
    "1983": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA3F"
    },
    "1986": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1987": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x7D1"
    },
    "1990": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1991": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1992": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "1993": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1994": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP10",
      "path": "14"
    },
    "1995": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "1996": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "1997": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x20C4"
    },
    "2000": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2001": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2002": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "2003": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "2005": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2006": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "2007": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "2008": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "2009": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2010": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x84"
    },
    "2012": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2013": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "2014": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "2015": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2016": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2017": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2018": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "GT",
      "path": "14"
    },
    "2019": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAF4"
    },
    "2022": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2023": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "2024": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "2025": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x23"
    },
    "2027": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2028": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "2029": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "2030": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2031": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA3F"
    },
    "2034": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2035": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2036": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2037": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "2038": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "2039": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2040": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2041": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "GT",
      "path": "14"
    },
    "2042": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAE0"
    },
    "2045": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2046": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP9",
      "path": "14"
    },
    "2047": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2048": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2049": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x80F"
    },
    "2052": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP12",
      "path": "14"
    },
    "2053": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2054": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x5"
    },
    "2056": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SHL",
      "path": "14"
    },
    "2057": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "2058": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2059": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x20A3"
    },
    "2062": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2063": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2064": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2065": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2066": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2067": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2068": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP12",
      "path": "14"
    },
    "2069": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2070": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "2071": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2072": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x6"
    },
    "2074": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SHL",
      "path": "14"
    },
    "2075": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2076": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "2077": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "2078": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2079": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "2080": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2081": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "GT",
      "path": "14"
    },
    "2082": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xADC"
    },
    "2085": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2086": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2087": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "2088": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2089": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2090": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2091": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2092": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "LT",
      "path": "14"
    },
    "2093": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA9D"
    },
    "2096": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2097": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "2098": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "2099": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "2100": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "2102": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "2103": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2104": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7961,
        7983
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2105": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7961,
        7983
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2106": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "2107": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2108": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2109": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2110": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7950,
        7995
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2111": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7950,
        7995
      ],
      "op": "ADD",
      "path": "14"
    },
    "2112": {
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "2113": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "2114": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA37"
    },
    "2117": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2118": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x851"
    },
    "2121": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7950,
        7995
      ],
      "op": "DUP9",
      "path": "14"
    },
    "2122": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7950,
        7995
      ],
      "op": "DUP8",
      "path": "14"
    },
    "2123": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7950,
        7995
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2124": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7950,
        7995
      ],
      "op": "ADD",
      "path": "14"
    },
    "2125": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2783"
    },
    "2128": {
      "fn": "MasterNode._ccipReceive",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2129": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2130": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "2131": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2132": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "DUP10",
      "path": "14"
    },
    "2133": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2134": {
      "offset": [
        2724,
        2734
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "2136": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP9",
      "path": "14"
    },
    "2137": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2138": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "2140": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "2141": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "DUP11",
      "path": "14"
    },
    "2142": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "2143": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2144": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "2145": {
      "offset": [
        2723,
        2759
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2146": {
      "offset": [
        2719,
        2829
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA88"
    },
    "2149": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2719,
        2829
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2150": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        477,
        497
      ],
      "op": "POP",
      "path": "15"
    },
    "2151": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        477,
        497
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2152": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        477,
        497
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2153": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "2154": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2155": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2156": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2157": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        466,
        507
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2158": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        466,
        507
      ],
      "op": "ADD",
      "path": "15"
    },
    "2159": {
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "2160": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "2161": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA37"
    },
    "2164": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2165": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x881"
    },
    "2168": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        466,
        507
      ],
      "op": "DUP9",
      "path": "15"
    },
    "2169": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "2171": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        466,
        507
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2172": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        466,
        507
      ],
      "op": "ADD",
      "path": "15"
    },
    "2173": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2797"
    },
    "2176": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2177": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2178": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "2179": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8080,
        8092
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2180": {
      "branch": 72,
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8080,
        8092
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x8C7"
    },
    "2183": {
      "branch": 72,
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8080,
        8092
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2184": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4131,
        4151
      ],
      "op": "POP",
      "path": "14"
    },
    "2185": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4131,
        4151
      ],
      "op": "POP",
      "path": "14"
    },
    "2186": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4131,
        4151
      ],
      "op": "POP",
      "path": "14"
    },
    "2187": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4131,
        4151
      ],
      "op": "POP",
      "path": "14"
    },
    "2188": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4131,
        4151
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2189": {
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2190": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "2192": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2193": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2194": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2195": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4107,
        4200
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2196": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4107,
        4200
      ],
      "op": "ADD",
      "path": "14"
    },
    "2197": {
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "2198": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "2199": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x8C3"
    },
    "2202": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2203": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x8B6"
    },
    "2206": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "2208": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4107,
        4200
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2209": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x8AE"
    },
    "2212": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4230,
        4236
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 9,
      "value": "0x8C0"
    },
    "2215": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4107,
        4200
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "2216": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4107,
        4200
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2217": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4107,
        4200
      ],
      "op": "ADD",
      "path": "14"
    },
    "2218": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2797"
    },
    "2221": {
      "fn": "MasterNode._aWarpTokenMinter",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2222": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2223": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "2224": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2225": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "2226": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2783"
    },
    "2229": {
      "fn": "MasterNode._aWarpTokenMinter",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2230": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2231": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2232": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "2233": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2234": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2235": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "2236": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4230,
        4236
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x25DD"
    },
    "2239": {
      "fn": "MasterNode._aWarpTokenMinter",
      "jump": "i",
      "offset": [
        4230,
        4236
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2240": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4230,
        4236
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2241": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2242": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15913
      ],
      "op": "RETURN",
      "path": "14"
    },
    "2243": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2244": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2245": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2246": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15913
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2247": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8076,
        8382
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2248": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "2250": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8163,
        8175
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2251": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8163,
        8175
      ],
      "op": "SWAP9",
      "path": "14"
    },
    "2252": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8163,
        8175
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "2253": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8163,
        8175
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "2254": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8163,
        8175
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "2255": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8163,
        8175
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "2256": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8163,
        8175
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "2257": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8163,
        8175
      ],
      "op": "SWAP9",
      "path": "14"
    },
    "2258": {
      "branch": 73,
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8163,
        8175
      ],
      "op": "EQ",
      "path": "14"
    },
    "2259": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8159,
        8382
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2261": {
      "offset": [
        783,
        15913
      ],
      "op": "EQ",
      "path": "14"
    },
    "2262": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x944"
    },
    "2265": {
      "branch": 73,
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2266": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        4978,
        5000
      ],
      "op": "POP",
      "path": "14",
      "statement": 10
    },
    "2267": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        4978,
        5000
      ],
      "op": "POP",
      "path": "14"
    },
    "2268": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        4978,
        5000
      ],
      "op": "POP",
      "path": "14"
    },
    "2269": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        4978,
        5000
      ],
      "op": "POP",
      "path": "14"
    },
    "2270": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        4978,
        5000
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2271": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        4978,
        5000
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2272": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2273": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2274": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2275": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2276": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        4967,
        5012
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2277": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        4967,
        5012
      ],
      "op": "ADD",
      "path": "14"
    },
    "2278": {
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "2279": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "2280": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x940"
    },
    "2283": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2284": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x8F7"
    },
    "2287": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        4967,
        5012
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2288": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        4967,
        5012
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2289": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        4967,
        5012
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2290": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        4967,
        5012
      ],
      "op": "ADD",
      "path": "14"
    },
    "2291": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2783"
    },
    "2294": {
      "fn": "MasterNode._resmumeOperations",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2295": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2296": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "2297": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2298": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2299": {
      "offset": [
        2724,
        2734
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "2301": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2302": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2303": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2304": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15913
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "2305": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x100"
    },
    "2308": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xFF00"
    },
    "2311": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15913
      ],
      "op": "NOT",
      "path": "14"
    },
    "2312": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2313": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2314": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "2315": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15913
      ],
      "op": "OR",
      "path": "14"
    },
    "2316": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2317": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15913
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "2318": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5081,
        5103
      ],
      "op": "MLOAD",
      "path": "14",
      "statement": 11
    },
    "2319": {
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2320": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2321": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2322": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2323": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2324": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5070,
        5115
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2325": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5070,
        5115
      ],
      "op": "ADD",
      "path": "14"
    },
    "2326": {
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "2327": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "2328": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x93C"
    },
    "2331": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2332": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x925"
    },
    "2335": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5070,
        5115
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2336": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5070,
        5115
      ],
      "op": "ADD",
      "path": "14"
    },
    "2337": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2783"
    },
    "2340": {
      "fn": "MasterNode._resmumeOperations",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2341": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2342": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "2343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2347": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2349": {
      "op": "SHL"
    },
    "2350": {
      "op": "SUB"
    },
    "2351": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "2353": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15913
      ],
      "op": "SHL",
      "path": "14"
    },
    "2354": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5057,
        5115
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9"
    },
    "2356": {
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2357": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "2358": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15913
      ],
      "op": "OR",
      "path": "14"
    },
    "2359": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5057,
        5115
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9"
    },
    "2361": {
      "offset": [
        783,
        15913
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "2362": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2363": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15913
      ],
      "op": "RETURN",
      "path": "14"
    },
    "2364": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2365": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2366": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2367": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15913
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2368": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2369": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2370": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2371": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15913
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2372": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8159,
        8382
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2373": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8247,
        8259
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2374": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8247,
        8259
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "2375": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8247,
        8259
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "2376": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8247,
        8259
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "2377": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8247,
        8259
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2378": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8258,
        8259
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "2380": {
      "branch": 74,
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8247,
        8259
      ],
      "op": "SUB",
      "path": "14"
    },
    "2381": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8258,
        8259
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA47"
    },
    "2384": {
      "branch": 74,
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8258,
        8259
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2385": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6043,
        6063
      ],
      "op": "POP",
      "path": "14"
    },
    "2386": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6043,
        6063
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2387": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "2389": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2390": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2391": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2392": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6015,
        6138
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2393": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6015,
        6138
      ],
      "op": "ADD",
      "path": "14"
    },
    "2394": {
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "2395": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "2396": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA43"
    },
    "2399": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2400": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x96A"
    },
    "2403": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6015,
        6138
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2404": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6015,
        6138
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2405": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6015,
        6138
      ],
      "op": "ADD",
      "path": "14"
    },
    "2406": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2797"
    },
    "2409": {
      "fn": "MasterNode._nodeAaveFeed",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2410": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2411": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "2412": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2413": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2414": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "2415": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2416": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "2417": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "2419": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2420": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "2421": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2422": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "2424": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "2426": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2427": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "2428": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2429": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "2430": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "2431": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2432": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6171,
        6193
      ],
      "op": "SWAP8",
      "path": "14",
      "statement": 12
    },
    "2433": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6171,
        6193
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2434": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6171,
        6193
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2435": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP9",
      "path": "14"
    },
    "2436": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2437": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2438": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2439": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6160,
        6205
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2440": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6160,
        6205
      ],
      "op": "ADD",
      "path": "14"
    },
    "2441": {
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "2442": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "2443": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA3F"
    },
    "2446": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2447": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x99A"
    },
    "2450": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6160,
        6205
      ],
      "op": "DUP10",
      "path": "14"
    },
    "2451": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6160,
        6205
      ],
      "op": "DUP9",
      "path": "14"
    },
    "2452": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6160,
        6205
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2453": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6160,
        6205
      ],
      "op": "ADD",
      "path": "14"
    },
    "2454": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2783"
    },
    "2457": {
      "fn": "MasterNode._nodeAaveFeed",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2458": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2459": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "2460": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "DUP11",
      "path": "14"
    },
    "2461": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2462": {
      "offset": [
        2724,
        2734
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "2464": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP9",
      "path": "14"
    },
    "2465": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2466": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6239,
        6254
      ],
      "op": "TIMESTAMP",
      "path": "14"
    },
    "2467": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "2469": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "DUP9",
      "path": "14"
    },
    "2470": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "DUP13",
      "path": "14"
    },
    "2471": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "2472": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6149,
        6236
      ],
      "op": "ADD",
      "path": "14"
    },
    "2473": {
      "offset": [
        783,
        15913
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "2474": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6286,
        6308
      ],
      "op": "DUP5",
      "path": "14",
      "statement": 13
    },
    "2475": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6286,
        6308
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2476": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP9",
      "path": "14"
    },
    "2477": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2478": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2479": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2480": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6275,
        6320
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2481": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6275,
        6320
      ],
      "op": "ADD",
      "path": "14"
    },
    "2482": {
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "2483": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "2484": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA3F"
    },
    "2487": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2488": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x9C3"
    },
    "2491": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6275,
        6320
      ],
      "op": "DUP10",
      "path": "14"
    },
    "2492": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6275,
        6320
      ],
      "op": "DUP9",
      "path": "14"
    },
    "2493": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6275,
        6320
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2494": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6275,
        6320
      ],
      "op": "ADD",
      "path": "14"
    },
    "2495": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2783"
    },
    "2498": {
      "fn": "MasterNode._nodeAaveFeed",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2499": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2500": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "2501": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "DUP11",
      "path": "14"
    },
    "2502": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2503": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8258,
        8259
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "2505": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "2506": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "DUP12",
      "path": "14"
    },
    "2507": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "2508": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6264,
        6350
      ],
      "op": "ADD",
      "path": "14"
    },
    "2509": {
      "offset": [
        783,
        15913
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "2510": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6400,
        6422
      ],
      "op": "DUP4",
      "path": "14",
      "statement": 14
    },
    "2511": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6400,
        6422
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2512": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "2513": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2514": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2515": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2516": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6389,
        6434
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2517": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6389,
        6434
      ],
      "op": "ADD",
      "path": "14"
    },
    "2518": {
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "2519": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "2520": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA3B"
    },
    "2523": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2524": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x9E7"
    },
    "2527": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6389,
        6434
      ],
      "op": "DUP9",
      "path": "14"
    },
    "2528": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6389,
        6434
      ],
      "op": "DUP8",
      "path": "14"
    },
    "2529": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6389,
        6434
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2530": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6389,
        6434
      ],
      "op": "ADD",
      "path": "14"
    },
    "2531": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2783"
    },
    "2534": {
      "fn": "MasterNode._nodeAaveFeed",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2535": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2536": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "2537": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "DUP10",
      "path": "14"
    },
    "2538": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2539": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "2541": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2542": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "DUP11",
      "path": "14"
    },
    "2543": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "2544": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6378,
        6464
      ],
      "op": "ADD",
      "path": "14"
    },
    "2545": {
      "offset": [
        783,
        15913
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "2546": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6514,
        6536
      ],
      "op": "DUP3",
      "path": "14",
      "statement": 15
    },
    "2547": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6514,
        6536
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2548": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2549": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2550": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2551": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2552": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6503,
        6548
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2553": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6503,
        6548
      ],
      "op": "ADD",
      "path": "14"
    },
    "2554": {
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "2555": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "2556": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA37"
    },
    "2559": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2560": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA0B"
    },
    "2563": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6503,
        6548
      ],
      "op": "DUP8",
      "path": "14"
    },
    "2564": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6503,
        6548
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2565": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6503,
        6548
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2566": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6503,
        6548
      ],
      "op": "ADD",
      "path": "14"
    },
    "2567": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2783"
    },
    "2570": {
      "fn": "MasterNode._nodeAaveFeed",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2571": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2572": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "2573": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "DUP9",
      "path": "14"
    },
    "2574": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2575": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2576": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "DUP9",
      "path": "14"
    },
    "2577": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "2578": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6492,
        6573
      ],
      "op": "ADD",
      "path": "14"
    },
    "2579": {
      "offset": [
        783,
        15913
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "2580": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6618,
        6640
      ],
      "op": "MLOAD",
      "path": "14",
      "statement": 16
    },
    "2581": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2582": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2583": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2584": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2585": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6607,
        6652
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2586": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6607,
        6652
      ],
      "op": "ADD",
      "path": "14"
    },
    "2587": {
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "2588": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "2589": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x940"
    },
    "2592": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2593": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x5"
    },
    "2595": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6607,
        6652
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "2596": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA2D"
    },
    "2599": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6607,
        6652
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2600": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6607,
        6652
      ],
      "op": "ADD",
      "path": "14"
    },
    "2601": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2783"
    },
    "2604": {
      "fn": "MasterNode._nodeAaveFeed",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2605": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2606": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "2607": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2608": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2609": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2610": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "2611": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6596,
        6681
      ],
      "op": "ADD",
      "path": "14"
    },
    "2612": {
      "offset": [
        783,
        15913
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "2613": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2614": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "RETURN",
      "path": "14"
    },
    "2615": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2616": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "DUP9",
      "path": "14"
    },
    "2617": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2618": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2619": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2620": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "DUP10",
      "path": "14"
    },
    "2621": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2622": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2623": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2624": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "DUP11",
      "path": "14"
    },
    "2625": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2626": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2627": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2628": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2629": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2630": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15913
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2631": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8243,
        8382
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2632": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2633": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x19"
    },
    "2635": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "2637": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2638": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "DUP9",
      "path": "14"
    },
    "2639": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "DUP9",
      "path": "14"
    },
    "2640": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2641": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "2642": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x461BCD"
    },
    "2646": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE5"
    },
    "2648": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "SHL",
      "path": "14"
    },
    "2649": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8336,
        8371
      ],
      "op": "DUP6",
      "path": "14",
      "statement": 17
    },
    "2650": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8336,
        8371
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2651": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8336,
        8371
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2652": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8336,
        8371
      ],
      "op": "ADD",
      "path": "14"
    },
    "2653": {
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2654": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2655": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "2656": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2657": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x696E76616C696420636F6D6D616E642066726F6D204E6F646500000000000000"
    },
    "2690": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "2692": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2693": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "2694": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2695": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8336,
        8371
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "14"
    },
    "2696": {
      "offset": [
        2719,
        2829
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2697": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2698": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2699": {
      "op": "PUSH4",
      "value": "0x6A9FF79F"
    },
    "2704": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2706": {
      "op": "SHL"
    },
    "2707": {
      "offset": [
        2782,
        2818
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2708": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2782,
        2818
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2709": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2782,
        2818
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2710": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2782,
        2818
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2711": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2782,
        2818
      ],
      "op": "ADD",
      "path": "14"
    },
    "2712": {
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2713": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2714": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2715": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2716": {
      "offset": [
        2782,
        2818
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2717": {
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2718": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "DUP11",
      "path": "14"
    },
    "2719": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2720": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "2721": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "2722": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "2723": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xADC"
    },
    "2726": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2727": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "DUP11",
      "path": "14"
    },
    "2728": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2729": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2730": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAB2"
    },
    "2733": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2734": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x206D"
    },
    "2737": {
      "fn": "MasterNode._ccipReceive",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2738": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2739": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2740": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "2741": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2742": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "DUP12",
      "path": "14"
    },
    "2743": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2744": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "2745": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2746": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "2747": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAD7"
    },
    "2750": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2751": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2752": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "DUP15",
      "path": "14"
    },
    "2753": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2754": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "DUP15",
      "path": "14"
    },
    "2755": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "2756": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2757": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2758": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2759": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "2760": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "2761": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2762": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2763": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "2764": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2765": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2766": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2767": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "2768": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2769": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "2770": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2771": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x829"
    },
    "2774": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2775": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2776": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2778": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2779": {
      "first_revert": true,
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2780": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2781": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "DUP13",
      "path": "14"
    },
    "2782": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2783": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2784": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2785": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2786": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x41"
    },
    "2788": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2789": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x4E487B71"
    },
    "2794": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "2796": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "SHL",
      "path": "14"
    },
    "2797": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2799": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2800": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2801": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2803": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2804": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2805": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "DUP12",
      "path": "14"
    },
    "2806": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2807": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2808": {
      "offset": [
        2423,
        2496
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2809": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "2811": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2812": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2813": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2814": {
      "offset": [
        2471,
        2496
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2815": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2471,
        2496
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x35FDCCCD"
    },
    "2820": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2471,
        2496
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE2"
    },
    "2822": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2471,
        2496
      ],
      "op": "SHL",
      "path": "4"
    },
    "2823": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2471,
        2496
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2824": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2471,
        2496
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2825": {
      "offset": [
        2427,
        2437
      ],
      "op": "CALLER",
      "path": "4"
    },
    "2826": {
      "offset": [
        2471,
        2496
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2827": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2471,
        2496
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2828": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2471,
        2496
      ],
      "op": "ADD",
      "path": "4"
    },
    "2829": {
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2830": {
      "offset": [
        2471,
        2496
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2831": {
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2832": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "2833": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2834": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "2835": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x261"
    },
    "2838": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2839": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2840": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "2842": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "NOT",
      "path": "14"
    },
    "2843": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "2844": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "2845": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "2846": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x261"
    },
    "2849": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2850": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1142,
        1156
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 18,
      "value": "0x1"
    },
    "2852": {
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2853": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2858": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2860": {
      "op": "SHL"
    },
    "2861": {
      "op": "SUB"
    },
    "2862": {
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2863": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2864": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2865": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "2866": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1128,
        1138
      ],
      "op": "CALLER",
      "path": "9"
    },
    "2867": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1128,
        1156
      ],
      "op": "SUB",
      "path": "9"
    },
    "2868": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB7A"
    },
    "2871": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2872": {
      "op": "POP"
    },
    "2873": {
      "op": "POP"
    },
    "2874": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2875": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2876": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2880": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2882": {
      "op": "SHL"
    },
    "2883": {
      "op": "SUB"
    },
    "2884": {
      "op": "NOT"
    },
    "2885": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2886": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2887": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "2888": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1128,
        1138
      ],
      "op": "CALLER",
      "path": "9"
    },
    "2889": {
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2890": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2891": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "OR",
      "path": "14"
    },
    "2892": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2893": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "2894": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "2895": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "2896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2898": {
      "offset": [
        783,
        15913
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "2899": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "2900": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1287,
        1329
      ],
      "op": "PUSH32",
      "path": "9",
      "statement": 19,
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "2933": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2934": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2935": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1287,
        1329
      ],
      "op": "LOG3",
      "path": "9"
    },
    "2936": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2937": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "RETURN",
      "path": "14"
    },
    "2938": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2939": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2940": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2942": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "2944": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2945": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2946": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2947": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x461BCD"
    },
    "2951": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE5"
    },
    "2953": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "SHL",
      "path": "14"
    },
    "2954": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2955": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2956": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2957": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "2958": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2959": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x16"
    },
    "2961": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "2963": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2964": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "2965": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2966": {
      "op": "PUSH22",
      "value": "0x26BAB9BA10313290383937B837B9B2B21037BBB732B9"
    },
    "2989": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "2991": {
      "op": "SHL"
    },
    "2992": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "2994": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2995": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "2996": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2997": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2998": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2999": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "3000": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "3001": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "3002": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "3005": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3006": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3008": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "3009": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "3011": {
      "op": "NOT"
    },
    "3012": {
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "3013": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "3014": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "3017": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3018": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3020": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3021": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3022": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3023": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3025": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3027": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3029": {
      "op": "SHL"
    },
    "3030": {
      "op": "SUB"
    },
    "3031": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xBDE"
    },
    "3034": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F6E"
    },
    "3037": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3038": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3039": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "3040": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3041": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3042": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3515
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 20,
      "value": "0x2"
    },
    "3044": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3045": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3046": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15913
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3047": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3048": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3049": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3050": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3051": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3052": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3053": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15913
      ],
      "op": "RETURN",
      "path": "14"
    },
    "3054": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3055": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3056": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15913
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "3057": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4CE"
    },
    "3060": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3061": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3062": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "3064": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15913
      ],
      "op": "NOT",
      "path": "14"
    },
    "3065": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "3066": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "3067": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "3068": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4CE"
    },
    "3071": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3072": {
      "offset": [
        2032,
        2091
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC07"
    },
    "3075": {
      "fn": "ERC20.balanceOf",
      "offset": [
        2032,
        2091
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2834"
    },
    "3078": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        2032,
        2091
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3079": {
      "fn": "ERC20.balanceOf",
      "offset": [
        2032,
        2091
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3080": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        3124,
        3146
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 21,
      "value": "0x7"
    },
    "3082": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3083": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3084": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3086": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "3088": {
      "op": "SHL"
    },
    "3089": {
      "op": "NOT"
    },
    "3090": {
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "3091": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3092": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "3093": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3094": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "RETURN",
      "path": "14"
    },
    "3095": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3096": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "3097": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "3098": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "3099": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "3102": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3103": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3104": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "3106": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "NOT",
      "path": "14"
    },
    "3107": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "3108": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "3109": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "3110": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "3113": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3114": {
      "offset": [
        1989,
        2014
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9"
    },
    "3116": {
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3117": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3118": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3123": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3125": {
      "op": "SHL"
    },
    "3126": {
      "op": "SUB"
    },
    "3127": {
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3128": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3129": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "3130": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3131": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3132": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3134": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3135": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "RETURN",
      "path": "14"
    },
    "3136": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3137": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "3138": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "3139": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "3140": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "3143": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3144": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3145": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "3147": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "NOT",
      "path": "14"
    },
    "3148": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "3149": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "3150": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "3151": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "3154": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3155": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3157": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3158": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "3160": {
      "offset": [
        1915,
        1948
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x7"
    },
    "3162": {
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3163": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA8"
    },
    "3165": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "SHR",
      "path": "14"
    },
    "3166": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "3167": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3168": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3169": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3170": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3171": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3172": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3173": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3174": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "RETURN",
      "path": "14"
    },
    "3175": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3176": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "3177": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "3178": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "3179": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "3182": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3183": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3184": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "3186": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "NOT",
      "path": "14"
    },
    "3187": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "3188": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "3189": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "3190": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "3193": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3194": {
      "offset": [
        1954,
        1983
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "3196": {
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3197": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3198": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3201": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3203": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3205": {
      "op": "SHL"
    },
    "3206": {
      "op": "SUB"
    },
    "3207": {
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3208": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3209": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "3210": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3211": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3212": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3214": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3215": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "RETURN",
      "path": "14"
    },
    "3216": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3217": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "3218": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3219": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3220": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "3221": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "3224": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3225": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3226": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "3228": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "NOT",
      "path": "14"
    },
    "3229": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "3230": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "3231": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "3232": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "3235": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3236": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xCAB"
    },
    "3239": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FF8"
    },
    "3242": {
      "fn": "MasterNode.stopAddingNodes",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3243": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3244": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xCB3"
    },
    "3247": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F84"
    },
    "3250": {
      "fn": "MasterNode.stopAddingNodes",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3251": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3252": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "3253": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "3255": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3256": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "3258": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "SHL",
      "path": "14"
    },
    "3259": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "3260": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3261": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3262": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "3263": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "3264": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3265": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3266": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "3267": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3268": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3270": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12274,
        12284
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 22,
      "value": "0xB"
    },
    "3272": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3273": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3274": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "3276": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3277": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP9",
      "path": "14"
    },
    "3278": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3279": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3280": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "3281": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3282": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1261"
    },
    "3285": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3286": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "3287": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "3288": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "3290": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12446,
        12466
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x7"
    },
    "3292": {
      "offset": [
        783,
        15913
      ],
      "op": "SWAP9",
      "path": "14"
    },
    "3293": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "3294": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP9",
      "path": "14"
    },
    "3295": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3296": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "3297": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12445,
        12466
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3298": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12441,
        12631
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x11FA"
    },
    "3301": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12441,
        12631
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3302": {
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3303": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "3304": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3305": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3306": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "3308": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12698,
        12818
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3309": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12698,
        12818
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3310": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12698,
        12818
      ],
      "op": "ADD",
      "path": "14"
    },
    "3311": {
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3314": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3316": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3318": {
      "op": "SHL"
    },
    "3319": {
      "op": "SUB"
    },
    "3320": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3321": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "3322": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "3323": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3324": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3325": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "3326": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3327": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "3328": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3329": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "3331": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3332": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "3333": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3334": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3335": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "3336": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3337": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12698,
        12818
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3338": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12698,
        12818
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3339": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12698,
        12818
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3340": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12698,
        12818
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xD14"
    },
    "3343": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12698,
        12818
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3344": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12698,
        12818
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2088"
    },
    "3347": {
      "fn": "MasterNode.warpAssets",
      "jump": "i",
      "offset": [
        12698,
        12818
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3348": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12698,
        12818
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3349": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP10",
      "path": "14"
    },
    "3350": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12839,
        12849
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 23,
      "value": "0x9"
    },
    "3352": {
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3353": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "3354": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP10",
      "path": "14"
    },
    "3355": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3356": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12274,
        12284
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "3358": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3359": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3360": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "3361": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP10",
      "path": "14"
    },
    "3362": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3363": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xFF00"
    },
    "3366": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "NOT",
      "path": "14"
    },
    "3367": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3368": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3369": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "3370": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3371": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "3372": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP10",
      "path": "14"
    },
    "3373": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12839,
        12849
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9"
    },
    "3375": {
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3376": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "3377": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3378": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3379": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP11",
      "path": "14"
    },
    "3380": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3381": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "3382": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP11",
      "path": "14"
    },
    "3383": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3384": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3385": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3386": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3387": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x10"
    },
    "3389": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SHR",
      "path": "14"
    },
    "3390": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "3391": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12924,
        12948
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3392": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12924,
        12948
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x0"
    },
    "3425": {
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "3426": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12886,
        12948
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3427": {
      "branch": 75,
      "fn": "MasterNode.warpAssets",
      "offset": [
        12886,
        12948
      ],
      "op": "EQ",
      "path": "14"
    },
    "3428": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12882,
        13204
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3430": {
      "offset": [
        783,
        15913
      ],
      "op": "EQ",
      "path": "14"
    },
    "3431": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xDEF"
    },
    "3434": {
      "branch": 75,
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3435": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "3436": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "3437": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "3438": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "3439": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "3440": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "3441": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "3442": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12839,
        12849
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9"
    },
    "3444": {
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3445": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "3446": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12964,
        13096
      ],
      "op": "DUP1",
      "path": "14",
      "statement": 24
    },
    "3447": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12964,
        13096
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "3448": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12964,
        13096
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3449": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12964,
        13096
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x940"
    },
    "3452": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12964,
        13096
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3453": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "3454": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3455": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3456": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "3458": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3459": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "3460": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3461": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "3462": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP9",
      "path": "14"
    },
    "3463": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "3464": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "3465": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "3466": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x4BB297FF"
    },
    "3471": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE1"
    },
    "3473": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SHL",
      "path": "14"
    },
    "3474": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12964,
        13096
      ],
      "op": "DUP7",
      "path": "14"
    },
    "3475": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12964,
        13096
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3476": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12964,
        13096
      ],
      "op": "DUP6",
      "path": "14"
    },
    "3477": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12964,
        13096
      ],
      "op": "ADD",
      "path": "14"
    },
    "3478": {
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3479": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "3481": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3482": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "3483": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3484": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12964,
        13096
      ],
      "op": "GAS",
      "path": "14"
    },
    "3485": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12964,
        13096
      ],
      "op": "CALL",
      "path": "14"
    },
    "3486": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12964,
        13096
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3487": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12964,
        13096
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3488": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12964,
        13096
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3489": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12964,
        13096
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xDE6"
    },
    "3492": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12964,
        13096
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3493": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12964,
        13096
      ],
      "op": "POP",
      "path": "14"
    },
    "3494": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12964,
        13096
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xDD2"
    },
    "3497": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12964,
        13096
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3498": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12882,
        13204
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3499": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12882,
        13204
      ],
      "op": "POP",
      "path": "14"
    },
    "3500": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12882,
        13204
      ],
      "op": "POP",
      "path": "14"
    },
    "3501": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12882,
        13204
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3502": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12839,
        12849
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9"
    },
    "3504": {
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3509": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3511": {
      "op": "SHL"
    },
    "3512": {
      "op": "SUB"
    },
    "3513": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "3515": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SHL",
      "path": "14"
    },
    "3516": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3517": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3518": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "3519": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3520": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "3522": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3523": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "3524": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "OR",
      "path": "14"
    },
    "3525": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "3527": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "3528": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "3529": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12839,
        12849
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9"
    },
    "3531": {
      "offset": [
        783,
        15913
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "3532": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        13301,
        13316
      ],
      "op": "TIMESTAMP",
      "path": "14",
      "statement": 25
    },
    "3533": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        13284,
        13316
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA"
    },
    "3535": {
      "offset": [
        783,
        15913
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "3536": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3537": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "RETURN",
      "path": "14"
    },
    "3538": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12964,
        13096
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3539": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12964,
        13096
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xDDB"
    },
    "3542": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12964,
        13096
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3543": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12964,
        13096
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x205A"
    },
    "3546": {
      "fn": "MasterNode.warpAssets",
      "jump": "i",
      "offset": [
        12964,
        13096
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3547": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12964,
        13096
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3548": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "3551": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3552": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12964,
        13096
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3553": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12964,
        13096
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3554": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12964,
        13096
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xDAA"
    },
    "3557": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12964,
        13096
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3558": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12964,
        13096
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3559": {
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3560": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "3561": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3562": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3563": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "3564": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "3565": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3566": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "REVERT",
      "path": "14"
    },
    "3567": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12882,
        13204
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3568": {
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3569": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "3570": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "3571": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3572": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "3573": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "3574": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "3575": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "3577": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3578": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "3579": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "3580": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP9",
      "path": "14"
    },
    "3581": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "3582": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "3583": {
      "offset": [
        2723,
        2759
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3584": {
      "offset": [
        2719,
        2829
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x11E3"
    },
    "3587": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        2719,
        2829
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3588": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "3589": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12446,
        12466
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x7"
    },
    "3591": {
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3592": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "3594": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SHR",
      "path": "14"
    },
    "3595": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "3596": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3597": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3598": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "3599": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "3601": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP10",
      "path": "14"
    },
    "3602": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3603": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE1B"
    },
    "3606": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3607": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x200E"
    },
    "3610": {
      "fn": "MasterNode.warpAssets",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3611": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3612": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3613": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3614": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3615": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3616": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP13",
      "path": "14"
    },
    "3617": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3618": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "3619": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3620": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3621": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP12",
      "path": "14"
    },
    "3622": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3623": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "3624": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3625": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP14",
      "path": "14"
    },
    "3626": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3627": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3628": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "3629": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3630": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "3631": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3632": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "3633": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3634": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11015,
        11036
      ],
      "op": "SWAP7",
      "path": "14",
      "statement": 26
    },
    "3635": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11015,
        11036
      ],
      "op": "DUP10",
      "path": "14"
    },
    "3636": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11015,
        11036
      ],
      "op": "DUP9",
      "path": "14"
    },
    "3637": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11015,
        11036
      ],
      "op": "ADD",
      "path": "14"
    },
    "3638": {
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3639": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11015,
        11036
      ],
      "op": "DUP9",
      "path": "14"
    },
    "3640": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11015,
        11036
      ],
      "op": "DUP8",
      "path": "14"
    },
    "3641": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11015,
        11036
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3642": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11015,
        11036
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE42"
    },
    "3645": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11015,
        11036
      ],
      "op": "DUP8",
      "path": "14"
    },
    "3646": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11015,
        11036
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x206D"
    },
    "3649": {
      "fn": "MasterNode._buildCCIPMessage",
      "jump": "i",
      "offset": [
        11015,
        11036
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3650": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11015,
        11036
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3651": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "3652": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3653": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE4D"
    },
    "3656": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3657": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x203F"
    },
    "3660": {
      "fn": "MasterNode._buildCCIPMessage",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3661": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3662": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3664": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3665": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3666": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11260,
        11426
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE6A"
    },
    "3669": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP10",
      "path": "14"
    },
    "3670": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3671": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE5F"
    },
    "3674": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3675": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x203F"
    },
    "3678": {
      "fn": "MasterNode._buildCCIPMessage",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3679": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3680": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11397,
        11406
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x1E8480"
    },
    "3684": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3685": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3686": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11260,
        11426
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x27A5"
    },
    "3689": {
      "fn": "MasterNode._buildCCIPMessage",
      "jump": "i",
      "offset": [
        11260,
        11426
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3690": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11260,
        11426
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3691": {
      "offset": [
        783,
        15913
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "3692": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP10",
      "path": "14"
    },
    "3693": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3694": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP9",
      "path": "14"
    },
    "3695": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE77"
    },
    "3698": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP11",
      "path": "14"
    },
    "3699": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x200E"
    },
    "3702": {
      "fn": "MasterNode._buildCCIPMessage",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3703": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3704": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP10",
      "path": "14"
    },
    "3705": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3706": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10965,
        11591
      ],
      "op": "DUP11",
      "path": "14"
    },
    "3707": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10965,
        11591
      ],
      "op": "DUP10",
      "path": "14"
    },
    "3708": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10965,
        11591
      ],
      "op": "ADD",
      "path": "14"
    },
    "3709": {
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3710": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10965,
        11591
      ],
      "op": "DUP9",
      "path": "14"
    },
    "3711": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10965,
        11591
      ],
      "op": "DUP9",
      "path": "14"
    },
    "3712": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10965,
        11591
      ],
      "op": "ADD",
      "path": "14"
    },
    "3713": {
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3714": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10965,
        11591
      ],
      "op": "DUP7",
      "path": "14"
    },
    "3715": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10965,
        11591
      ],
      "op": "ADD",
      "path": "14"
    },
    "3716": {
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3717": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "3719": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10965,
        11591
      ],
      "op": "DUP6",
      "path": "14"
    },
    "3720": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10965,
        11591
      ],
      "op": "ADD",
      "path": "14"
    },
    "3721": {
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3722": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3723": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3724": {
      "op": "PUSH4",
      "value": "0xB0F479A1"
    },
    "3729": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3731": {
      "op": "SHL"
    },
    "3732": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3733": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3734": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10965,
        11591
      ],
      "op": "DUP7",
      "path": "14"
    },
    "3735": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3736": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9429
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3737": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3738": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9429
      ],
      "op": "ADDRESS",
      "path": "14"
    },
    "3739": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "GAS",
      "path": "14"
    },
    "3740": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "3741": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3742": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3743": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3744": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x11D9"
    },
    "3747": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        9425,
        9441
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3748": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        9425,
        9441
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3749": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        9425,
        9441
      ],
      "op": "DUP9",
      "path": "14"
    },
    "3750": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        9425,
        9441
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3751": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        9425,
        9441
      ],
      "op": "DUP11",
      "path": "14"
    },
    "3752": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        9425,
        9441
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3753": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        9425,
        9441
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x119F"
    },
    "3756": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        9425,
        9441
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3757": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12882,
        13204
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3758": {
      "op": "POP"
    },
    "3759": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "3760": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3761": {
      "op": "PUSH4",
      "value": "0x20487DED"
    },
    "3766": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3768": {
      "op": "SHL"
    },
    "3769": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3770": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3771": {
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3772": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "3773": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "3774": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP10",
      "path": "14"
    },
    "3775": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3776": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "DUP9",
      "path": "14"
    },
    "3777": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3778": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3779": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xECF"
    },
    "3782": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "DUP11",
      "path": "14"
    },
    "3783": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "DUP10",
      "path": "14"
    },
    "3784": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "DUP10",
      "path": "14"
    },
    "3785": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3786": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "ADD",
      "path": "14"
    },
    "3787": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2174"
    },
    "3790": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9525,
        9581
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3791": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3792": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "SUB",
      "path": "14"
    },
    "3793": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3794": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "DUP10",
      "path": "14"
    },
    "3795": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "GAS",
      "path": "14"
    },
    "3796": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "3797": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3798": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3799": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3800": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1195"
    },
    "3803": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3804": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3805": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "DUP10",
      "path": "14"
    },
    "3806": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3807": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3808": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "3809": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1163"
    },
    "3812": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3813": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12882,
        13204
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3814": {
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "3815": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "3817": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP10",
      "path": "14"
    },
    "3818": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3819": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3820": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "3821": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3822": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "3823": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x23B872DD"
    },
    "3828": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "3830": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SHL",
      "path": "14"
    },
    "3831": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "DUP4",
      "path": "14",
      "statement": 27
    },
    "3832": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3833": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9638,
        9648
      ],
      "op": "CALLER",
      "path": "14"
    },
    "3834": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "DUP10",
      "path": "14"
    },
    "3835": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3836": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "ADD",
      "path": "14"
    },
    "3837": {
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3838": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9429
      ],
      "op": "ADDRESS",
      "path": "14"
    },
    "3839": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "3841": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3842": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "3843": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3844": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "3845": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "3847": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3848": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "3849": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3850": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "GAS",
      "path": "14"
    },
    "3851": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "CALL",
      "path": "14"
    },
    "3852": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3853": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3854": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3855": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1159"
    },
    "3858": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3859": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "DUP11",
      "path": "14"
    },
    "3860": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3861": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x113C"
    },
    "3864": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3865": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12882,
        13204
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3866": {
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "3867": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3868": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x10F9"
    },
    "3871": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3872": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "3873": {
      "branch": 76,
      "fn": "MasterNode.warpAssets",
      "offset": [
        12446,
        12466
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x7"
    },
    "3875": {
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3876": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "3878": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SHR",
      "path": "14"
    },
    "3879": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "3880": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3881": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "3882": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3883": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x70A08231"
    },
    "3888": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "3890": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SHL",
      "path": "14"
    },
    "3891": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "SWAP1",
      "path": "14",
      "statement": 28
    },
    "3892": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3893": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3894": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3895": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9429
      ],
      "op": "ADDRESS",
      "path": "14"
    },
    "3896": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "DUP6",
      "path": "14"
    },
    "3897": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3898": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "ADD",
      "path": "14"
    },
    "3899": {
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3900": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "DUP10",
      "path": "14"
    },
    "3901": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3902": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "3904": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3905": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "DUP8",
      "path": "14"
    },
    "3906": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "GAS",
      "path": "14"
    },
    "3907": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "3908": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3909": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3910": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3911": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x10EF"
    },
    "3914": {
      "branch": 76,
      "fn": "MasterNode.warpAssets",
      "offset": [
        9744,
        9780
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3915": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        9744,
        9780
      ],
      "op": "DUP13",
      "path": "14"
    },
    "3916": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        9744,
        9780
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3917": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        9744,
        9780
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x10C2"
    },
    "3920": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        9744,
        9780
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3921": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12882,
        13204
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3922": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9737,
        9780
      ],
      "op": "POP",
      "path": "14"
    },
    "3923": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9737,
        9780
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3924": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9737,
        9780
      ],
      "op": "GT",
      "path": "14"
    },
    "3925": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9733,
        9861
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1046"
    },
    "3928": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9733,
        9861
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3929": {
      "op": "POP"
    },
    "3930": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "3931": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3932": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "3937": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3939": {
      "op": "SHL"
    },
    "3940": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "DUP2",
      "path": "14",
      "statement": 29
    },
    "3941": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3942": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3944": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3946": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3948": {
      "op": "SHL"
    },
    "3949": {
      "op": "SUB"
    },
    "3950": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "3951": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "3952": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3953": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "DUP6",
      "path": "14"
    },
    "3954": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "ADD",
      "path": "14"
    },
    "3955": {
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3956": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3957": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3958": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3960": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3961": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "3962": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3963": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3964": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3965": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3966": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP11",
      "path": "14"
    },
    "3967": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "3968": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3969": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3970": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3971": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP10",
      "path": "14"
    },
    "3972": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3973": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3974": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3975": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3976": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3977": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "3978": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3979": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3980": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3981": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3983": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "3984": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "SUB",
      "path": "14"
    },
    "3985": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3986": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "GAS",
      "path": "14"
    },
    "3987": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "CALL",
      "path": "14"
    },
    "3988": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3989": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3990": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x103C"
    },
    "3993": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3994": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3995": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "DUP9",
      "path": "14"
    },
    "3996": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "3997": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "3998": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3999": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 30,
      "value": "0xFC5"
    },
    "4002": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "SWAP9",
      "path": "14"
    },
    "4003": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "4004": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "4005": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "4006": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x100F"
    },
    "4009": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4010": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12882,
        13204
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4011": {
      "op": "POP"
    },
    "4012": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "4013": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4014": {
      "op": "PUSH4",
      "value": "0x96F4E9F9"
    },
    "4019": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4021": {
      "op": "SHL"
    },
    "4022": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4023": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4024": {
      "offset": [
        783,
        15913
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "4025": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP9",
      "path": "14"
    },
    "4026": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "4027": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "4028": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "4029": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "4030": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "4031": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "DUP5",
      "path": "14"
    },
    "4032": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "ADD",
      "path": "14"
    },
    "4033": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2174"
    },
    "4036": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        10125,
        10183
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4037": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4038": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "SUB",
      "path": "14"
    },
    "4039": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4040": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "GAS",
      "path": "14"
    },
    "4041": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "CALL",
      "path": "14"
    },
    "4042": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4043": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4044": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4045": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1006"
    },
    "4048": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4049": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "POP",
      "path": "14"
    },
    "4050": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xFDD"
    },
    "4053": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4054": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12882,
        13204
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4055": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12882,
        13204
      ],
      "op": "POP",
      "path": "14"
    },
    "4056": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12882,
        13204
      ],
      "op": "POP",
      "path": "14"
    },
    "4057": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12882,
        13204
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xDAD"
    },
    "4060": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12882,
        13204
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4061": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4062": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4063": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4064": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4065": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "GT",
      "path": "14"
    },
    "4066": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xFFF"
    },
    "4069": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4070": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4071": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xFF0"
    },
    "4074": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4075": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4076": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x20A3"
    },
    "4079": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        10125,
        10183
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4080": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4081": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4082": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "ADD",
      "path": "14"
    },
    "4083": {
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "4084": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "4085": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "4088": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4089": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4090": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4091": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xFD6"
    },
    "4094": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4095": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4096": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "POP",
      "path": "14"
    },
    "4097": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4098": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xFE6"
    },
    "4101": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4102": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4103": {
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4104": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4105": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "4106": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4107": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "4108": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4109": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4110": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4111": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4112": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x102E"
    },
    "4115": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4116": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "DUP8",
      "path": "14"
    },
    "4117": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4118": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "DUP10",
      "path": "14"
    },
    "4119": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "GT",
      "path": "14"
    },
    "4120": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1035"
    },
    "4123": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4124": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4125": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1026"
    },
    "4128": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4129": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4130": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x20A3"
    },
    "4133": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9979,
        10021
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4134": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4135": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4136": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "ADD",
      "path": "14"
    },
    "4137": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4138": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2240"
    },
    "4141": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9979,
        10021
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4142": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4143": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "POP",
      "path": "14"
    },
    "4144": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "DUP12",
      "path": "14"
    },
    "4145": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xFAA"
    },
    "4148": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4149": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4150": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "POP",
      "path": "14"
    },
    "4151": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4152": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x101C"
    },
    "4155": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4156": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4157": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "4158": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4159": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4160": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "4161": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4162": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "4163": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4164": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4165": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4166": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9733,
        9861
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4167": {
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4168": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP11",
      "path": "14"
    },
    "4169": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP9",
      "path": "14"
    },
    "4170": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP11",
      "path": "14"
    },
    "4171": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4172": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "4173": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "4174": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "4176": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "4177": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4178": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4179": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "SWAP10",
      "path": "14"
    },
    "4180": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4181": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "4182": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4183": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4184": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9429
      ],
      "op": "ADDRESS",
      "path": "14"
    },
    "4185": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "DUP11",
      "path": "14"
    },
    "4186": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4187": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "ADD",
      "path": "14"
    },
    "4188": {
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4189": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "GAS",
      "path": "14"
    },
    "4190": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "4191": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4192": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4193": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4194": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x10B7"
    },
    "4197": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4198": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4199": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1086"
    },
    "4202": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4203": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9733,
        9861
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4204": {
      "op": "POP"
    },
    "4205": {
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4206": {
      "op": "PUSH4",
      "value": "0x4787A103"
    },
    "4211": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4213": {
      "op": "SHL"
    },
    "4214": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9801,
        9861
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4215": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9801,
        9861
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4216": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9801,
        9861
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4217": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9801,
        9861
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4218": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9801,
        9861
      ],
      "op": "ADD",
      "path": "14"
    },
    "4219": {
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4220": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "4222": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4223": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "4224": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4225": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "4227": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4228": {
      "op": "POP"
    },
    "4229": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9801,
        9861
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4230": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4231": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4232": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4233": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "POP",
      "path": "14"
    },
    "4234": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "DUP5",
      "path": "14"
    },
    "4235": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4236": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4237": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4238": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "GT",
      "path": "14"
    },
    "4239": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x10B0"
    },
    "4242": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4243": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4244": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x109D"
    },
    "4247": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4248": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4249": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x20A3"
    },
    "4252": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9818,
        9854
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4253": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4254": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4255": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "ADD",
      "path": "14"
    },
    "4256": {
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "4257": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "4258": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAD7"
    },
    "4261": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4262": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "4264": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "4265": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4266": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4267": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "DUP6",
      "path": "14"
    },
    "4268": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x106B"
    },
    "4271": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4272": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4273": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "POP",
      "path": "14"
    },
    "4274": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4275": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1093"
    },
    "4278": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4279": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4280": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4281": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4282": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4283": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4284": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4285": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4286": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "4287": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4288": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4289": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4290": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4291": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4292": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "POP",
      "path": "14"
    },
    "4293": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "DUP10",
      "path": "14"
    },
    "4294": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4295": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4296": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4297": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4298": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "GT",
      "path": "14"
    },
    "4299": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x10E8"
    },
    "4302": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4303": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4304": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x10D9"
    },
    "4307": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4308": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4309": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x20A3"
    },
    "4312": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9744,
        9780
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4313": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4314": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4315": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "ADD",
      "path": "14"
    },
    "4316": {
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "4317": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "4318": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAD7"
    },
    "4321": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4322": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4323": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "DUP13",
      "path": "14"
    },
    "4324": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xF51"
    },
    "4327": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4328": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4329": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "POP",
      "path": "14"
    },
    "4330": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4331": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x10CF"
    },
    "4334": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4335": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4336": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP10",
      "path": "14"
    },
    "4337": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4338": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4339": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP15",
      "path": "14"
    },
    "4340": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4341": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "4342": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4343": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4344": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4345": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4346": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "4347": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4348": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4352": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4354": {
      "op": "SHL"
    },
    "4355": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4356": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4357": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4358": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4359": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "4360": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP9",
      "path": "14"
    },
    "4361": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4362": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4363": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1A"
    },
    "4365": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "4367": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4368": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "4369": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4370": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x4E6F742070726F7669646564204C696E6B20666F722066656573000000000000"
    },
    "4403": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "4405": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4406": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "4407": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4408": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "4410": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4411": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4412": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4413": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1153"
    },
    "4416": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4417": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "POP",
      "path": "14"
    },
    "4418": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "DUP9",
      "path": "14"
    },
    "4419": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4420": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "DUP11",
      "path": "14"
    },
    "4421": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "GT",
      "path": "14"
    },
    "4422": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1035"
    },
    "4425": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4426": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1026"
    },
    "4429": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4430": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4431": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x20A3"
    },
    "4434": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9613,
        9670
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4435": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4436": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "DUP11",
      "path": "14"
    },
    "4437": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xF19"
    },
    "4440": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4441": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4442": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "4443": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4444": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4445": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP13",
      "path": "14"
    },
    "4446": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4447": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "4448": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4449": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4450": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4451": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4452": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4453": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "POP",
      "path": "14"
    },
    "4454": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4455": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "POP",
      "path": "14"
    },
    "4456": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4457": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4458": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4459": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4460": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "GT",
      "path": "14"
    },
    "4461": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x118E"
    },
    "4464": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4465": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4466": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x117B"
    },
    "4469": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4470": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4471": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x20A3"
    },
    "4474": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9525,
        9581
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4475": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4476": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4477": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "ADD",
      "path": "14"
    },
    "4478": {
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "4479": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "4480": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAD7"
    },
    "4483": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4484": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "4485": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP11",
      "path": "14"
    },
    "4486": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4487": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4488": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4489": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "DUP13",
      "path": "14"
    },
    "4490": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xEE5"
    },
    "4493": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4494": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4495": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "POP",
      "path": "14"
    },
    "4496": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4497": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1171"
    },
    "4500": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4501": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4502": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP9",
      "path": "14"
    },
    "4503": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4504": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4505": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "4506": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4507": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "4508": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4509": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4510": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4511": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4512": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4513": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4514": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "POP",
      "path": "14"
    },
    "4515": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "DUP9",
      "path": "14"
    },
    "4516": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4517": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4518": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "POP",
      "path": "14"
    },
    "4519": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4520": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4521": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "GT",
      "path": "14"
    },
    "4522": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x11D2"
    },
    "4525": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4526": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4527": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x11B8"
    },
    "4530": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4531": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4532": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x20A3"
    },
    "4535": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9425,
        9441
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4536": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4537": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4538": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "ADD",
      "path": "14"
    },
    "4539": {
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "4540": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "4541": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA37"
    },
    "4544": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4545": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4546": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "4547": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4548": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "4549": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4550": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "4551": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA37"
    },
    "4554": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4555": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "DUP8",
      "path": "14"
    },
    "4556": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4557": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "DUP11",
      "path": "14"
    },
    "4558": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xEAD"
    },
    "4561": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4562": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4563": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "POP",
      "path": "14"
    },
    "4564": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4565": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x11AE"
    },
    "4568": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4569": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4570": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "4571": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4572": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4573": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP12",
      "path": "14"
    },
    "4574": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4575": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "4576": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4577": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4578": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4579": {
      "offset": [
        2719,
        2829
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4580": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "4581": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4582": {
      "op": "PUSH4",
      "value": "0x6A9FF79F"
    },
    "4587": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4589": {
      "op": "SHL"
    },
    "4590": {
      "offset": [
        2782,
        2818
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4591": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        2782,
        2818
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4592": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        2782,
        2818
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4593": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        2782,
        2818
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4594": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        2782,
        2818
      ],
      "op": "ADD",
      "path": "14"
    },
    "4595": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "4596": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4597": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4598": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "4600": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4601": {
      "offset": [
        2782,
        2818
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4602": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12441,
        12631
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4603": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12507,
        12561
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 31,
      "value": "0x120E"
    },
    "4606": {
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4607": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4608": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "4609": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "4610": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "4611": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "4612": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "4613": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "4614": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12525,
        12535
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9"
    },
    "4616": {
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "4617": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "4618": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12507,
        12561
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x227B"
    },
    "4621": {
      "fn": "MasterNode.warpAssets",
      "jump": "i",
      "offset": [
        12507,
        12561
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4622": {
      "branch": 77,
      "fn": "MasterNode.warpAssets",
      "offset": [
        12507,
        12561
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4623": {
      "offset": [
        783,
        15913
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4624": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x121F"
    },
    "4627": {
      "branch": 77,
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4628": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12441,
        12631
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4629": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12441,
        12631
      ],
      "op": "DUP7",
      "path": "14"
    },
    "4630": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12441,
        12631
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "4631": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12441,
        12631
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "4632": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12441,
        12631
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4633": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12441,
        12631
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4634": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12441,
        12631
      ],
      "op": "DUP9",
      "path": "14"
    },
    "4635": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12441,
        12631
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xCE6"
    },
    "4638": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12441,
        12631
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4639": {
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4640": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4641": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "4642": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "4644": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4645": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4646": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4647": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x461BCD"
    },
    "4651": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE5"
    },
    "4653": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SHL",
      "path": "14"
    },
    "4654": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4655": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4656": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4657": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "4658": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4659": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x19"
    },
    "4661": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "4663": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4664": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "4665": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4666": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x436F6E646974696F6E20746F2077617270206E6F74206D657400000000000000"
    },
    "4699": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "4701": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4702": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "4703": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4704": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4705": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4706": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4707": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "4708": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "4710": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4711": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4712": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4713": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x461BCD"
    },
    "4717": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE5"
    },
    "4719": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SHL",
      "path": "14"
    },
    "4720": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4721": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4722": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4723": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "4724": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4725": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1D"
    },
    "4727": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "4729": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4730": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "4731": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4732": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x44657374696E6174696F6E204E6F6465206973206E6F74207661696C64000000"
    },
    "4765": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "4767": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4768": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "4769": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4770": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4771": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4772": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "4773": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4774": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "4775": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4CE"
    },
    "4778": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4779": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "4781": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "4782": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "4784": {
      "op": "NOT"
    },
    "4785": {
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "4786": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "4787": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4CE"
    },
    "4790": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4791": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x12BE"
    },
    "4794": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FF8"
    },
    "4797": {
      "fn": "MasterNode.warpAssets",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4798": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4799": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4800": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x12C7"
    },
    "4803": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F84"
    },
    "4806": {
      "fn": "MasterNode.warpAssets",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4807": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4808": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4810": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4812": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4814": {
      "op": "SHL"
    },
    "4815": {
      "op": "SUB"
    },
    "4816": {
      "offset": [
        783,
        15913
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "4817": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "4819": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "4820": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "4821": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4822": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "4823": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4824": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4825": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4826": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4827": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "4828": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAD7"
    },
    "4831": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4832": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "4834": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "4835": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4836": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "4837": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4838": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "4839": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4840": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4841": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "4842": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAD7"
    },
    "4845": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4846": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x84"
    },
    "4848": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "4849": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "4850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4854": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4856": {
      "op": "SHL"
    },
    "4857": {
      "op": "SUB"
    },
    "4858": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP10",
      "path": "14"
    },
    "4859": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "GT",
      "path": "14"
    },
    "4860": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA43"
    },
    "4863": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4864": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1312"
    },
    "4867": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x138E"
    },
    "4870": {
      "offset": [
        783,
        15913
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "4871": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "4872": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP9",
      "path": "14"
    },
    "4873": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP10",
      "path": "14"
    },
    "4874": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "4875": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4876": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4877": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "4878": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x20C4"
    },
    "4881": {
      "fn": "UtilsMasterNode.getLinkFees",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4882": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4883": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "4884": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4885": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "4886": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4888": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP11",
      "path": "14"
    },
    "4889": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "DUP12",
      "path": "14"
    },
    "4890": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "4891": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "4892": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        992,
        1012
      ],
      "op": "DUP8",
      "path": "15"
    },
    "4893": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        992,
        1012
      ],
      "op": "DUP8",
      "path": "15"
    },
    "4894": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        992,
        1012
      ],
      "op": "ADD",
      "path": "15"
    },
    "4895": {
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4896": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        992,
        1012
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4897": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        992,
        1012
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4898": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        992,
        1012
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4899": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        992,
        1012
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x132B"
    },
    "4902": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        992,
        1012
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4903": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        992,
        1012
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x206D"
    },
    "4906": {
      "fn": "UtilsMasterNode.getLinkFees",
      "jump": "i",
      "offset": [
        992,
        1012
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4907": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        992,
        1012
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4908": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP9",
      "path": "14"
    },
    "4909": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4910": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1336"
    },
    "4913": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4914": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x203F"
    },
    "4917": {
      "fn": "UtilsMasterNode.getLinkFees",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4918": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4919": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4921": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4922": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4923": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1226,
        1383
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1353"
    },
    "4926": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP11",
      "path": "14"
    },
    "4927": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4928": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1348"
    },
    "4931": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4932": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x203F"
    },
    "4935": {
      "fn": "UtilsMasterNode.getLinkFees",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4936": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4937": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1357,
        1366
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0xF4240"
    },
    "4941": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4942": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4943": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1226,
        1383
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x27A5"
    },
    "4946": {
      "fn": "UtilsMasterNode.getLinkFees",
      "jump": "i",
      "offset": [
        1226,
        1383
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4947": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1226,
        1383
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4948": {
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4949": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "DUP11",
      "path": "14"
    },
    "4950": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4951": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "4952": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1360"
    },
    "4955": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "DUP10",
      "path": "14"
    },
    "4956": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x200E"
    },
    "4959": {
      "fn": "UtilsMasterNode.getLinkFees",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4960": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4961": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "DUP9",
      "path": "14"
    },
    "4962": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4963": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        945,
        1519
      ],
      "op": "DUP9",
      "path": "15"
    },
    "4964": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        945,
        1519
      ],
      "op": "DUP9",
      "path": "15"
    },
    "4965": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        945,
        1519
      ],
      "op": "ADD",
      "path": "15"
    },
    "4966": {
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4967": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        945,
        1519
      ],
      "op": "DUP10",
      "path": "15"
    },
    "4968": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        945,
        1519
      ],
      "op": "DUP8",
      "path": "15"
    },
    "4969": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        945,
        1519
      ],
      "op": "ADD",
      "path": "15"
    },
    "4970": {
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4971": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "4973": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        945,
        1519
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4974": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        945,
        1519
      ],
      "op": "ADD",
      "path": "15"
    },
    "4975": {
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4976": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "4978": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        945,
        1519
      ],
      "op": "DUP6",
      "path": "15"
    },
    "4979": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        945,
        1519
      ],
      "op": "ADD",
      "path": "15"
    },
    "4980": {
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4981": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "4982": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4983": {
      "op": "PUSH4",
      "value": "0x20487DED"
    },
    "4988": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4990": {
      "op": "SHL"
    },
    "4991": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4992": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4993": {
      "offset": [
        783,
        15913
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "4994": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "4995": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "4996": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "4997": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "4998": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "4999": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "5000": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "DUP5",
      "path": "15"
    },
    "5001": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "ADD",
      "path": "15"
    },
    "5002": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2174"
    },
    "5005": {
      "fn": "UtilsMasterNode.getLinkFees",
      "jump": "i",
      "offset": [
        1662,
        1710
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5006": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5007": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "SUB",
      "path": "15"
    },
    "5008": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5009": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "GAS",
      "path": "15"
    },
    "5010": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "STATICCALL",
      "path": "15"
    },
    "5011": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "5012": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "DUP4",
      "path": "15"
    },
    "5013": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "5014": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x10B7"
    },
    "5017": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5018": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "5019": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x13A6"
    },
    "5022": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5023": {
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5024": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "5025": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5026": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5027": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5028": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5029": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "RETURN",
      "path": "14"
    },
    "5030": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5031": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5032": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5033": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "POP",
      "path": "15"
    },
    "5034": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5035": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5036": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5037": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "5038": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "DUP4",
      "path": "15"
    },
    "5039": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "GT",
      "path": "15"
    },
    "5040": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x13CE"
    },
    "5043": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "5044": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5045": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x13BE"
    },
    "5048": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5049": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "DUP4",
      "path": "15"
    },
    "5050": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x20A3"
    },
    "5053": {
      "fn": "UtilsMasterNode.getLinkFees",
      "jump": "i",
      "offset": [
        1662,
        1710
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5054": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5055": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5056": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "ADD",
      "path": "15"
    },
    "5057": {
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "5058": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "5059": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAD7"
    },
    "5062": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5063": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5064": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5065": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "CODESIZE",
      "path": "15"
    },
    "5066": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x139F"
    },
    "5069": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5070": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5071": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "POP",
      "path": "15"
    },
    "5072": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "5073": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x13B4"
    },
    "5076": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "JUMP",
      "path": "15"
    },
    "5077": {
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5078": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "5079": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "5080": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "5081": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "5084": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5085": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5086": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "5088": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "NOT",
      "path": "14"
    },
    "5089": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "5090": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "5091": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "5092": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "5095": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5096": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6038,
        6076
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 32,
      "value": "0x421"
    },
    "5099": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "5101": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5102": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5103": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x13F6"
    },
    "5106": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F6E"
    },
    "5109": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5110": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5111": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5112": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "5113": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5114": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5115": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "5117": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "5118": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5119": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15913
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "5120": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "5122": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5123": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "5125": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15913
      ],
      "op": "SHL",
      "path": "14"
    },
    "5126": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "5127": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5128": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "5129": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "5131": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5132": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5133": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5134": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6038,
        6076
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x141D"
    },
    "5137": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "5139": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "5140": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5141": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "5143": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "5144": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5145": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6038,
        6076
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2258"
    },
    "5148": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6038,
        6076
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5149": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6038,
        6076
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5150": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5151": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "5152": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6038,
        6076
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2681"
    },
    "5155": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6038,
        6076
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5156": {
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5157": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "5158": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "5159": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "5160": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "5163": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5164": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5165": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "5167": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "NOT",
      "path": "14"
    },
    "5168": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "5169": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "5170": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "5171": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "5174": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5175": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "5177": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5178": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5179": {
      "fn": "ERC20.decimals",
      "offset": [
        3173,
        3175
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 33,
      "value": "0x12"
    },
    "5181": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5182": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5183": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15913
      ],
      "op": "RETURN",
      "path": "14"
    },
    "5184": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5185": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "5186": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5187": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5188": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15913
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "5189": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "5192": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5193": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "5195": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5196": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5197": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "5199": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15913
      ],
      "op": "NOT",
      "path": "14"
    },
    "5200": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "5201": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "5202": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "5203": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x261"
    },
    "5206": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5207": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13633,
        13643
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 34,
      "value": "0x9"
    },
    "5209": {
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5214": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5216": {
      "op": "SHL"
    },
    "5217": {
      "op": "SUB"
    },
    "5218": {
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5219": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5220": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "5221": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5222": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5223": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13622,
        13632
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "5225": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "5226": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5227": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5228": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5229": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "5230": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5231": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5232": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "5233": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5234": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5235": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "5237": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "SHR",
      "path": "14"
    },
    "5238": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "5240": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "5241": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "5242": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1A61"
    },
    "5245": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5246": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13719,
        13729
      ],
      "op": "CALLER",
      "path": "14",
      "statement": 35
    },
    "5247": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "5248": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5249": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3515
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "5251": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "5252": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5253": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5254": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "5255": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15913
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "5256": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5257": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13699,
        13730
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5258": {
      "branch": 78,
      "fn": "MasterNode.withdraw",
      "offset": [
        13699,
        13730
      ],
      "op": "GT",
      "path": "14"
    },
    "5259": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1A28"
    },
    "5262": {
      "branch": 78,
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5263": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5264": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5265": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13820,
        13866
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "5266": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13820,
        13866
      ],
      "op": "DUP6",
      "path": "14"
    },
    "5267": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13820,
        13866
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5268": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13820,
        13866
      ],
      "op": "DUP9",
      "path": "14"
    },
    "5269": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13820,
        13866
      ],
      "op": "ADD",
      "path": "14"
    },
    "5270": {
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5271": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13719,
        13729
      ],
      "op": "CALLER",
      "path": "14"
    },
    "5272": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5273": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "DUP9",
      "path": "14"
    },
    "5274": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "5275": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5276": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "5278": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5279": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5280": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "DUP10",
      "path": "14"
    },
    "5281": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "5282": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5283": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13820,
        13866
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5284": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13820,
        13866
      ],
      "op": "DUP9",
      "path": "14"
    },
    "5285": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13820,
        13866
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5286": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13820,
        13866
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x14AE"
    },
    "5289": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13820,
        13866
      ],
      "op": "DUP9",
      "path": "14"
    },
    "5290": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13820,
        13866
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2088"
    },
    "5293": {
      "fn": "MasterNode.withdraw",
      "jump": "i",
      "offset": [
        13820,
        13866
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5294": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13820,
        13866
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5295": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13719,
        13729
      ],
      "op": "CALLER",
      "path": "14"
    },
    "5296": {
      "branch": 85,
      "fn": "ERC20._burn",
      "offset": [
        9505,
        9526
      ],
      "op": "ISZERO",
      "path": "0",
      "statement": 36
    },
    "5297": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x19DB"
    },
    "5300": {
      "fn": "ERC20._burn",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5301": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13719,
        13729
      ],
      "op": "CALLER",
      "path": "14"
    },
    "5302": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "5303": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5304": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3515
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "5306": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5307": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5308": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5309": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "5310": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15913
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "5311": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5312": {
      "fn": "ERC20._burn",
      "offset": [
        9696,
        9720
      ],
      "op": "SWAP8",
      "path": "0",
      "statement": 37
    },
    "5313": {
      "fn": "ERC20._burn",
      "offset": [
        9696,
        9720
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5314": {
      "fn": "ERC20._burn",
      "offset": [
        9696,
        9720
      ],
      "op": "DUP10",
      "path": "0"
    },
    "5315": {
      "branch": 86,
      "fn": "ERC20._burn",
      "offset": [
        9696,
        9720
      ],
      "op": "LT",
      "path": "0"
    },
    "5316": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x198D"
    },
    "5319": {
      "fn": "ERC20._burn",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5320": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13719,
        13729
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5321": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13719,
        13729
      ],
      "op": "DUP9",
      "path": "14"
    },
    "5322": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13719,
        13729
      ],
      "op": "SWAP10",
      "path": "14"
    },
    "5323": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13719,
        13729
      ],
      "op": "SWAP9",
      "path": "14"
    },
    "5324": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13719,
        13729
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "5325": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13719,
        13729
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "5326": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13719,
        13729
      ],
      "op": "SWAP9",
      "path": "14"
    },
    "5327": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13719,
        13729
      ],
      "op": "CALLER",
      "path": "14"
    },
    "5328": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP9",
      "path": "14"
    },
    "5329": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5330": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3515
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "5332": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "5333": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5334": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "5335": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "5336": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "5337": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15913
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "5338": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15913
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "5339": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5340": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15913
      ],
      "op": "DUP9",
      "path": "14"
    },
    "5341": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5342": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "5343": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15913
      ],
      "op": "DUP9",
      "path": "14"
    },
    "5344": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15913
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "5345": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "5346": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "5347": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5348": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "5349": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5350": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5351": {
      "fn": "ERC20._burn",
      "offset": [
        9978,
        10015
      ],
      "op": "PUSH32",
      "path": "0",
      "statement": 38,
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "5384": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13719,
        13729
      ],
      "op": "DUP6",
      "path": "14"
    },
    "5385": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13719,
        13729
      ],
      "op": "CALLER",
      "path": "14"
    },
    "5386": {
      "fn": "ERC20._burn",
      "offset": [
        9978,
        10015
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5387": {
      "fn": "ERC20._burn",
      "offset": [
        9978,
        10015
      ],
      "op": "LOG3",
      "path": "0"
    },
    "5388": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5389": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13633,
        13643
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9"
    },
    "5391": {
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5392": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "5393": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5394": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5395": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "5396": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5397": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13622,
        13632
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "5399": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5400": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5401": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "5402": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "5403": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "5404": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5405": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5410": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5412": {
      "op": "SHL"
    },
    "5413": {
      "op": "SUB"
    },
    "5414": {
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5415": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5416": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5417": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x10"
    },
    "5419": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "SHR",
      "path": "14"
    },
    "5420": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "5421": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13955,
        13979
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "5422": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13955,
        13979
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x0"
    },
    "5455": {
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "5456": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13917,
        13979
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5457": {
      "branch": 79,
      "fn": "MasterNode.withdraw",
      "offset": [
        13917,
        13979
      ],
      "op": "EQ",
      "path": "14"
    },
    "5458": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13913,
        14162
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "5460": {
      "offset": [
        783,
        15913
      ],
      "op": "EQ",
      "path": "14"
    },
    "5461": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x15AF"
    },
    "5464": {
      "branch": 79,
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5465": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "5466": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "5467": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "5468": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "5469": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "5470": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "5471": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13633,
        13643
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9"
    },
    "5473": {
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5474": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "5475": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13995,
        14054
      ],
      "op": "DUP1",
      "path": "14",
      "statement": 39
    },
    "5476": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13995,
        14054
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "5477": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13995,
        14054
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "5478": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13995,
        14054
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x261"
    },
    "5481": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13995,
        14054
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5482": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5483": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5484": {
      "op": "PUSH4",
      "value": "0x15E005B7"
    },
    "5489": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "5491": {
      "op": "SHL"
    },
    "5492": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13995,
        14054
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5493": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13995,
        14054
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5494": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13719,
        13729
      ],
      "op": "CALLER",
      "path": "14"
    },
    "5495": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13995,
        14054
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "5496": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13995,
        14054
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5497": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13995,
        14054
      ],
      "op": "ADD",
      "path": "14"
    },
    "5498": {
      "offset": [
        783,
        15913
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "5499": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "5500": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5501": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "5503": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "5504": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "5505": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5506": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5507": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5508": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5509": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5510": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "5511": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5512": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5513": {
      "op": "SWAP1"
    },
    "5514": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5515": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5516": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5517": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5518": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5519": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5520": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "5522": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "5523": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13995,
        14054
      ],
      "op": "SUB",
      "path": "14"
    },
    "5524": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13995,
        14054
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5525": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13995,
        14054
      ],
      "op": "GAS",
      "path": "14"
    },
    "5526": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13995,
        14054
      ],
      "op": "CALL",
      "path": "14"
    },
    "5527": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13995,
        14054
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5528": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13995,
        14054
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5529": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13995,
        14054
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "5530": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13995,
        14054
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xDE6"
    },
    "5533": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13995,
        14054
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5534": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13995,
        14054
      ],
      "op": "POP",
      "path": "14"
    },
    "5535": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13995,
        14054
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x15A6"
    },
    "5538": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13995,
        14054
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5539": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13913,
        14162
      ],
      "op": "POP",
      "path": "14"
    },
    "5540": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5541": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "RETURN",
      "path": "14"
    },
    "5542": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13995,
        14054
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5543": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13995,
        14054
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x8C0"
    },
    "5546": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13995,
        14054
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5547": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13995,
        14054
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x205A"
    },
    "5550": {
      "fn": "MasterNode.withdraw",
      "jump": "i",
      "offset": [
        13995,
        14054
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5551": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13913,
        14162
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5552": {
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5553": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5554": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "5555": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "5556": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "5557": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "5559": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5560": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "5561": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "5562": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "5563": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP9",
      "path": "14"
    },
    "5564": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "5565": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP9",
      "path": "14"
    },
    "5566": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "5567": {
      "offset": [
        2723,
        2759
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "5568": {
      "offset": [
        2719,
        2829
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1976"
    },
    "5571": {
      "fn": "MasterNode.withdraw",
      "offset": [
        2719,
        2829
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5572": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5573": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9272,
        9283
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x7"
    },
    "5575": {
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5576": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "5578": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SHR",
      "path": "14"
    },
    "5579": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "5580": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5581": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5582": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "5583": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "5585": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP11",
      "path": "14"
    },
    "5586": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5587": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x15DB"
    },
    "5590": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5591": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x200E"
    },
    "5594": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5595": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5596": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5597": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5598": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5599": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5600": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP14",
      "path": "14"
    },
    "5601": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5602": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "5603": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5604": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5605": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP13",
      "path": "14"
    },
    "5606": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5607": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "5608": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5609": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP14",
      "path": "14"
    },
    "5610": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5611": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5612": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "5613": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5614": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "5615": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5616": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP9",
      "path": "14"
    },
    "5617": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5618": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11015,
        11036
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "5619": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11015,
        11036
      ],
      "op": "DUP11",
      "path": "14"
    },
    "5620": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11015,
        11036
      ],
      "op": "DUP10",
      "path": "14"
    },
    "5621": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11015,
        11036
      ],
      "op": "ADD",
      "path": "14"
    },
    "5622": {
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5623": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11015,
        11036
      ],
      "op": "DUP10",
      "path": "14"
    },
    "5624": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11015,
        11036
      ],
      "op": "DUP9",
      "path": "14"
    },
    "5625": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11015,
        11036
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5626": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11015,
        11036
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1602"
    },
    "5629": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11015,
        11036
      ],
      "op": "DUP9",
      "path": "14"
    },
    "5630": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11015,
        11036
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x206D"
    },
    "5633": {
      "fn": "MasterNode._buildCCIPMessage",
      "jump": "i",
      "offset": [
        11015,
        11036
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5634": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11015,
        11036
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5635": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP9",
      "path": "14"
    },
    "5636": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5637": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x160D"
    },
    "5640": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5641": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x203F"
    },
    "5644": {
      "fn": "MasterNode._buildCCIPMessage",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5645": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5646": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP12",
      "path": "14"
    },
    "5647": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5648": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5649": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11260,
        11426
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x161E"
    },
    "5652": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP11",
      "path": "14"
    },
    "5653": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5654": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE5F"
    },
    "5657": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5658": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x203F"
    },
    "5661": {
      "fn": "MasterNode._buildCCIPMessage",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5662": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11260,
        11426
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5663": {
      "offset": [
        783,
        15913
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "5664": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP11",
      "path": "14"
    },
    "5665": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5666": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP10",
      "path": "14"
    },
    "5667": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x162B"
    },
    "5670": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP12",
      "path": "14"
    },
    "5671": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x200E"
    },
    "5674": {
      "fn": "MasterNode._buildCCIPMessage",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5675": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5676": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP11",
      "path": "14"
    },
    "5677": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5678": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10965,
        11591
      ],
      "op": "DUP12",
      "path": "14"
    },
    "5679": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10965,
        11591
      ],
      "op": "DUP11",
      "path": "14"
    },
    "5680": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10965,
        11591
      ],
      "op": "ADD",
      "path": "14"
    },
    "5681": {
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5682": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10965,
        11591
      ],
      "op": "DUP10",
      "path": "14"
    },
    "5683": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10965,
        11591
      ],
      "op": "DUP10",
      "path": "14"
    },
    "5684": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10965,
        11591
      ],
      "op": "ADD",
      "path": "14"
    },
    "5685": {
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5686": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10965,
        11591
      ],
      "op": "DUP8",
      "path": "14"
    },
    "5687": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10965,
        11591
      ],
      "op": "ADD",
      "path": "14"
    },
    "5688": {
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5689": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "5691": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10965,
        11591
      ],
      "op": "DUP7",
      "path": "14"
    },
    "5692": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10965,
        11591
      ],
      "op": "ADD",
      "path": "14"
    },
    "5693": {
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5694": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "5695": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5696": {
      "op": "PUSH4",
      "value": "0xB0F479A1"
    },
    "5701": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5703": {
      "op": "SHL"
    },
    "5704": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5705": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5706": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10965,
        11591
      ],
      "op": "DUP8",
      "path": "14"
    },
    "5707": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5708": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9429
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5709": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5710": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9429
      ],
      "op": "ADDRESS",
      "path": "14"
    },
    "5711": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "GAS",
      "path": "14"
    },
    "5712": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "5713": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5714": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5715": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "5716": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x196C"
    },
    "5719": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5720": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5721": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "DUP6",
      "path": "14"
    },
    "5722": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5723": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "DUP11",
      "path": "14"
    },
    "5724": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5725": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1932"
    },
    "5728": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5729": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13913,
        14162
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5730": {
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "5731": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "5732": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "5733": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "DUP9",
      "path": "14"
    },
    "5734": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "5735": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5736": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5737": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x20487DED"
    },
    "5742": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "5744": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "SHL",
      "path": "14"
    },
    "5745": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5746": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5747": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "DUP10",
      "path": "14"
    },
    "5748": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5749": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5750": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1682"
    },
    "5753": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "DUP12",
      "path": "14"
    },
    "5754": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "DUP11",
      "path": "14"
    },
    "5755": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "DUP11",
      "path": "14"
    },
    "5756": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5757": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "ADD",
      "path": "14"
    },
    "5758": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2174"
    },
    "5761": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9525,
        9581
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5762": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5763": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "SUB",
      "path": "14"
    },
    "5764": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5765": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "DUP11",
      "path": "14"
    },
    "5766": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "GAS",
      "path": "14"
    },
    "5767": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "5768": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "5769": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5770": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "5771": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1928"
    },
    "5774": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5775": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5776": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "DUP11",
      "path": "14"
    },
    "5777": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5778": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5779": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "5780": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x18F7"
    },
    "5783": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5784": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13913,
        14162
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5785": {
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "5786": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "5788": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "DUP11",
      "path": "14"
    },
    "5789": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5790": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5791": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "5792": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5793": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "5794": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x23B872DD"
    },
    "5799": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "5801": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "SHL",
      "path": "14"
    },
    "5802": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5803": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5804": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13719,
        13729
      ],
      "op": "CALLER",
      "path": "14"
    },
    "5805": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "DUP11",
      "path": "14"
    },
    "5806": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5807": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "ADD",
      "path": "14"
    },
    "5808": {
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5809": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9429
      ],
      "op": "ADDRESS",
      "path": "14"
    },
    "5810": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "5812": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5813": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "5814": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5815": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP9",
      "path": "14"
    },
    "5816": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "5818": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5819": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "5820": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5821": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "GAS",
      "path": "14"
    },
    "5822": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "CALL",
      "path": "14"
    },
    "5823": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5824": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5825": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "5826": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x18ED"
    },
    "5829": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5830": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "DUP11",
      "path": "14"
    },
    "5831": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5832": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x18D0"
    },
    "5835": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5836": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13913,
        14162
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5837": {
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "5838": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "5839": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x188D"
    },
    "5842": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5843": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5844": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "DUP9",
      "path": "14"
    },
    "5845": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5846": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5847": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9272,
        9283
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x7"
    },
    "5849": {
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5850": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "5852": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SHR",
      "path": "14"
    },
    "5853": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "5854": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5855": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "5856": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5857": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x70A08231"
    },
    "5862": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "5864": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SHL",
      "path": "14"
    },
    "5865": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5866": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5867": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5868": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5869": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9429
      ],
      "op": "ADDRESS",
      "path": "14"
    },
    "5870": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "DUP6",
      "path": "14"
    },
    "5871": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5872": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "ADD",
      "path": "14"
    },
    "5873": {
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5874": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "DUP11",
      "path": "14"
    },
    "5875": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5876": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "5878": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5879": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "DUP8",
      "path": "14"
    },
    "5880": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "GAS",
      "path": "14"
    },
    "5881": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "5882": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5883": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5884": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "5885": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1883"
    },
    "5888": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5889": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "DUP7",
      "path": "14"
    },
    "5890": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5891": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1856"
    },
    "5894": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5895": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13913,
        14162
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5896": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9737,
        9780
      ],
      "op": "POP",
      "path": "14"
    },
    "5897": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9737,
        9780
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5898": {
      "branch": 80,
      "fn": "MasterNode._sendMessage",
      "offset": [
        9737,
        9780
      ],
      "op": "GT",
      "path": "14"
    },
    "5899": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9733,
        9861
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x17D7"
    },
    "5902": {
      "branch": 80,
      "fn": "MasterNode._sendMessage",
      "offset": [
        9733,
        9861
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5903": {
      "op": "POP"
    },
    "5904": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "5905": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5906": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "5911": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5913": {
      "op": "SHL"
    },
    "5914": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5915": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5916": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5920": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5922": {
      "op": "SHL"
    },
    "5923": {
      "op": "SUB"
    },
    "5924": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "5925": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "5926": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5927": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5928": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "ADD",
      "path": "14"
    },
    "5929": {
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5930": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5931": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5932": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "5934": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5935": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "5936": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5937": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5938": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5939": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5940": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5941": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP10",
      "path": "14"
    },
    "5942": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5943": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5944": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5945": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5946": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5947": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5948": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "5949": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5950": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5951": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5952": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "5954": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "5955": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "SUB",
      "path": "14"
    },
    "5956": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5957": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "GAS",
      "path": "14"
    },
    "5958": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "CALL",
      "path": "14"
    },
    "5959": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5960": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "5961": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x103C"
    },
    "5964": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5965": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5966": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "DUP9",
      "path": "14"
    },
    "5967": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "5968": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "5969": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5970": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1777"
    },
    "5973": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "SWAP9",
      "path": "14"
    },
    "5974": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "5975": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "5976": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "5977": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x17BA"
    },
    "5980": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5981": {
      "op": "POP"
    },
    "5982": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "5983": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5984": {
      "op": "PUSH4",
      "value": "0x96F4E9F9"
    },
    "5989": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5991": {
      "op": "SHL"
    },
    "5992": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5993": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5994": {
      "offset": [
        783,
        15913
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "5995": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP9",
      "path": "14"
    },
    "5996": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "5997": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "5998": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "5999": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "6000": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "6001": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "DUP5",
      "path": "14"
    },
    "6002": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "ADD",
      "path": "14"
    },
    "6003": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2174"
    },
    "6006": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        10125,
        10183
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6007": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6008": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "SUB",
      "path": "14"
    },
    "6009": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "6010": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "GAS",
      "path": "14"
    },
    "6011": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "CALL",
      "path": "14"
    },
    "6012": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6013": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6014": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "6015": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x17B1"
    },
    "6018": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6019": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "POP",
      "path": "14"
    },
    "6020": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x178C"
    },
    "6023": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6024": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13913,
        14162
      ],
      "op": "POP",
      "path": "14"
    },
    "6025": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13913,
        14162
      ],
      "op": "POP",
      "path": "14"
    },
    "6026": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6027": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15913
      ],
      "op": "RETURN",
      "path": "14"
    },
    "6028": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6029": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6030": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6031": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6032": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "GT",
      "path": "14"
    },
    "6033": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x17AA"
    },
    "6036": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6037": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6038": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x179F"
    },
    "6041": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6042": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6043": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x20A3"
    },
    "6046": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        10125,
        10183
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6047": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6048": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6049": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "ADD",
      "path": "14"
    },
    "6050": {
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "6051": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "6052": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4CE"
    },
    "6055": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6056": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6057": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "RETURN",
      "path": "14"
    },
    "6058": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6059": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "POP",
      "path": "14"
    },
    "6060": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6061": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1795"
    },
    "6064": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6065": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        10125,
        10183
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6066": {
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6067": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6068": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "6069": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6070": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "6071": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6072": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6073": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "REVERT",
      "path": "14"
    },
    "6074": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6075": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x17D0"
    },
    "6078": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6079": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "DUP8",
      "path": "14"
    },
    "6080": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6081": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "DUP10",
      "path": "14"
    },
    "6082": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "GT",
      "path": "14"
    },
    "6083": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1035"
    },
    "6086": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6087": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1026"
    },
    "6090": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6091": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6092": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x20A3"
    },
    "6095": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9979,
        10021
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6096": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6097": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "POP",
      "path": "14"
    },
    "6098": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "DUP11",
      "path": "14"
    },
    "6099": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xFAA"
    },
    "6102": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9979,
        10021
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6103": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9733,
        9861
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6104": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP10",
      "path": "14"
    },
    "6105": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "6106": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "6107": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6108": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP11",
      "path": "14"
    },
    "6109": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "6110": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "6112": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "6113": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6114": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6115": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "6116": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6117": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "6118": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6119": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6120": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9429
      ],
      "op": "ADDRESS",
      "path": "14"
    },
    "6121": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "DUP11",
      "path": "14"
    },
    "6122": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6123": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "ADD",
      "path": "14"
    },
    "6124": {
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6125": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "GAS",
      "path": "14"
    },
    "6126": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "6127": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "6128": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6129": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "6130": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x184C"
    },
    "6133": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6134": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "DUP7",
      "path": "14"
    },
    "6135": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "6136": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1818"
    },
    "6139": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6140": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9733,
        9861
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6141": {
      "op": "POP"
    },
    "6142": {
      "op": "POP"
    },
    "6143": {
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6144": {
      "op": "PUSH4",
      "value": "0x4787A103"
    },
    "6149": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "6151": {
      "op": "SHL"
    },
    "6152": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9801,
        9861
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6153": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9801,
        9861
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6154": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9801,
        9861
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "6155": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9801,
        9861
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6156": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9801,
        9861
      ],
      "op": "ADD",
      "path": "14"
    },
    "6157": {
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6158": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "6160": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6161": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "6162": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6163": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "6165": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "6166": {
      "op": "POP"
    },
    "6167": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9801,
        9861
      ],
      "op": "REVERT",
      "path": "14"
    },
    "6168": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6169": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6170": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6171": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "6172": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "6173": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "POP",
      "path": "14"
    },
    "6174": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6175": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6176": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6177": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "GT",
      "path": "14"
    },
    "6178": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1845"
    },
    "6181": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6182": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6183": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1830"
    },
    "6186": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6187": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6188": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x20A3"
    },
    "6191": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9818,
        9854
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6192": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6193": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6194": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "ADD",
      "path": "14"
    },
    "6195": {
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "6196": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "6197": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x8C3"
    },
    "6200": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6201": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "6203": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "6204": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "6205": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6206": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6207": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "DUP6",
      "path": "14"
    },
    "6208": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6209": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x17FC"
    },
    "6212": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6213": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6214": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "POP",
      "path": "14"
    },
    "6215": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6216": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1826"
    },
    "6219": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6220": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9818,
        9854
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6221": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6222": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6223": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6224": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP9",
      "path": "14"
    },
    "6225": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6226": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "6227": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6228": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6229": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "REVERT",
      "path": "14"
    },
    "6230": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6231": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6232": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "POP",
      "path": "14"
    },
    "6233": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "DUP11",
      "path": "14"
    },
    "6234": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6235": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6236": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6237": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6238": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "GT",
      "path": "14"
    },
    "6239": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x187C"
    },
    "6242": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6243": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6244": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x186D"
    },
    "6247": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6248": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6249": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x20A3"
    },
    "6252": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9744,
        9780
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6253": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6254": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6255": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "ADD",
      "path": "14"
    },
    "6256": {
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "6257": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "6258": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x940"
    },
    "6261": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6262": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6263": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "DUP13",
      "path": "14"
    },
    "6264": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1707"
    },
    "6267": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6268": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6269": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "POP",
      "path": "14"
    },
    "6270": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6271": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1863"
    },
    "6274": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6275": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9744,
        9780
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6276": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP11",
      "path": "14"
    },
    "6277": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6278": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6279": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP9",
      "path": "14"
    },
    "6280": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6281": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "6282": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6283": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6284": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "REVERT",
      "path": "14"
    },
    "6285": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6286": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "6287": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6288": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6292": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6294": {
      "op": "SHL"
    },
    "6295": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6296": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6297": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6298": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "6299": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "6300": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP10",
      "path": "14"
    },
    "6301": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6302": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6303": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1A"
    },
    "6305": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "6307": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6308": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "6309": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6310": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x4E6F742070726F7669646564204C696E6B20666F722066656573000000000000"
    },
    "6343": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "6345": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6346": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "6347": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6348": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "6350": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6351": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "REVERT",
      "path": "14"
    },
    "6352": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6353": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x18E7"
    },
    "6356": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "6357": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "POP",
      "path": "14"
    },
    "6358": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "DUP10",
      "path": "14"
    },
    "6359": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6360": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "DUP12",
      "path": "14"
    },
    "6361": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "GT",
      "path": "14"
    },
    "6362": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1035"
    },
    "6365": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6366": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1026"
    },
    "6369": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6370": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6371": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x20A3"
    },
    "6374": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9613,
        9670
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6375": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6376": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "DUP11",
      "path": "14"
    },
    "6377": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x16CC"
    },
    "6380": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6381": {
      "branch": 81,
      "fn": "MasterNode._sendMessage",
      "offset": [
        9613,
        9670
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6382": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP9",
      "path": "14"
    },
    "6383": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6384": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6385": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP13",
      "path": "14"
    },
    "6386": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6387": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "6388": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6389": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6390": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "REVERT",
      "path": "14"
    },
    "6391": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6392": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6393": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6394": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "6395": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "6396": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "6397": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "POP",
      "path": "14"
    },
    "6398": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6399": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6400": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "GT",
      "path": "14"
    },
    "6401": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1921"
    },
    "6404": {
      "branch": 81,
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6405": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6406": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x190F"
    },
    "6409": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6410": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6411": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x20A3"
    },
    "6414": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9525,
        9581
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6415": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6416": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6417": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "ADD",
      "path": "14"
    },
    "6418": {
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "6419": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "6420": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "6423": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6424": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP10",
      "path": "14"
    },
    "6425": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6426": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6427": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "6428": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "DUP13",
      "path": "14"
    },
    "6429": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1698"
    },
    "6432": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6433": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6434": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "POP",
      "path": "14"
    },
    "6435": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6436": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1905"
    },
    "6439": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6440": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9525,
        9581
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6441": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP10",
      "path": "14"
    },
    "6442": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6443": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6444": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "6445": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6446": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "6447": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6448": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6449": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "REVERT",
      "path": "14"
    },
    "6450": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6451": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6452": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "6453": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "POP",
      "path": "14"
    },
    "6454": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "DUP10",
      "path": "14"
    },
    "6455": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6456": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "6457": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "POP",
      "path": "14"
    },
    "6458": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6459": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6460": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "GT",
      "path": "14"
    },
    "6461": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1965"
    },
    "6464": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6465": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6466": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x194B"
    },
    "6469": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6470": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6471": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x20A3"
    },
    "6474": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9425,
        9441
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6475": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6476": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6477": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "ADD",
      "path": "14"
    },
    "6478": {
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "6479": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "6480": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA37"
    },
    "6483": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6484": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6485": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "6486": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6487": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "6488": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6489": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "6490": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA37"
    },
    "6493": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6494": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "DUP5",
      "path": "14"
    },
    "6495": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6496": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "DUP11",
      "path": "14"
    },
    "6497": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1661"
    },
    "6500": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6501": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6502": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "POP",
      "path": "14"
    },
    "6503": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6504": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1941"
    },
    "6507": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6508": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9425,
        9441
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6509": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "6510": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6511": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6512": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP12",
      "path": "14"
    },
    "6513": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6514": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "6515": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6516": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6517": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "REVERT",
      "path": "14"
    },
    "6518": {
      "offset": [
        2719,
        2829
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6519": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "6520": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6521": {
      "op": "PUSH4",
      "value": "0x6A9FF79F"
    },
    "6526": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "6528": {
      "op": "SHL"
    },
    "6529": {
      "offset": [
        2782,
        2818
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6530": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        2782,
        2818
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6531": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        2782,
        2818
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6532": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        2782,
        2818
      ],
      "op": "DUP5",
      "path": "14"
    },
    "6533": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        2782,
        2818
      ],
      "op": "ADD",
      "path": "14"
    },
    "6534": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "6535": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6536": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6537": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "6539": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6540": {
      "offset": [
        2782,
        2818
      ],
      "op": "REVERT",
      "path": "14"
    },
    "6541": {
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6542": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "6543": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6544": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6548": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6550": {
      "op": "SHL"
    },
    "6551": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6552": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6553": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6554": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP9",
      "path": "14"
    },
    "6555": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "6556": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "6557": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6558": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6559": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x22"
    },
    "6561": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "6563": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6564": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "6565": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6566": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
    },
    "6599": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "6601": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6602": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "6603": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6604": {
      "op": "PUSH2",
      "value": "0x6365"
    },
    "6607": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "6609": {
      "op": "SHL"
    },
    "6610": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "6612": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6613": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "6614": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6615": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x84"
    },
    "6617": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6618": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "REVERT",
      "path": "14"
    },
    "6619": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6620": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "6621": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6622": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6626": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6628": {
      "op": "SHL"
    },
    "6629": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6630": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6631": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6632": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "6633": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "6634": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6635": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6636": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6637": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x21"
    },
    "6639": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "6641": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6642": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "6643": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6644": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
    },
    "6677": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "6679": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6680": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "6681": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6682": {
      "op": "PUSH1",
      "value": "0x73"
    },
    "6684": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "6686": {
      "op": "SHL"
    },
    "6687": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "6689": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6690": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "6691": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6692": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x84"
    },
    "6694": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6695": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "REVERT",
      "path": "14"
    },
    "6696": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6697": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6698": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6699": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6703": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6705": {
      "op": "SHL"
    },
    "6706": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6707": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6708": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6709": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "6710": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "6711": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "6712": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6713": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6714": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x13"
    },
    "6716": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "6718": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6719": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "6720": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6721": {
      "op": "PUSH19",
      "value": "0x4E6F7420656E6F756768742062616C616E6365"
    },
    "6741": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "6743": {
      "op": "SHL"
    },
    "6744": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "6746": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6747": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "6748": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6749": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "6751": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6752": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "REVERT",
      "path": "14"
    },
    "6753": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6754": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6755": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6756": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6760": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6762": {
      "op": "SHL"
    },
    "6763": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6764": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6765": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6766": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "6767": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "6768": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "6769": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6770": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6771": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x12"
    },
    "6773": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "6775": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6776": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "6777": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6778": {
      "op": "PUSH18",
      "value": "0x4E6F6465206973206E6F7420416374697665"
    },
    "6797": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "6799": {
      "op": "SHL"
    },
    "6800": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "6802": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6803": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "6804": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6805": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "6807": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6808": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "REVERT",
      "path": "14"
    },
    "6809": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6810": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "6811": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6812": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6813": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "6814": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "6817": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6818": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "6820": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "6821": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "6823": {
      "op": "NOT"
    },
    "6824": {
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "6825": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "6826": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "6829": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6830": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1AB5"
    },
    "6833": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F6E"
    },
    "6836": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6837": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6838": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1ABD"
    },
    "6841": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F84"
    },
    "6844": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6845": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6850": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6852": {
      "op": "SHL"
    },
    "6853": {
      "op": "SUB"
    },
    "6854": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6855": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "6856": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "6857": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6858": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "6860": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "6862": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6863": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6864": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6865": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "6866": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "6867": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15913
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "6868": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "6869": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "6870": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6871": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6872": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6873": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "6874": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "6875": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6876": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15913
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "6877": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "6878": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "6880": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "6881": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "6882": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "6883": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "6885": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11351,
        11388
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6886": {
      "branch": 87,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11351,
        11388
      ],
      "op": "ADD",
      "path": "0"
    },
    "6887": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AF9"
    },
    "6890": {
      "branch": 87,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6891": {
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6892": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "6894": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5441,
        5447
      ],
      "op": "DUP7",
      "path": "0",
      "statement": 40
    },
    "6895": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5441,
        5447
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x421"
    },
    "6898": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5441,
        5447
      ],
      "op": "DUP8",
      "path": "0"
    },
    "6899": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5441,
        5447
      ],
      "op": "DUP8",
      "path": "0"
    },
    "6900": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5441,
        5447
      ],
      "op": "DUP8",
      "path": "0"
    },
    "6901": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5441,
        5447
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x246D"
    },
    "6904": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5441,
        5447
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6905": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6906": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11412,
        11438
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 41
    },
    "6907": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11412,
        11438
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6908": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11412,
        11438
      ],
      "op": "LT",
      "path": "0"
    },
    "6909": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1B22"
    },
    "6912": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6913": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "6914": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "6915": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6916": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "6917": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11539,
        11564
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 42,
      "value": "0x1B17"
    },
    "6920": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "6922": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "6923": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "6924": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5441,
        5447
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x421"
    },
    "6927": {
      "offset": [
        783,
        15913
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "6928": {
      "fn": "ERC20.transferFrom",
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "6929": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "6930": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11539,
        11564
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6931": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11539,
        11564
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2681"
    },
    "6934": {
      "fn": "ERC20._spendAllowance",
      "jump": "i",
      "offset": [
        11539,
        11564
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6935": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11539,
        11564
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6936": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6937": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "6938": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "6939": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6940": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "6941": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "POP",
      "path": "0"
    },
    "6942": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AEB"
    },
    "6945": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6946": {
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6947": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "6949": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6950": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "6952": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "6953": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6954": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "6955": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x461BCD"
    },
    "6959": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE5"
    },
    "6961": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "SHL",
      "path": "14"
    },
    "6962": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6963": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6964": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6965": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "6966": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6967": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1D"
    },
    "6969": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "6971": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6972": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "6973": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6974": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
    },
    "7007": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "7009": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7010": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "7011": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7012": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "REVERT",
      "path": "14"
    },
    "7013": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7014": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "7015": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "7016": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "7017": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "7020": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7021": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7022": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "7024": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "NOT",
      "path": "14"
    },
    "7025": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "7026": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "7027": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "7028": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "7031": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7032": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "7034": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7035": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1B93"
    },
    "7038": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1B85"
    },
    "7041": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F6E"
    },
    "7044": {
      "fn": "ERC20._spendAllowance",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7045": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7046": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1B8D"
    },
    "7049": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F84"
    },
    "7052": {
      "fn": "ERC20._spendAllowance",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7053": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7054": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7055": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x227B"
    },
    "7058": {
      "fn": "ERC20._spendAllowance",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7059": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7060": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7061": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "7062": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7063": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "7064": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "7065": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7066": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7067": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "RETURN",
      "path": "14"
    },
    "7068": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7069": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "7070": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "7071": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x261"
    },
    "7074": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7075": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7076": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "7078": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "NOT",
      "path": "14"
    },
    "7079": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "7080": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "7081": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "7082": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x261"
    },
    "7085": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7086": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "7088": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "7089": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "7090": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "7091": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7092": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "7093": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7094": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7095": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7096": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "RETURN",
      "path": "14"
    },
    "7097": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7098": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "7099": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "7100": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "7101": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "7104": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7105": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7106": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "7108": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "NOT",
      "path": "14"
    },
    "7109": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "7110": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "7111": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "7112": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "7115": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7116": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "7118": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7123": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7125": {
      "op": "SHL"
    },
    "7126": {
      "op": "SUB"
    },
    "7127": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1BDE"
    },
    "7130": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2417"
    },
    "7133": {
      "fn": "ERC20._spendAllowance",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7134": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7135": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7136": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "7137": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7138": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "7139": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7140": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7141": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "RETURN",
      "path": "14"
    },
    "7142": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7143": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "7144": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "7145": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x261"
    },
    "7148": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7149": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "7151": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "7152": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "7154": {
      "op": "NOT"
    },
    "7155": {
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "7156": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "7157": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x261"
    },
    "7160": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7161": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1C00"
    },
    "7164": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F6E"
    },
    "7167": {
      "fn": "ERC20._spendAllowance",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7168": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7169": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7170": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "7172": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "7173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7177": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7179": {
      "op": "SHL"
    },
    "7180": {
      "op": "SUB"
    },
    "7181": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7182": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "7183": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7184": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "7185": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x8C3"
    },
    "7188": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7189": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "7191": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "7192": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "7193": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "7194": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "7195": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "7196": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "7197": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "7198": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "7199": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "7200": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA43"
    },
    "7203": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7204": {
      "offset": [
        2032,
        2091
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1C2B"
    },
    "7207": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        2032,
        2091
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2834"
    },
    "7210": {
      "fn": "ERC20._spendAllowance",
      "jump": "i",
      "offset": [
        2032,
        2091
      ],
      "op": "JUMP",
      "path": "9"
    },
    "7211": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        2032,
        2091
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "7212": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "7214": {
      "branch": 82,
      "fn": "MasterNode.addValidNode",
      "offset": [
        3308,
        3322
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 43,
      "value": "0x7"
    },
    "7216": {
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "7217": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA8"
    },
    "7219": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "SHR",
      "path": "14"
    },
    "7220": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "7221": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "7222": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1CA6"
    },
    "7225": {
      "branch": 82,
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7226": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "7227": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7228": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "7230": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7231": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7232": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7233": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "7235": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "SHL",
      "path": "14"
    },
    "7236": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "7237": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "7238": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "7239": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "7240": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "7241": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7242": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        3358,
        3368
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 44,
      "value": "0xB"
    },
    "7244": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "7246": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7247": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "7248": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "7249": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "7250": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xFF00"
    },
    "7253": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH10",
      "path": "14",
      "value": "0xFFFFFFFFFFFFFFFF0000"
    },
    "7264": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "7265": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "7266": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "7267": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x10"
    },
    "7269": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "SHL",
      "path": "14"
    },
    "7270": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "7271": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "7272": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH10",
      "path": "14",
      "value": "0xFFFFFFFFFFFFFFFFFFFF"
    },
    "7283": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "NOT",
      "path": "14"
    },
    "7284": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "7285": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7286": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "7288": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "SHL",
      "path": "14"
    },
    "7289": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "7290": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "OR",
      "path": "14"
    },
    "7291": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "OR",
      "path": "14"
    },
    "7292": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "OR",
      "path": "14"
    },
    "7293": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7294": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "7295": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        3531,
        3640
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1C86"
    },
    "7298": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        3531,
        3640
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7299": {
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "7300": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7301": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "RETURN",
      "path": "14"
    },
    "7302": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        3531,
        3640
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7307": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7309": {
      "op": "SHL"
    },
    "7310": {
      "op": "SUB"
    },
    "7311": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "7313": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "SHL",
      "path": "14"
    },
    "7314": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7315": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7316": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "7318": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "7319": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "7320": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "OR",
      "path": "14"
    },
    "7321": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "7323": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "7324": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        3605,
        3629
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 45,
      "value": "0x9"
    },
    "7326": {
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "7327": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "7328": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "OR",
      "path": "14"
    },
    "7329": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        3605,
        3629
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9"
    },
    "7331": {
      "offset": [
        783,
        15913
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "7332": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7333": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "RETURN",
      "path": "14"
    },
    "7334": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7335": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "7337": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7338": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "7340": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "7341": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "7342": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7343": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x461BCD"
    },
    "7347": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE5"
    },
    "7349": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "SHL",
      "path": "14"
    },
    "7350": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "7351": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7352": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7353": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "7354": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7355": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x15"
    },
    "7357": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "7359": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7360": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "7361": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7362": {
      "op": "PUSH21",
      "value": "0x139BC81B5BDC99481B9BD9195CC8185B1B1BDDD959"
    },
    "7384": {
      "op": "PUSH1",
      "value": "0x5A"
    },
    "7386": {
      "op": "SHL"
    },
    "7387": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "7389": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7390": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "7391": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7392": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "REVERT",
      "path": "14"
    },
    "7393": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7394": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "7395": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "7396": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "7397": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "7400": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7401": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7402": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "7404": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "NOT",
      "path": "14"
    },
    "7405": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "7406": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "7407": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "7408": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "7411": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7412": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "7414": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7415": {
      "fn": "ERC20.approve",
      "offset": [
        4593,
        4599
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 46,
      "value": "0x421"
    },
    "7418": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1D01"
    },
    "7421": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F6E"
    },
    "7424": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7425": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7426": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "7428": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "7429": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7430": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "7431": {
      "fn": "ERC20.approve",
      "offset": [
        4593,
        4599
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2681"
    },
    "7434": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4593,
        4599
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7435": {
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7436": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "7437": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7438": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7439": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15913
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "7440": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x284"
    },
    "7443": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7444": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1D1C"
    },
    "7447": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "7448": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FDA"
    },
    "7451": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7452": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7453": {
      "offset": [
        2930,
        2940
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "7454": {
      "fn": "ERC20.approve",
      "offset": [
        2930,
        2940
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7455": {
      "fn": "ERC20.approve",
      "offset": [
        2930,
        2940
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7456": {
      "fn": "ERC20.approve",
      "offset": [
        2930,
        2940
      ],
      "op": "CALLER",
      "path": "14"
    },
    "7457": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "7458": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7459": {
      "offset": [
        2919,
        2929
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "7461": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "7463": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7464": {
      "offset": [
        2898,
        3044
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1D64"
    },
    "7467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7471": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7473": {
      "op": "SHL"
    },
    "7474": {
      "op": "SUB"
    },
    "7475": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7476": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15913
      ],
      "op": "DUP10",
      "path": "14"
    },
    "7477": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15913
      ],
      "op": "DUP10",
      "path": "14"
    },
    "7478": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15913
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "7479": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "7480": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x10"
    },
    "7482": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15913
      ],
      "op": "SHR",
      "path": "14"
    },
    "7483": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "7484": {
      "offset": [
        2957,
        2981
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7485": {
      "fn": "ERC20.approve",
      "offset": [
        2957,
        2981
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x0"
    },
    "7518": {
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "7519": {
      "offset": [
        2919,
        2981
      ],
      "op": "EQ",
      "path": "14"
    },
    "7520": {
      "offset": [
        2898,
        3044
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x211A"
    },
    "7523": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        2898,
        3044
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7524": {
      "fn": "ERC20.approve",
      "offset": [
        2898,
        3044
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7525": {
      "offset": [
        2930,
        2940
      ],
      "op": "CALLER",
      "path": "14"
    },
    "7526": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "7527": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7528": {
      "offset": [
        2919,
        2929
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "7530": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "7532": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7533": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "7535": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "7536": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "7537": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15913
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "7538": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "7539": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "7540": {
      "offset": [
        2723,
        2759
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "7541": {
      "offset": [
        2719,
        2829
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1DA0"
    },
    "7544": {
      "offset": [
        2719,
        2829
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7545": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        7284,
        7321
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 47,
      "value": "0x5"
    },
    "7547": {
      "offset": [
        2930,
        2940
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "7548": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        2930,
        2940
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "7549": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        2930,
        2940
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "7550": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        2930,
        2940
      ],
      "op": "CALLER",
      "path": "14"
    },
    "7551": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP9",
      "path": "14"
    },
    "7552": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7553": {
      "offset": [
        2919,
        2929
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "7555": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "7557": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7558": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "7559": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "7560": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        7071,
        7086
      ],
      "op": "SWAP4",
      "path": "14",
      "statement": 48
    },
    "7561": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        7071,
        7086
      ],
      "op": "TIMESTAMP",
      "path": "14"
    },
    "7562": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        7029,
        7068
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "7564": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        7029,
        7068
      ],
      "op": "DUP7",
      "path": "14"
    },
    "7565": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        7029,
        7068
      ],
      "op": "ADD",
      "path": "14"
    },
    "7566": {
      "offset": [
        783,
        15913
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "7567": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        7096,
        7134
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 49,
      "value": "0x2"
    },
    "7569": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        7096,
        7134
      ],
      "op": "DUP6",
      "path": "14"
    },
    "7570": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        7096,
        7134
      ],
      "op": "ADD",
      "path": "14"
    },
    "7571": {
      "offset": [
        783,
        15913
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "7572": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        7162,
        7200
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 50,
      "value": "0x3"
    },
    "7574": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        7162,
        7200
      ],
      "op": "DUP5",
      "path": "14"
    },
    "7575": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        7162,
        7200
      ],
      "op": "ADD",
      "path": "14"
    },
    "7576": {
      "offset": [
        783,
        15913
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "7577": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        7228,
        7261
      ],
      "op": "DUP3",
      "path": "14",
      "statement": 51
    },
    "7578": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        7228,
        7261
      ],
      "op": "ADD",
      "path": "14"
    },
    "7579": {
      "offset": [
        783,
        15913
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "7580": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        7284,
        7321
      ],
      "op": "ADD",
      "path": "14"
    },
    "7581": {
      "offset": [
        783,
        15913
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "7582": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7583": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "RETURN",
      "path": "14"
    },
    "7584": {
      "offset": [
        2719,
        2829
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7585": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "7586": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "7587": {
      "op": "PUSH4",
      "value": "0x6A9FF79F"
    },
    "7592": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "7594": {
      "op": "SHL"
    },
    "7595": {
      "offset": [
        2782,
        2818
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7596": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        2782,
        2818
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7597": {
      "offset": [
        2930,
        2940
      ],
      "op": "CALLER",
      "path": "14"
    },
    "7598": {
      "offset": [
        2782,
        2818
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7599": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        2782,
        2818
      ],
      "op": "DUP5",
      "path": "14"
    },
    "7600": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        2782,
        2818
      ],
      "op": "ADD",
      "path": "14"
    },
    "7601": {
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7602": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "7604": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7605": {
      "offset": [
        2782,
        2818
      ],
      "op": "REVERT",
      "path": "14"
    },
    "7606": {
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7607": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "7608": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7609": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "7610": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4CE"
    },
    "7613": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7614": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7615": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "7617": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "NOT",
      "path": "14"
    },
    "7618": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "7619": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "7620": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "7621": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4CE"
    },
    "7624": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7625": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7626": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "7627": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7628": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7629": {
      "fn": "ERC20.name",
      "offset": [
        2240,
        2245
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 52,
      "value": "0x5"
    },
    "7631": {
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "7632": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "7633": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "7635": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "7636": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7637": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "SHR",
      "path": "14"
    },
    "7638": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7639": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7640": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "7641": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "7642": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "7643": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "7644": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "7645": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1E79"
    },
    "7648": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7649": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7650": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "7652": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "7653": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "7654": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "7655": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "LT",
      "path": "14"
    },
    "7656": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7657": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "EQ",
      "path": "14"
    },
    "7658": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x67E"
    },
    "7661": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7662": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "DUP9",
      "path": "14"
    },
    "7663": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP10",
      "path": "14"
    },
    "7664": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "7665": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "7666": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "DUP9",
      "path": "14"
    },
    "7667": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "7668": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "7669": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "7670": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7671": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP11",
      "path": "14"
    },
    "7672": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7673": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7674": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7675": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "7677": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "EQ",
      "path": "14"
    },
    "7678": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x657"
    },
    "7681": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7682": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "7683": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "7684": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "7686": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "EQ",
      "path": "14"
    },
    "7687": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1E1D"
    },
    "7690": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7691": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "7692": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "7693": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "7694": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5F7"
    },
    "7697": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "7698": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7699": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5E8"
    },
    "7702": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7703": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "7704": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "7705": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x20A3"
    },
    "7708": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7709": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7710": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7711": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7712": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "7713": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "7714": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "7715": {
      "fn": "ERC20.name",
      "offset": [
        2240,
        2245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "7717": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "7718": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7719": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0"
    },
    "7752": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7753": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7754": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "7755": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "LT",
      "path": "14"
    },
    "7756": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1E61"
    },
    "7759": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7760": {
      "op": "POP"
    },
    "7761": {
      "op": "POP"
    },
    "7762": {
      "op": "POP"
    },
    "7763": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7764": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "7765": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "7766": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7767": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5E8"
    },
    "7770": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5F7"
    },
    "7773": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5D5"
    },
    "7776": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7777": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7778": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7779": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "7780": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "7781": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "DUP11",
      "path": "14"
    },
    "7782": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "7783": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "7784": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "7785": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7786": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "DUP9",
      "path": "14"
    },
    "7787": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "7788": {
      "op": "POP"
    },
    "7789": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "7790": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "7791": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7792": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "7793": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "7794": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "7795": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7796": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "7797": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1E48"
    },
    "7800": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7801": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7802": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "7803": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x7F"
    },
    "7805": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "7806": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "7807": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1DE1"
    },
    "7810": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7811": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7812": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "7813": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "7814": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x261"
    },
    "7817": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7818": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7819": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "7821": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "NOT",
      "path": "14"
    },
    "7822": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "7823": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "7824": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "7825": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x261"
    },
    "7828": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7829": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1E9C"
    },
    "7832": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F6E"
    },
    "7835": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7836": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7837": {
      "offset": [
        2930,
        2940
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7838": {
      "fn": "ERC20.name",
      "offset": [
        2930,
        2940
      ],
      "op": "CALLER",
      "path": "14"
    },
    "7839": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "7840": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7841": {
      "offset": [
        2919,
        2929
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "7843": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "7845": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7846": {
      "offset": [
        2898,
        3044
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1EE2"
    },
    "7849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7853": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7855": {
      "op": "SHL"
    },
    "7856": {
      "op": "SUB"
    },
    "7857": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7858": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "7859": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "7860": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "7861": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "7862": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x10"
    },
    "7864": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "SHR",
      "path": "14"
    },
    "7865": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "7866": {
      "offset": [
        2957,
        2981
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7867": {
      "fn": "ERC20.name",
      "offset": [
        2957,
        2981
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x0"
    },
    "7900": {
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "7901": {
      "offset": [
        2919,
        2981
      ],
      "op": "EQ",
      "path": "14"
    },
    "7902": {
      "offset": [
        2898,
        3044
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x211A"
    },
    "7905": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2898,
        3044
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7906": {
      "fn": "ERC20.name",
      "offset": [
        2898,
        3044
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7907": {
      "offset": [
        2930,
        2940
      ],
      "op": "CALLER",
      "path": "14"
    },
    "7908": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "7909": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7910": {
      "offset": [
        2919,
        2929
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "7912": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "7914": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7915": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "7917": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7918": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "7919": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "7920": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "7921": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "7922": {
      "offset": [
        2723,
        2759
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "7923": {
      "offset": [
        2719,
        2829
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F03"
    },
    "7926": {
      "offset": [
        2719,
        2829
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7927": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "7928": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        4522,
        4528
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 53,
      "value": "0x8C0"
    },
    "7931": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "7933": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "7934": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "7935": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        4522,
        4528
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x25DD"
    },
    "7938": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "jump": "i",
      "offset": [
        4522,
        4528
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7939": {
      "offset": [
        2719,
        2829
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7940": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "7942": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "7943": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "7944": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "7945": {
      "offset": [
        2782,
        2818
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7946": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        2782,
        2818
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x6A9FF79F"
    },
    "7951": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        2782,
        2818
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE1"
    },
    "7953": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        2782,
        2818
      ],
      "op": "SHL",
      "path": "14"
    },
    "7954": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        2782,
        2818
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7955": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        2782,
        2818
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7956": {
      "offset": [
        2930,
        2940
      ],
      "op": "CALLER",
      "path": "14"
    },
    "7957": {
      "offset": [
        2782,
        2818
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7958": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        2782,
        2818
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7959": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        2782,
        2818
      ],
      "op": "ADD",
      "path": "14"
    },
    "7960": {
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7961": {
      "offset": [
        2782,
        2818
      ],
      "op": "REVERT",
      "path": "14"
    },
    "7962": {
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7963": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "7964": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "7965": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "7966": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "7967": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x261"
    },
    "7970": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7971": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "7973": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "7974": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "7976": {
      "op": "NOT"
    },
    "7977": {
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "7978": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "7979": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x261"
    },
    "7982": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7983": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "7984": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xFFFFFFFF"
    },
    "7989": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "7991": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "SHL",
      "path": "14"
    },
    "7992": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7993": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "7994": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7995": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7996": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "7997": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x261"
    },
    "8000": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8001": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8003": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "8004": {
      "op": "POP"
    },
    "8005": {
      "op": "PUSH4",
      "value": "0x85572FFB"
    },
    "8010": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8012": {
      "op": "SHL"
    },
    "8013": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1565
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 54
    },
    "8014": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1565
      ],
      "op": "EQ",
      "path": "4"
    },
    "8015": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1565
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "8016": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1609
      ],
      "op": "DUP2",
      "path": "4"
    },
    "8017": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1609
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "8018": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1609
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1F5D"
    },
    "8021": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1609
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "8022": {
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8023": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "8024": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "8025": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "8026": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8027": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8028": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "RETURN",
      "path": "14"
    },
    "8029": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1609
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "8030": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "8035": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8037": {
      "op": "SHL"
    },
    "8038": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1569,
        1609
      ],
      "op": "EQ",
      "path": "4"
    },
    "8039": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1569,
        1609
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "8040": {
      "op": "POP"
    },
    "8041": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1609
      ],
      "op": "CODESIZE",
      "path": "4"
    },
    "8042": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1609
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1F56"
    },
    "8045": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1609
      ],
      "op": "JUMP",
      "path": "4"
    },
    "8046": {
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8047": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "8049": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "8050": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8055": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8057": {
      "op": "SHL"
    },
    "8058": {
      "op": "SUB"
    },
    "8059": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8060": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "8061": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8062": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "8063": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAD7"
    },
    "8066": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8067": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8068": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8069": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "8071": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "8072": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8073": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8075": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8077": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8079": {
      "op": "SHL"
    },
    "8080": {
      "op": "SUB"
    },
    "8081": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8082": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "8083": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8084": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "8085": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAD7"
    },
    "8088": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8089": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8090": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8091": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "8092": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8093": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8094": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8095": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "8096": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8097": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8098": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8099": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "8101": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8102": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "8103": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8104": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "LT",
      "path": "14"
    },
    "8105": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FC6"
    },
    "8108": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8109": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "8110": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "8111": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8112": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "8114": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8116": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8117": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "8118": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "8119": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "8120": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "8121": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "8122": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8123": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "8125": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8126": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "NOT",
      "path": "14"
    },
    "8127": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "8128": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "8129": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "8130": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "8131": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "8132": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8133": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8134": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8135": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8137": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8138": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8139": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "8140": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8141": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "8142": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8143": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "8144": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8145": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "8146": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8147": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "8148": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8149": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "8150": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FA5"
    },
    "8153": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8154": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8155": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "8157": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8158": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "8160": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "NOT",
      "path": "14"
    },
    "8161": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "8162": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "8163": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAD7"
    },
    "8166": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8167": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "8169": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "8170": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8171": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "8173": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "8174": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8175": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "8177": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "8178": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8179": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "8181": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "8182": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8183": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8184": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8185": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "8187": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "8188": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8189": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8193": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8195": {
      "op": "SHL"
    },
    "8196": {
      "op": "SUB"
    },
    "8197": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8198": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "8199": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8200": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "8201": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAD7"
    },
    "8204": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8205": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8206": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8207": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "8209": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8210": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "8211": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8212": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8213": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "LT",
      "path": "14"
    },
    "8214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8218": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8220": {
      "op": "SHL"
    },
    "8221": {
      "op": "SUB"
    },
    "8222": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8223": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "GT",
      "path": "14"
    },
    "8224": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "OR",
      "path": "14"
    },
    "8225": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2029"
    },
    "8228": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8229": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8231": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8232": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8233": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8234": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x4E487B71"
    },
    "8239": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "8241": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SHL",
      "path": "14"
    },
    "8242": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "8244": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8245": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x41"
    },
    "8247": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "8249": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8250": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "8252": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "8254": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "REVERT",
      "path": "14"
    },
    "8255": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8256": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8258": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8259": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "8260": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8261": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8262": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "LT",
      "path": "14"
    },
    "8263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8267": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8269": {
      "op": "SHL"
    },
    "8270": {
      "op": "SUB"
    },
    "8271": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8272": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "GT",
      "path": "14"
    },
    "8273": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "OR",
      "path": "14"
    },
    "8274": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2029"
    },
    "8277": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8278": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8280": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8281": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8282": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8287": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8289": {
      "op": "SHL"
    },
    "8290": {
      "op": "SUB"
    },
    "8291": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8292": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "GT",
      "path": "14"
    },
    "8293": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2029"
    },
    "8296": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8297": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8299": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8300": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8301": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8302": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8304": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8305": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "8306": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8307": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8308": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "LT",
      "path": "14"
    },
    "8309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8313": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8315": {
      "op": "SHL"
    },
    "8316": {
      "op": "SUB"
    },
    "8317": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8318": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "GT",
      "path": "14"
    },
    "8319": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "OR",
      "path": "14"
    },
    "8320": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2029"
    },
    "8323": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8324": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8326": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8327": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8328": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8329": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "8331": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8332": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "8333": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8334": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8335": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "LT",
      "path": "14"
    },
    "8336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8340": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8342": {
      "op": "SHL"
    },
    "8343": {
      "op": "SUB"
    },
    "8344": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8345": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "GT",
      "path": "14"
    },
    "8346": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "OR",
      "path": "14"
    },
    "8347": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2029"
    },
    "8350": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8351": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8353": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8354": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8355": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8356": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8357": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "8359": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8360": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "NOT",
      "path": "14"
    },
    "8361": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "8362": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "8363": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "8364": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8365": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "8366": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8367": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8368": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "LT",
      "path": "14"
    },
    "8369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8373": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8375": {
      "op": "SHL"
    },
    "8376": {
      "op": "SUB"
    },
    "8377": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8378": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "GT",
      "path": "14"
    },
    "8379": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "OR",
      "path": "14"
    },
    "8380": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2029"
    },
    "8383": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8384": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8386": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8387": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8388": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8389": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8390": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "8392": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8393": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "8394": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "8395": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "8396": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAD7"
    },
    "8399": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8400": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8401": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "8402": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8407": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8409": {
      "op": "SHL"
    },
    "8410": {
      "op": "SUB"
    },
    "8411": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8412": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "GT",
      "path": "14"
    },
    "8413": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2029"
    },
    "8416": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8417": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8419": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8420": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "8421": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x20F8"
    },
    "8424": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "8426": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "8427": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "8428": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8430": {
      "op": "NOT"
    },
    "8431": {
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "8432": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8434": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "8435": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "8436": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x20A3"
    },
    "8439": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8440": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8441": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8442": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "8443": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8444": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8446": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8447": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8448": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "8449": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "8450": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "GT",
      "path": "14"
    },
    "8451": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAD7"
    },
    "8454": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8455": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8456": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8458": {
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "8459": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8461": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8462": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "8463": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "8464": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8465": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "8466": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "8467": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "CALLDATACOPY",
      "path": "14"
    },
    "8468": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8469": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "8470": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "8471": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8472": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8473": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8474": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8475": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "8476": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2121"
    },
    "8479": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8480": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8481": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8482": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8484": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8485": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8489": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8491": {
      "op": "SHL"
    },
    "8492": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8493": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8494": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8496": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "8498": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8499": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "8500": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8501": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x25"
    },
    "8503": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "8505": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8506": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "8507": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8508": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x52657175697265206D617374657220616E64206E6F646520696E2073616D6520"
    },
    "8541": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "8543": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8544": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "8545": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8546": {
      "op": "PUSH5",
      "value": "0x31B430B4B7"
    },
    "8552": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "8554": {
      "op": "SHL"
    },
    "8555": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "8557": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8558": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "8559": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8560": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x84"
    },
    "8562": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8563": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "REVERT",
      "path": "14"
    },
    "8564": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8565": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8570": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8572": {
      "op": "SHL"
    },
    "8573": {
      "op": "SUB"
    },
    "8574": {
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8575": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "8576": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "8577": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "8578": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "8579": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8580": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8581": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8583": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8585": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "8586": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8587": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8588": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8589": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "8590": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8591": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x21A3"
    },
    "8594": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "8595": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8596": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "8598": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "8599": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "8600": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "8601": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8602": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "8604": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8605": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "8606": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8607": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F9A"
    },
    "8610": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8611": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8612": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "8613": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x21BF"
    },
    "8616": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "8617": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "8618": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "8619": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8620": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "8621": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3F"
    },
    "8623": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "NOT",
      "path": "14"
    },
    "8624": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "8625": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "8626": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "8627": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8628": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "8629": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "8630": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "8632": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "8633": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "8634": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8635": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F9A"
    },
    "8638": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8639": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8640": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8641": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "8642": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "8643": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8644": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "8645": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "8646": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "8647": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8648": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "8649": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "8650": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "8652": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "8653": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "8654": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8655": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8656": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8657": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "8658": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8659": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "8660": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "8661": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8662": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8663": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "8664": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "8665": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "8666": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "8667": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "8669": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8670": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8671": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8672": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8673": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "LT",
      "path": "14"
    },
    "8674": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2217"
    },
    "8677": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8678": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "8679": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "8680": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "8681": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "8682": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "8683": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xC0"
    },
    "8685": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "8687": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2214"
    },
    "8690": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "8691": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "8692": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "8694": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8695": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "8697": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SHL",
      "path": "14"
    },
    "8698": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "8699": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "8701": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8702": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "8703": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8704": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "8705": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "8707": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "8708": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "8709": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8710": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "8711": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8712": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "8713": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8714": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "8715": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "8716": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "8717": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "8718": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "8719": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8720": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F9A"
    },
    "8723": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "i",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8724": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8725": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8726": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8727": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8728": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "8729": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8730": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8731": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8736": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8738": {
      "op": "SHL"
    },
    "8739": {
      "op": "SUB"
    },
    "8740": {
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "8741": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP10",
      "path": "14"
    },
    "8742": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8743": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8744": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "8745": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8746": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP9",
      "path": "14"
    },
    "8747": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "8748": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "8749": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8750": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "8751": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "8752": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "8753": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "8754": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "8755": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8756": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "8757": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "8758": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "8760": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8761": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "8762": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "8763": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8764": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x21DE"
    },
    "8767": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8768": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8769": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8770": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8771": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8773": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "8774": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "8775": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SLT",
      "path": "14"
    },
    "8776": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAD7"
    },
    "8779": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8780": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8781": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8782": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "8783": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "8784": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8785": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "8786": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAD7"
    },
    "8789": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8790": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8791": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8792": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8793": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "8794": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8795": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8796": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "8797": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8798": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "8799": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "GT",
      "path": "14"
    },
    "8800": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2265"
    },
    "8803": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8804": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8805": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8806": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x4E487B71"
    },
    "8811": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "8813": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "SHL",
      "path": "14"
    },
    "8814": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "8816": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8817": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x11"
    },
    "8819": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "8821": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8822": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "8824": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "8826": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15913
      ],
      "op": "REVERT",
      "path": "14"
    },
    "8827": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14406,
        15547
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8828": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "8830": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8831": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "8833": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "SHL",
      "path": "14"
    },
    "8834": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "8835": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8836": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "8837": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "8838": {
      "op": "SWAP2"
    },
    "8839": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8841": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8842": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8843": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8844": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14636,
        14646
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "8846": {
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8847": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8849": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "8850": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8851": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8852": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8853": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8855": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "8856": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8857": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8858": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "8859": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14636,
        14679
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "8860": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14599,
        14854
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x22BB"
    },
    "8863": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14636,
        14679
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "8865": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14636,
        14679
      ],
      "op": "DUP8",
      "path": "14"
    },
    "8866": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14636,
        14679
      ],
      "op": "ADD",
      "path": "14"
    },
    "8867": {
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "8868": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14693,
        14736
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "8870": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14693,
        14736
      ],
      "op": "DUP9",
      "path": "14"
    },
    "8871": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14693,
        14736
      ],
      "op": "ADD",
      "path": "14"
    },
    "8872": {
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "8873": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14750,
        14788
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "8874": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14750,
        14788
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "8876": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14750,
        14788
      ],
      "op": "SWAP9",
      "path": "14"
    },
    "8877": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14802,
        14844
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x5"
    },
    "8879": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14750,
        14788
      ],
      "op": "DUP11",
      "path": "14"
    },
    "8880": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14750,
        14788
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8881": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14750,
        14788
      ],
      "op": "ADD",
      "path": "14"
    },
    "8882": {
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "8883": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14802,
        14844
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "8884": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14802,
        14844
      ],
      "op": "ADD",
      "path": "14"
    },
    "8885": {
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "8886": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14599,
        14854
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "8887": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14599,
        14854
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x27DC"
    },
    "8890": {
      "fn": "MasterNode.checkApprovedWarp",
      "jump": "i",
      "offset": [
        14599,
        14854
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8891": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14599,
        14854
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8892": {
      "offset": [
        783,
        15913
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "8893": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        14898
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 55,
      "value": "0xA"
    },
    "8895": {
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "8896": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14902,
        14911
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x15180"
    },
    "8900": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8901": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "8902": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8903": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "8904": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "GT",
      "path": "14"
    },
    "8905": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2393"
    },
    "8908": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8909": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14915,
        14930
      ],
      "op": "TIMESTAMP",
      "path": "14"
    },
    "8910": {
      "op": "GT"
    },
    "8911": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        14990
      ],
      "op": "SWAP9",
      "path": "14"
    },
    "8912": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        14990
      ],
      "op": "DUP10",
      "path": "14"
    },
    "8913": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        14990
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x23F9"
    },
    "8916": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        14990
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8917": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14406,
        15547
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8918": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15050
      ],
      "op": "DUP10",
      "path": "14"
    },
    "8919": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15050
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x23E1"
    },
    "8922": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15050
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8923": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14406,
        15547
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8924": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15114
      ],
      "op": "DUP10",
      "path": "14"
    },
    "8925": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15114
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x23CB"
    },
    "8928": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15114
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8929": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14406,
        15547
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8930": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15195
      ],
      "op": "DUP10",
      "path": "14"
    },
    "8931": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15195
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x23A6"
    },
    "8934": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15195
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8935": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14406,
        15547
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8936": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15292
      ],
      "op": "DUP10",
      "path": "14"
    },
    "8937": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15292
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2370"
    },
    "8940": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15292
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8941": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14406,
        15547
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8942": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15355
      ],
      "op": "DUP10",
      "path": "14"
    },
    "8943": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15355
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2357"
    },
    "8946": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15355
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8947": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14406,
        15547
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8948": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15420
      ],
      "op": "DUP10",
      "path": "14"
    },
    "8949": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15420
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x233F"
    },
    "8952": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15420
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8953": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14406,
        15547
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8954": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15474
      ],
      "op": "POP",
      "path": "14"
    },
    "8955": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15474
      ],
      "op": "DUP9",
      "path": "14"
    },
    "8956": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15474
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2328"
    },
    "8959": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15474
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8960": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14406,
        15547
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8961": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15540
      ],
      "op": "DUP9",
      "path": "14"
    },
    "8962": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15540
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2311"
    },
    "8965": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15540
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8966": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14406,
        15547
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8967": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14865,
        15540
      ],
      "op": "POP",
      "path": "14"
    },
    "8968": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14865,
        15540
      ],
      "op": "POP",
      "path": "14"
    },
    "8969": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14865,
        15540
      ],
      "op": "POP",
      "path": "14"
    },
    "8970": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14865,
        15540
      ],
      "op": "POP",
      "path": "14"
    },
    "8971": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14865,
        15540
      ],
      "op": "POP",
      "path": "14"
    },
    "8972": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14865,
        15540
      ],
      "op": "POP",
      "path": "14"
    },
    "8973": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14865,
        15540
      ],
      "op": "POP",
      "path": "14"
    },
    "8974": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14865,
        15540
      ],
      "op": "POP",
      "path": "14"
    },
    "8975": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14406,
        15547
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8976": {
      "fn": "MasterNode.checkApprovedWarp",
      "jump": "o",
      "offset": [
        14406,
        15547
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8977": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15540
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8978": {
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "8979": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8980": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8981": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8982": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "8983": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15490,
        15524
      ],
      "op": "ADD",
      "path": "14"
    },
    "8984": {
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "8985": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15490,
        15540
      ],
      "op": "LT",
      "path": "14"
    },
    "8986": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15490,
        15540
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8987": {
      "op": "POP"
    },
    "8988": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15540
      ],
      "op": "CODESIZE",
      "path": "14"
    },
    "8989": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15540
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8990": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15540
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8991": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15540
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8992": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15540
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8993": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15540
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8994": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15540
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8995": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15540
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8996": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15540
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2306"
    },
    "8999": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15540
      ],
      "op": "JUMP",
      "path": "14"
    },
    "9000": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15474
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9001": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9002": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9003": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "9004": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "9005": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9006": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "9007": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "9008": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9009": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "9010": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "9011": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "9012": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15436,
        15470
      ],
      "op": "DUP8",
      "path": "14"
    },
    "9013": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15436,
        15470
      ],
      "op": "ADD",
      "path": "14"
    },
    "9014": {
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "9015": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15436,
        15474
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "9016": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15436,
        15474
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "9017": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15436,
        15474
      ],
      "op": "SWAP9",
      "path": "14"
    },
    "9018": {
      "op": "POP"
    },
    "9019": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15474
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2300"
    },
    "9022": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15474
      ],
      "op": "JUMP",
      "path": "14"
    },
    "9023": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15420
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9024": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "9025": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9026": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "9027": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "9028": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9029": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "9030": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "9031": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "9032": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "9033": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "9035": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "SHR",
      "path": "14"
    },
    "9036": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "9038": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "9039": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "9040": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP9",
      "path": "14"
    },
    "9041": {
      "op": "POP"
    },
    "9042": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15420
      ],
      "op": "CODESIZE",
      "path": "14"
    },
    "9043": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15420
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x22F9"
    },
    "9046": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15420
      ],
      "op": "JUMP",
      "path": "14"
    },
    "9047": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15355
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9048": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "9049": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "9050": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9051": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "9052": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "9053": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9054": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "9055": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "9056": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "9057": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "9058": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "9060": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "9061": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "9062": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "9063": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "9065": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15308,
        15355
      ],
      "op": "EQ",
      "path": "14"
    },
    "9066": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15308,
        15355
      ],
      "op": "SWAP10",
      "path": "14"
    },
    "9067": {
      "op": "POP"
    },
    "9068": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15355
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x22F3"
    },
    "9071": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15355
      ],
      "op": "JUMP",
      "path": "14"
    },
    "9072": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15292
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9073": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "9074": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP10",
      "path": "14"
    },
    "9075": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "9076": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "9077": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9078": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "9079": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "9080": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9081": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "9083": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "9084": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "9085": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "9086": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15211,
        15255
      ],
      "op": "ADD",
      "path": "14"
    },
    "9087": {
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "9088": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15258,
        15262
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE10"
    },
    "9091": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9092": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "9093": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "9094": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "9095": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "GT",
      "path": "14"
    },
    "9096": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2393"
    },
    "9099": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "9100": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14915,
        14930
      ],
      "op": "TIMESTAMP",
      "path": "14"
    },
    "9101": {
      "op": "LT"
    },
    "9102": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15292
      ],
      "op": "SWAP9",
      "path": "14"
    },
    "9103": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15292
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x22ED"
    },
    "9106": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15292
      ],
      "op": "JUMP",
      "path": "14"
    },
    "9107": {
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9108": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9113": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9115": {
      "op": "SHL"
    },
    "9116": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "9117": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9118": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x11"
    },
    "9120": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP9",
      "path": "14"
    },
    "9121": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9122": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "9124": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "9125": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "REVERT",
      "path": "14"
    },
    "9126": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15195
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9127": {
      "offset": [
        783,
        15913
      ],
      "op": "SWAP9",
      "path": "14"
    },
    "9128": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "9129": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9130": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9131": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "9132": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "9133": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9134": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "9135": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "9136": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9137": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "9139": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "9140": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "9141": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "9142": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15130,
        15170
      ],
      "op": "ADD",
      "path": "14"
    },
    "9143": {
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "9144": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15173,
        15177
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE10"
    },
    "9147": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9148": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "9149": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "9150": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "9151": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "GT",
      "path": "14"
    },
    "9152": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2393"
    },
    "9155": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "9156": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14915,
        14930
      ],
      "op": "TIMESTAMP",
      "path": "14"
    },
    "9157": {
      "op": "LT"
    },
    "9158": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15195
      ],
      "op": "SWAP9",
      "path": "14"
    },
    "9159": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15195
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x22E7"
    },
    "9162": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15195
      ],
      "op": "JUMP",
      "path": "14"
    },
    "9163": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15114
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9164": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "9165": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "9166": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9167": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "9168": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "9169": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9170": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "9171": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "9172": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "9173": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "9175": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15066,
        15110
      ],
      "op": "ADD",
      "path": "14"
    },
    "9176": {
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "9177": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15066,
        15114
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "9178": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15066,
        15114
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "9179": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15066,
        15114
      ],
      "op": "SWAP10",
      "path": "14"
    },
    "9180": {
      "op": "POP"
    },
    "9181": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15114
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x22E1"
    },
    "9184": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15114
      ],
      "op": "JUMP",
      "path": "14"
    },
    "9185": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15050
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9186": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9187": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "9188": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "9189": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "9190": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9191": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "9192": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "9193": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9194": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "9195": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "9196": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "9197": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "9199": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15006,
        15046
      ],
      "op": "ADD",
      "path": "14"
    },
    "9200": {
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "9201": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15006,
        15050
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "9202": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15006,
        15050
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "9203": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        15006,
        15050
      ],
      "op": "SWAP10",
      "path": "14"
    },
    "9204": {
      "op": "POP"
    },
    "9205": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15050
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x22DB"
    },
    "9208": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        15050
      ],
      "op": "JUMP",
      "path": "14"
    },
    "9209": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        14990
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9210": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9211": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "9212": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "9213": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "9214": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9215": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "9216": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "9217": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9218": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "9219": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "9220": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "9221": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "9222": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "9224": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "SHR",
      "path": "14"
    },
    "9225": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "9227": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "9228": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "9229": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "9230": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "9232": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14946,
        14990
      ],
      "op": "EQ",
      "path": "14"
    },
    "9233": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14946,
        14990
      ],
      "op": "SWAP10",
      "path": "14"
    },
    "9234": {
      "op": "POP"
    },
    "9235": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        14990
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x22D5"
    },
    "9238": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14884,
        14990
      ],
      "op": "JUMP",
      "path": "14"
    },
    "9239": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        15676,
        15911
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9240": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        15757,
        15767
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9"
    },
    "9242": {
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "9243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9247": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9249": {
      "op": "SHL"
    },
    "9250": {
      "op": "SUB"
    },
    "9251": {
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9252": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9253": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "9254": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9255": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        15757,
        15781
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9256": {
      "branch": 83,
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        15757,
        15781
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "9257": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        15753,
        15853
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x244A"
    },
    "9260": {
      "branch": 83,
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        15753,
        15853
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "9261": {
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "9262": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9264": {
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9265": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        15870,
        15880
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 56,
      "value": "0xB"
    },
    "9267": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "9269": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9274": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9276": {
      "op": "SHL"
    },
    "9277": {
      "op": "SUB"
    },
    "9278": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9280": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9282": {
      "offset": [
        783,
        15913
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "9283": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "9284": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x10"
    },
    "9286": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        15913
      ],
      "op": "SHR",
      "path": "14"
    },
    "9287": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "9288": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        15676,
        15911
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9289": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "jump": "o",
      "offset": [
        15676,
        15911
      ],
      "op": "JUMP",
      "path": "14"
    },
    "9290": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        15753,
        15853
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9291": {
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9292": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        15913
      ],
      "op": "POP",
      "path": "14"
    },
    "9293": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        15815,
        15829
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 57,
      "value": "0x8"
    },
    "9295": {
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "9296": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "9297": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9299": {
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9300": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        15804,
        15814
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "9302": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "9304": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9309": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9311": {
      "op": "SHL"
    },
    "9312": {
      "op": "SUB"
    },
    "9313": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9315": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9317": {
      "offset": [
        783,
        15913
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "9318": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "9319": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x10"
    },
    "9321": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        15913
      ],
      "op": "SHR",
      "path": "14"
    },
    "9322": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "9323": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        15797,
        15842
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9324": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "jump": "o",
      "offset": [
        15797,
        15842
      ],
      "op": "JUMP",
      "path": "14"
    },
    "9325": {
      "fn": "ERC20._transfer",
      "offset": [
        7473,
        8291
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9330": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9332": {
      "op": "SHL"
    },
    "9333": {
      "op": "SUB"
    },
    "9334": {
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9335": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9336": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "9337": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "9338": {
      "fn": "ERC20._transfer",
      "offset": [
        7599,
        7617
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 58
    },
    "9339": {
      "fn": "ERC20._transfer",
      "offset": [
        7599,
        7617
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9340": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x258A"
    },
    "9343": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "9344": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "9345": {
      "fn": "ERC20._transfer",
      "offset": [
        7677,
        7693
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 59
    },
    "9346": {
      "fn": "ERC20._transfer",
      "offset": [
        7677,
        7693
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9347": {
      "fn": "ERC20._transfer",
      "offset": [
        7677,
        7693
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9348": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2539"
    },
    "9351": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "9352": {
      "fn": "ERC20._transfer",
      "offset": [
        7615,
        7616
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9354": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9355": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9356": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9357": {
      "fn": "ERC20._transfer",
      "offset": [
        7815,
        7824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "9359": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "9361": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9362": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9364": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9365": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "9366": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "9367": {
      "fn": "ERC20._transfer",
      "offset": [
        7848,
        7869
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 60
    },
    "9368": {
      "fn": "ERC20._transfer",
      "offset": [
        7848,
        7869
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9369": {
      "fn": "ERC20._transfer",
      "offset": [
        7848,
        7869
      ],
      "op": "DUP4",
      "path": "0"
    },
    "9370": {
      "fn": "ERC20._transfer",
      "offset": [
        7848,
        7869
      ],
      "op": "LT",
      "path": "0"
    },
    "9371": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x24E5"
    },
    "9374": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "9375": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9377": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9378": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9379": {
      "fn": "ERC20._transfer",
      "offset": [
        8210,
        8236
      ],
      "op": "PUSH32",
      "path": "0",
      "statement": 61,
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "9412": {
      "offset": [
        783,
        15913
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "9413": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "DUP8",
      "path": "14"
    },
    "9414": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "9416": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "9417": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9418": {
      "fn": "ERC20._transfer",
      "offset": [
        7815,
        7824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "9420": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "9421": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9422": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "9423": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9424": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9425": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "9426": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "9427": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "DUP7",
      "path": "14"
    },
    "9428": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9429": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9430": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "9431": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9432": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9433": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "9434": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "9435": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9436": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "9437": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9439": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "9440": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9441": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9442": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9443": {
      "fn": "ERC20._transfer",
      "offset": [
        8210,
        8236
      ],
      "op": "LOG3",
      "path": "0"
    },
    "9444": {
      "fn": "ERC20._transfer",
      "jump": "o",
      "offset": [
        7473,
        8291
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9445": {
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9446": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9448": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "9449": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9453": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9455": {
      "op": "SHL"
    },
    "9456": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9457": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9458": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "9460": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "9462": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9463": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "9464": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9465": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x26"
    },
    "9467": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "9469": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9470": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "9471": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9472": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "9505": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "9507": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9508": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "9509": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9510": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "9517": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "9519": {
      "op": "SHL"
    },
    "9520": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "9522": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9523": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "9524": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9525": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x84"
    },
    "9527": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9528": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "REVERT",
      "path": "14"
    },
    "9529": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9530": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9532": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "9533": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9537": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9539": {
      "op": "SHL"
    },
    "9540": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9541": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9542": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "9544": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "9546": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9547": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "9548": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9549": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x23"
    },
    "9551": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "9553": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9554": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "9555": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9556": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "9589": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "9591": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9592": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "9593": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9594": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "9598": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "9600": {
      "op": "SHL"
    },
    "9601": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "9603": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9604": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "9605": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9606": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x84"
    },
    "9608": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9609": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "REVERT",
      "path": "14"
    },
    "9610": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9611": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9613": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "9614": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9618": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9620": {
      "op": "SHL"
    },
    "9621": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9622": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9623": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "9625": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "9627": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9628": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "9629": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9630": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x25"
    },
    "9632": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "9634": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9635": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "9636": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9637": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "9670": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "9672": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9673": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "9674": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9675": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "9681": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "9683": {
      "op": "SHL"
    },
    "9684": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "9686": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9687": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "9688": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9689": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x84"
    },
    "9691": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9692": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15913
      ],
      "op": "REVERT",
      "path": "14"
    },
    "9693": {
      "fn": "ERC20._mint",
      "offset": [
        8567,
        9102
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9698": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9700": {
      "op": "SHL"
    },
    "9701": {
      "op": "SUB"
    },
    "9702": {
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "9703": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9704": {
      "fn": "ERC20._mint",
      "offset": [
        8650,
        8671
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 62
    },
    "9705": {
      "fn": "ERC20._mint",
      "offset": [
        8650,
        8671
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9706": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x263C"
    },
    "9709": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "9710": {
      "fn": "ERC20._mint",
      "offset": [
        8999,
        9036
      ],
      "op": "PUSH32",
      "path": "0",
      "statement": 63,
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "9743": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "9745": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9746": {
      "fn": "ERC20._mint",
      "offset": [
        8778,
        8800
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 64,
      "value": "0x261F"
    },
    "9749": {
      "fn": "ERC20._mint",
      "offset": [
        8669,
        8670
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9751": {
      "offset": [
        783,
        15913
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "9752": {
      "fn": "ERC20._mint",
      "offset": [
        8778,
        8800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9754": {
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "9755": {
      "fn": "ERC20._mint",
      "offset": [
        8778,
        8800
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2258"
    },
    "9758": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8778,
        8800
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9759": {
      "fn": "ERC20._mint",
      "offset": [
        8778,
        8800
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9760": {
      "fn": "ERC20._mint",
      "offset": [
        8778,
        8800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9762": {
      "offset": [
        783,
        15913
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "9763": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "9764": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "9765": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9766": {
      "fn": "ERC20._mint",
      "offset": [
        8946,
        8955
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 65,
      "value": "0x2"
    },
    "9768": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9769": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9770": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9772": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15913
      ],
      "op": "DUP5",
      "path": "14"
    },
    "9773": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15913
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "9774": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9775": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9776": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "9777": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "9778": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9779": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15913
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "9780": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9782": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "9783": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9784": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9785": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9786": {
      "fn": "ERC20._mint",
      "offset": [
        8999,
        9036
      ],
      "op": "LOG3",
      "path": "0"
    },
    "9787": {
      "fn": "ERC20._mint",
      "jump": "o",
      "offset": [
        8567,
        9102
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9788": {
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9789": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9791": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "9792": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9796": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9798": {
      "op": "SHL"
    },
    "9799": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9800": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9801": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "9803": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "9805": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9806": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "9807": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9808": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "9810": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "9812": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9813": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "9814": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9815": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "9848": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "9850": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9851": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "9852": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9853": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "9855": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9856": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15913
      ],
      "op": "REVERT",
      "path": "14"
    },
    "9857": {
      "fn": "ERC20._approve",
      "offset": [
        10504,
        10874
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9862": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9864": {
      "op": "SHL"
    },
    "9865": {
      "op": "SUB"
    },
    "9866": {
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9867": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9868": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "9869": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "9870": {
      "fn": "ERC20._approve",
      "offset": [
        10635,
        10654
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 66
    },
    "9871": {
      "fn": "ERC20._approve",
      "offset": [
        10635,
        10654
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9872": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2732"
    },
    "9875": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "9876": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "9877": {
      "fn": "ERC20._approve",
      "offset": [
        10713,
        10734
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 67
    },
    "9878": {
      "fn": "ERC20._approve",
      "offset": [
        10713,
        10734
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9879": {
      "fn": "ERC20._approve",
      "offset": [
        10713,
        10734
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9880": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x26E2"
    },
    "9883": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "9884": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "9886": {
      "fn": "ERC20._approve",
      "offset": [
        10835,
        10867
      ],
      "op": "PUSH32",
      "path": "0",
      "statement": 68,
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "9919": {
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "9920": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "9921": {
      "fn": "ERC20._approve",
      "offset": [
        10652,
        10653
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9923": {
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9924": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10795
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 69,
      "value": "0x3"
    },
    "9926": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9927": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9928": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9930": {
      "fn": "ERC20._approve",
      "offset": [
        10652,
        10653
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9932": {
      "offset": [
        783,
        15913
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "9933": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "9934": {
      "fn": "ERC20._approve",
      "offset": [
        10652,
        10653
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9936": {
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9937": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9938": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9939": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "9940": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9942": {
      "fn": "ERC20._approve",
      "offset": [
        10652,
        10653
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9944": {
      "offset": [
        783,
        15913
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "9945": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "9946": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9948": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "9949": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9950": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9951": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9952": {
      "fn": "ERC20._approve",
      "offset": [
        10835,
        10867
      ],
      "op": "LOG3",
      "path": "0"
    },
    "9953": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        10504,
        10874
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9954": {
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9955": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9957": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "9958": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9962": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9964": {
      "op": "SHL"
    },
    "9965": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9966": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9967": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "9969": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "9971": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9972": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "9973": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9974": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x22"
    },
    "9976": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "9978": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9979": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "9980": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9981": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "10014": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "10016": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "10017": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "10018": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "10019": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "10022": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "10024": {
      "op": "SHL"
    },
    "10025": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "10027": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "10028": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "10029": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "10030": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x84"
    },
    "10032": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "10033": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "REVERT",
      "path": "14"
    },
    "10034": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "10035": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "10037": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "10038": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10042": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10044": {
      "op": "SHL"
    },
    "10045": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "10046": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "10047": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "10049": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "10051": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "10052": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "10053": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "10054": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "10056": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "10057": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "10058": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "10059": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "10060": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "10093": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "10095": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "10096": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "10097": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "10098": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "10103": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10105": {
      "op": "SHL"
    },
    "10106": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "10108": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "10109": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "10110": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "10111": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x84"
    },
    "10113": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "10114": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "REVERT",
      "path": "14"
    },
    "10115": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "10116": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "10117": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "10118": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10122": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10124": {
      "op": "SHL"
    },
    "10125": {
      "op": "SUB"
    },
    "10126": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "10127": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "10128": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "10129": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "10130": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAD7"
    },
    "10133": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "10134": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "10135": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "10136": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "10137": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "10138": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "10140": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "10141": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "10142": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "10143": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "SUB",
      "path": "14"
    },
    "10144": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAD7"
    },
    "10147": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "10148": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        783,
        15913
      ],
      "op": "JUMP",
      "path": "14"
    },
    "10149": {
      "fn": "Client._argsToBytes",
      "offset": [
        1285,
        1455
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10150": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "10152": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "10153": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "10154": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x97A657C9"
    },
    "10159": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "10161": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        15913
      ],
      "op": "SHL",
      "path": "14"
    },
    "10162": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 70,
      "value": "0x20"
    },
    "10164": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "DUP4",
      "path": "7"
    },
    "10165": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "ADD",
      "path": "7"
    },
    "10166": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10167": {
      "offset": [
        1218,
        1228
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "10168": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x24"
    },
    "10170": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "DUP3",
      "path": "7"
    },
    "10171": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "ADD",
      "path": "7"
    },
    "10172": {
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "10173": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x24"
    },
    "10175": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10176": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10177": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "10179": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "10180": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "10181": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "10182": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "10183": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        15913
      ],
      "op": "LT",
      "path": "14"
    },
    "10184": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10188": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10190": {
      "op": "SHL"
    },
    "10191": {
      "op": "SUB"
    },
    "10192": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "10193": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        15913
      ],
      "op": "GT",
      "path": "14"
    },
    "10194": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        15913
      ],
      "op": "OR",
      "path": "14"
    },
    "10195": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2029"
    },
    "10198": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "10199": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "10201": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "10202": {
      "fn": "Client._argsToBytes",
      "offset": [
        1285,
        1455
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10203": {
      "fn": "Client._argsToBytes",
      "jump": "o",
      "offset": [
        1285,
        1455
      ],
      "op": "JUMP",
      "path": "7"
    },
    "10204": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        1748,
        2384
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10205": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        1748,
        2384
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "10206": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        2050,
        2078
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x27E7"
    },
    "10209": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        1748,
        2384
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "10210": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        1748,
        2384
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "10211": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        2050,
        2078
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2258"
    },
    "10214": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "jump": "i",
      "offset": [
        2050,
        2078
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10215": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        2050,
        2078
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "10216": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        2186,
        2190
      ],
      "op": "PUSH8",
      "path": "15",
      "value": "0xDE0B6B3A7640000"
    },
    "10225": {
      "offset": [
        783,
        15913
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "10226": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "10227": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "10228": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        15913
      ],
      "op": "MUL",
      "path": "14"
    },
    "10229": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "10230": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        15913
      ],
      "op": "DUP1",
      "path": "14"
    },
    "10231": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "10232": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        15913
      ],
      "op": "DIV",
      "path": "14"
    },
    "10233": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        15913
      ],
      "op": "DUP6",
      "path": "14"
    },
    "10234": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        15913
      ],
      "op": "EQ",
      "path": "14"
    },
    "10235": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "10236": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        15913
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "10237": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        15913
      ],
      "op": "OR",
      "path": "14"
    },
    "10238": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        15913
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "10239": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2265"
    },
    "10242": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "10243": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "10244": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        15913
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "10245": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x281E"
    },
    "10248": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "10249": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        15913
      ],
      "op": "DIV",
      "path": "14"
    },
    "10250": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "10251": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "10252": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "10253": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        15913
      ],
      "op": "MUL",
      "path": "14"
    },
    "10254": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "10255": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "10256": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        15913
      ],
      "op": "DUP4",
      "path": "14"
    },
    "10257": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        15913
      ],
      "op": "DIV",
      "path": "14"
    },
    "10258": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        15913
      ],
      "op": "EQ",
      "path": "14"
    },
    "10259": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "10260": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        15913
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "10261": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        15913
      ],
      "op": "OR",
      "path": "14"
    },
    "10262": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        15913
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "10263": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2265"
    },
    "10266": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "10267": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        15913
      ],
      "op": "DIV",
      "path": "14"
    },
    "10268": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        1748,
        2384
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "10269": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "jump": "o",
      "offset": [
        1748,
        2384
      ],
      "op": "JUMP",
      "path": "15"
    },
    "10270": {
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "10271": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x4E487B71"
    },
    "10276": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "10278": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        15913
      ],
      "op": "SHL",
      "path": "14"
    },
    "10279": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10281": {
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "10282": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x12"
    },
    "10284": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "10286": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "10287": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "10289": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10291": {
      "fn": "UtilsMasterNode.calculateNewSupplyRates",
      "offset": [
        783,
        15913
      ],
      "op": "REVERT",
      "path": "14"
    },
    "10292": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        1797,
        1955
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "10293": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        1916,
        1923
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 71,
      "value": "0x0"
    },
    "10295": {
      "offset": [
        783,
        15913
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "10296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10300": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10302": {
      "op": "SHL"
    },
    "10303": {
      "op": "SUB"
    },
    "10304": {
      "offset": [
        783,
        15913
      ],
      "op": "AND",
      "path": "14"
    },
    "10305": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        1902,
        1912
      ],
      "op": "CALLER",
      "path": "9"
    },
    "10306": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        1902,
        1923
      ],
      "op": "SUB",
      "path": "9"
    },
    "10307": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2848"
    },
    "10310": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "10311": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "jump": "o",
      "offset": [
        1797,
        1955
      ],
      "op": "JUMP",
      "path": "9"
    },
    "10312": {
      "offset": [
        783,
        15913
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "10313": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "10315": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "10316": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10320": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10322": {
      "op": "SHL"
    },
    "10323": {
      "offset": [
        783,
        15913
      ],
      "op": "DUP2",
      "path": "14"
    },
    "10324": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "10325": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "10327": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "10329": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "10330": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "10331": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "10332": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x16"
    },
    "10334": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "10336": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "10337": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "10338": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "10339": {
      "op": "PUSH22",
      "value": "0x27B7363C9031B0B63630B1363290313C9037BBB732B9"
    },
    "10362": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "10364": {
      "op": "SHL"
    },
    "10365": {
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "10367": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "DUP3",
      "path": "14"
    },
    "10368": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "ADD",
      "path": "14"
    },
    "10369": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "10370": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "10372": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "10373": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15913
      ],
      "op": "REVERT",
      "path": "14"
    }
  },
  "sha1": "d5048becd59a00328ba1f1011f3f215da4a9c06a",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.19;\n\nimport {IRouterClient} from \"@chainlink/contracts/src/v0.8/ccip/interfaces/IRouterClient.sol\";\nimport {OwnerIsCreator} from \"@chainlink/contracts/src/v0.8/shared/access/OwnerIsCreator.sol\";\nimport {Client} from \"@chainlink/contracts/src/v0.8/ccip/libraries/Client.sol\";\nimport {CCIPReceiver} from \"@chainlink/contracts/src/v0.8/ccip/applications/CCIPReceiver.sol\";\n\nimport {LinkTokenInterface} from \"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol\";\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"./utils_node/UtilsMasterNode.sol\";\n\n// Node interface\nimport \"../interfaces/INode.sol\";\n\n/// @title - A simple messenger contract for transferring/receiving tokens and data across chains.\ncontract MasterNode is CCIPReceiver, OwnerIsCreator, ERC20, UtilsMasterNode {\n    // Custom errors to provide more descriptive revert messages.\n    error NotEnoughBalance(uint256 currentBalance, uint256 calculatedFees); // Used to make sure contract has enough balance to cover the fees.\n    error NothingToWithdraw(); // Used when trying to withdraw Ether but there's nothing to withdraw.\n    error FailedToWithdrawEth(address owner, address target, uint256 value); // Used when the withdrawal of Ether fails.\n    error DestinationNodeNotValid(address nodeAddress); // Used when the destination address has not been allowlisted by the contract owner.\n    error SourceChainNotAllowed(uint64 sourceChainSelector); // Used when the source chain has not been allowlisted by the contract owner.\n    error SenderNotAllowed(address sender); // Used when the sender has not been allowlisted by the contract owner.\n    error InvalidReceiverAddress(); // Used when the receiver address is 0.\n\n    bool public isProtocolInTestMode = true;\n\n    LinkTokenInterface private s_linkToken;\n    uint64 public immutable MASTER_CONTRACT_CHAIN_ID;\n    bool public allowMoreNodes = true;\n    address public lastActiveNode;\n    address public activeNode;\n    uint256 public lastTimeWarped;\n\n    struct ValidNodes {\n        bool isValidNode;\n        bool isActiveNode;\n        uint64 chainCCIPid;\n        uint256 lastDataFromAave;\n        uint256 totalUsdcSupply;\n        uint256 totalUsdcBorrow;\n        uint256 supplyRate;\n        uint256 totalAusdcNode;\n    }\n\n    mapping(address => ValidNodes) public validNodes;\n\n    constructor(\n        address _router,\n        address _link,\n        uint64 _MASTER_CONTRACT_CHAIN_ID\n    ) CCIPReceiver(_router) ERC20(\"WarpYield\", \"aWRP\") {\n        s_linkToken = LinkTokenInterface(_link);\n        MASTER_CONTRACT_CHAIN_ID = _MASTER_CONTRACT_CHAIN_ID;\n    }\n\n    modifier onlyValidNodes(address nodeAddress) {\n        if (!validNodes[nodeAddress].isValidNode) {\n            revert DestinationNodeNotValid(nodeAddress);\n        }\n        _;\n    }\n\n    modifier masterAndNodeInSameChain() {\n        require(\n            validNodes[msg.sender].chainCCIPid == MASTER_CONTRACT_CHAIN_ID,\n            \"Require master and node in same chain\"\n        );\n        _;\n    }\n\n    function stopAddingNodes() external onlyOwner {\n        allowMoreNodes = false;\n    }\n\n    function addValidNode(\n        address nodeAddress,\n        uint64 chainCCIPid,\n        bool isActiveNode\n    ) external onlyOwner {\n        require(allowMoreNodes, \"No more nodes allowed\");\n        validNodes[nodeAddress].isValidNode = true;\n        validNodes[nodeAddress].isActiveNode = isActiveNode;\n        validNodes[nodeAddress].chainCCIPid = chainCCIPid;\n\n        if (isActiveNode) {\n            lastActiveNode = nodeAddress;\n            activeNode = nodeAddress;\n        }\n    }\n\n    /////////////////////////////////////////////////////////////////////////\n    ////////////////////  INCOMING DEPOSIT => MINT aWRP  ///////////////////\n    ////////////////////////  COMMAND == 0  ///////////////////////////////\n    //////////////////////////////////////////////////////////////////////\n\n    function _aWarpTokenMinter(\n        Client.Any2EVMMessage memory _any2EvmMessage\n    ) internal {\n        (, address userAddress, uint256 shares) = abi.decode(\n            _any2EvmMessage.data,\n            (uint8, address, uint256)\n        );\n\n        _mint(userAddress, shares);\n    }\n\n    ///////////////////  DEPOSIT, MASTER AND NODE IN SAME CHAIN  /////////////////\n\n    function aWarpTokenMinterFromSameChain(\n        address userAddress,\n        uint256 shares\n    ) external masterAndNodeInSameChain onlyValidNodes(msg.sender) {\n        _mint(userAddress, shares);\n    }\n\n    /////////////////////////////////////////////////////////////////////////\n    //////////////////////  RESUME PROTOCOL OPERATIONS  ////////////////////\n    ////////////////////////  COMMAND == 1  ///////////////////////////////\n    //////////////////////////////////////////////////////////////////////\n\n    function _resmumeOperations(\n        Client.Any2EVMMessage memory _any2EvmMessage\n    ) internal {\n        validNodes[abi.decode(_any2EvmMessage.sender, (address))]\n            .isActiveNode = true;\n\n        activeNode = abi.decode(_any2EvmMessage.sender, (address));\n    }\n\n    ///////////  RESUME OPERATIONS, MASTER AND NODE IN SAME CHAIN  //////////\n\n    function _resmumeOperationsFromSameChain()\n        external\n        masterAndNodeInSameChain\n        onlyValidNodes(msg.sender)\n    {\n        validNodes[msg.sender].isActiveNode = true;\n        activeNode = msg.sender;\n    }\n\n    /////////////////////////////////////////////////////////////////////////\n    /////////////////////////  DATA AAVE FROM NODE  ////////////////////////\n    ////////////////////////  COMMAND == 2  ///////////////////////////////\n    //////////////////////////////////////////////////////////////////////\n\n    function _nodeAaveFeed(\n        Client.Any2EVMMessage memory _any2EvmMessage\n    ) internal {\n        (\n            ,\n            uint256 totalUsdcSupply,\n            uint256 totalUsdcBorrow,\n            uint256 supplyRate,\n            uint256 totalAusdcNode\n        ) = abi.decode(\n                _any2EvmMessage.data,\n                (uint8, uint256, uint256, uint256, uint256)\n            );\n\n        validNodes[abi.decode(_any2EvmMessage.sender, (address))]\n            .lastDataFromAave = block.timestamp;\n        validNodes[abi.decode(_any2EvmMessage.sender, (address))]\n            .totalUsdcSupply = totalUsdcSupply;\n        validNodes[abi.decode(_any2EvmMessage.sender, (address))]\n            .totalUsdcBorrow = totalUsdcBorrow;\n        validNodes[abi.decode(_any2EvmMessage.sender, (address))]\n            .supplyRate = supplyRate;\n        validNodes[abi.decode(_any2EvmMessage.sender, (address))]\n            .totalAusdcNode = totalAusdcNode;\n    }\n\n    ////////////////  DATA AAVE, MASTER AND NODE IN SAME CHAIN  //////////////\n\n    function nodeAaveFeedFromSameChain(\n        uint256 totalUsdcSupply,\n        uint256 totalUsdcBorrow,\n        uint256 supplyRate,\n        uint256 totalAusdcNode\n    ) external masterAndNodeInSameChain onlyValidNodes(msg.sender) {\n        validNodes[msg.sender].lastDataFromAave = block.timestamp;\n        validNodes[msg.sender].totalUsdcSupply = totalUsdcSupply;\n        validNodes[msg.sender].totalUsdcBorrow = totalUsdcBorrow;\n        validNodes[msg.sender].supplyRate = supplyRate;\n        validNodes[msg.sender].totalAusdcNode = totalAusdcNode;\n    }\n\n    //////////////////////////////////////////////////////////////////////////\n    /////////////////////////////////////////////////////////////////////////\n    ////////////////////////  INCOMING MESAGE HANDLER  /////////////////////\n    /////////////////  THIS FUNC IS CALLED BY CHAINLINK  //////////////////\n    //////////////////////////////////////////////////////////////////////\n    /////////////////////////////////////////////////////////////////////\n\n    function _ccipReceive(\n        Client.Any2EVMMessage memory _any2EvmMessage\n    )\n        internal\n        override\n        onlyValidNodes(abi.decode(_any2EvmMessage.sender, (address)))\n    {\n        uint8 command = _internalCommandRouter(_any2EvmMessage);\n        if (command == 0) {\n            _aWarpTokenMinter(_any2EvmMessage);\n        } else if (command == 1) {\n            _resmumeOperations(_any2EvmMessage);\n        } else if (command == 2) {\n            _nodeAaveFeed(_any2EvmMessage);\n        } else {\n            revert(\"invalid command from Node\");\n        }\n    }\n\n    /////////////////////////////////////////////////////////////////////////\n    ////////////////////////////////////////////////////////////////////////\n    ///////////////////////  OUTGOING MESAGES HANDLER  ////////////////////\n    //////////////////////////////////////////////////////////////////////\n    /////////////////////////////////////////////////////////////////////\n\n    function _sendMessage(\n        uint64 _destinationChainSelector,\n        address _receiver,\n        bytes memory _data\n    ) internal onlyValidNodes(_receiver) returns (bytes32 messageId) {\n        // Create an EVM2AnyMessage struct in memory with necessary information for sending a cross-chain message\n        // address(linkToken) means fees are paid in LINK\n        Client.EVM2AnyMessage memory evm2AnyMessage = _buildCCIPMessage(\n            _receiver,\n            _data,\n            address(s_linkToken)\n        );\n\n        // Initialize a router client instance to interact with cross-chain router\n        IRouterClient router = IRouterClient(this.getRouter());\n\n        // Get the fee required to send the CCIP message\n        uint256 fees = router.getFee(_destinationChainSelector, evm2AnyMessage);\n\n        require(\n            s_linkToken.transferFrom(msg.sender, address(this), fees),\n            \"Not provided Link for fees\"\n        );\n\n        if (fees > s_linkToken.balanceOf(address(this)))\n            revert NotEnoughBalance(s_linkToken.balanceOf(address(this)), fees);\n\n        // approve the Router to transfer LINK tokens on contract's behalf. It will spend the fees in LINK\n        s_linkToken.approve(address(router), fees);\n\n        // Send the message through the router and store the returned message ID\n        messageId = router.ccipSend(_destinationChainSelector, evm2AnyMessage);\n\n        // Return the message ID\n        return messageId;\n    }\n\n    /// @notice Construct a CCIP message.\n    /// @dev This function will create an EVM2AnyMessage struct with all the necessary information for programmable tokens transfer.\n    /// @param _receiver The address of the receiver.\n    /// @param _data The bytes data to be sent.\n    /// @param _feeTokenAddress The address of the token used for fees. Set address(0) for native gas.\n    /// @return Client.EVM2AnyMessage Returns an EVM2AnyMessage struct which contains information for sending a CCIP message.\n    function _buildCCIPMessage(\n        address _receiver,\n        bytes memory _data,\n        address _feeTokenAddress\n    ) private pure returns (Client.EVM2AnyMessage memory) {\n        return\n            Client.EVM2AnyMessage({\n                receiver: abi.encode(_receiver), // ABI-encoded receiver address\n                data: _data, // ABI-encoded string\n                tokenAmounts: new Client.EVMTokenAmount[](0), // The amount and type of token being transferred\n                extraArgs: Client._argsToBytes(\n                    // Additional arguments, setting gas limit\n                    Client.EVMExtraArgsV1({gasLimit: 2_000_000})\n                ),\n                // Set the feeToken to a feeTokenAddress, indicating specific asset will be used for fees\n                feeToken: _feeTokenAddress\n            });\n    }\n\n    /// @notice Fallback function to allow the contract to receive Ether.\n    /// @dev This function has no function body, making it a default function for receiving Ether.\n    /// It is automatically called when Ether is sent to the contract without any data.\n    receive() external payable {}\n\n    /////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////  WARP ASSETS  //////////////////////////\n    ///////////////////////////////////////////////////////////////////////\n\n    function warpAssets(\n        uint64 _destinationCCIPid,\n        address _destinationNodeAddress\n    ) external {\n        require(\n            validNodes[_destinationNodeAddress].isValidNode,\n            \"Destination Node is not vaild\"\n        );\n        // in test mode no requirements to warp assets\n        if (!isProtocolInTestMode) {\n            require(\n                checkApprovedWarp(activeNode, _destinationNodeAddress),\n                \"Condition to warp not met\"\n            );\n        }\n        uint8 commandWarpAssets = 1;\n\n        bytes memory data = abi.encode(\n            commandWarpAssets,\n            _destinationCCIPid,\n            _destinationNodeAddress\n        );\n        validNodes[activeNode].isActiveNode = false;\n\n        if (validNodes[activeNode].chainCCIPid == MASTER_CONTRACT_CHAIN_ID) {\n            INode(activeNode).warpAssetsFromSameChain(\n                _destinationCCIPid,\n                _destinationNodeAddress\n            );\n        } else {\n            _sendMessage(validNodes[activeNode].chainCCIPid, activeNode, data);\n        }\n\n        lastActiveNode = activeNode;\n        activeNode = address(0);\n        lastTimeWarped = block.timestamp;\n    }\n\n    /////////////////////////////////////////////////////////////////////////\n    /////////////////////////////  WITHDRAW  ///////////////////////////////\n    ///////////////////////////////////////////////////////////////////////\n\n    function withdraw(uint256 shares) external {\n        require(validNodes[activeNode].isActiveNode, \"Node is not Active\");\n\n        require(shares <= balanceOf(msg.sender), \"Not enought balance\");\n\n        uint8 commandWitdraw = 0;\n\n        bytes memory data = abi.encode(commandWitdraw, msg.sender, shares);\n\n        _burn(msg.sender, shares);\n\n        if (validNodes[activeNode].chainCCIPid == MASTER_CONTRACT_CHAIN_ID) {\n            INode(activeNode).withdrawFromSameChain(msg.sender, shares);\n        } else {\n            _sendMessage(validNodes[activeNode].chainCCIPid, activeNode, data);\n        }\n    }\n\n    /////////////////////////////////////////////////////////////////////////\n    /////////////////////////////   UTILS   ////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////\n\n    function checkApprovedWarp(\n        address _activeNode,\n        address destinationNode\n    ) public view returns (bool) {\n        //require 24 after last warp\n        uint256 newSupplyRate = calculateNewSupplyRates(\n            validNodes[destinationNode].totalUsdcSupply,\n            validNodes[destinationNode].totalUsdcBorrow,\n            validNodes[destinationNode].supplyRate,\n            validNodes[destinationNode].totalAusdcNode\n        );\n\n        return\n            lastTimeWarped + (3600 * 24) < block.timestamp &&\n            validNodes[_activeNode].isActiveNode == true &&\n            validNodes[_activeNode].lastDataFromAave > 0 &&\n            validNodes[destinationNode].lastDataFromAave > 0 &&\n            validNodes[_activeNode].lastDataFromAave + 3600 > block.timestamp &&\n            validNodes[destinationNode].lastDataFromAave + 3600 >\n            block.timestamp &&\n            validNodes[destinationNode].isValidNode == true &&\n            validNodes[destinationNode].isActiveNode == false &&\n            validNodes[_activeNode].supplyRate > 0 &&\n            validNodes[_activeNode].supplyRate < newSupplyRate;\n    }\n\n    // get ChainId from active node or last active node in case vault is warping, only for frontend, no impact in contract\n    function getChainIdFromActiveNode() external view returns (uint64) {\n        if (activeNode == address(0)) {\n            return validNodes[lastActiveNode].chainCCIPid;\n        }\n\n        return validNodes[activeNode].chainCCIPid;\n    }\n}\n",
  "sourceMap": "783:15130:14:-:0;;;;;;;;;;;;;-1:-1:-1;;783:15130:14;;;;-1:-1:-1;;;;;783:15130:14;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;783:15130:14;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;783:15130:14;;;;;;:::i;:::-;;;;-1:-1:-1;;;783:15130:14;;;;;-1:-1:-1;;;;;783:15130:14;;542:20:4;538:58;;602:21;;291:10:10;594:22:9;783:15130:14;;-1:-1:-1;783:15130:14;;-1:-1:-1;;;;;;783:15130:14;291:10:10;783:15130:14;;;;;-1:-1:-1;;;;;783:15130:14;;;;2042:13:0;783:15130:14;;;;;;;;;;;-1:-1:-1;783:15130:14;;;;;;;;;;;-1:-1:-1;783:15130:14;;;;;;;;;;;;;;;;-1:-1:-1;783:15130:14;;;;;;;;;;;;;;;;;;;2042:13:0;783:15130:14;;;;;-1:-1:-1;;;;;783:15130:14;;;;2065:17:0;783:15130:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;783:15130:14;;;;;;;;;;;;;;;;;;;2065:17:0;783:15130:14;;1806:4;783:15130;;-1:-1:-1;;;;;;783:15130:14;;;;;;-1:-1:-1;;;;;783:15130:14;;;;;;;;;;;;2599:52;783:15130;;;;;;;;602:21:4;783:15130:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;783:15130:14;;;;;2065:17:0;-1:-1:-1;783:15130:14;;;-1:-1:-1;;;;;;;;;;;783:15130:14;;;-1:-1:-1;;783:15130:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2065:17:0;783:15130:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2065:17:0;-1:-1:-1;783:15130:14;-1:-1:-1;;;;;;;;;;;783:15130:14;;;2042:13:0;783:15130:14;;;;;;;;;;;;2042:13:0;783:15130:14;;;;;;;;;;;;;-1:-1:-1;783:15130:14;;;;;;;;;-1:-1:-1;783:15130:14;;;;;;;;-1:-1:-1;783:15130:14;;;;;-1:-1:-1;783:15130:14;;;;;;;;;;;;-1:-1:-1;783:15130:14;;;;;-1:-1:-1;783:15130:14;;;;;-1:-1:-1;783:15130:14;;;;;;;;;;2042:13:0;-1:-1:-1;783:15130:14;;-1:-1:-1;783:15130:14;;-1:-1:-1;783:15130:14;;;;;;;;;;;;;;;;;;;;;;;2042:13:0;783:15130:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2042:13:0;-1:-1:-1;783:15130:14;;-1:-1:-1;783:15130:14;;;;2042:13:0;783:15130:14;;;;;;;;;;;;2042:13:0;783:15130:14;;;;;;;;;;;;;-1:-1:-1;783:15130:14;;;;;;;;;-1:-1:-1;783:15130:14;;;;;;;;;;;;;;-1:-1:-1;;;783:15130:14;;;;;;;;;;;;;;;;;;;;538:58:4;783:15130:14;;-1:-1:-1;;;571:25:4;;-1:-1:-1;783:15130:14;571:25:4;;783:15130:14;;;571:25:4;783:15130:14;-1:-1:-1;783:15130:14;;;;;;;;;;-1:-1:-1;;;;;783:15130:14;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;783:15130:14;;;;;;:::o",
  "sourcePath": "contracts/MasterNode.sol",
  "type": "contract"
}