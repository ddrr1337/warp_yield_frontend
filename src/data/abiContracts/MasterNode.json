{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_router",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_link",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "_MASTER_CONTRACT_CHAIN_ID",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nodeAddress",
          "type": "address"
        }
      ],
      "name": "DestinationNodeNotValid",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "FailedToWithdrawEth",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidReceiverAddress",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "router",
          "type": "address"
        }
      ],
      "name": "InvalidRouter",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "currentBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "calculatedFees",
          "type": "uint256"
        }
      ],
      "name": "NotEnoughBalance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NothingToWithdraw",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "SenderNotAllowed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "sourceChainSelector",
          "type": "uint64"
        }
      ],
      "name": "SourceChainNotAllowed",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferRequested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MASTER_CONTRACT_CHAIN_ID",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_resmumeOperationsFromSameChain",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "aWarpTokenMinterFromSameChain",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "activeNode",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nodeAddress",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "chainCCIPid",
          "type": "uint64"
        },
        {
          "internalType": "bool",
          "name": "isActiveNode",
          "type": "bool"
        }
      ],
      "name": "addValidNode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allowMoreNodes",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "messageId",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "sourceChainSelector",
              "type": "uint64"
            },
            {
              "internalType": "bytes",
              "name": "sender",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Client.EVMTokenAmount[]",
              "name": "destTokenAmounts",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Client.Any2EVMMessage",
          "name": "message",
          "type": "tuple"
        }
      ],
      "name": "ccipReceive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_activeNode",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "destinationNode",
          "type": "address"
        }
      ],
      "name": "checkApprovedWarp",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getChainIdFromActiveNode",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "destinationCCIPid",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "s_linkTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "routerAddress",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "getLinkFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRouter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastActiveNode",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastTimeWarped",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "totalUsdcSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalUsdcBorrow",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "supplyRate",
          "type": "uint256"
        }
      ],
      "name": "nodeAaveFeedFromSameChain",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stopAddingNodes",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "validNodes",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isValidNode",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isActiveNode",
          "type": "bool"
        },
        {
          "internalType": "uint64",
          "name": "chainCCIPid",
          "type": "uint64"
        },
        {
          "internalType": "uint256",
          "name": "lastDataFromAave",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalUsdcSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalUsdcBorrow",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "supplyRate",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "_destinationCCIPid",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "_destinationNodeAddress",
          "type": "address"
        }
      ],
      "name": "warpAssets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/incae/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.3/contracts/token/ERC20/ERC20.sol",
    "1": "C:/Users/incae/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.3/contracts/token/ERC20/IERC20.sol",
    "10": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/shared/access/OwnerIsCreator.sol",
    "11": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/shared/interfaces/IOwnable.sol",
    "12": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol",
    "13": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/vendor/openzeppelin-solidity/v4.8.3/contracts/utils/introspection/IERC165.sol",
    "14": "contracts/MasterNode.sol",
    "15": "contracts/utils_node/UtilsMasterNode.sol",
    "16": "interfaces/INode.sol",
    "2": "C:/Users/incae/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.3/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "3": "C:/Users/incae/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.3/contracts/utils/Context.sol",
    "4": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/ccip/applications/CCIPReceiver.sol",
    "5": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol",
    "6": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/ccip/interfaces/IRouterClient.sol",
    "7": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/ccip/libraries/Client.sol",
    "8": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/shared/access/ConfirmedOwner.sol",
    "9": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol"
  },
  "ast": {
    "absolutePath": "contracts/MasterNode.sol",
    "exportedSymbols": {
      "CCIPReceiver": [
        1597
      ],
      "Client": [
        1704
      ],
      "Context": [
        2047
      ],
      "ERC20": [
        1477
      ],
      "IERC20": [
        2000
      ],
      "IERC20Metadata": [
        2025
      ],
      "INode": [
        1922
      ],
      "IRouterClient": [
        1649
      ],
      "LinkTokenInterface": [
        1815
      ],
      "MasterNode": [
        890
      ],
      "OwnerIsCreator": [
        1720
      ],
      "UtilsMasterNode": [
        1905
      ]
    },
    "id": 891,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:14"
      },
      {
        "absolutePath": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/ccip/interfaces/IRouterClient.sol",
        "file": "@chainlink/contracts/src/v0.8/ccip/interfaces/IRouterClient.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 891,
        "sourceUnit": 1650,
        "src": "57:94:14",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2,
              "name": "IRouterClient",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1649,
              "src": "65:13:14",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/shared/access/OwnerIsCreator.sol",
        "file": "@chainlink/contracts/src/v0.8/shared/access/OwnerIsCreator.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 891,
        "sourceUnit": 1721,
        "src": "152:94:14",
        "symbolAliases": [
          {
            "foreign": {
              "id": 4,
              "name": "OwnerIsCreator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1720,
              "src": "160:14:14",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/ccip/libraries/Client.sol",
        "file": "@chainlink/contracts/src/v0.8/ccip/libraries/Client.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 891,
        "sourceUnit": 1705,
        "src": "247:79:14",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6,
              "name": "Client",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1704,
              "src": "255:6:14",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/ccip/applications/CCIPReceiver.sol",
        "file": "@chainlink/contracts/src/v0.8/ccip/applications/CCIPReceiver.sol",
        "id": 9,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 891,
        "sourceUnit": 1598,
        "src": "327:94:14",
        "symbolAliases": [
          {
            "foreign": {
              "id": 8,
              "name": "CCIPReceiver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1597,
              "src": "335:12:14",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol",
        "file": "@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol",
        "id": 11,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 891,
        "sourceUnit": 1816,
        "src": "423:106:14",
        "symbolAliases": [
          {
            "foreign": {
              "id": 10,
              "name": "LinkTokenInterface",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1815,
              "src": "431:18:14",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/incae/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.3/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 12,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 891,
        "sourceUnit": 1478,
        "src": "531:55:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/utils_node/UtilsMasterNode.sol",
        "file": "./utils_node/UtilsMasterNode.sol",
        "id": 13,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 891,
        "sourceUnit": 1906,
        "src": "587:42:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/INode.sol",
        "file": "../interfaces/INode.sol",
        "id": 14,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 891,
        "sourceUnit": 1923,
        "src": "649:33:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 16,
              "name": "CCIPReceiver",
              "nameLocations": [
                "806:12:14"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1597,
              "src": "806:12:14"
            },
            "id": 17,
            "nodeType": "InheritanceSpecifier",
            "src": "806:12:14"
          },
          {
            "baseName": {
              "id": 18,
              "name": "OwnerIsCreator",
              "nameLocations": [
                "820:14:14"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1720,
              "src": "820:14:14"
            },
            "id": 19,
            "nodeType": "InheritanceSpecifier",
            "src": "820:14:14"
          },
          {
            "baseName": {
              "id": 20,
              "name": "ERC20",
              "nameLocations": [
                "836:5:14"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1477,
              "src": "836:5:14"
            },
            "id": 21,
            "nodeType": "InheritanceSpecifier",
            "src": "836:5:14"
          },
          {
            "baseName": {
              "id": 22,
              "name": "UtilsMasterNode",
              "nameLocations": [
                "843:15:14"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1905,
              "src": "843:15:14"
            },
            "id": 23,
            "nodeType": "InheritanceSpecifier",
            "src": "843:15:14"
          }
        ],
        "canonicalName": "MasterNode",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 15,
          "nodeType": "StructuredDocumentation",
          "src": "684:99:14",
          "text": "@title - A simple messenger contract for transferring/receiving tokens and data across chains."
        },
        "fullyImplemented": true,
        "id": 890,
        "linearizedBaseContracts": [
          890,
          1905,
          1477,
          2025,
          2000,
          2047,
          1720,
          2093,
          2256,
          2272,
          1597,
          2072,
          2060
        ],
        "name": "MasterNode",
        "nameLocation": "792:10:14",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "errorSelector": "8f0f4206",
            "id": 29,
            "name": "NotEnoughBalance",
            "nameLocation": "937:16:14",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25,
                  "mutability": "mutable",
                  "name": "currentBalance",
                  "nameLocation": "962:14:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "954:22:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "954:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27,
                  "mutability": "mutable",
                  "name": "calculatedFees",
                  "nameLocation": "986:14:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "978:22:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "978:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "953:48:14"
            },
            "src": "931:71:14"
          },
          {
            "errorSelector": "d0d04f60",
            "id": 31,
            "name": "NothingToWithdraw",
            "nameLocation": "1081:17:14",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1098:2:14"
            },
            "src": "1075:26:14"
          },
          {
            "errorSelector": "9d11f563",
            "id": 39,
            "name": "FailedToWithdrawEth",
            "nameLocation": "1183:19:14",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1211:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "1203:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1203:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "1226:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "1218:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1218:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1242:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "1234:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1234:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1202:46:14"
            },
            "src": "1177:72:14"
          },
          {
            "errorSelector": "d53fef3e",
            "id": 43,
            "name": "DestinationNodeNotValid",
            "nameLocation": "1304:23:14",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41,
                  "mutability": "mutable",
                  "name": "nodeAddress",
                  "nameLocation": "1336:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "1328:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1328:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1327:21:14"
            },
            "src": "1298:51:14"
          },
          {
            "errorSelector": "213c2678",
            "id": 47,
            "name": "SourceChainNotAllowed",
            "nameLocation": "1445:21:14",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45,
                  "mutability": "mutable",
                  "name": "sourceChainSelector",
                  "nameLocation": "1474:19:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "1467:26:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1467:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1466:28:14"
            },
            "src": "1439:56:14"
          },
          {
            "errorSelector": "d0d25976",
            "id": 51,
            "name": "SenderNotAllowed",
            "nameLocation": "1584:16:14",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1609:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "1601:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1601:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1600:16:14"
            },
            "src": "1578:39:14"
          },
          {
            "errorSelector": "a05ff47e",
            "id": 53,
            "name": "InvalidReceiverAddress",
            "nameLocation": "1700:22:14",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1722:2:14"
            },
            "src": "1694:31:14"
          },
          {
            "constant": false,
            "id": 56,
            "mutability": "mutable",
            "name": "s_linkToken",
            "nameLocation": "1798:11:14",
            "nodeType": "VariableDeclaration",
            "scope": 890,
            "src": "1771:38:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LinkTokenInterface_$1815",
              "typeString": "contract LinkTokenInterface"
            },
            "typeName": {
              "id": 55,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 54,
                "name": "LinkTokenInterface",
                "nameLocations": [
                  "1771:18:14"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1815,
                "src": "1771:18:14"
              },
              "referencedDeclaration": 1815,
              "src": "1771:18:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LinkTokenInterface_$1815",
                "typeString": "contract LinkTokenInterface"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "8cf19d19",
            "id": 58,
            "mutability": "immutable",
            "name": "MASTER_CONTRACT_CHAIN_ID",
            "nameLocation": "1840:24:14",
            "nodeType": "VariableDeclaration",
            "scope": 890,
            "src": "1816:48:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 57,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "1816:6:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "MasterNode.ValidNodes",
            "id": 73,
            "members": [
              {
                "constant": false,
                "id": 60,
                "mutability": "mutable",
                "name": "isValidNode",
                "nameLocation": "1904:11:14",
                "nodeType": "VariableDeclaration",
                "scope": 73,
                "src": "1899:16:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 59,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1899:4:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 62,
                "mutability": "mutable",
                "name": "isActiveNode",
                "nameLocation": "1930:12:14",
                "nodeType": "VariableDeclaration",
                "scope": 73,
                "src": "1925:17:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 61,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1925:4:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 64,
                "mutability": "mutable",
                "name": "chainCCIPid",
                "nameLocation": "1959:11:14",
                "nodeType": "VariableDeclaration",
                "scope": 73,
                "src": "1952:18:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 63,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "1952:6:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 66,
                "mutability": "mutable",
                "name": "lastDataFromAave",
                "nameLocation": "1988:16:14",
                "nodeType": "VariableDeclaration",
                "scope": 73,
                "src": "1980:24:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 65,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1980:7:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 68,
                "mutability": "mutable",
                "name": "totalUsdcSupply",
                "nameLocation": "2022:15:14",
                "nodeType": "VariableDeclaration",
                "scope": 73,
                "src": "2014:23:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 67,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2014:7:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 70,
                "mutability": "mutable",
                "name": "totalUsdcBorrow",
                "nameLocation": "2055:15:14",
                "nodeType": "VariableDeclaration",
                "scope": 73,
                "src": "2047:23:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 69,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2047:7:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 72,
                "mutability": "mutable",
                "name": "supplyRate",
                "nameLocation": "2088:10:14",
                "nodeType": "VariableDeclaration",
                "scope": 73,
                "src": "2080:18:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 71,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2080:7:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ValidNodes",
            "nameLocation": "1878:10:14",
            "nodeType": "StructDefinition",
            "scope": 890,
            "src": "1871:234:14",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b2d92955",
            "id": 78,
            "mutability": "mutable",
            "name": "validNodes",
            "nameLocation": "2149:10:14",
            "nodeType": "VariableDeclaration",
            "scope": 890,
            "src": "2111:48:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
              "typeString": "mapping(address => struct MasterNode.ValidNodes)"
            },
            "typeName": {
              "id": 77,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 74,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2119:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2111:30:14",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                "typeString": "mapping(address => struct MasterNode.ValidNodes)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 76,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 75,
                  "name": "ValidNodes",
                  "nameLocations": [
                    "2130:10:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 73,
                  "src": "2130:10:14"
                },
                "referencedDeclaration": 73,
                "src": "2130:10:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ValidNodes_$73_storage_ptr",
                  "typeString": "struct MasterNode.ValidNodes"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "654e8e0c",
            "id": 81,
            "mutability": "mutable",
            "name": "allowMoreNodes",
            "nameLocation": "2178:14:14",
            "nodeType": "VariableDeclaration",
            "scope": 890,
            "src": "2166:33:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 79,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2166:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "74727565",
              "id": 80,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2195:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "true"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "61ac3f99",
            "id": 83,
            "mutability": "mutable",
            "name": "lastActiveNode",
            "nameLocation": "2220:14:14",
            "nodeType": "VariableDeclaration",
            "scope": 890,
            "src": "2205:29:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 82,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2205:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6c1dc077",
            "id": 85,
            "mutability": "mutable",
            "name": "activeNode",
            "nameLocation": "2255:10:14",
            "nodeType": "VariableDeclaration",
            "scope": 890,
            "src": "2240:25:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 84,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2240:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e12b948b",
            "id": 87,
            "mutability": "mutable",
            "name": "lastTimeWarped",
            "nameLocation": "2286:14:14",
            "nodeType": "VariableDeclaration",
            "scope": 890,
            "src": "2271:29:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 86,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2271:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 114,
              "nodeType": "Block",
              "src": "2656:118:14",
              "statements": [
                {
                  "expression": {
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 104,
                      "name": "s_linkToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "2666:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LinkTokenInterface_$1815",
                        "typeString": "contract LinkTokenInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 106,
                          "name": "_link",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92,
                          "src": "2699:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 105,
                        "name": "LinkTokenInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1815,
                        "src": "2680:18:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LinkTokenInterface_$1815_$",
                          "typeString": "type(contract LinkTokenInterface)"
                        }
                      },
                      "id": 107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2680:25:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LinkTokenInterface_$1815",
                        "typeString": "contract LinkTokenInterface"
                      }
                    },
                    "src": "2666:39:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LinkTokenInterface_$1815",
                      "typeString": "contract LinkTokenInterface"
                    }
                  },
                  "id": 109,
                  "nodeType": "ExpressionStatement",
                  "src": "2666:39:14"
                },
                {
                  "expression": {
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 110,
                      "name": "MASTER_CONTRACT_CHAIN_ID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58,
                      "src": "2715:24:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 111,
                      "name": "_MASTER_CONTRACT_CHAIN_ID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "2742:25:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "2715:52:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 113,
                  "nodeType": "ExpressionStatement",
                  "src": "2715:52:14"
                }
              ]
            },
            "documentation": {
              "id": 88,
              "nodeType": "StructuredDocumentation",
              "src": "2307:187:14",
              "text": "@notice Constructor initializes the contract with the router address.\n @param _router The address of the router contract.\n @param _link The address of the link contract."
            },
            "id": 115,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 97,
                    "name": "_router",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 90,
                    "src": "2620:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 98,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 96,
                  "name": "CCIPReceiver",
                  "nameLocations": [
                    "2607:12:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1597,
                  "src": "2607:12:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "2607:21:14"
              },
              {
                "arguments": [
                  {
                    "hexValue": "576172705969656c64",
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2635:11:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6e5bd3a7f1ed96a77cd5f67b9871f9bbaf8246a034059514102ca756c979a0ad",
                      "typeString": "literal_string \"WarpYield\""
                    },
                    "value": "WarpYield"
                  },
                  {
                    "hexValue": "61575250",
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2648:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_5c2aa465d21b20af1889df7f97d25d68ec9b8540df778db221765393d1ff7929",
                      "typeString": "literal_string \"aWRP\""
                    },
                    "value": "aWRP"
                  }
                ],
                "id": 102,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 99,
                  "name": "ERC20",
                  "nameLocations": [
                    "2629:5:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1477,
                  "src": "2629:5:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "2629:26:14"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 90,
                  "mutability": "mutable",
                  "name": "_router",
                  "nameLocation": "2528:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 115,
                  "src": "2520:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2520:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92,
                  "mutability": "mutable",
                  "name": "_link",
                  "nameLocation": "2553:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 115,
                  "src": "2545:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2545:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 94,
                  "mutability": "mutable",
                  "name": "_MASTER_CONTRACT_CHAIN_ID",
                  "nameLocation": "2575:25:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 115,
                  "src": "2568:32:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2568:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2510:96:14"
            },
            "returnParameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2656:0:14"
            },
            "scope": 890,
            "src": "2499:275:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 131,
              "nodeType": "Block",
              "src": "2825:137:14",
              "statements": [
                {
                  "condition": {
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2839:36:14",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 119,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "2840:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 121,
                        "indexExpression": {
                          "id": 120,
                          "name": "nodeAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 117,
                          "src": "2851:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2840:23:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 122,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2864:11:14",
                      "memberName": "isValidNode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60,
                      "src": "2840:35:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 129,
                  "nodeType": "IfStatement",
                  "src": "2835:110:14",
                  "trueBody": {
                    "id": 128,
                    "nodeType": "Block",
                    "src": "2877:68:14",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 125,
                              "name": "nodeAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 117,
                              "src": "2922:11:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 124,
                            "name": "DestinationNodeNotValid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "2898:23:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                              "typeString": "function (address) pure"
                            }
                          },
                          "id": 126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2898:36:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 127,
                        "nodeType": "RevertStatement",
                        "src": "2891:43:14"
                      }
                    ]
                  }
                },
                {
                  "id": 130,
                  "nodeType": "PlaceholderStatement",
                  "src": "2954:1:14"
                }
              ]
            },
            "id": 132,
            "name": "onlyValidNodes",
            "nameLocation": "2789:14:14",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 117,
                  "mutability": "mutable",
                  "name": "nodeAddress",
                  "nameLocation": "2812:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 132,
                  "src": "2804:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 116,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2804:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2803:21:14"
            },
            "src": "2780:182:14",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 146,
              "nodeType": "Block",
              "src": "3004:174:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 135,
                              "name": "validNodes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78,
                              "src": "3035:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                                "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                              }
                            },
                            "id": 138,
                            "indexExpression": {
                              "expression": {
                                "id": 136,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3046:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 137,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3050:6:14",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3046:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3035:22:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                              "typeString": "struct MasterNode.ValidNodes storage ref"
                            }
                          },
                          "id": 139,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3058:11:14",
                          "memberName": "chainCCIPid",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 64,
                          "src": "3035:34:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 140,
                          "name": "MASTER_CONTRACT_CHAIN_ID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58,
                          "src": "3073:24:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "3035:62:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52657175697265206d617374657220616e64206e6f646520696e2073616d6520636861696e",
                        "id": 142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3111:39:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5f03148fc98866fc88ba0b74aa8942ff4bdb75490412a503e1b1f86ebc254af6",
                          "typeString": "literal_string \"Require master and node in same chain\""
                        },
                        "value": "Require master and node in same chain"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5f03148fc98866fc88ba0b74aa8942ff4bdb75490412a503e1b1f86ebc254af6",
                          "typeString": "literal_string \"Require master and node in same chain\""
                        }
                      ],
                      "id": 134,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3014:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3014:146:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 144,
                  "nodeType": "ExpressionStatement",
                  "src": "3014:146:14"
                },
                {
                  "id": 145,
                  "nodeType": "PlaceholderStatement",
                  "src": "3170:1:14"
                }
              ]
            },
            "id": 147,
            "name": "masterAndNodeInSameChain",
            "nameLocation": "2977:24:14",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 133,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3001:2:14"
            },
            "src": "2968:210:14",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 156,
              "nodeType": "Block",
              "src": "3230:39:14",
              "statements": [
                {
                  "expression": {
                    "id": 154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 152,
                      "name": "allowMoreNodes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81,
                      "src": "3240:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3257:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3240:22:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 155,
                  "nodeType": "ExpressionStatement",
                  "src": "3240:22:14"
                }
              ]
            },
            "functionSelector": "6c98d513",
            "id": 157,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 150,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 149,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3220:9:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2255,
                  "src": "3220:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "3220:9:14"
              }
            ],
            "name": "stopAddingNodes",
            "nameLocation": "3193:15:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3208:2:14"
            },
            "returnParameters": {
              "id": 151,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3230:0:14"
            },
            "scope": 890,
            "src": "3184:85:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 205,
              "nodeType": "Block",
              "src": "3406:356:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 169,
                        "name": "allowMoreNodes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "3424:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f206d6f7265206e6f64657320616c6c6f776564",
                        "id": 170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3440:23:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_14986cb525690d9998a9e460f0aca8b42b9aa5faddc27699fe8d3c65ad4113cd",
                          "typeString": "literal_string \"No more nodes allowed\""
                        },
                        "value": "No more nodes allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_14986cb525690d9998a9e460f0aca8b42b9aa5faddc27699fe8d3c65ad4113cd",
                          "typeString": "literal_string \"No more nodes allowed\""
                        }
                      ],
                      "id": 168,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3416:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3416:48:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 172,
                  "nodeType": "ExpressionStatement",
                  "src": "3416:48:14"
                },
                {
                  "expression": {
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 173,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "3474:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 175,
                        "indexExpression": {
                          "id": 174,
                          "name": "nodeAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 159,
                          "src": "3485:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3474:23:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 176,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3498:11:14",
                      "memberName": "isValidNode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60,
                      "src": "3474:35:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3512:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3474:42:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 179,
                  "nodeType": "ExpressionStatement",
                  "src": "3474:42:14"
                },
                {
                  "expression": {
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 180,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "3526:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 182,
                        "indexExpression": {
                          "id": 181,
                          "name": "nodeAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 159,
                          "src": "3537:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3526:23:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 183,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3550:12:14",
                      "memberName": "isActiveNode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 62,
                      "src": "3526:36:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 184,
                      "name": "isActiveNode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 163,
                      "src": "3565:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3526:51:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 186,
                  "nodeType": "ExpressionStatement",
                  "src": "3526:51:14"
                },
                {
                  "expression": {
                    "id": 192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 187,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "3587:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 189,
                        "indexExpression": {
                          "id": 188,
                          "name": "nodeAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 159,
                          "src": "3598:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3587:23:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 190,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3611:11:14",
                      "memberName": "chainCCIPid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64,
                      "src": "3587:35:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 191,
                      "name": "chainCCIPid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 161,
                      "src": "3625:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "3587:49:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 193,
                  "nodeType": "ExpressionStatement",
                  "src": "3587:49:14"
                },
                {
                  "condition": {
                    "id": 194,
                    "name": "isActiveNode",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 163,
                    "src": "3651:12:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 204,
                  "nodeType": "IfStatement",
                  "src": "3647:109:14",
                  "trueBody": {
                    "id": 203,
                    "nodeType": "Block",
                    "src": "3665:91:14",
                    "statements": [
                      {
                        "expression": {
                          "id": 197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 195,
                            "name": "lastActiveNode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83,
                            "src": "3679:14:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 196,
                            "name": "nodeAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 159,
                            "src": "3696:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3679:28:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 198,
                        "nodeType": "ExpressionStatement",
                        "src": "3679:28:14"
                      },
                      {
                        "expression": {
                          "id": 201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 199,
                            "name": "activeNode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85,
                            "src": "3721:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 200,
                            "name": "nodeAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 159,
                            "src": "3734:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3721:24:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 202,
                        "nodeType": "ExpressionStatement",
                        "src": "3721:24:14"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "10a78df8",
            "id": 206,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 166,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 165,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3396:9:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2255,
                  "src": "3396:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "3396:9:14"
              }
            ],
            "name": "addValidNode",
            "nameLocation": "3284:12:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 159,
                  "mutability": "mutable",
                  "name": "nodeAddress",
                  "nameLocation": "3314:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 206,
                  "src": "3306:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 158,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3306:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 161,
                  "mutability": "mutable",
                  "name": "chainCCIPid",
                  "nameLocation": "3342:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 206,
                  "src": "3335:18:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "3335:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 163,
                  "mutability": "mutable",
                  "name": "isActiveNode",
                  "nameLocation": "3368:12:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 206,
                  "src": "3363:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3363:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3296:90:14"
            },
            "returnParameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3406:0:14"
            },
            "scope": 890,
            "src": "3275:487:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 234,
              "nodeType": "Block",
              "src": "4171:189:14",
              "statements": [
                {
                  "assignments": [
                    null,
                    213,
                    215
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 213,
                      "mutability": "mutable",
                      "name": "userAddress",
                      "nameLocation": "4192:11:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 234,
                      "src": "4184:19:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 212,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4184:7:14",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 215,
                      "mutability": "mutable",
                      "name": "shares",
                      "nameLocation": "4213:6:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 234,
                      "src": "4205:14:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 214,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4205:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 228,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 218,
                          "name": "_any2EvmMessage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 209,
                          "src": "4247:15:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Any2EVMMessage_$1669_memory_ptr",
                            "typeString": "struct Client.Any2EVMMessage memory"
                          }
                        },
                        "id": 219,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4263:4:14",
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1664,
                        "src": "4247:20:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 221,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4282:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": {
                              "id": 220,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "4282:5:14",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 223,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4289:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 222,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4289:7:14",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 225,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4298:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 224,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4298:7:14",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 226,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "4281:25:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint8_$_$_t_type$_t_address_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(uint8),type(address),type(uint256))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint8_$_$_t_type$_t_address_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(uint8),type(address),type(uint256))"
                        }
                      ],
                      "expression": {
                        "id": 216,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "4223:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "4227:6:14",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "4223:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4223:93:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_address_payable_$_t_uint256_$",
                      "typeString": "tuple(uint8,address payable,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4181:135:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 230,
                        "name": "userAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 213,
                        "src": "4333:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 231,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 215,
                        "src": "4346:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 229,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1294,
                      "src": "4327:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4327:26:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 233,
                  "nodeType": "ExpressionStatement",
                  "src": "4327:26:14"
                }
              ]
            },
            "id": 235,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_aWarpTokenMinter",
            "nameLocation": "4084:17:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 210,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 209,
                  "mutability": "mutable",
                  "name": "_any2EvmMessage",
                  "nameLocation": "4140:15:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 235,
                  "src": "4111:44:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Any2EVMMessage_$1669_memory_ptr",
                    "typeString": "struct Client.Any2EVMMessage"
                  },
                  "typeName": {
                    "id": 208,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 207,
                      "name": "Client.Any2EVMMessage",
                      "nameLocations": [
                        "4111:6:14",
                        "4118:14:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1669,
                      "src": "4111:21:14"
                    },
                    "referencedDeclaration": 1669,
                    "src": "4111:21:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Any2EVMMessage_$1669_storage_ptr",
                      "typeString": "struct Client.Any2EVMMessage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4101:60:14"
            },
            "returnParameters": {
              "id": 211,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4171:0:14"
            },
            "scope": 890,
            "src": "4075:285:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 253,
              "nodeType": "Block",
              "src": "4609:43:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 249,
                        "name": "userAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 237,
                        "src": "4625:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 250,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 239,
                        "src": "4638:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 248,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1294,
                      "src": "4619:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4619:26:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 252,
                  "nodeType": "ExpressionStatement",
                  "src": "4619:26:14"
                }
              ]
            },
            "functionSelector": "04783ea4",
            "id": 254,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 242,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 241,
                  "name": "masterAndNodeInSameChain",
                  "nameLocations": [
                    "4557:24:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 147,
                  "src": "4557:24:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "4557:24:14"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 244,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "4597:3:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4601:6:14",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "4597:10:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 246,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 243,
                  "name": "onlyValidNodes",
                  "nameLocations": [
                    "4582:14:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 132,
                  "src": "4582:14:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "4582:26:14"
              }
            ],
            "name": "aWarpTokenMinterFromSameChain",
            "nameLocation": "4459:29:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 240,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 237,
                  "mutability": "mutable",
                  "name": "userAddress",
                  "nameLocation": "4506:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 254,
                  "src": "4498:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 236,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4498:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 239,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "4535:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 254,
                  "src": "4527:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 238,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4527:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4488:59:14"
            },
            "returnParameters": {
              "id": 247,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4609:0:14"
            },
            "scope": 890,
            "src": "4450:202:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 285,
              "nodeType": "Block",
              "src": "5062:176:14",
              "statements": [
                {
                  "expression": {
                    "id": 272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 260,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "5072:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 269,
                        "indexExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 263,
                                "name": "_any2EvmMessage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 257,
                                "src": "5094:15:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Any2EVMMessage_$1669_memory_ptr",
                                  "typeString": "struct Client.Any2EVMMessage memory"
                                }
                              },
                              "id": 264,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5110:6:14",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1662,
                              "src": "5094:22:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 266,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5119:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 265,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5119:7:14",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 267,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5118:9:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            ],
                            "expression": {
                              "id": 261,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "5083:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 262,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "5087:6:14",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "5083:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5083:45:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5072:57:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 270,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "5143:12:14",
                      "memberName": "isActiveNode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 62,
                      "src": "5072:83:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5158:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5072:90:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 273,
                  "nodeType": "ExpressionStatement",
                  "src": "5072:90:14"
                },
                {
                  "expression": {
                    "id": 283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 274,
                      "name": "activeNode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85,
                      "src": "5173:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 277,
                            "name": "_any2EvmMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 257,
                            "src": "5197:15:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Any2EVMMessage_$1669_memory_ptr",
                              "typeString": "struct Client.Any2EVMMessage memory"
                            }
                          },
                          "id": 278,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5213:6:14",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1662,
                          "src": "5197:22:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "components": [
                            {
                              "id": 280,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5222:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 279,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5222:7:14",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "id": 281,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "5221:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          }
                        ],
                        "expression": {
                          "id": 275,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "5186:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "5190:6:14",
                        "memberName": "decode",
                        "nodeType": "MemberAccess",
                        "src": "5186:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5186:45:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "5173:58:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 284,
                  "nodeType": "ExpressionStatement",
                  "src": "5173:58:14"
                }
              ]
            },
            "id": 286,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_resmumeOperations",
            "nameLocation": "4974:18:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 257,
                  "mutability": "mutable",
                  "name": "_any2EvmMessage",
                  "nameLocation": "5031:15:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 286,
                  "src": "5002:44:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Any2EVMMessage_$1669_memory_ptr",
                    "typeString": "struct Client.Any2EVMMessage"
                  },
                  "typeName": {
                    "id": 256,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 255,
                      "name": "Client.Any2EVMMessage",
                      "nameLocations": [
                        "5002:6:14",
                        "5009:14:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1669,
                      "src": "5002:21:14"
                    },
                    "referencedDeclaration": 1669,
                    "src": "5002:21:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Any2EVMMessage_$1669_storage_ptr",
                      "typeString": "struct Client.Any2EVMMessage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4992:60:14"
            },
            "returnParameters": {
              "id": 259,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5062:0:14"
            },
            "scope": 890,
            "src": "4965:273:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 308,
              "nodeType": "Block",
              "src": "5455:92:14",
              "statements": [
                {
                  "expression": {
                    "id": 301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 295,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "5465:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 298,
                        "indexExpression": {
                          "expression": {
                            "id": 296,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5476:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5480:6:14",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5476:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5465:22:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 299,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "5488:12:14",
                      "memberName": "isActiveNode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 62,
                      "src": "5465:35:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5503:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5465:42:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 302,
                  "nodeType": "ExpressionStatement",
                  "src": "5465:42:14"
                },
                {
                  "expression": {
                    "id": 306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 303,
                      "name": "activeNode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85,
                      "src": "5517:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 304,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "5530:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5534:6:14",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5530:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5517:23:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 307,
                  "nodeType": "ExpressionStatement",
                  "src": "5517:23:14"
                }
              ]
            },
            "functionSelector": "995714ae",
            "id": 309,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 289,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 288,
                  "name": "masterAndNodeInSameChain",
                  "nameLocations": [
                    "5391:24:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 147,
                  "src": "5391:24:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "5391:24:14"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 291,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "5439:3:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "5443:6:14",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "5439:10:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 293,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 290,
                  "name": "onlyValidNodes",
                  "nameLocations": [
                    "5424:14:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 132,
                  "src": "5424:14:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "5424:26:14"
              }
            ],
            "name": "_resmumeOperationsFromSameChain",
            "nameLocation": "5332:31:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 287,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5363:2:14"
            },
            "returnParameters": {
              "id": 294,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5455:0:14"
            },
            "scope": 890,
            "src": "5323:224:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 393,
              "nodeType": "Block",
              "src": "5952:712:14",
              "statements": [
                {
                  "assignments": [
                    null,
                    316,
                    318,
                    320
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 316,
                      "mutability": "mutable",
                      "name": "totalUsdcSupply",
                      "nameLocation": "5998:15:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 393,
                      "src": "5990:23:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 315,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5990:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 318,
                      "mutability": "mutable",
                      "name": "totalUsdcBorrow",
                      "nameLocation": "6035:15:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 393,
                      "src": "6027:23:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 317,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6027:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 320,
                      "mutability": "mutable",
                      "name": "supplyRate",
                      "nameLocation": "6072:10:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 393,
                      "src": "6064:18:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 319,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6064:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 335,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 323,
                          "name": "_any2EvmMessage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 312,
                          "src": "6123:15:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Any2EVMMessage_$1669_memory_ptr",
                            "typeString": "struct Client.Any2EVMMessage memory"
                          }
                        },
                        "id": 324,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6139:4:14",
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1664,
                        "src": "6123:20:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 326,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6162:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": {
                              "id": 325,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "6162:5:14",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 328,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6169:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 327,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6169:7:14",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 330,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6178:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 329,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6178:7:14",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 332,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6187:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 331,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6187:7:14",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 333,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "6161:34:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint8_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(uint8),type(uint256),type(uint256),type(uint256))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint8_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(uint8),type(uint256),type(uint256),type(uint256))"
                        }
                      ],
                      "expression": {
                        "id": 321,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "6095:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "6099:6:14",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "6095:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6095:114:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint8,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5962:247:14"
                },
                {
                  "expression": {
                    "id": 349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 336,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "6220:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 345,
                        "indexExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 339,
                                "name": "_any2EvmMessage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 312,
                                "src": "6242:15:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Any2EVMMessage_$1669_memory_ptr",
                                  "typeString": "struct Client.Any2EVMMessage memory"
                                }
                              },
                              "id": 340,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6258:6:14",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1662,
                              "src": "6242:22:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 342,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6267:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 341,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6267:7:14",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 343,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "6266:9:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            ],
                            "expression": {
                              "id": 337,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "6231:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 338,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "6235:6:14",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "6231:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6231:45:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6220:57:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 346,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6291:16:14",
                      "memberName": "lastDataFromAave",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 66,
                      "src": "6220:87:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 347,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "6310:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 348,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6316:9:14",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "6310:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6220:105:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 350,
                  "nodeType": "ExpressionStatement",
                  "src": "6220:105:14"
                },
                {
                  "expression": {
                    "id": 363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 351,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "6335:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 360,
                        "indexExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 354,
                                "name": "_any2EvmMessage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 312,
                                "src": "6357:15:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Any2EVMMessage_$1669_memory_ptr",
                                  "typeString": "struct Client.Any2EVMMessage memory"
                                }
                              },
                              "id": 355,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6373:6:14",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1662,
                              "src": "6357:22:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 357,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6382:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 356,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6382:7:14",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 358,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "6381:9:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            ],
                            "expression": {
                              "id": 352,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "6346:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 353,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "6350:6:14",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "6346:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6346:45:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6335:57:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 361,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6406:15:14",
                      "memberName": "totalUsdcSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68,
                      "src": "6335:86:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 362,
                      "name": "totalUsdcSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 316,
                      "src": "6424:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6335:104:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 364,
                  "nodeType": "ExpressionStatement",
                  "src": "6335:104:14"
                },
                {
                  "expression": {
                    "id": 377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 365,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "6449:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 374,
                        "indexExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 368,
                                "name": "_any2EvmMessage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 312,
                                "src": "6471:15:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Any2EVMMessage_$1669_memory_ptr",
                                  "typeString": "struct Client.Any2EVMMessage memory"
                                }
                              },
                              "id": 369,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6487:6:14",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1662,
                              "src": "6471:22:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 371,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6496:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 370,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6496:7:14",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 372,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "6495:9:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            ],
                            "expression": {
                              "id": 366,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "6460:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 367,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "6464:6:14",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "6460:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6460:45:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6449:57:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 375,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6520:15:14",
                      "memberName": "totalUsdcBorrow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 70,
                      "src": "6449:86:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 376,
                      "name": "totalUsdcBorrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 318,
                      "src": "6538:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6449:104:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 378,
                  "nodeType": "ExpressionStatement",
                  "src": "6449:104:14"
                },
                {
                  "expression": {
                    "id": 391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 379,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "6563:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 388,
                        "indexExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 382,
                                "name": "_any2EvmMessage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 312,
                                "src": "6585:15:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Any2EVMMessage_$1669_memory_ptr",
                                  "typeString": "struct Client.Any2EVMMessage memory"
                                }
                              },
                              "id": 383,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6601:6:14",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1662,
                              "src": "6585:22:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 385,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6610:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 384,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6610:7:14",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 386,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "6609:9:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              }
                            ],
                            "expression": {
                              "id": 380,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "6574:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 381,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "6578:6:14",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "6574:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6574:45:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6563:57:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 389,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6634:10:14",
                      "memberName": "supplyRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72,
                      "src": "6563:81:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 390,
                      "name": "supplyRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 320,
                      "src": "6647:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6563:94:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 392,
                  "nodeType": "ExpressionStatement",
                  "src": "6563:94:14"
                }
              ]
            },
            "id": 394,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_nodeAaveFeed",
            "nameLocation": "5869:13:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 313,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 312,
                  "mutability": "mutable",
                  "name": "_any2EvmMessage",
                  "nameLocation": "5921:15:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 394,
                  "src": "5892:44:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Any2EVMMessage_$1669_memory_ptr",
                    "typeString": "struct Client.Any2EVMMessage"
                  },
                  "typeName": {
                    "id": 311,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 310,
                      "name": "Client.Any2EVMMessage",
                      "nameLocations": [
                        "5892:6:14",
                        "5899:14:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1669,
                      "src": "5892:21:14"
                    },
                    "referencedDeclaration": 1669,
                    "src": "5892:21:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Any2EVMMessage_$1669_storage_ptr",
                      "typeString": "struct Client.Any2EVMMessage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5882:60:14"
            },
            "returnParameters": {
              "id": 314,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5952:0:14"
            },
            "scope": 890,
            "src": "5860:804:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 442,
              "nodeType": "Block",
              "src": "6946:262:14",
              "statements": [
                {
                  "expression": {
                    "id": 416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 409,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "6956:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 412,
                        "indexExpression": {
                          "expression": {
                            "id": 410,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6967:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6971:6:14",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6967:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6956:22:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 413,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6979:16:14",
                      "memberName": "lastDataFromAave",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 66,
                      "src": "6956:39:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 414,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "6998:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7004:9:14",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "6998:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6956:57:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 417,
                  "nodeType": "ExpressionStatement",
                  "src": "6956:57:14"
                },
                {
                  "expression": {
                    "id": 424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 418,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "7023:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 421,
                        "indexExpression": {
                          "expression": {
                            "id": 419,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7034:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7038:6:14",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7034:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7023:22:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 422,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7046:15:14",
                      "memberName": "totalUsdcSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68,
                      "src": "7023:38:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 423,
                      "name": "totalUsdcSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 396,
                      "src": "7064:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7023:56:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 425,
                  "nodeType": "ExpressionStatement",
                  "src": "7023:56:14"
                },
                {
                  "expression": {
                    "id": 432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 426,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "7089:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 429,
                        "indexExpression": {
                          "expression": {
                            "id": 427,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7100:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7104:6:14",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7100:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7089:22:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 430,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7112:15:14",
                      "memberName": "totalUsdcBorrow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 70,
                      "src": "7089:38:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 431,
                      "name": "totalUsdcBorrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 398,
                      "src": "7130:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7089:56:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 433,
                  "nodeType": "ExpressionStatement",
                  "src": "7089:56:14"
                },
                {
                  "expression": {
                    "id": 440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 434,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "7155:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 437,
                        "indexExpression": {
                          "expression": {
                            "id": 435,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7166:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7170:6:14",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7166:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7155:22:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 438,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7178:10:14",
                      "memberName": "supplyRate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72,
                      "src": "7155:33:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 439,
                      "name": "supplyRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 400,
                      "src": "7191:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7155:46:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 441,
                  "nodeType": "ExpressionStatement",
                  "src": "7155:46:14"
                }
              ]
            },
            "functionSelector": "9637120f",
            "id": 443,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 403,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 402,
                  "name": "masterAndNodeInSameChain",
                  "nameLocations": [
                    "6894:24:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 147,
                  "src": "6894:24:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "6894:24:14"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 405,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "6934:3:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "6938:6:14",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "6934:10:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 407,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 404,
                  "name": "onlyValidNodes",
                  "nameLocations": [
                    "6919:14:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 132,
                  "src": "6919:14:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "6919:26:14"
              }
            ],
            "name": "nodeAaveFeedFromSameChain",
            "nameLocation": "6759:25:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 401,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 396,
                  "mutability": "mutable",
                  "name": "totalUsdcSupply",
                  "nameLocation": "6802:15:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 443,
                  "src": "6794:23:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 395,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6794:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 398,
                  "mutability": "mutable",
                  "name": "totalUsdcBorrow",
                  "nameLocation": "6835:15:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 443,
                  "src": "6827:23:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 397,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6827:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 400,
                  "mutability": "mutable",
                  "name": "supplyRate",
                  "nameLocation": "6868:10:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 443,
                  "src": "6860:18:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 399,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6860:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6784:100:14"
            },
            "returnParameters": {
              "id": 408,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6946:0:14"
            },
            "scope": 890,
            "src": "6750:458:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1562
            ],
            "body": {
              "id": 498,
              "nodeType": "Block",
              "src": "7864:387:14",
              "statements": [
                {
                  "assignments": [
                    461
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 461,
                      "mutability": "mutable",
                      "name": "command",
                      "nameLocation": "7880:7:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 498,
                      "src": "7874:13:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 460,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "7874:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 465,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 463,
                        "name": "_any2EvmMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 446,
                        "src": "7913:15:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Any2EVMMessage_$1669_memory_ptr",
                          "typeString": "struct Client.Any2EVMMessage memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Any2EVMMessage_$1669_memory_ptr",
                          "typeString": "struct Client.Any2EVMMessage memory"
                        }
                      ],
                      "id": 462,
                      "name": "_internalCommandRouter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1843,
                      "src": "7890:22:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Any2EVMMessage_$1669_memory_ptr_$returns$_t_uint8_$",
                        "typeString": "function (struct Client.Any2EVMMessage memory) returns (uint8)"
                      }
                    },
                    "id": 464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7890:39:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7874:55:14"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 466,
                      "name": "command",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 461,
                      "src": "7943:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 467,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7954:1:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7943:12:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 476,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 474,
                        "name": "command",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 461,
                        "src": "8026:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8037:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "8026:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 482,
                          "name": "command",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 461,
                          "src": "8110:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8121:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "8110:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 494,
                        "nodeType": "Block",
                        "src": "8185:60:14",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "696e76616c696420636f6d6d616e642066726f6d204e6f6465",
                                  "id": 491,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8206:27:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_5ae3160618806915eb95e7eff27bdd789150f31a91a3a3ee805c28ae74beda69",
                                    "typeString": "literal_string \"invalid command from Node\""
                                  },
                                  "value": "invalid command from Node"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_5ae3160618806915eb95e7eff27bdd789150f31a91a3a3ee805c28ae74beda69",
                                    "typeString": "literal_string \"invalid command from Node\""
                                  }
                                ],
                                "id": 490,
                                "name": "revert",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -19,
                                  -19
                                ],
                                "referencedDeclaration": -19,
                                "src": "8199:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (string memory) pure"
                                }
                              },
                              "id": 492,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8199:35:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 493,
                            "nodeType": "ExpressionStatement",
                            "src": "8199:35:14"
                          }
                        ]
                      },
                      "id": 495,
                      "nodeType": "IfStatement",
                      "src": "8106:139:14",
                      "trueBody": {
                        "id": 489,
                        "nodeType": "Block",
                        "src": "8124:55:14",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 486,
                                  "name": "_any2EvmMessage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 446,
                                  "src": "8152:15:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Any2EVMMessage_$1669_memory_ptr",
                                    "typeString": "struct Client.Any2EVMMessage memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_struct$_Any2EVMMessage_$1669_memory_ptr",
                                    "typeString": "struct Client.Any2EVMMessage memory"
                                  }
                                ],
                                "id": 485,
                                "name": "_nodeAaveFeed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 394,
                                "src": "8138:13:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Any2EVMMessage_$1669_memory_ptr_$returns$__$",
                                  "typeString": "function (struct Client.Any2EVMMessage memory)"
                                }
                              },
                              "id": 487,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8138:30:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 488,
                            "nodeType": "ExpressionStatement",
                            "src": "8138:30:14"
                          }
                        ]
                      }
                    },
                    "id": 496,
                    "nodeType": "IfStatement",
                    "src": "8022:223:14",
                    "trueBody": {
                      "id": 481,
                      "nodeType": "Block",
                      "src": "8040:60:14",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 478,
                                "name": "_any2EvmMessage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 446,
                                "src": "8073:15:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Any2EVMMessage_$1669_memory_ptr",
                                  "typeString": "struct Client.Any2EVMMessage memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Any2EVMMessage_$1669_memory_ptr",
                                  "typeString": "struct Client.Any2EVMMessage memory"
                                }
                              ],
                              "id": 477,
                              "name": "_resmumeOperations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 286,
                              "src": "8054:18:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Any2EVMMessage_$1669_memory_ptr_$returns$__$",
                                "typeString": "function (struct Client.Any2EVMMessage memory)"
                              }
                            },
                            "id": 479,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8054:35:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 480,
                          "nodeType": "ExpressionStatement",
                          "src": "8054:35:14"
                        }
                      ]
                    }
                  },
                  "id": 497,
                  "nodeType": "IfStatement",
                  "src": "7939:306:14",
                  "trueBody": {
                    "id": 473,
                    "nodeType": "Block",
                    "src": "7957:59:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 470,
                              "name": "_any2EvmMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 446,
                              "src": "7989:15:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Any2EVMMessage_$1669_memory_ptr",
                                "typeString": "struct Client.Any2EVMMessage memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Any2EVMMessage_$1669_memory_ptr",
                                "typeString": "struct Client.Any2EVMMessage memory"
                              }
                            ],
                            "id": 469,
                            "name": "_aWarpTokenMinter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 235,
                            "src": "7971:17:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Any2EVMMessage_$1669_memory_ptr_$returns$__$",
                              "typeString": "function (struct Client.Any2EVMMessage memory)"
                            }
                          },
                          "id": 471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7971:34:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 472,
                        "nodeType": "ExpressionStatement",
                        "src": "7971:34:14"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 499,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "expression": {
                          "id": 452,
                          "name": "_any2EvmMessage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 446,
                          "src": "7824:15:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Any2EVMMessage_$1669_memory_ptr",
                            "typeString": "struct Client.Any2EVMMessage memory"
                          }
                        },
                        "id": 453,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7840:6:14",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1662,
                        "src": "7824:22:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 455,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7849:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 454,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7849:7:14",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 456,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "7848:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        }
                      ],
                      "expression": {
                        "id": 450,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "7813:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "7817:6:14",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "7813:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7813:45:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 458,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 449,
                  "name": "onlyValidNodes",
                  "nameLocations": [
                    "7798:14:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 132,
                  "src": "7798:14:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "7798:61:14"
              }
            ],
            "name": "_ccipReceive",
            "nameLocation": "7683:12:14",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 448,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7781:8:14"
            },
            "parameters": {
              "id": 447,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 446,
                  "mutability": "mutable",
                  "name": "_any2EvmMessage",
                  "nameLocation": "7734:15:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 499,
                  "src": "7705:44:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Any2EVMMessage_$1669_memory_ptr",
                    "typeString": "struct Client.Any2EVMMessage"
                  },
                  "typeName": {
                    "id": 445,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 444,
                      "name": "Client.Any2EVMMessage",
                      "nameLocations": [
                        "7705:6:14",
                        "7712:14:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1669,
                      "src": "7705:21:14"
                    },
                    "referencedDeclaration": 1669,
                    "src": "7705:21:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Any2EVMMessage_$1669_storage_ptr",
                      "typeString": "struct Client.Any2EVMMessage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7695:60:14"
            },
            "returnParameters": {
              "id": 459,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7864:0:14"
            },
            "scope": 890,
            "src": "7674:577:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 599,
              "nodeType": "Block",
              "src": "8826:1287:14",
              "statements": [
                {
                  "assignments": [
                    517
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 517,
                      "mutability": "mutable",
                      "name": "evm2AnyMessage",
                      "nameLocation": "9037:14:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 599,
                      "src": "9008:43:14",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EVM2AnyMessage_$1682_memory_ptr",
                        "typeString": "struct Client.EVM2AnyMessage"
                      },
                      "typeName": {
                        "id": 516,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 515,
                          "name": "Client.EVM2AnyMessage",
                          "nameLocations": [
                            "9008:6:14",
                            "9015:14:14"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1682,
                          "src": "9008:21:14"
                        },
                        "referencedDeclaration": 1682,
                        "src": "9008:21:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EVM2AnyMessage_$1682_storage_ptr",
                          "typeString": "struct Client.EVM2AnyMessage"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 526,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 519,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 503,
                        "src": "9085:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 520,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 505,
                        "src": "9108:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 523,
                            "name": "s_linkToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "9135:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LinkTokenInterface_$1815",
                              "typeString": "contract LinkTokenInterface"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LinkTokenInterface_$1815",
                              "typeString": "contract LinkTokenInterface"
                            }
                          ],
                          "id": 522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9127:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 521,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9127:7:14",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9127:20:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 518,
                      "name": "_buildCCIPMessage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 637,
                      "src": "9054:17:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$_t_address_$returns$_t_struct$_EVM2AnyMessage_$1682_memory_ptr_$",
                        "typeString": "function (address,bytes memory,address) pure returns (struct Client.EVM2AnyMessage memory)"
                      }
                    },
                    "id": 525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9054:103:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EVM2AnyMessage_$1682_memory_ptr",
                      "typeString": "struct Client.EVM2AnyMessage memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9008:149:14"
                },
                {
                  "assignments": [
                    529
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 529,
                      "mutability": "mutable",
                      "name": "router",
                      "nameLocation": "9265:6:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 599,
                      "src": "9251:20:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRouterClient_$1649",
                        "typeString": "contract IRouterClient"
                      },
                      "typeName": {
                        "id": 528,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 527,
                          "name": "IRouterClient",
                          "nameLocations": [
                            "9251:13:14"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1649,
                          "src": "9251:13:14"
                        },
                        "referencedDeclaration": 1649,
                        "src": "9251:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRouterClient_$1649",
                          "typeString": "contract IRouterClient"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 535,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 531,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "9288:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MasterNode_$890",
                              "typeString": "contract MasterNode"
                            }
                          },
                          "id": 532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9293:9:14",
                          "memberName": "getRouter",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1574,
                          "src": "9288:14:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9288:16:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 530,
                      "name": "IRouterClient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1649,
                      "src": "9274:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IRouterClient_$1649_$",
                        "typeString": "type(contract IRouterClient)"
                      }
                    },
                    "id": 534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9274:31:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRouterClient_$1649",
                      "typeString": "contract IRouterClient"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9251:54:14"
                },
                {
                  "assignments": [
                    537
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 537,
                      "mutability": "mutable",
                      "name": "fees",
                      "nameLocation": "9381:4:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 599,
                      "src": "9373:12:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 536,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9373:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 543,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 540,
                        "name": "_destinationChainSelector",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 501,
                        "src": "9402:25:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 541,
                        "name": "evm2AnyMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 517,
                        "src": "9429:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EVM2AnyMessage_$1682_memory_ptr",
                          "typeString": "struct Client.EVM2AnyMessage memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_struct$_EVM2AnyMessage_$1682_memory_ptr",
                          "typeString": "struct Client.EVM2AnyMessage memory"
                        }
                      ],
                      "expression": {
                        "id": 538,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 529,
                        "src": "9388:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRouterClient_$1649",
                          "typeString": "contract IRouterClient"
                        }
                      },
                      "id": 539,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9395:6:14",
                      "memberName": "getFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1637,
                      "src": "9388:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint64_$_t_struct$_EVM2AnyMessage_$1682_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint64,struct Client.EVM2AnyMessage memory) view external returns (uint256)"
                      }
                    },
                    "id": 542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9388:56:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9373:71:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 547,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "9501:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 548,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9505:6:14",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "9501:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 551,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "9521:4:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MasterNode_$890",
                                  "typeString": "contract MasterNode"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MasterNode_$890",
                                  "typeString": "contract MasterNode"
                                }
                              ],
                              "id": 550,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9513:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 549,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9513:7:14",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 552,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9513:13:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 553,
                            "name": "fees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 537,
                            "src": "9528:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 545,
                            "name": "s_linkToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "9476:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LinkTokenInterface_$1815",
                              "typeString": "contract LinkTokenInterface"
                            }
                          },
                          "id": 546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9488:12:14",
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1814,
                          "src": "9476:24:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9476:57:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f742070726f7669646564204c696e6b20666f722066656573",
                        "id": 555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9547:28:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_afb0688769ed3833a956fba5ec2b64712f3f707f42b0b0fcc105794bfc66fab0",
                          "typeString": "literal_string \"Not provided Link for fees\""
                        },
                        "value": "Not provided Link for fees"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_afb0688769ed3833a956fba5ec2b64712f3f707f42b0b0fcc105794bfc66fab0",
                          "typeString": "literal_string \"Not provided Link for fees\""
                        }
                      ],
                      "id": 544,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9455:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9455:130:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 557,
                  "nodeType": "ExpressionStatement",
                  "src": "9455:130:14"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 558,
                      "name": "fees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 537,
                      "src": "9600:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 563,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "9637:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MasterNode_$890",
                                "typeString": "contract MasterNode"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MasterNode_$890",
                                "typeString": "contract MasterNode"
                              }
                            ],
                            "id": 562,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9629:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 561,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9629:7:14",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9629:13:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 559,
                          "name": "s_linkToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "9607:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LinkTokenInterface_$1815",
                            "typeString": "contract LinkTokenInterface"
                          }
                        },
                        "id": 560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9619:9:14",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1747,
                        "src": "9607:21:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 565,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9607:36:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9600:43:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 578,
                  "nodeType": "IfStatement",
                  "src": "9596:128:14",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 572,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "9711:4:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MasterNode_$890",
                                    "typeString": "contract MasterNode"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MasterNode_$890",
                                    "typeString": "contract MasterNode"
                                  }
                                ],
                                "id": 571,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9703:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 570,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9703:7:14",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 573,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9703:13:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 568,
                              "name": "s_linkToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 56,
                              "src": "9681:11:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LinkTokenInterface_$1815",
                                "typeString": "contract LinkTokenInterface"
                              }
                            },
                            "id": 569,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9693:9:14",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1747,
                            "src": "9681:21:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9681:36:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 575,
                          "name": "fees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 537,
                          "src": "9719:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 567,
                        "name": "NotEnoughBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "9664:16:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                          "typeString": "function (uint256,uint256) pure"
                        }
                      },
                      "id": 576,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9664:60:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 577,
                    "nodeType": "RevertStatement",
                    "src": "9657:67:14"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 584,
                            "name": "router",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 529,
                            "src": "9870:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IRouterClient_$1649",
                              "typeString": "contract IRouterClient"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IRouterClient_$1649",
                              "typeString": "contract IRouterClient"
                            }
                          ],
                          "id": 583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9862:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 582,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9862:7:14",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9862:15:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 586,
                        "name": "fees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 537,
                        "src": "9879:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 579,
                        "name": "s_linkToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "9842:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LinkTokenInterface_$1815",
                          "typeString": "contract LinkTokenInterface"
                        }
                      },
                      "id": 581,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9854:7:14",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1740,
                      "src": "9842:19:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9842:42:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 588,
                  "nodeType": "ExpressionStatement",
                  "src": "9842:42:14"
                },
                {
                  "expression": {
                    "id": 595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 589,
                      "name": "messageId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 511,
                      "src": "9976:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 592,
                          "name": "_destinationChainSelector",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 501,
                          "src": "10004:25:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        {
                          "id": 593,
                          "name": "evm2AnyMessage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 517,
                          "src": "10031:14:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_EVM2AnyMessage_$1682_memory_ptr",
                            "typeString": "struct Client.EVM2AnyMessage memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          {
                            "typeIdentifier": "t_struct$_EVM2AnyMessage_$1682_memory_ptr",
                            "typeString": "struct Client.EVM2AnyMessage memory"
                          }
                        ],
                        "expression": {
                          "id": 590,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 529,
                          "src": "9988:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IRouterClient_$1649",
                            "typeString": "contract IRouterClient"
                          }
                        },
                        "id": 591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9995:8:14",
                        "memberName": "ccipSend",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1648,
                        "src": "9988:15:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint64_$_t_struct$_EVM2AnyMessage_$1682_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (uint64,struct Client.EVM2AnyMessage memory) payable external returns (bytes32)"
                        }
                      },
                      "id": 594,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9988:58:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "9976:70:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 596,
                  "nodeType": "ExpressionStatement",
                  "src": "9976:70:14"
                },
                {
                  "expression": {
                    "id": 597,
                    "name": "messageId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 511,
                    "src": "10097:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 512,
                  "id": 598,
                  "nodeType": "Return",
                  "src": "10090:16:14"
                }
              ]
            },
            "id": 600,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 508,
                    "name": "_receiver",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 503,
                    "src": "8787:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 509,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 507,
                  "name": "onlyValidNodes",
                  "nameLocations": [
                    "8772:14:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 132,
                  "src": "8772:14:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "8772:25:14"
              }
            ],
            "name": "_sendMessage",
            "nameLocation": "8647:12:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 506,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 501,
                  "mutability": "mutable",
                  "name": "_destinationChainSelector",
                  "nameLocation": "8676:25:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 600,
                  "src": "8669:32:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 500,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "8669:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 503,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "8719:9:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 600,
                  "src": "8711:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 502,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8711:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 505,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "8751:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 600,
                  "src": "8738:18:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 504,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8738:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8659:103:14"
            },
            "returnParameters": {
              "id": 512,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 511,
                  "mutability": "mutable",
                  "name": "messageId",
                  "nameLocation": "8815:9:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 600,
                  "src": "8807:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 510,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8807:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8806:19:14"
            },
            "scope": 890,
            "src": "8638:1475:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 636,
              "nodeType": "Block",
              "src": "10799:662:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 617,
                            "name": "_receiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 603,
                            "src": "10889:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 615,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "10878:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "10882:6:14",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "10878:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10878:21:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 619,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 605,
                        "src": "10955:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 624,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11042:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "11014:27:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_EVMTokenAmount_$1656_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (struct Client.EVMTokenAmount memory[] memory)"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 621,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 620,
                                "name": "Client.EVMTokenAmount",
                                "nameLocations": [
                                  "11018:6:14",
                                  "11025:14:14"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1656,
                                "src": "11018:21:14"
                              },
                              "referencedDeclaration": 1656,
                              "src": "11018:21:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_EVMTokenAmount_$1656_storage_ptr",
                                "typeString": "struct Client.EVMTokenAmount"
                              }
                            },
                            "id": 622,
                            "nodeType": "ArrayTypeName",
                            "src": "11018:23:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$1656_storage_$dyn_storage_ptr",
                              "typeString": "struct Client.EVMTokenAmount[]"
                            }
                          }
                        },
                        "id": 625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11014:30:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$1656_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Client.EVMTokenAmount memory[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "325f3030305f303030",
                                "id": 630,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11260:9:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2000000_by_1",
                                  "typeString": "int_const 2000000"
                                },
                                "value": "2_000_000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_2000000_by_1",
                                  "typeString": "int_const 2000000"
                                }
                              ],
                              "expression": {
                                "id": 628,
                                "name": "Client",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1704,
                                "src": "11227:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Client_$1704_$",
                                  "typeString": "type(library Client)"
                                }
                              },
                              "id": 629,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11234:14:14",
                              "memberName": "EVMExtraArgsV1",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1688,
                              "src": "11227:21:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_EVMExtraArgsV1_$1688_storage_ptr_$",
                                "typeString": "type(struct Client.EVMExtraArgsV1 storage pointer)"
                              }
                            },
                            "id": 631,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [
                              "11250:8:14"
                            ],
                            "names": [
                              "gasLimit"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "11227:44:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_EVMExtraArgsV1_$1688_memory_ptr",
                              "typeString": "struct Client.EVMExtraArgsV1 memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_EVMExtraArgsV1_$1688_memory_ptr",
                              "typeString": "struct Client.EVMExtraArgsV1 memory"
                            }
                          ],
                          "expression": {
                            "id": 626,
                            "name": "Client",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1704,
                            "src": "11123:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Client_$1704_$",
                              "typeString": "type(library Client)"
                            }
                          },
                          "id": 627,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11130:12:14",
                          "memberName": "_argsToBytes",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1703,
                          "src": "11123:19:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_EVMExtraArgsV1_$1688_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (struct Client.EVMExtraArgsV1 memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11123:166:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 633,
                        "name": "_feeTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 607,
                        "src": "11423:16:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$1656_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Client.EVMTokenAmount memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 613,
                        "name": "Client",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1704,
                        "src": "10828:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Client_$1704_$",
                          "typeString": "type(library Client)"
                        }
                      },
                      "id": 614,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10835:14:14",
                      "memberName": "EVM2AnyMessage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1682,
                      "src": "10828:21:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_EVM2AnyMessage_$1682_storage_ptr_$",
                        "typeString": "type(struct Client.EVM2AnyMessage storage pointer)"
                      }
                    },
                    "id": 634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "10868:8:14",
                      "10949:4:14",
                      "11000:12:14",
                      "11112:9:14",
                      "11413:8:14"
                    ],
                    "names": [
                      "receiver",
                      "data",
                      "tokenAmounts",
                      "extraArgs",
                      "feeToken"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "10828:626:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EVM2AnyMessage_$1682_memory_ptr",
                      "typeString": "struct Client.EVM2AnyMessage memory"
                    }
                  },
                  "functionReturnParameters": 612,
                  "id": 635,
                  "nodeType": "Return",
                  "src": "10809:645:14"
                }
              ]
            },
            "documentation": {
              "id": 601,
              "nodeType": "StructuredDocumentation",
              "src": "10119:501:14",
              "text": "@notice Construct a CCIP message.\n @dev This function will create an EVM2AnyMessage struct with all the necessary information for programmable tokens transfer.\n @param _receiver The address of the receiver.\n @param _data The bytes data to be sent.\n @param _feeTokenAddress The address of the token used for fees. Set address(0) for native gas.\n @return Client.EVM2AnyMessage Returns an EVM2AnyMessage struct which contains information for sending a CCIP message."
            },
            "id": 637,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_buildCCIPMessage",
            "nameLocation": "10634:17:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 608,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 603,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "10669:9:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 637,
                  "src": "10661:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 602,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10661:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 605,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "10701:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 637,
                  "src": "10688:18:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 604,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10688:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 607,
                  "mutability": "mutable",
                  "name": "_feeTokenAddress",
                  "nameLocation": "10724:16:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 637,
                  "src": "10716:24:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 606,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10716:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10651:95:14"
            },
            "returnParameters": {
              "id": 612,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 611,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 637,
                  "src": "10769:28:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_EVM2AnyMessage_$1682_memory_ptr",
                    "typeString": "struct Client.EVM2AnyMessage"
                  },
                  "typeName": {
                    "id": 610,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 609,
                      "name": "Client.EVM2AnyMessage",
                      "nameLocations": [
                        "10769:6:14",
                        "10776:14:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1682,
                      "src": "10769:21:14"
                    },
                    "referencedDeclaration": 1682,
                    "src": "10769:21:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EVM2AnyMessage_$1682_storage_ptr",
                      "typeString": "struct Client.EVM2AnyMessage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10768:30:14"
            },
            "scope": 890,
            "src": "10625:836:14",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 641,
              "nodeType": "Block",
              "src": "11755:2:14",
              "statements": []
            },
            "documentation": {
              "id": 638,
              "nodeType": "StructuredDocumentation",
              "src": "11467:256:14",
              "text": "@notice Fallback function to allow the contract to receive Ether.\n @dev This function has no function body, making it a default function for receiving Ether.\n It is automatically called when Ether is sent to the contract without any data."
            },
            "id": 642,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 639,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11735:2:14"
            },
            "returnParameters": {
              "id": 640,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11755:0:14"
            },
            "scope": 890,
            "src": "11728:29:14",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 711,
              "nodeType": "Block",
              "src": "12106:693:14",
              "statements": [
                {
                  "assignments": [
                    650
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 650,
                      "mutability": "mutable",
                      "name": "commandWarpAssets",
                      "nameLocation": "12122:17:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 711,
                      "src": "12116:23:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 649,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "12116:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 652,
                  "initialValue": {
                    "hexValue": "31",
                    "id": 651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12142:1:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12116:27:14"
                },
                {
                  "assignments": [
                    654
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 654,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "12167:4:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 711,
                      "src": "12154:17:14",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 653,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "12154:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 661,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 657,
                        "name": "commandWarpAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 650,
                        "src": "12198:17:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 658,
                        "name": "_destinationCCIPid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 644,
                        "src": "12229:18:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 659,
                        "name": "_destinationNodeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 646,
                        "src": "12261:23:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 655,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "12174:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 656,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "12178:6:14",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "12174:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12174:120:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12154:140:14"
                },
                {
                  "expression": {
                    "id": 667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 662,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "12304:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 664,
                        "indexExpression": {
                          "id": 663,
                          "name": "activeNode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85,
                          "src": "12315:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12304:22:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 665,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "12327:12:14",
                      "memberName": "isActiveNode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 62,
                      "src": "12304:35:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 666,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12342:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "12304:43:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 668,
                  "nodeType": "ExpressionStatement",
                  "src": "12304:43:14"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    },
                    "id": 674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 669,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "12362:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 671,
                        "indexExpression": {
                          "id": 670,
                          "name": "activeNode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85,
                          "src": "12373:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12362:22:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 672,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12385:11:14",
                      "memberName": "chainCCIPid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64,
                      "src": "12362:34:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 673,
                      "name": "MASTER_CONTRACT_CHAIN_ID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58,
                      "src": "12400:24:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "12362:62:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 693,
                    "nodeType": "Block",
                    "src": "12589:91:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 685,
                                  "name": "validNodes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 78,
                                  "src": "12616:10:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                                    "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                                  }
                                },
                                "id": 687,
                                "indexExpression": {
                                  "id": 686,
                                  "name": "activeNode",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 85,
                                  "src": "12627:10:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "12616:22:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                                  "typeString": "struct MasterNode.ValidNodes storage ref"
                                }
                              },
                              "id": 688,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12639:11:14",
                              "memberName": "chainCCIPid",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 64,
                              "src": "12616:34:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            {
                              "id": 689,
                              "name": "activeNode",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 85,
                              "src": "12652:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 690,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 654,
                              "src": "12664:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 684,
                            "name": "_sendMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 600,
                            "src": "12603:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint64_$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (uint64,address,bytes memory) returns (bytes32)"
                            }
                          },
                          "id": 691,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12603:66:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 692,
                        "nodeType": "ExpressionStatement",
                        "src": "12603:66:14"
                      }
                    ]
                  },
                  "id": 694,
                  "nodeType": "IfStatement",
                  "src": "12358:322:14",
                  "trueBody": {
                    "id": 683,
                    "nodeType": "Block",
                    "src": "12426:157:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 679,
                              "name": "_destinationCCIPid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 644,
                              "src": "12499:18:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            {
                              "id": 680,
                              "name": "_destinationNodeAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 646,
                              "src": "12535:23:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 676,
                                  "name": "activeNode",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 85,
                                  "src": "12446:10:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 675,
                                "name": "INode",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1922,
                                "src": "12440:5:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_INode_$1922_$",
                                  "typeString": "type(contract INode)"
                                }
                              },
                              "id": 677,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12440:17:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_INode_$1922",
                                "typeString": "contract INode"
                              }
                            },
                            "id": 678,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12458:23:14",
                            "memberName": "warpAssetsFromSameChain",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1921,
                            "src": "12440:41:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint64_$_t_address_$returns$__$",
                              "typeString": "function (uint64,address) external"
                            }
                          },
                          "id": 681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12440:132:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 682,
                        "nodeType": "ExpressionStatement",
                        "src": "12440:132:14"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 695,
                      "name": "lastActiveNode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "12690:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 696,
                      "name": "activeNode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85,
                      "src": "12707:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12690:27:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 698,
                  "nodeType": "ExpressionStatement",
                  "src": "12690:27:14"
                },
                {
                  "expression": {
                    "id": 704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 699,
                      "name": "activeNode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85,
                      "src": "12727:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12748:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "12740:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 700,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12740:7:14",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 703,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12740:10:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12727:23:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 705,
                  "nodeType": "ExpressionStatement",
                  "src": "12727:23:14"
                },
                {
                  "expression": {
                    "id": 709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 706,
                      "name": "lastTimeWarped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "12760:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 707,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "12777:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 708,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12783:9:14",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "12777:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12760:32:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 710,
                  "nodeType": "ExpressionStatement",
                  "src": "12760:32:14"
                }
              ]
            },
            "functionSelector": "5c292be5",
            "id": 712,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "warpAssets",
            "nameLocation": "12004:10:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 647,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 644,
                  "mutability": "mutable",
                  "name": "_destinationCCIPid",
                  "nameLocation": "12031:18:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 712,
                  "src": "12024:25:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 643,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "12024:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 646,
                  "mutability": "mutable",
                  "name": "_destinationNodeAddress",
                  "nameLocation": "12067:23:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 712,
                  "src": "12059:31:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 645,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12059:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12014:82:14"
            },
            "returnParameters": {
              "id": 648,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12106:0:14"
            },
            "scope": 890,
            "src": "11995:804:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 782,
              "nodeType": "Block",
              "src": "13080:564:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 718,
                            "name": "validNodes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78,
                            "src": "13098:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                              "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                            }
                          },
                          "id": 720,
                          "indexExpression": {
                            "id": 719,
                            "name": "activeNode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85,
                            "src": "13109:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13098:22:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                            "typeString": "struct MasterNode.ValidNodes storage ref"
                          }
                        },
                        "id": 721,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13121:12:14",
                        "memberName": "isActiveNode",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 62,
                        "src": "13098:35:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f6465206973206e6f7420416374697665",
                        "id": 722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13135:20:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_036926b7eb2047bdf695035566f1e9989601a3dea1b4917f558eca27485e05b9",
                          "typeString": "literal_string \"Node is not Active\""
                        },
                        "value": "Node is not Active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_036926b7eb2047bdf695035566f1e9989601a3dea1b4917f558eca27485e05b9",
                          "typeString": "literal_string \"Node is not Active\""
                        }
                      ],
                      "id": 717,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13090:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13090:66:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 724,
                  "nodeType": "ExpressionStatement",
                  "src": "13090:66:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 726,
                          "name": "shares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 714,
                          "src": "13175:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 728,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "13195:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 729,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13199:6:14",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "13195:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 727,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 989,
                            "src": "13185:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 730,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13185:21:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13175:31:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f756768742062616c616e6365",
                        "id": 732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13208:21:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8b745e1e49bc3a21dc0e85a5fcefdac1a659905f53d03b0cfc0a9455e9c5156d",
                          "typeString": "literal_string \"Not enought balance\""
                        },
                        "value": "Not enought balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8b745e1e49bc3a21dc0e85a5fcefdac1a659905f53d03b0cfc0a9455e9c5156d",
                          "typeString": "literal_string \"Not enought balance\""
                        }
                      ],
                      "id": 725,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13167:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13167:63:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 734,
                  "nodeType": "ExpressionStatement",
                  "src": "13167:63:14"
                },
                {
                  "assignments": [
                    736
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 736,
                      "mutability": "mutable",
                      "name": "commandWitdraw",
                      "nameLocation": "13247:14:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 782,
                      "src": "13241:20:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 735,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "13241:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 738,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "13264:1:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13241:24:14"
                },
                {
                  "assignments": [
                    740
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 740,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "13289:4:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 782,
                      "src": "13276:17:14",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 739,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "13276:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 748,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 743,
                        "name": "commandWitdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 736,
                        "src": "13307:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "expression": {
                          "id": 744,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "13323:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13327:6:14",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "13323:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 746,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 714,
                        "src": "13335:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 741,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "13296:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 742,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "13300:6:14",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "13296:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13296:46:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13276:66:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 750,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "13359:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13363:6:14",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "13359:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 752,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 714,
                        "src": "13371:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 749,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1366,
                      "src": "13353:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13353:25:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 754,
                  "nodeType": "ExpressionStatement",
                  "src": "13353:25:14"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    },
                    "id": 760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 755,
                          "name": "validNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "13393:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                          }
                        },
                        "id": 757,
                        "indexExpression": {
                          "id": 756,
                          "name": "activeNode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85,
                          "src": "13404:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13393:22:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                          "typeString": "struct MasterNode.ValidNodes storage ref"
                        }
                      },
                      "id": 758,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13416:11:14",
                      "memberName": "chainCCIPid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64,
                      "src": "13393:34:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 759,
                      "name": "MASTER_CONTRACT_CHAIN_ID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58,
                      "src": "13431:24:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "13393:62:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 780,
                    "nodeType": "Block",
                    "src": "13547:91:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 772,
                                  "name": "validNodes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 78,
                                  "src": "13574:10:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                                    "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                                  }
                                },
                                "id": 774,
                                "indexExpression": {
                                  "id": 773,
                                  "name": "activeNode",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 85,
                                  "src": "13585:10:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "13574:22:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                                  "typeString": "struct MasterNode.ValidNodes storage ref"
                                }
                              },
                              "id": 775,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13597:11:14",
                              "memberName": "chainCCIPid",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 64,
                              "src": "13574:34:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            {
                              "id": 776,
                              "name": "activeNode",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 85,
                              "src": "13610:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 777,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 740,
                              "src": "13622:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 771,
                            "name": "_sendMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 600,
                            "src": "13561:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint64_$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (uint64,address,bytes memory) returns (bytes32)"
                            }
                          },
                          "id": 778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13561:66:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 779,
                        "nodeType": "ExpressionStatement",
                        "src": "13561:66:14"
                      }
                    ]
                  },
                  "id": 781,
                  "nodeType": "IfStatement",
                  "src": "13389:249:14",
                  "trueBody": {
                    "id": 770,
                    "nodeType": "Block",
                    "src": "13457:84:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 765,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "13511:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 766,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13515:6:14",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "13511:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 767,
                              "name": "shares",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 714,
                              "src": "13523:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 762,
                                  "name": "activeNode",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 85,
                                  "src": "13477:10:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 761,
                                "name": "INode",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1922,
                                "src": "13471:5:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_INode_$1922_$",
                                  "typeString": "type(contract INode)"
                                }
                              },
                              "id": 763,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13471:17:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_INode_$1922",
                                "typeString": "contract INode"
                              }
                            },
                            "id": 764,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13489:21:14",
                            "memberName": "withdrawFromSameChain",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1914,
                            "src": "13471:39:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13471:59:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 769,
                        "nodeType": "ExpressionStatement",
                        "src": "13471:59:14"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "2e1a7d4d",
            "id": 783,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "13046:8:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 715,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 714,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "13063:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 783,
                  "src": "13055:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 713,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13055:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13054:16:14"
            },
            "returnParameters": {
              "id": 716,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13080:0:14"
            },
            "scope": 890,
            "src": "13037:607:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 864,
              "nodeType": "Block",
              "src": "14004:704:14",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 852,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 831,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 821,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 811,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 804,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 797,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 792,
                                          "name": "validNodes",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 78,
                                          "src": "14070:10:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                                          }
                                        },
                                        "id": 794,
                                        "indexExpression": {
                                          "id": 793,
                                          "name": "_activeNode",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 785,
                                          "src": "14081:11:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "14070:23:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                                          "typeString": "struct MasterNode.ValidNodes storage ref"
                                        }
                                      },
                                      "id": 795,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "14094:12:14",
                                      "memberName": "isActiveNode",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 62,
                                      "src": "14070:36:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "74727565",
                                      "id": 796,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "bool",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "14110:4:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "value": "true"
                                    },
                                    "src": "14070:44:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "&&",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 803,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 798,
                                          "name": "validNodes",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 78,
                                          "src": "14130:10:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                                            "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                                          }
                                        },
                                        "id": 800,
                                        "indexExpression": {
                                          "id": 799,
                                          "name": "_activeNode",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 785,
                                          "src": "14141:11:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "14130:23:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                                          "typeString": "struct MasterNode.ValidNodes storage ref"
                                        }
                                      },
                                      "id": 801,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "14154:16:14",
                                      "memberName": "lastDataFromAave",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 66,
                                      "src": "14130:40:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 802,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "14173:1:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "14130:44:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "14070:104:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 810,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 805,
                                        "name": "validNodes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 78,
                                        "src": "14190:10:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                                          "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                                        }
                                      },
                                      "id": 807,
                                      "indexExpression": {
                                        "id": 806,
                                        "name": "destinationNode",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 787,
                                        "src": "14201:15:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "14190:27:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                                        "typeString": "struct MasterNode.ValidNodes storage ref"
                                      }
                                    },
                                    "id": 808,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "14218:16:14",
                                    "memberName": "lastDataFromAave",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 66,
                                    "src": "14190:44:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 809,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "14237:1:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "14190:48:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "14070:168:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 820,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 817,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 812,
                                        "name": "validNodes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 78,
                                        "src": "14254:10:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                                          "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                                        }
                                      },
                                      "id": 814,
                                      "indexExpression": {
                                        "id": 813,
                                        "name": "_activeNode",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 785,
                                        "src": "14265:11:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "14254:23:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                                        "typeString": "struct MasterNode.ValidNodes storage ref"
                                      }
                                    },
                                    "id": 815,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "14278:16:14",
                                    "memberName": "lastDataFromAave",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 66,
                                    "src": "14254:40:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "hexValue": "33363030",
                                    "id": 816,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "14297:4:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_3600_by_1",
                                      "typeString": "int_const 3600"
                                    },
                                    "value": "3600"
                                  },
                                  "src": "14254:47:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "expression": {
                                    "id": 818,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "14304:5:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 819,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "14310:9:14",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "14304:15:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "14254:65:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "14070:249:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 830,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 827,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 822,
                                      "name": "validNodes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 78,
                                      "src": "14335:10:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                                        "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                                      }
                                    },
                                    "id": 824,
                                    "indexExpression": {
                                      "id": 823,
                                      "name": "destinationNode",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 787,
                                      "src": "14346:15:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "14335:27:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                                      "typeString": "struct MasterNode.ValidNodes storage ref"
                                    }
                                  },
                                  "id": 825,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "14363:16:14",
                                  "memberName": "lastDataFromAave",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 66,
                                  "src": "14335:44:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "hexValue": "33363030",
                                  "id": 826,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "14382:4:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_3600_by_1",
                                    "typeString": "int_const 3600"
                                  },
                                  "value": "3600"
                                },
                                "src": "14335:51:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "expression": {
                                  "id": 828,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "14401:5:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 829,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "14407:9:14",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "14401:15:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "14335:81:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "14070:346:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 837,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 832,
                                  "name": "validNodes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 78,
                                  "src": "14432:10:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                                    "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                                  }
                                },
                                "id": 834,
                                "indexExpression": {
                                  "id": 833,
                                  "name": "destinationNode",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 787,
                                  "src": "14443:15:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "14432:27:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                                  "typeString": "struct MasterNode.ValidNodes storage ref"
                                }
                              },
                              "id": 835,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14460:11:14",
                              "memberName": "isValidNode",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 60,
                              "src": "14432:39:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "74727565",
                              "id": 836,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14475:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            "src": "14432:47:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "14070:409:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 844,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 839,
                                "name": "validNodes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 78,
                                "src": "14495:10:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                                  "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                                }
                              },
                              "id": 841,
                              "indexExpression": {
                                "id": 840,
                                "name": "destinationNode",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 787,
                                "src": "14506:15:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "14495:27:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                                "typeString": "struct MasterNode.ValidNodes storage ref"
                              }
                            },
                            "id": 842,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14523:12:14",
                            "memberName": "isActiveNode",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 62,
                            "src": "14495:40:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "66616c7365",
                            "id": 843,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14539:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "14495:49:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "14070:474:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 846,
                              "name": "validNodes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78,
                              "src": "14560:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                                "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                              }
                            },
                            "id": 848,
                            "indexExpression": {
                              "id": 847,
                              "name": "_activeNode",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 785,
                              "src": "14571:11:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14560:23:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                              "typeString": "struct MasterNode.ValidNodes storage ref"
                            }
                          },
                          "id": 849,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14584:10:14",
                          "memberName": "supplyRate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 72,
                          "src": "14560:34:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 850,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14597:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "14560:38:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "14070:528:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 861,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 853,
                            "name": "validNodes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78,
                            "src": "14614:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                              "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                            }
                          },
                          "id": 855,
                          "indexExpression": {
                            "id": 854,
                            "name": "_activeNode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 785,
                            "src": "14625:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14614:23:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                            "typeString": "struct MasterNode.ValidNodes storage ref"
                          }
                        },
                        "id": 856,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14638:10:14",
                        "memberName": "supplyRate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 72,
                        "src": "14614:34:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 857,
                            "name": "validNodes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78,
                            "src": "14663:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                              "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                            }
                          },
                          "id": 859,
                          "indexExpression": {
                            "id": 858,
                            "name": "destinationNode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 787,
                            "src": "14674:15:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14663:27:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                            "typeString": "struct MasterNode.ValidNodes storage ref"
                          }
                        },
                        "id": 860,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14691:10:14",
                        "memberName": "supplyRate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 72,
                        "src": "14663:38:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "14614:87:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "14070:631:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 791,
                  "id": 863,
                  "nodeType": "Return",
                  "src": "14051:650:14"
                }
              ]
            },
            "functionSelector": "1d880928",
            "id": 865,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkApprovedWarp",
            "nameLocation": "13891:17:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 788,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 785,
                  "mutability": "mutable",
                  "name": "_activeNode",
                  "nameLocation": "13926:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 865,
                  "src": "13918:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 784,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13918:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 787,
                  "mutability": "mutable",
                  "name": "destinationNode",
                  "nameLocation": "13955:15:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 865,
                  "src": "13947:23:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 786,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13947:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13908:68:14"
            },
            "returnParameters": {
              "id": 791,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 790,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 865,
                  "src": "13998:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 789,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13998:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13997:6:14"
            },
            "scope": 890,
            "src": "13882:826:14",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 888,
              "nodeType": "Block",
              "src": "14904:168:14",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 870,
                      "name": "activeNode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85,
                      "src": "14918:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14940:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "14932:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 871,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14932:7:14",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 874,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14932:10:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "14918:24:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 882,
                  "nodeType": "IfStatement",
                  "src": "14914:100:14",
                  "trueBody": {
                    "id": 881,
                    "nodeType": "Block",
                    "src": "14944:70:14",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 876,
                              "name": "validNodes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78,
                              "src": "14965:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                                "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                              }
                            },
                            "id": 878,
                            "indexExpression": {
                              "id": 877,
                              "name": "lastActiveNode",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 83,
                              "src": "14976:14:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14965:26:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                              "typeString": "struct MasterNode.ValidNodes storage ref"
                            }
                          },
                          "id": 879,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14992:11:14",
                          "memberName": "chainCCIPid",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 64,
                          "src": "14965:38:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "functionReturnParameters": 869,
                        "id": 880,
                        "nodeType": "Return",
                        "src": "14958:45:14"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 883,
                        "name": "validNodes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "15031:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ValidNodes_$73_storage_$",
                          "typeString": "mapping(address => struct MasterNode.ValidNodes storage ref)"
                        }
                      },
                      "id": 885,
                      "indexExpression": {
                        "id": 884,
                        "name": "activeNode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85,
                        "src": "15042:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "15031:22:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ValidNodes_$73_storage",
                        "typeString": "struct MasterNode.ValidNodes storage ref"
                      }
                    },
                    "id": 886,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "15054:11:14",
                    "memberName": "chainCCIPid",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 64,
                    "src": "15031:34:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "functionReturnParameters": 869,
                  "id": 887,
                  "nodeType": "Return",
                  "src": "15024:41:14"
                }
              ]
            },
            "functionSelector": "1803c2f5",
            "id": 889,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getChainIdFromActiveNode",
            "nameLocation": "14846:24:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 866,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14870:2:14"
            },
            "returnParameters": {
              "id": 869,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 868,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 889,
                  "src": "14896:6:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 867,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "14896:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14895:8:14"
            },
            "scope": 890,
            "src": "14837:235:14",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 891,
        "src": "783:14291:14",
        "usedErrors": [
          29,
          31,
          39,
          43,
          47,
          51,
          53,
          1578
        ]
      }
    ],
    "src": "32:15043:14"
  },
  "bytecode": "60c0346200044557601f19906001600160401b0390601f9062002ab138819003838101861683019190858311848410176200044a578084926060946040528339810103126200044557620000538162000480565b9060209260406200006685840162000480565b92015194808616860362000445576200007e62000460565b91600983526815d85c9c165a595b1960ba1b868401526200009e62000460565b6004808252630615752560e41b88830152986001600160a01b0396808816156200042d576080523315620003e957600080546001600160a01b03199081163317825586519099919290868111620002f9576005908154986001998a81811c91168015620003de575b86821014620003ca5790818984931162000379575b508590898311600114620003185787926200030c575b5050600019600383901b1c191690891b1781555b8451968711620002f957600654908882811c92168015620002ee575b84831014620002da578798999a9b9c9d508682116200027d575b50508194861160011462000217575050926200020b575b5050600019600383901b1c191690821b176006555b60ff1960095416176009551690600754161760075560a05260405161261b908162000496823960805181818161035e015261078d015260a0518181816104970152818161054d0152818161072901528181610d42015281816114960152611e410152f35b01519050388062000192565b600683528183208897909594939116915b82821062000263575050841162000249575b505050811b01600655620001a7565b015160001960f88460031b161c191690553880806200023a565b848401518655889790950194938401939081019062000228565b9091929394959650600685528385209087808a01821c830193868b10620002d0575b918a998c93999897969594929901901c01915b828110620002c157506200017b565b8581558998508a9101620002b2565b935082936200029f565b50634e487b7160e01b845260228d52602484fd5b91607f169162000161565b634e487b7160e01b845260418d52602484fd5b01519050388062000131565b90858c94169185895287892092895b8982821062000362575050841162000348575b505050811b01815562000145565b015160001960f88460031b161c191690553880806200033a565b8385015186558f9790950194938401930162000327565b90915083875285872089808501861c820192888610620003c0575b918d918695949301871c01915b828110620003b15750506200011b565b8981558594508d9101620003a1565b9250819262000394565b8f876022602492634e487b7160e01b835252fd5b90607f169062000106565b60405162461bcd60e51b8152808b01899052601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f00000000000000006044820152606490fd5b6040516335fdcccd60e21b81526000818d0152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b60408051919082016001600160401b038111838210176200044a57604052565b51906001600160a01b0382168203620004455756fe60806040818152600480361015610021575b505050361561001f57600080fd5b005b600092833560e01c90816301ffc9a714611e885750806304783ea414611e0857806306fdde0314611d3b578063095ea7b314611d1157806310a78df814611bf95780631803c2f514611bcc57806318160ddd14611baf5780631d88092814611a4557806323b872dd146119795780632e1a7d4d146113a8578063313ce5671461138c578063395093511461133d578063544b17091461120b578381635c292be514610cb75750806361ac3f9914610c8a578063654e8e0c14610c665780636c1dc07714610c3d5780636c98d51314610c1757806370a0823114610bdf57806379ba509714610b3857806385572ffb1461074d5780638cf19d19146107095780638da5cb5b146106e157806395d89b41146105c65780639637120f1461051b578063995714ae14610467578063a457c2d7146103be578063a9059cbb1461038d578063b0f479a114610349578063b2d92955146102c2578063dd62ed3e14610274578063e12b948b146102515763f2fde38b03610011573461024d57602036600319011261024d576101b0611edc565b906101b9612593565b6001600160a01b039182169233841461020a575050600180546001600160a01b031916831790558254167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12788380a380f35b906020606492519162461bcd60e51b8352820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152fd5b8280fd5b505034610270578160031936011261027057602090600b549051908152f35b5080fd5b505034610270578060031936011261027057602091610291611edc565b8261029a611ef2565b6001600160a01b03928316845260038652922091166000908152908352819020549051908152f35b50903461024d57602036600319011261024d5760e09281906001600160a01b036102ea611edc565b16815260086020522080549260018201546002830154916003840154930154936001600160401b0381519660ff81161515885260ff8160081c161515602089015260101c16908601526060850152608084015260a083015260c0820152f35b505034610270578160031936011261027057517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5050346102705780600319360112610270576020906103b76103ad611edc565b6024359033612224565b5160018152f35b5082346104645782600319360112610464576103d8611edc565b91836024359233815260036020522060018060a01b038416600052602052836000205490828210610413576020856103b78585038733612438565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b80fd5b503461024d578260031936011261024d5733835260086020526104bd6001600160401b03808486205460101c16907f0000000000000000000000000000000000000000000000000000000000000000161461206a565b338352600860205260ff82842054161561050557503382526008602052812061010061ff0019825416179055336bffffffffffffffffffffffff60a01b600a541617600a5580f35b6024915190636a9ff79f60e11b82523390820152fd5b50903461024d57606036600319011261024d5733835260086020526105736001600160401b03808386205460101c16907f0000000000000000000000000000000000000000000000000000000000000000161461206a565b338352600860205260ff8184205416156105af573383526008602052822042600182015581356002820155602435600382015560443591015580f35b602492505190636a9ff79f60e11b82523390820152fd5b5091346104645780600319360112610464578151918160065492600184811c918186169586156106d7575b60209687851081146106c4578899509688969785829a52918260001461069d575050600114610641575b50505061063d929161062e910385611ff3565b51928284938452830190611f08565b0390f35b9190869350600683527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f5b828410610685575050508201018161062e61063d61061b565b8054848a01860152889550879490930192810161066c565b60ff19168782015293151560051b8601909301935084925061062e915061063d905061061b565b634e487b7160e01b835260228a52602483fd5b92607f16926105f1565b505034610270578160031936011261027057905490516001600160a01b039091168152602090f35b505034610270578160031936011261027057602090516001600160401b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b50903461024d576020916003198381360112610909578135906001600160401b0390818311610a605760a090833603011261098b576001600160a01b03927f000000000000000000000000000000000000000000000000000000000000000084163303610b21578451916107c083611f5e565b838201358352602490818501358181168103610afc57888501526044850135818111610a68576107f590843691880101612014565b938781019485526064860135828111610b195761081790853691890101612014565b9560608201968752608481013590838211610b1d570136602382011215610b195784810135928311610b05578851926108558b8260051b0185611ff3565b808452848b85019160061b83010191368311610b01578501905b828210610ac2575050506080015282518781805181010312610a64576108978887920161253a565b168089526008885260ff878a20541615610aad575083518781805181010312610a64576108c78860ff920161254e565b168061090d57505050505191606083805181010312610909576108fc6060916108f461090696860161254e565b50840161253a565b9201519116612394565b80f35b8480fd5b600181989795939496981460001461098f57505050508151838180518101031261098b5761093d8486920161253a565b16855260088352842061010061ff0019825416179055519080828051810103126109875761096b910161253a565b166bffffffffffffffffffffffff60a01b600a541617600a5580f35b8380fd5b8580fd5b6002909794959796939614600014610a6c57505194608086805181010312610a60576109bc82870161254e565b508386015195608060608201519101519682518481805181010312610a68576109e78587920161253a565b16895260088452426001878b20015582518481805181010312610a6857610a108587920161253a565b1689526002868a20015581518381805181010312610a6457610a348486920161253a565b1688526003858920015551908082805181010312610a6057610a56910161253a565b1684528320015580f35b8680fd5b8880fd5b8980fd5b8560196064928588519362461bcd60e51b85528401528201527f696e76616c696420636f6d6d616e642066726f6d204e6f6465000000000000006044820152fd5b8651636a9ff79f60e11b815280840191909152fd5b8a82360312610b01578a5190610ad782611fbd565b8235908b82168203610afc57828e928e9452828501358382015281520191019061086f565b600080fd5b8c80fd5b83604186634e487b7160e01b600052526000fd5b8a80fd5b8b80fd5b6024908551906335fdcccd60e21b82523390820152fd5b50903461024d578260031936011261024d57600154916001600160a01b03918284163303610ba357505082546001600160a01b03198082163390811786559316600155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020606492519162461bcd60e51b8352820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b6044820152fd5b5050346102705760203660031901126102705760209181906001600160a01b03610c07611edc565b1681526002845220549051908152f35b8334610464578060031936011261046457610c30612593565b60ff196009541660095580f35b505034610270578160031936011261027057600a5490516001600160a01b039091168152602090f35b50503461027057816003193601126102705760209060ff6009541690519015158152f35b505034610270578160031936011261027057600954905160089190911c6001600160a01b03168152602090f35b92905034611207578060031936011261120757610cd2611f48565b91610cdb611ef2565b82519060206001818401526001600160401b0380961692838682015260018060a01b038093169660608881840152808352610d1583611fd8565b84600a54168a5260088452878a2061ff0019815416905584600a541692838b52888b2054838160101c16937f0000000000000000000000000000000000000000000000000000000000000000168414600014610e0257505050505050600a5416803b1561098b5785928360449286519788958694634bb297ff60e11b865285015260248401525af1908115610df95750610de5575b50505b600a805460098054610100600160a81b031916600883901b610100600160a81b03161790556001600160a01b031916905542600b5580f35b610dee90611faa565b610464578038610daa565b513d84823e3d90fd5b91949a509297985060ff91955095939516156111f057846007541682819360808a51610e2d81611f5e565b828152828d820152828c8201528d8382015201528851978a890152898852610e5488611fbd565b8851610e5f81611f8f565b60008152610e7c8a51610e7181611f8f565b621e8480815261255c565b938a5199610e898b611f5e565b8a528b8a0152898901528701526080860152855163b0f479a160e01b815287818481305afa9081156111e6579085918a916111ac575b501693888751926320487ded60e01b8452898480610ee08b8a8a84016120c4565b03818a5afa9384156111a257908a918395611170575b5060648a51809481936323b872dd60e01b8352338a8401523060248401528860448401525af1908115611166578a91611149575b501561110657600754169086516370a0823160e01b9081815230858201528981602481875afa9081156110fc578b916110cf575b5082116110535750865163095ea7b360e01b81526001600160a01b038616818501908152602081019290925289939290918991839182908790829060400103925af18015611049579188959391610fd29897959361101c575b5086516396f4e9f960e01b81529788958694859384016120c4565b03925af19081156110135750610fea575b5050610dad565b813d831161100c575b610ffd8183611ff3565b81010312610464573880610fe3565b503d610ff3565b513d85823e3d90fd5b61103b90873d8911611042575b6110338183611ff3565b810190612190565b5038610fb7565b503d611029565b87513d85823e3d90fd5b9089888a80879560248451809981938252308a8301525afa9283156110c45792611093575b5051634787a10360e11b815292830152602482015260449150fd5b90915084813d83116110bd575b6110aa8183611ff3565b81010312610afc57604493519085611078565b503d6110a0565b8251903d90823e3d90fd5b90508981813d83116110f5575b6110e68183611ff3565b81010312610afc575138610f5e565b503d6110dc565b89513d8d823e3d90fd5b865162461bcd60e51b8152808401899052601a60248201527f4e6f742070726f7669646564204c696e6b20666f7220666565730000000000006044820152606490fd5b6111609150893d8b11611042576110338183611ff3565b38610f2a565b88513d8c823e3d90fd5b9250935081813d831161119b575b6111888183611ff3565b81010312610afc57888a91519338610ef6565b503d61117e565b89513d84823e3d90fd5b809250898092503d83116111df575b6111c58183611ff3565b81010312610a6457518481168103610a6457849038610ebf565b503d6111bb565b87513d8b823e3d90fd5b8651636a9ff79f60e11b8152808401879052602490fd5b5050fd5b5091346104645760a036600319011261046457611226611f48565b9161122f611ef2565b6001600160a01b03936044358581169190829003610afc5760643590868216809203610afc57608435976001600160401b038911610a605761127a6112f69697989936908301612014565b87519460209a8b97168787015286865261129386611fbd565b885161129e81611f8f565b600081526112bb8a516112b081611f8f565b620f4240815261255c565b928a51976112c889611f5e565b885288880152898701526060860152608085015286516320487ded60e01b81529586948593849384016120c4565b03915afa9283156110c4579261130e575b5051908152f35b9091508281813d8311611336575b6113268183611ff3565b81010312610afc57519038611307565b503d61131c565b5050346102705780600319360112610270576103b76020928261135e611edc565b91338152600386522060018060a01b038216600052845261138560243584600020546121a8565b9033612438565b5050346102705781600319360112610270576020905160128152f35b50829034610270576020928360031936011261024d57600a546001600160a01b039081168452600880865282852054843592911c60ff1615611941573385526002865282852054821161190857825195858188015233848801526060838189015280885261141588611fd8565b33156118bb5733875260028252848720549784891061186d57848899989697983388526002855203878720558488540388558587518681527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef853392a383600a5416918287526008845287872054916001600160401b0392838160101c16937f000000000000000000000000000000000000000000000000000000000000000016841460001461151657505050505050600a5416803b1561024d5783516315e005b760e31b8152339581019586526020860192909252909384919082908490829060400103925af1908115610df9575061150d575080f35b61090690611faa565b909295965060ff9193975098939816156111f057846007541682819360808a5161153f81611f5e565b828152828d820152828c8201528d8382015201528851978a89015289885261156688611fbd565b885161157181611f8f565b8b81526115828a51610e7181611f8f565b938a519961158f8b611f5e565b8a528b8a0152898901528701526080860152855163b0f479a160e01b815287818481305afa9081156111e6579085918a91611833575b501693888751926320487ded60e01b84528984806115e68b8a8a84016120c4565b03818a5afa9384156111a257908a918395611802575b5060648a51809481936323b872dd60e01b8352338a8401523060248401528860448401525af1908115611166578a916117e5575b50156111065790889291600754169087516370a0823160e01b9081815230858201528a81602481875afa9081156117db5786916117ae575b50821161172f5750875163095ea7b360e01b81526001600160a01b038716848201908152602081019290925291899183919082908790829060400103925af180156110495791889593916116d898979593611712575086516396f4e9f960e01b81529788958694859384016120c4565b03925af190811561101357506116ed57505080f35b813d831161170b575b6117008183611ff3565b810103126104645780f35b503d6116f6565b61172890873d8911611042576110338183611ff3565b508a610fb7565b899192828a9260248451809481938252308a8301525afa9283156117a4578693611770575b505051634787a10360e11b815292830152602482015260449150fd5b9080929350813d831161179d575b6117888183611ff3565b81010312610909576044945051908580611754565b503d61177e565b82513d88823e3d90fd5b90508a81813d83116117d4575b6117c58183611ff3565b8101031261098b57518c611668565b503d6117bb565b8a513d88823e3d90fd5b6117fc9150893d8b11611042576110338183611ff3565b8a611630565b8281939296503d831161182c575b61181a8183611ff3565b8101031261027057899051938c6115fc565b503d611810565b809250898092503d8311611866575b61184c8183611ff3565b81010312610a6457518481168103610a645784908a6115c5565b503d611842565b855162461bcd60e51b8152808801849052602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608490fd5b845162461bcd60e51b8152808701839052602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608490fd5b825162461bcd60e51b815280850187905260136024820152724e6f7420656e6f756768742062616c616e636560681b6044820152606490fd5b825162461bcd60e51b815280850187905260126024820152714e6f6465206973206e6f742041637469766560701b6044820152606490fd5b5082903461027057606036600319011261027057611995611edc565b61199d611ef2565b6001600160a01b038216845260036020908152858520338652905292849020546044359392600182016119d9575b6020866103b7878787612224565b848210611a0257509183916119f7602096956103b795033383612438565b9193948193506119cb565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b509134610464578160031936011261046457611a5f611edc565b92611a68611ef2565b9060018060a01b03809516928381526008956020968088528683209560018060ff8954851c161515149788611ba2575b5087611b8e575b87611b6f575b87611b38575b87611b1e575b5086611b05575b86611af0575b86611acf575b888789519015158152f35b83528752858220830154931681528490200154119050388080808080611ac4565b80845281895287842085015415159650611abe565b858316845281895287842054821c60ff16159650611ab8565b8684168552828a528885205460ff16151514965038611ab1565b96508286168452818952868885200154610e108101809111611b5c57421096611aab565b634e487b7160e01b855260118652602485fd5b9650808452868885200154610e108101809111611b5c57421096611aa5565b868416855288852081015415159750611a9f565b8101541515975038611a98565b503461024d578260031936011261024d5760209250549051908152f35b5050346102705781600319360112610270576020906001600160401b03611bf16121cb565b915191168152f35b503461024d57606036600319011261024d57611c13611edc565b90602435906001600160401b0382168203610909576044359182151591828403610a6057611c3f612593565b60ff6009541615611cd65750600190818060a01b03851695868852600860205287209261ff0069ffffffffffffffff000085549360101b169269ffffffffffffffffffff19169160081b161717179055611c97578280f35b60098054610100600160a81b03191660089290921b610100600160a81b0316919091179055600a80546001600160a01b03191691909117905538808280f35b606490602087519162461bcd60e51b83528201526015602482015274139bc81b5bdc99481b9bd9195cc8185b1b1bddd959605a1b6044820152fd5b5050346102705780600319360112610270576020906103b7611d31611edc565b6024359033612438565b5091346104645780600319360112610464578151918160055492600184811c91818616958615611dfe575b60209687851081146106c4578899509688969785829a52918260001461069d575050600114611da25750505061063d929161062e910385611ff3565b9190869350600583527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db05b828410611de6575050508201018161062e61063d61061b565b8054848a018601528895508794909301928101611dcd565b92607f1692611d66565b503461024d578160031936011261024d57611e21611edc565b913384526008602052611e676001600160401b03808387205460101c16907f0000000000000000000000000000000000000000000000000000000000000000161461206a565b338452600860205260ff8185205416156105af578361090660243585612394565b9250503461024d57602036600319011261024d573563ffffffff60e01b811680910361024d57602092506385572ffb60e01b8114908115611ecb575b5015158152f35b6301ffc9a760e01b14905038611ec4565b600435906001600160a01b0382168203610afc57565b602435906001600160a01b0382168203610afc57565b919082519283825260005b848110611f34575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611f13565b600435906001600160401b0382168203610afc57565b60a081019081106001600160401b03821117611f7957604052565b634e487b7160e01b600052604160045260246000fd5b602081019081106001600160401b03821117611f7957604052565b6001600160401b038111611f7957604052565b604081019081106001600160401b03821117611f7957604052565b608081019081106001600160401b03821117611f7957604052565b90601f801991011681019081106001600160401b03821117611f7957604052565b81601f82011215610afc578035906001600160401b038211611f795760405192612048601f8401601f191660200185611ff3565b82845260208383010111610afc57816000926020809301838601378301015290565b1561207157565b60405162461bcd60e51b815260206004820152602560248201527f52657175697265206d617374657220616e64206e6f646520696e2073616d652060448201526431b430b4b760d91b6064820152608490fd5b906001600160401b0390939293168152604060209181838201526120f3855160a08484015260e0830190611f08565b9161210f8487015193603f199485858303016060860152611f08565b8187015194848483030160808501528080875193848152019601926000905b83821061216757505050505060c06080612164959660018060a01b0360608201511660a085015201519282850301910152611f08565b90565b845180516001600160a01b0316895283015188840152968701969382019360019091019061212e565b90816020910312610afc57518015158103610afc5790565b919082018092116121b557565b634e487b7160e01b600052601160045260246000fd5b600a546001600160a01b039081169081156121fe575060005260086020526001600160401b0360406000205460101c1690565b905060095460081c1660005260086020526001600160401b0360406000205460101c1690565b6001600160a01b0390811691821561234157169182156122f0576000828152600260205260408120549180831061229c57604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef95876020965260028652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b03169081156123f3577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6020826123d66000946004546121a8565b6004558484526002825260408420818154019055604051908152a3565b60405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606490fd5b6001600160a01b039081169182156124e957169182156124995760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260038252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b51906001600160a01b0382168203610afc57565b519060ff82168203610afc57565b604051906397a657c960e01b602083015251602482015260248152606081018181106001600160401b03821117611f795760405290565b6000546001600160a01b031633036125a757565b60405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b6044820152606490fdfea2646970667358221220424abf01f28c727fd5118f4ea086fbc62dea9dbd7a02d35b2b65378154e7fdaa64736f6c63430008130033",
  "bytecodeSha1": "5ea6d940dec26062739bc4fda13f3b52b04776e5",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.19+commit.7dd6d404"
  },
  "contractName": "MasterNode",
  "coverageMap": {
    "branches": {
      "0": {
        "ERC20._burn": {
          "80": [
            9505,
            9526,
            true
          ],
          "81": [
            9696,
            9720,
            true
          ]
        },
        "ERC20._spendAllowance": {
          "82": [
            11351,
            11388,
            false
          ]
        },
        "ERC20.decreaseAllowance": {
          "79": [
            6809,
            6844,
            true
          ]
        }
      },
      "1": {},
      "10": {},
      "11": {},
      "12": {},
      "13": {},
      "14": {
        "MasterNode._ccipReceive": {
          "69": [
            7943,
            7955,
            false
          ],
          "70": [
            8026,
            8038,
            false
          ],
          "71": [
            8110,
            8122,
            false
          ]
        },
        "MasterNode._sendMessage": {
          "75": [
            9600,
            9643,
            false
          ],
          "76": [
            9476,
            9533,
            true
          ]
        },
        "MasterNode.addValidNode": {
          "77": [
            3424,
            3438,
            true
          ]
        },
        "MasterNode.getChainIdFromActiveNode": {
          "78": [
            14918,
            14942,
            false
          ]
        },
        "MasterNode.warpAssets": {
          "72": [
            12362,
            12424,
            false
          ]
        },
        "MasterNode.withdraw": {
          "73": [
            13175,
            13206,
            true
          ],
          "74": [
            13393,
            13455,
            false
          ]
        }
      },
      "15": {},
      "16": {},
      "2": {},
      "3": {},
      "4": {},
      "5": {},
      "6": {},
      "7": {},
      "8": {},
      "9": {}
    },
    "statements": {
      "0": {
        "ERC20._approve": {
          "63": [
            10627,
            10695
          ],
          "64": [
            10705,
            10773
          ],
          "65": [
            10830,
            10867
          ],
          "66": [
            10784,
            10820
          ]
        },
        "ERC20._burn": {
          "38": [
            9497,
            9564
          ],
          "39": [
            9688,
            9759
          ],
          "40": [
            9973,
            10015
          ]
        },
        "ERC20._mint": {
          "59": [
            8642,
            8707
          ],
          "60": [
            8994,
            9036
          ],
          "61": [
            8778,
            8800
          ],
          "62": [
            8946,
            8974
          ]
        },
        "ERC20._spendAllowance": {
          "43": [
            11404,
            11472
          ],
          "44": [
            11514,
            11565
          ]
        },
        "ERC20._transfer": {
          "55": [
            7591,
            7659
          ],
          "56": [
            7669,
            7733
          ],
          "57": [
            7840,
            7912
          ],
          "58": [
            8205,
            8236
          ]
        },
        "ERC20.approve": {
          "49": [
            4568,
            4600
          ]
        },
        "ERC20.balanceOf": {
          "23": [
            3499,
            3524
          ]
        },
        "ERC20.decimals": {
          "35": [
            3166,
            3175
          ]
        },
        "ERC20.decreaseAllowance": {
          "5": [
            6801,
            6886
          ],
          "6": [
            6920,
            6980
          ]
        },
        "ERC20.increaseAllowance": {
          "34": [
            6013,
            6077
          ]
        },
        "ERC20.name": {
          "50": [
            2233,
            2245
          ]
        },
        "ERC20.symbol": {
          "12": [
            2446,
            2460
          ]
        },
        "ERC20.transfer": {
          "3": [
            3860,
            3888
          ]
        },
        "ERC20.transferFrom": {
          "42": [
            5421,
            5448
          ]
        }
      },
      "1": {},
      "10": {},
      "11": {},
      "12": {},
      "13": {},
      "14": {
        "MasterNode._aWarpTokenMinter": {
          "13": [
            4327,
            4353
          ]
        },
        "MasterNode._buildCCIPMessage": {
          "29": [
            10809,
            11454
          ]
        },
        "MasterNode._ccipReceive": {
          "20": [
            8199,
            8234
          ]
        },
        "MasterNode._nodeAaveFeed": {
          "16": [
            6220,
            6325
          ],
          "17": [
            6335,
            6439
          ],
          "18": [
            6449,
            6553
          ],
          "19": [
            6563,
            6657
          ]
        },
        "MasterNode._resmumeOperations": {
          "14": [
            5072,
            5162
          ],
          "15": [
            5173,
            5231
          ]
        },
        "MasterNode._resmumeOperationsFromSameChain": {
          "7": [
            5517,
            5540
          ]
        },
        "MasterNode._sendMessage": {
          "30": [
            9455,
            9585
          ],
          "31": [
            9596,
            9724
          ],
          "32": [
            9842,
            9884
          ],
          "33": [
            9976,
            10046
          ]
        },
        "MasterNode.aWarpTokenMinterFromSameChain": {
          "51": [
            4619,
            4645
          ]
        },
        "MasterNode.addValidNode": {
          "46": [
            3416,
            3464
          ],
          "47": [
            3474,
            3516
          ],
          "48": [
            3721,
            3745
          ]
        },
        "MasterNode.checkApprovedWarp": {
          "45": [
            14051,
            14701
          ]
        },
        "MasterNode.getChainIdFromActiveNode": {
          "53": [
            15024,
            15065
          ],
          "54": [
            14958,
            15003
          ]
        },
        "MasterNode.nodeAaveFeedFromSameChain": {
          "8": [
            6956,
            7013
          ],
          "9": [
            7023,
            7079
          ],
          "10": [
            7089,
            7145
          ],
          "11": [
            7155,
            7201
          ]
        },
        "MasterNode.stopAddingNodes": {
          "24": [
            3240,
            3262
          ]
        },
        "MasterNode.warpAssets": {
          "25": [
            12304,
            12347
          ],
          "26": [
            12440,
            12572
          ],
          "27": [
            12690,
            12717
          ],
          "28": [
            12760,
            12792
          ]
        },
        "MasterNode.withdraw": {
          "36": [
            13090,
            13156
          ],
          "37": [
            13167,
            13230
          ],
          "41": [
            13471,
            13530
          ]
        }
      },
      "15": {},
      "16": {},
      "2": {},
      "3": {
        "Context._msgSender": {
          "4": [
            712,
            729
          ]
        }
      },
      "4": {
        "CCIPReceiver.getRouter": {
          "2": [
            2262,
            2290
          ]
        },
        "CCIPReceiver.supportsInterface": {
          "52": [
            1502,
            1609
          ]
        }
      },
      "5": {},
      "6": {},
      "7": {
        "Client._argsToBytes": {
          "67": [
            1387,
            1450
          ]
        }
      },
      "8": {},
      "9": {
        "ConfirmedOwnerWithProposal._transferOwnership": {
          "0": [
            1629,
            1681
          ],
          "1": [
            1714,
            1758
          ]
        },
        "ConfirmedOwnerWithProposal._validateOwnership": {
          "68": [
            1894,
            1950
          ]
        },
        "ConfirmedOwnerWithProposal.acceptOwnership": {
          "21": [
            1120,
            1183
          ],
          "22": [
            1282,
            1329
          ]
        }
      }
    }
  },
  "dependencies": [
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/CCIPReceiver",
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/Client",
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/ConfirmedOwner",
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/ConfirmedOwnerWithProposal",
    "OpenZeppelin/openzeppelin-contracts@4.8.3/Context",
    "OpenZeppelin/openzeppelin-contracts@4.8.3/ERC20",
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/IAny2EVMMessageReceiver",
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.8.3/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.8.3/IERC20Metadata",
    "INode",
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/IOwnable",
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/IRouterClient",
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/LinkTokenInterface",
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/OwnerIsCreator",
    "UtilsMasterNode"
  ],
  "deployedBytecode": "60806040818152600480361015610021575b505050361561001f57600080fd5b005b600092833560e01c90816301ffc9a714611e885750806304783ea414611e0857806306fdde0314611d3b578063095ea7b314611d1157806310a78df814611bf95780631803c2f514611bcc57806318160ddd14611baf5780631d88092814611a4557806323b872dd146119795780632e1a7d4d146113a8578063313ce5671461138c578063395093511461133d578063544b17091461120b578381635c292be514610cb75750806361ac3f9914610c8a578063654e8e0c14610c665780636c1dc07714610c3d5780636c98d51314610c1757806370a0823114610bdf57806379ba509714610b3857806385572ffb1461074d5780638cf19d19146107095780638da5cb5b146106e157806395d89b41146105c65780639637120f1461051b578063995714ae14610467578063a457c2d7146103be578063a9059cbb1461038d578063b0f479a114610349578063b2d92955146102c2578063dd62ed3e14610274578063e12b948b146102515763f2fde38b03610011573461024d57602036600319011261024d576101b0611edc565b906101b9612593565b6001600160a01b039182169233841461020a575050600180546001600160a01b031916831790558254167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12788380a380f35b906020606492519162461bcd60e51b8352820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152fd5b8280fd5b505034610270578160031936011261027057602090600b549051908152f35b5080fd5b505034610270578060031936011261027057602091610291611edc565b8261029a611ef2565b6001600160a01b03928316845260038652922091166000908152908352819020549051908152f35b50903461024d57602036600319011261024d5760e09281906001600160a01b036102ea611edc565b16815260086020522080549260018201546002830154916003840154930154936001600160401b0381519660ff81161515885260ff8160081c161515602089015260101c16908601526060850152608084015260a083015260c0820152f35b505034610270578160031936011261027057517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5050346102705780600319360112610270576020906103b76103ad611edc565b6024359033612224565b5160018152f35b5082346104645782600319360112610464576103d8611edc565b91836024359233815260036020522060018060a01b038416600052602052836000205490828210610413576020856103b78585038733612438565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b80fd5b503461024d578260031936011261024d5733835260086020526104bd6001600160401b03808486205460101c16907f0000000000000000000000000000000000000000000000000000000000000000161461206a565b338352600860205260ff82842054161561050557503382526008602052812061010061ff0019825416179055336bffffffffffffffffffffffff60a01b600a541617600a5580f35b6024915190636a9ff79f60e11b82523390820152fd5b50903461024d57606036600319011261024d5733835260086020526105736001600160401b03808386205460101c16907f0000000000000000000000000000000000000000000000000000000000000000161461206a565b338352600860205260ff8184205416156105af573383526008602052822042600182015581356002820155602435600382015560443591015580f35b602492505190636a9ff79f60e11b82523390820152fd5b5091346104645780600319360112610464578151918160065492600184811c918186169586156106d7575b60209687851081146106c4578899509688969785829a52918260001461069d575050600114610641575b50505061063d929161062e910385611ff3565b51928284938452830190611f08565b0390f35b9190869350600683527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f5b828410610685575050508201018161062e61063d61061b565b8054848a01860152889550879490930192810161066c565b60ff19168782015293151560051b8601909301935084925061062e915061063d905061061b565b634e487b7160e01b835260228a52602483fd5b92607f16926105f1565b505034610270578160031936011261027057905490516001600160a01b039091168152602090f35b505034610270578160031936011261027057602090516001600160401b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b50903461024d576020916003198381360112610909578135906001600160401b0390818311610a605760a090833603011261098b576001600160a01b03927f000000000000000000000000000000000000000000000000000000000000000084163303610b21578451916107c083611f5e565b838201358352602490818501358181168103610afc57888501526044850135818111610a68576107f590843691880101612014565b938781019485526064860135828111610b195761081790853691890101612014565b9560608201968752608481013590838211610b1d570136602382011215610b195784810135928311610b05578851926108558b8260051b0185611ff3565b808452848b85019160061b83010191368311610b01578501905b828210610ac2575050506080015282518781805181010312610a64576108978887920161253a565b168089526008885260ff878a20541615610aad575083518781805181010312610a64576108c78860ff920161254e565b168061090d57505050505191606083805181010312610909576108fc6060916108f461090696860161254e565b50840161253a565b9201519116612394565b80f35b8480fd5b600181989795939496981460001461098f57505050508151838180518101031261098b5761093d8486920161253a565b16855260088352842061010061ff0019825416179055519080828051810103126109875761096b910161253a565b166bffffffffffffffffffffffff60a01b600a541617600a5580f35b8380fd5b8580fd5b6002909794959796939614600014610a6c57505194608086805181010312610a60576109bc82870161254e565b508386015195608060608201519101519682518481805181010312610a68576109e78587920161253a565b16895260088452426001878b20015582518481805181010312610a6857610a108587920161253a565b1689526002868a20015581518381805181010312610a6457610a348486920161253a565b1688526003858920015551908082805181010312610a6057610a56910161253a565b1684528320015580f35b8680fd5b8880fd5b8980fd5b8560196064928588519362461bcd60e51b85528401528201527f696e76616c696420636f6d6d616e642066726f6d204e6f6465000000000000006044820152fd5b8651636a9ff79f60e11b815280840191909152fd5b8a82360312610b01578a5190610ad782611fbd565b8235908b82168203610afc57828e928e9452828501358382015281520191019061086f565b600080fd5b8c80fd5b83604186634e487b7160e01b600052526000fd5b8a80fd5b8b80fd5b6024908551906335fdcccd60e21b82523390820152fd5b50903461024d578260031936011261024d57600154916001600160a01b03918284163303610ba357505082546001600160a01b03198082163390811786559316600155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020606492519162461bcd60e51b8352820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b6044820152fd5b5050346102705760203660031901126102705760209181906001600160a01b03610c07611edc565b1681526002845220549051908152f35b8334610464578060031936011261046457610c30612593565b60ff196009541660095580f35b505034610270578160031936011261027057600a5490516001600160a01b039091168152602090f35b50503461027057816003193601126102705760209060ff6009541690519015158152f35b505034610270578160031936011261027057600954905160089190911c6001600160a01b03168152602090f35b92905034611207578060031936011261120757610cd2611f48565b91610cdb611ef2565b82519060206001818401526001600160401b0380961692838682015260018060a01b038093169660608881840152808352610d1583611fd8565b84600a54168a5260088452878a2061ff0019815416905584600a541692838b52888b2054838160101c16937f0000000000000000000000000000000000000000000000000000000000000000168414600014610e0257505050505050600a5416803b1561098b5785928360449286519788958694634bb297ff60e11b865285015260248401525af1908115610df95750610de5575b50505b600a805460098054610100600160a81b031916600883901b610100600160a81b03161790556001600160a01b031916905542600b5580f35b610dee90611faa565b610464578038610daa565b513d84823e3d90fd5b91949a509297985060ff91955095939516156111f057846007541682819360808a51610e2d81611f5e565b828152828d820152828c8201528d8382015201528851978a890152898852610e5488611fbd565b8851610e5f81611f8f565b60008152610e7c8a51610e7181611f8f565b621e8480815261255c565b938a5199610e898b611f5e565b8a528b8a0152898901528701526080860152855163b0f479a160e01b815287818481305afa9081156111e6579085918a916111ac575b501693888751926320487ded60e01b8452898480610ee08b8a8a84016120c4565b03818a5afa9384156111a257908a918395611170575b5060648a51809481936323b872dd60e01b8352338a8401523060248401528860448401525af1908115611166578a91611149575b501561110657600754169086516370a0823160e01b9081815230858201528981602481875afa9081156110fc578b916110cf575b5082116110535750865163095ea7b360e01b81526001600160a01b038616818501908152602081019290925289939290918991839182908790829060400103925af18015611049579188959391610fd29897959361101c575b5086516396f4e9f960e01b81529788958694859384016120c4565b03925af19081156110135750610fea575b5050610dad565b813d831161100c575b610ffd8183611ff3565b81010312610464573880610fe3565b503d610ff3565b513d85823e3d90fd5b61103b90873d8911611042575b6110338183611ff3565b810190612190565b5038610fb7565b503d611029565b87513d85823e3d90fd5b9089888a80879560248451809981938252308a8301525afa9283156110c45792611093575b5051634787a10360e11b815292830152602482015260449150fd5b90915084813d83116110bd575b6110aa8183611ff3565b81010312610afc57604493519085611078565b503d6110a0565b8251903d90823e3d90fd5b90508981813d83116110f5575b6110e68183611ff3565b81010312610afc575138610f5e565b503d6110dc565b89513d8d823e3d90fd5b865162461bcd60e51b8152808401899052601a60248201527f4e6f742070726f7669646564204c696e6b20666f7220666565730000000000006044820152606490fd5b6111609150893d8b11611042576110338183611ff3565b38610f2a565b88513d8c823e3d90fd5b9250935081813d831161119b575b6111888183611ff3565b81010312610afc57888a91519338610ef6565b503d61117e565b89513d84823e3d90fd5b809250898092503d83116111df575b6111c58183611ff3565b81010312610a6457518481168103610a6457849038610ebf565b503d6111bb565b87513d8b823e3d90fd5b8651636a9ff79f60e11b8152808401879052602490fd5b5050fd5b5091346104645760a036600319011261046457611226611f48565b9161122f611ef2565b6001600160a01b03936044358581169190829003610afc5760643590868216809203610afc57608435976001600160401b038911610a605761127a6112f69697989936908301612014565b87519460209a8b97168787015286865261129386611fbd565b885161129e81611f8f565b600081526112bb8a516112b081611f8f565b620f4240815261255c565b928a51976112c889611f5e565b885288880152898701526060860152608085015286516320487ded60e01b81529586948593849384016120c4565b03915afa9283156110c4579261130e575b5051908152f35b9091508281813d8311611336575b6113268183611ff3565b81010312610afc57519038611307565b503d61131c565b5050346102705780600319360112610270576103b76020928261135e611edc565b91338152600386522060018060a01b038216600052845261138560243584600020546121a8565b9033612438565b5050346102705781600319360112610270576020905160128152f35b50829034610270576020928360031936011261024d57600a546001600160a01b039081168452600880865282852054843592911c60ff1615611941573385526002865282852054821161190857825195858188015233848801526060838189015280885261141588611fd8565b33156118bb5733875260028252848720549784891061186d57848899989697983388526002855203878720558488540388558587518681527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef853392a383600a5416918287526008845287872054916001600160401b0392838160101c16937f000000000000000000000000000000000000000000000000000000000000000016841460001461151657505050505050600a5416803b1561024d5783516315e005b760e31b8152339581019586526020860192909252909384919082908490829060400103925af1908115610df9575061150d575080f35b61090690611faa565b909295965060ff9193975098939816156111f057846007541682819360808a5161153f81611f5e565b828152828d820152828c8201528d8382015201528851978a89015289885261156688611fbd565b885161157181611f8f565b8b81526115828a51610e7181611f8f565b938a519961158f8b611f5e565b8a528b8a0152898901528701526080860152855163b0f479a160e01b815287818481305afa9081156111e6579085918a91611833575b501693888751926320487ded60e01b84528984806115e68b8a8a84016120c4565b03818a5afa9384156111a257908a918395611802575b5060648a51809481936323b872dd60e01b8352338a8401523060248401528860448401525af1908115611166578a916117e5575b50156111065790889291600754169087516370a0823160e01b9081815230858201528a81602481875afa9081156117db5786916117ae575b50821161172f5750875163095ea7b360e01b81526001600160a01b038716848201908152602081019290925291899183919082908790829060400103925af180156110495791889593916116d898979593611712575086516396f4e9f960e01b81529788958694859384016120c4565b03925af190811561101357506116ed57505080f35b813d831161170b575b6117008183611ff3565b810103126104645780f35b503d6116f6565b61172890873d8911611042576110338183611ff3565b508a610fb7565b899192828a9260248451809481938252308a8301525afa9283156117a4578693611770575b505051634787a10360e11b815292830152602482015260449150fd5b9080929350813d831161179d575b6117888183611ff3565b81010312610909576044945051908580611754565b503d61177e565b82513d88823e3d90fd5b90508a81813d83116117d4575b6117c58183611ff3565b8101031261098b57518c611668565b503d6117bb565b8a513d88823e3d90fd5b6117fc9150893d8b11611042576110338183611ff3565b8a611630565b8281939296503d831161182c575b61181a8183611ff3565b8101031261027057899051938c6115fc565b503d611810565b809250898092503d8311611866575b61184c8183611ff3565b81010312610a6457518481168103610a645784908a6115c5565b503d611842565b855162461bcd60e51b8152808801849052602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608490fd5b845162461bcd60e51b8152808701839052602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608490fd5b825162461bcd60e51b815280850187905260136024820152724e6f7420656e6f756768742062616c616e636560681b6044820152606490fd5b825162461bcd60e51b815280850187905260126024820152714e6f6465206973206e6f742041637469766560701b6044820152606490fd5b5082903461027057606036600319011261027057611995611edc565b61199d611ef2565b6001600160a01b038216845260036020908152858520338652905292849020546044359392600182016119d9575b6020866103b7878787612224565b848210611a0257509183916119f7602096956103b795033383612438565b9193948193506119cb565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b509134610464578160031936011261046457611a5f611edc565b92611a68611ef2565b9060018060a01b03809516928381526008956020968088528683209560018060ff8954851c161515149788611ba2575b5087611b8e575b87611b6f575b87611b38575b87611b1e575b5086611b05575b86611af0575b86611acf575b888789519015158152f35b83528752858220830154931681528490200154119050388080808080611ac4565b80845281895287842085015415159650611abe565b858316845281895287842054821c60ff16159650611ab8565b8684168552828a528885205460ff16151514965038611ab1565b96508286168452818952868885200154610e108101809111611b5c57421096611aab565b634e487b7160e01b855260118652602485fd5b9650808452868885200154610e108101809111611b5c57421096611aa5565b868416855288852081015415159750611a9f565b8101541515975038611a98565b503461024d578260031936011261024d5760209250549051908152f35b5050346102705781600319360112610270576020906001600160401b03611bf16121cb565b915191168152f35b503461024d57606036600319011261024d57611c13611edc565b90602435906001600160401b0382168203610909576044359182151591828403610a6057611c3f612593565b60ff6009541615611cd65750600190818060a01b03851695868852600860205287209261ff0069ffffffffffffffff000085549360101b169269ffffffffffffffffffff19169160081b161717179055611c97578280f35b60098054610100600160a81b03191660089290921b610100600160a81b0316919091179055600a80546001600160a01b03191691909117905538808280f35b606490602087519162461bcd60e51b83528201526015602482015274139bc81b5bdc99481b9bd9195cc8185b1b1bddd959605a1b6044820152fd5b5050346102705780600319360112610270576020906103b7611d31611edc565b6024359033612438565b5091346104645780600319360112610464578151918160055492600184811c91818616958615611dfe575b60209687851081146106c4578899509688969785829a52918260001461069d575050600114611da25750505061063d929161062e910385611ff3565b9190869350600583527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db05b828410611de6575050508201018161062e61063d61061b565b8054848a018601528895508794909301928101611dcd565b92607f1692611d66565b503461024d578160031936011261024d57611e21611edc565b913384526008602052611e676001600160401b03808387205460101c16907f0000000000000000000000000000000000000000000000000000000000000000161461206a565b338452600860205260ff8185205416156105af578361090660243585612394565b9250503461024d57602036600319011261024d573563ffffffff60e01b811680910361024d57602092506385572ffb60e01b8114908115611ecb575b5015158152f35b6301ffc9a760e01b14905038611ec4565b600435906001600160a01b0382168203610afc57565b602435906001600160a01b0382168203610afc57565b919082519283825260005b848110611f34575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611f13565b600435906001600160401b0382168203610afc57565b60a081019081106001600160401b03821117611f7957604052565b634e487b7160e01b600052604160045260246000fd5b602081019081106001600160401b03821117611f7957604052565b6001600160401b038111611f7957604052565b604081019081106001600160401b03821117611f7957604052565b608081019081106001600160401b03821117611f7957604052565b90601f801991011681019081106001600160401b03821117611f7957604052565b81601f82011215610afc578035906001600160401b038211611f795760405192612048601f8401601f191660200185611ff3565b82845260208383010111610afc57816000926020809301838601378301015290565b1561207157565b60405162461bcd60e51b815260206004820152602560248201527f52657175697265206d617374657220616e64206e6f646520696e2073616d652060448201526431b430b4b760d91b6064820152608490fd5b906001600160401b0390939293168152604060209181838201526120f3855160a08484015260e0830190611f08565b9161210f8487015193603f199485858303016060860152611f08565b8187015194848483030160808501528080875193848152019601926000905b83821061216757505050505060c06080612164959660018060a01b0360608201511660a085015201519282850301910152611f08565b90565b845180516001600160a01b0316895283015188840152968701969382019360019091019061212e565b90816020910312610afc57518015158103610afc5790565b919082018092116121b557565b634e487b7160e01b600052601160045260246000fd5b600a546001600160a01b039081169081156121fe575060005260086020526001600160401b0360406000205460101c1690565b905060095460081c1660005260086020526001600160401b0360406000205460101c1690565b6001600160a01b0390811691821561234157169182156122f0576000828152600260205260408120549180831061229c57604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef95876020965260028652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b03169081156123f3577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6020826123d66000946004546121a8565b6004558484526002825260408420818154019055604051908152a3565b60405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606490fd5b6001600160a01b039081169182156124e957169182156124995760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260038252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b51906001600160a01b0382168203610afc57565b519060ff82168203610afc57565b604051906397a657c960e01b602083015251602482015260248152606081018181106001600160401b03821117611f795760405290565b6000546001600160a01b031633036125a757565b60405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b6044820152606490fdfea2646970667358221220424abf01f28c727fd5118f4ea086fbc62dea9dbd7a02d35b2b65378154e7fdaa64736f6c63430008130033",
  "deployedSourceMap": "783:14291:14:-:0;;;;;;;;;;;;-1:-1:-1;783:14291:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;783:14291:14;;;;;;:::i;:::-;2032:59:9;;;:::i;:::-;-1:-1:-1;;;;;783:14291:14;;;;1643:10:9;1637:16;;783:14291:14;;-1:-1:-1;;783:14291:14;;;-1:-1:-1;;;;;;783:14291:14;;;;;;;;1719:39:9;783:14291:14;;1719:39:9;783:14291:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2271:29;783:14291;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;-1:-1:-1;;;;;783:14291:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;783:14291:14;;;;;;;;-1:-1:-1;;;;;783:14291:14;;:::i;:::-;;;;2111:48;783:14291;;;;;2111:48;783:14291;2111:48;;783:14291;2111:48;;;783:14291;2111:48;783:14291;2111:48;;783:14291;2111:48;;783:14291;;-1:-1:-1;;;;;783:14291:14;;;;;;;;;;;;2111:48;783:14291;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2277:12:4;-1:-1:-1;;;;;783:14291:14;;;;;;;;;;;;;;;;;;;;;;3881:6:0;783:14291:14;;:::i;:::-;;;719:10:3;;3881:6:0;:::i;:::-;783:14291:14;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;719:10:3;;783:14291:14;;;;;;;;;;;;;;;;;;;;;6809:35:0;;;;783:14291:14;;;;6945:34:0;783:14291:14;;;;719:10:3;6945:34:0;:::i;783:14291:14:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:14291:14;;;;;;;;;;;;;;;;;;;;;3046:10;783:14291;;3035:10;783:14291;;3014:146;-1:-1:-1;;;;;783:14291:14;;;;;;;;3073:24;;783:14291;3035:62;3014:146;:::i;:::-;3046:10;783:14291;;3035:10;783:14291;;;;;;;;2839:36;2835:110;;3046:10;;783:14291;;3035:10;783:14291;;;;;;;;;;;;;3046:10;783:14291;;;5517:23;783:14291;;;5517:23;783:14291;;;2835:110;783:14291;;;2898:36;;;;;;3046:10;2898:36;;;783:14291;2898:36;783:14291;;;;;;;;-1:-1:-1;;783:14291:14;;;;3046:10;783:14291;;3035:10;783:14291;;3014:146;-1:-1:-1;;;;;783:14291:14;;;;;;;;3073:24;;783:14291;3035:62;3014:146;:::i;:::-;3046:10;783:14291;;3035:10;783:14291;;;;;;;;2839:36;2835:110;;3046:10;783:14291;;3035:10;783:14291;;;;6998:15;783:14291;6956:39;;783:14291;;;7023:38;;;783:14291;;;;7089:38;;783:14291;;;7155:33;;783:14291;;;2835:110;783:14291;;;;2898:36;;;;;;3046:10;2898:36;;;783:14291;2898:36;783:14291;;;;;;;;;;;;;;;;;;2453:7:0;783:14291:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;2453:7:0;783:14291:14;;;;;;;;;-1:-1:-1;;;783:14291:14;;;;;;;;;;;;;;;;;;;-1:-1:-1;783:14291:14;;;;;;;;;;;-1:-1:-1;;783:14291:14;;;;;;;;;;;;;;;;-1:-1:-1;783:14291:14;;-1:-1:-1;783:14291:14;;-1:-1:-1;783:14291:14;;-1:-1:-1;783:14291:14;;;-1:-1:-1;;;783:14291:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;783:14291:14;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1816:48:14;783:14291;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;783:14291:14;;;;;;;;;;;;;;;-1:-1:-1;;;;;783:14291:14;2449:12:4;783:14291:14;;2427:10:4;:35;2423:73;;783:14291:14;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7824:22;;783:14291;;;;7813:45;;783:14291;;;;;7813:45;;;;783:14291;:::i;:::-;;;;;2840:10;783:14291;;;;;;;;2839:36;2835:110;;477:20:15;;;783:14291:14;;;;466:41:15;;783:14291:14;;;;;466:41:15;783:14291:14;466:41:15;;783:14291:14;:::i;:::-;;7943:12;;;4247:20;;;;;783:14291;;;;;4223:93;;783:14291;;;;;;4223:93;783:14291;4346:6;4223:93;;;783:14291;:::i;:::-;;;;;:::i;:::-;;;;;;4346:6;:::i;:::-;783:14291;;;;;;7939:306;783:14291;8026:12;;;;;;;;;8022:223;783:14291;;;5094:22;;;;;;783:14291;;;;5083:45;;783:14291;;;;;5083:45;;;;783:14291;:::i;:::-;;;;2840:10;783:14291;;;;;;;;;;;;;5197:22;783:14291;;;;;5186:45;;783:14291;;;;;5186:45;;783:14291;:::i;:::-;;;;;5173:58;783:14291;;;5173:58;783:14291;;;;;;;;;;;8022:223;8121:1;8110:12;;;;;;;;;8106:139;8121:1;;;6123:20;;783:14291;;;;;6095:114;;783:14291;;;;;6095:114;;;783:14291;:::i;:::-;;;;;;;;;;;;;;;6242:22;;;783:14291;;;;6231:45;;783:14291;;;;;6231:45;;;;783:14291;:::i;:::-;;;;2840:10;783:14291;;6310:15;783:14291;;;;6220:87;783:14291;6357:22;;783:14291;;;;6346:45;;783:14291;;;;;6346:45;;;;783:14291;:::i;:::-;;;;8121:1;783:14291;;;6335:86;783:14291;6471:22;;783:14291;;;;6460:45;;783:14291;;;;;6460:45;;;;783:14291;:::i;:::-;;;;;;;;6449:86;783:14291;6585:22;783:14291;;;;;6574:45;;783:14291;;;;;6574:45;;783:14291;:::i;:::-;;;;;;6563:81;783:14291;;;;;;;;;;;;;;;8106:139;783:14291;;;;;;;;;;;8199:35;;;;783:14291;;;;;;;;;8199:35;2835:110;783:14291;;-1:-1:-1;;;2898:36:14;;;;;783:14291;;;;2898:36;783:14291;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2423:73:4;783:14291:14;;;;2471:25:4;;;;;;2427:10;2471:25;;;783:14291:14;2471:25:4;783:14291:14;;;;;;;;;;;;;;1142:14:9;783:14291:14;;-1:-1:-1;;;;;783:14291:14;;;;1128:10:9;:28;783:14291:14;;-1:-1:-1;;783:14291:14;;-1:-1:-1;;;;;;783:14291:14;;;1128:10:9;783:14291:14;;;;;;;-1:-1:-1;783:14291:14;;1287:42:9;783:14291:14;;1287:42:9;783:14291:14;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:14291:14;;;;;;;;;;;;;-1:-1:-1;;783:14291:14;;;;;;;;-1:-1:-1;;;;;783:14291:14;;:::i;:::-;;;;3506:9:0;783:14291:14;;;;;;;;;;;;;;;;;;;;;;;2032:59:9;;:::i;:::-;783:14291:14;;3240:22;783:14291;;3240:22;783:14291;;;;;;;;;;;;;;;;;2240:25;783:14291;;;-1:-1:-1;;;;;783:14291:14;;;;;;;;;;;;;;;;;;;;;;;;;2166:33;783:14291;;;;;;;;;;;;;;;;;;;;;;;;2205:29;783:14291;;;;;;;;-1:-1:-1;;;;;783:14291:14;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;12142:1;12174:120;;;783:14291;-1:-1:-1;;;;;783:14291:14;;;;;;;;;;;;;;;;;;;;;;;;12174:120;;;;;;:::i;:::-;783:14291;12315:10;783:14291;;;;12304:10;783:14291;;;;;;;;;;;;;12315:10;783:14291;;;;;;;;;;;;;;;12400:24;;783:14291;12362:62;;12358:322;783:14291;;;;;;;;;12315:10;783:14291;;12440:132;;;;;783:14291;;;;;;;;;;;;;;;12440:132;;;;783:14291;;;;;12440:132;;;;;;;;;;12358:322;;;;12315:10;783:14291;;12690:27;783:14291;;-1:-1:-1;;;;;;783:14291:14;12304:10;783:14291;;;-1:-1:-1;;;;;783:14291:14;;;;-1:-1:-1;;;;;;783:14291:14;;;12777:15;12760:32;783:14291;;;12440:132;;;;:::i;:::-;783:14291;;12440:132;;;;;783:14291;;;;;;;;12358:322;783:14291;;;;;;;;;;;;;;;;2839:36;2835:110;;783:14291;9135:11;783:14291;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;10878:21;;;;783:14291;10878:21;;;;;;:::i;:::-;783:14291;;;;;:::i;:::-;;;;11123:166;783:14291;;;;;:::i;:::-;11260:9;783:14291;;11123:166;:::i;:::-;783:14291;;;;;;;:::i;:::-;;;10828:626;;;783:14291;10828:626;;;783:14291;10828:626;;783:14291;;10828:626;;783:14291;;;-1:-1:-1;;;9288:16:14;;10828:626;783:14291;9288:4;783:14291;9288:4;:16;;;;;;;;;;;;;;12358:322;783:14291;;;;;;;;;;9388:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;12358:322;783:14291;;;;;;;;;;;9476:57;;9501:10;9476:57;;;783:14291;9288:4;783:14291;;;;;;;;;9476:57;;;;;;;;;;;12358:322;783:14291;;;;9135:11;783:14291;;;;;;;;9607:36;;;;9288:4;9607:36;;;783:14291;9607:36;;783:14291;9607:36;;;;;;;;;;;;;12358:322;9600:43;;;9596:128;;-1:-1:-1;783:14291:14;;-1:-1:-1;;;9842:42:14;;-1:-1:-1;;;;;783:14291:14;;9842:42;;;783:14291;;;;;;;;;;;;;;;;;;;;;;;;;;;9842:42;;;;;;;;;;;;;9988:58;9842:42;;;;;;12358:322;-1:-1:-1;783:14291:14;;-1:-1:-1;;;9988:58:14;;783:14291;;;;;;;9988:58;;;:::i;:::-;;;;;;;;;;;;;12358:322;;;;;9988:58;;;;;;;;;;;;:::i;:::-;;;783:14291;;;;9988:58;;;;;;;;;;783:14291;;;;;;;;9842:42;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;783:14291;;;;;;;;;9596:128;783:14291;;;;;;;;;;9681:36;;;;;;9288:4;9681:36;;;783:14291;9681:36;;;;;;;;;;9596:128;-1:-1:-1;783:14291:14;-1:-1:-1;;;9664:60:14;;;;;783:14291;;;;;;;-1:-1:-1;9664:60:14;9681:36;;;;;;;;;;;;;;;;:::i;:::-;;;783:14291;;;;;;;9681:36;;;;;;;;;;783:14291;;;;;;;;;;9607:36;;;;;;;;;;;;;;;;:::i;:::-;;;783:14291;;;;;9607:36;;;;;;;;;783:14291;;;;;;;;;;;;-1:-1:-1;;;783:14291:14;;;;;;;;;;;;;;;;;;;;;9476:57;;;;;;;;;;;;;;:::i;:::-;;;;;783:14291;;;;;;;;;9388:56;;;;;;;;;;;;;;;;;:::i;:::-;;;783:14291;;;;;;;;9388:56;;;;;;;;;;783:14291;;;;;;;;;9288:16;;;;;;;;;;;;;;;;;;:::i;:::-;;;783:14291;;;;;;;;;;;;9288:16;;;;;;;;;;;783:14291;;;;;;;;;2835:110;783:14291;;-1:-1:-1;;;2898:36:14;;;;;783:14291;;;;;2898:36;783:14291;;;;;;;;;;;;-1:-1:-1;;783:14291:14;;;;;;:::i;:::-;;;;:::i;:::-;-1:-1:-1;;;;;783:14291:14;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;783:14291:14;;;;;1662:48:15;783:14291:14;;;;;;;;;:::i;:::-;;;;;;;;;992:20:15;;;783:14291:14;992:20:15;;;;;;:::i;:::-;783:14291:14;;;;;:::i;:::-;;;;1226:157:15;783:14291:14;;;;;:::i;:::-;1357:9:15;783:14291:14;;1226:157:15;:::i;:::-;783:14291:14;;;;;;;:::i;:::-;;;945:574:15;;;783:14291:14;945:574:15;;;783:14291:14;;945:574:15;;783:14291:14;;945:574:15;;783:14291:14;;;-1:-1:-1;;;1662:48:15;;783:14291:14;;;;;;;1662:48:15;;;:::i;:::-;;;;;;;;;;;;;783:14291:14;;;;;;;1662:48:15;;;;;;;;;;;;;;;;;:::i;:::-;;;783:14291:14;;;;;1662:48:15;;;;;;;;;783:14291:14;;;;;;;;;;;;;;6038:38:0;783:14291:14;;;;;:::i;:::-;719:10:3;;783:14291:14;;;;;;;;;;;;;;;;;6038:38:0;783:14291:14;;;;;;6038:38:0;:::i;:::-;719:10:3;;6038:38:0;:::i;783:14291:14:-;;;;;;;;;;;;;;;;;3173:2:0;783:14291:14;;;;;;;;;;;;;;;;;;;;13109:10;783:14291;-1:-1:-1;;;;;783:14291:14;;;;;13098:10;783:14291;;;;;;;;;;;;;;;;;13195:10;783:14291;;3506:9:0;783:14291:14;;;;;;13175:31;;783:14291;;;;13296:46;;;;;783:14291;13195:10;783:14291;;;;;;;;;;13296:46;;;;;;:::i;:::-;13195:10;9505:21:0;783:14291:14;;13195:10;783:14291;;3506:9:0;783:14291:14;;;;;;9696:24:0;;;;783:14291:14;;13195:10;;;;;;;;783:14291;;3506:9:0;783:14291:14;;;;;;;;;;;;;;;;;;;9978:37:0;13195:10:14;;9978:37:0;;783:14291:14;13109:10;783:14291;;;;;;13098:10;783:14291;;;;;;;-1:-1:-1;;;;;783:14291:14;;;;;;13431:24;;783:14291;13393:62;;13389:249;783:14291;;;;;;;;;13109:10;783:14291;;13471:59;;;;;783:14291;;-1:-1:-1;;;13471:59:14;;13195:10;13471:59;;;783:14291;;;;;;;;;;;;;;-1:-1:-1;783:14291:14;;;;;;;;13471:59;;;;;;;;;;;;13389:249;783:14291;;13471:59;;;;:::i;13389:249::-;783:14291;;;;;;;;;;;;;;2839:36;2835:110;;783:14291;9135:11;783:14291;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;10878:21;;;;783:14291;10878:21;;;;;;:::i;:::-;783:14291;;;;;:::i;:::-;;;;11123:166;783:14291;;;;;:::i;11123:166::-;783:14291;;;;;;;:::i;:::-;;;10828:626;;;783:14291;10828:626;;;783:14291;10828:626;;783:14291;;10828:626;;783:14291;;;-1:-1:-1;;;9288:16:14;;10828:626;783:14291;9288:4;783:14291;9288:4;:16;;;;;;;;;;;;;;13389:249;783:14291;;;;;;;;;;9388:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;13389:249;783:14291;;;;;;;;;;;9476:57;;13195:10;9476:57;;;783:14291;9288:4;783:14291;;;;;;;;;9476:57;;;;;;;;;;;13389:249;783:14291;;;;;;;;9135:11;783:14291;;;;;;;;9607:36;;;;9288:4;9607:36;;;783:14291;9607:36;;783:14291;9607:36;;;;;;;;;;;;;13389:249;9600:43;;;9596:128;;-1:-1:-1;783:14291:14;;-1:-1:-1;;;9842:42:14;;-1:-1:-1;;;;;783:14291:14;;9842:42;;;783:14291;;;;;;;;;;;;;;;;;;;;;;;;9842:42;;;;;;;;;;;;;9988:58;9842:42;;;;;;-1:-1:-1;783:14291:14;;-1:-1:-1;;;9988:58:14;;783:14291;;;;;;;9988:58;;;:::i;:::-;;;;;;;;;;;;;13389:249;;783:14291;;9988:58;;;;;;;;;;;;:::i;:::-;;;783:14291;;;;;;9988:58;;;;;9842:42;;;;;;;;;;;;;:::i;:::-;;;;;9596:128;783:14291;;;;;;;;;9681:36;;;;;;9288:4;9681:36;;;783:14291;9681:36;;;;;;;;;;;9596:128;-1:-1:-1;;783:14291:14;-1:-1:-1;;;9664:60:14;;;;;783:14291;;;;;;;-1:-1:-1;9664:60:14;9681:36;;;;;;;;;;;;;;;;;:::i;:::-;;;783:14291;;;;;;;;9681:36;;;;;;;;;;;783:14291;;;;;;;;;9607:36;;;;;;;;;;;;;;;;:::i;:::-;;;783:14291;;;;;9607:36;;;;;;;;;783:14291;;;;;;;;;9476:57;;;;;;;;;;;;;;:::i;:::-;;;;9388:56;;;;;;;;;;;;;;;;;:::i;:::-;;;783:14291;;;;;;;9388:56;;;;;;;;;9288:16;;;;;;;;;;;;;;;;;;:::i;:::-;;;783:14291;;;;;;;;;;;;9288:16;;;;;;;;;;783:14291;;;-1:-1:-1;;;783:14291:14;;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:14291:14;;;;;;;;;;-1:-1:-1;;;783:14291:14;;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:14291:14;;;;;;;;;;-1:-1:-1;;;783:14291:14;;;;;;;;;;;;;-1:-1:-1;;;783:14291:14;;;;;;;;;;-1:-1:-1;;;783:14291:14;;;;;;;;;;;;;-1:-1:-1;;;783:14291:14;;;;;;;;;;;;;;;;-1:-1:-1;;783:14291:14;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;783:14291:14;;;;;;;;;;;;719:10:3;783:14291:14;;;;;;;;;;;;;;11351:37:0;;11347:243;;783:14291:14;;5441:6:0;;;;;;:::i;11347:243::-;11412:26;;;783:14291:14;;;;;;11539:25:0;783:14291:14;;;5441:6:0;783:14291:14;;719:10:3;11539:25:0;;:::i;:::-;11347:243;;;;;;;;783:14291:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;14070:10;783:14291;;;;;;;;;;;;;;;;;;;;14070:44;:104;;;;783:14291;14070:168;;;;783:14291;14070:249;;;783:14291;14070:346;;;783:14291;14070:409;;;783:14291;14070:474;;;;783:14291;14070:528;;;783:14291;14070:631;;;783:14291;;;;;;;;;;;14070:631;783:14291;;;;;;;14614:34;;783:14291;;;;;;;;14663:38;783:14291;-1:-1:-1;;;14070:631:14;;;;;;;;:528;783:14291;;;;;;;;;14560:34;;783:14291;14560:38;;;-1:-1:-1;14070:528:14;;:474;783:14291;;;;;;;;;;;;;;;;;;-1:-1:-1;14070:474:14;;:409;783:14291;;;;;;;;;;;;;;;;14432:47;;-1:-1:-1;14070:409:14;;;:346;783:14291;;;;;;;;;;;;;;14335:44;783:14291;14382:4;783:14291;;;;;;;14401:15;-1:-1:-1;14070:346:14;;;783:14291;-1:-1:-1;;;783:14291:14;;;;;;;;14070:249;783:14291;;;;;;;;;14254:40;783:14291;14297:4;783:14291;;;;;;;14304:15;-1:-1:-1;14070:249:14;;;:168;783:14291;;;;;;;;14190:44;;783:14291;14190:48;;;-1:-1:-1;14070:168:14;;:104;14130:40;;783:14291;14130:44;;;-1:-1:-1;14070:104:14;;;783:14291;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;783:14291:14;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;783:14291:14;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;783:14291:14;;;;;;;;;;;;;;;;;;2032:59:9;;:::i;:::-;783:14291:14;3424:14;783:14291;;;;;;;;;;;;;;;;;;;3474:10;783:14291;;;;;;;;;;;;;;;;;;3474:10;783:14291;;;;;;;3647:109;;783:14291;;;3647:109;3424:14;783:14291;;-1:-1:-1;;;;;;783:14291:14;3474:10;783:14291;;;;-1:-1:-1;;;;;783:14291:14;;;;;;;3721:24;783:14291;;-1:-1:-1;;;;;;783:14291:14;;;;;;;3647:109;;783:14291;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:14291:14;;;;;;;;;;;;;;;;;;;;;4593:6:0;783:14291:14;;:::i;:::-;;;719:10:3;;4593:6:0;:::i;783:14291:14:-;;;;;;;;;;;;;;;;;;2240:5:0;783:14291:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;2240:5:0;783:14291:14;;;;;;;;;-1:-1:-1;;;783:14291:14;;;;;;;;;;;;;;;;;;;-1:-1:-1;783:14291:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3046:10;;783:14291;;3035:10;783:14291;;3014:146;-1:-1:-1;;;;;783:14291:14;;;;;;;;3073:24;;783:14291;3035:62;3014:146;:::i;:::-;3046:10;783:14291;;3035:10;783:14291;;;;;;;;2839:36;2835:110;;783:14291;4638:6;783:14291;;;4638:6;:::i;783:14291::-;;;;;;;;;-1:-1:-1;;783:14291:14;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1509:56:4;;;:100;;;;783:14291:14;;;;;;;1509:100:4;-1:-1:-1;;;1569:40:4;;-1:-1:-1;1509:100:4;;;783:14291:14;;;;-1:-1:-1;;;;;783:14291:14;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;783:14291:14;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;783:14291:14;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;783:14291:14;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;783:14291:14;;;;;;;:::o;:::-;-1:-1:-1;;;;;783:14291:14;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;783:14291:14;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;783:14291:14;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;783:14291:14;;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;;;;783:14291:14;;;;;;;;;;;-1:-1:-1;;783:14291:14;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;783:14291:14;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;783:14291:14;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:14291:14;;;;;;;;;-1:-1:-1;;;;;783:14291:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;-1:-1:-1;;;;;783:14291:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;14837:235;14918:10;783:14291;-1:-1:-1;;;;;783:14291:14;;;;14918:24;;14914:100;;783:14291;-1:-1:-1;783:14291:14;15031:10;783:14291;;-1:-1:-1;;;;;783:14291:14;-1:-1:-1;783:14291:14;;;;;14837:235;:::o;14914:100::-;783:14291;;14976:14;783:14291;;;;-1:-1:-1;783:14291:14;;;;-1:-1:-1;;;;;783:14291:14;-1:-1:-1;783:14291:14;;;;;14958:45;:::o;7473:818:0:-;-1:-1:-1;;;;;783:14291:14;;;;7599:18:0;;783:14291:14;;;7677:16:0;;;783:14291:14;;7615:1:0;783:14291:14;;;7815:9:0;783:14291:14;;;;;;7848:21:0;;;;783:14291:14;;;;;8210:26:0;783:14291:14;;;;;7815:9:0;783:14291:14;;;;;;;;;;;;;;;;;;;;;;8210:26:0;7473:818::o;783:14291:14:-;;;-1:-1:-1;;;783:14291:14;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:14291:14;;;;;;;;;;-1:-1:-1;;;783:14291:14;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:14291:14;;;;;;;;;;-1:-1:-1;;;783:14291:14;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:14291:14;;;;;;;8567:535:0;-1:-1:-1;;;;;783:14291:14;;8650:21:0;;783:14291:14;;8999:37:0;783:14291:14;;8778:22:0;8669:1;783:14291:14;8778:22:0;783:14291:14;8778:22:0;:::i;:::-;;783:14291:14;;;;8946:9:0;783:14291:14;;;;;;;;;;;;;;;;8999:37:0;8567:535::o;783:14291:14:-;;;-1:-1:-1;;;783:14291:14;;;;;;;;;;;;;;;;;;;;10504:370:0;-1:-1:-1;;;;;783:14291:14;;;;10635:19:0;;783:14291:14;;;10713:21:0;;;783:14291:14;;;10835:32:0;783:14291:14;;10652:1:0;783:14291:14;10784:11:0;783:14291:14;;;10652:1:0;783:14291:14;;10652:1:0;783:14291:14;;;;;10652:1:0;783:14291:14;;;;;;;10835:32:0;10504:370::o;783:14291:14:-;;;-1:-1:-1;;;783:14291:14;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:14291:14;;;;;;;;;;-1:-1:-1;;;783:14291:14;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:14291:14;;;;;;;;;;-1:-1:-1;;;;;783:14291:14;;;;;;:::o;:::-;;;;;;;;;;:::o;1285:170:7:-;783:14291:14;;;;;;1394:56:7;;;;1218:10;1394:56;;;783:14291:14;1394:56:7;;;783:14291:14;;;;;;-1:-1:-1;;;;;783:14291:14;;;;;;;1285:170:7;:::o;1797:158:9:-;1916:7;783:14291:14;-1:-1:-1;;;;;783:14291:14;1902:10:9;:21;783:14291:14;;1797:158:9:o;783:14291:14:-;;;-1:-1:-1;;;783:14291:14;;;;;;;;;;;;-1:-1:-1;;;783:14291:14;;;;;;",
  "language": "Solidity",
  "natspec": {
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "acceptOwnership()": {
        "notice": "Allows an ownership transfer to be completed by the recipient."
      },
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))": {
        "details": "Note ensure you check the msg.sender is the OffRampRouter",
        "notice": "Called by the Router to deliver a message. If this reverts, any token transfers also revert. The message will move to a FAILED state and become available for manual execution.",
        "params": {
          "message": "CCIP Message"
        }
      },
      "constructor": {
        "notice": "Constructor initializes the contract with the router address.",
        "params": {
          "_link": "The address of the link contract.",
          "_router": "The address of the router contract."
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "getRouter()": {
        "notice": "Return the current router",
        "returns": {
          "_0": "CCIP router address"
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "notice": "Get the current owner"
      },
      "supportsInterface(bytes4)": {
        "details": "Should indicate whether the contract implements IAny2EVMMessageReceiver e.g. return interfaceId == type(IAny2EVMMessageReceiver).interfaceId || interfaceId == type(IERC165).interfaceId This allows CCIP to check if ccipReceive is available before calling it. If this returns false or reverts, only tokens are transferred to the receiver. If this returns true, tokens are transferred and ccipReceive is called atomically. Additionally, if the receiver address does not have code associated with it at the time of execution (EXTCODESIZE returns 0), only tokens will be transferred.",
        "notice": "IERC165 supports an interfaceId",
        "params": {
          "interfaceId": "The interfaceId to check"
        },
        "returns": {
          "_0": "true if the interfaceId is supported"
        }
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "notice": "Allows an owner to begin transferring ownership to a new address."
      }
    },
    "title": "- A simple messenger contract for transferring/receiving tokens and data across chains.",
    "version": 1
  },
  "offset": [
    783,
    15074
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x21 JUMPI JUMPDEST POP POP POP CALLDATASIZE ISZERO PUSH2 0x1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x1E88 JUMPI POP DUP1 PUSH4 0x4783EA4 EQ PUSH2 0x1E08 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1D3B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1D11 JUMPI DUP1 PUSH4 0x10A78DF8 EQ PUSH2 0x1BF9 JUMPI DUP1 PUSH4 0x1803C2F5 EQ PUSH2 0x1BCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1BAF JUMPI DUP1 PUSH4 0x1D880928 EQ PUSH2 0x1A45 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1979 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x13A8 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x138C JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x133D JUMPI DUP1 PUSH4 0x544B1709 EQ PUSH2 0x120B JUMPI DUP4 DUP2 PUSH4 0x5C292BE5 EQ PUSH2 0xCB7 JUMPI POP DUP1 PUSH4 0x61AC3F99 EQ PUSH2 0xC8A JUMPI DUP1 PUSH4 0x654E8E0C EQ PUSH2 0xC66 JUMPI DUP1 PUSH4 0x6C1DC077 EQ PUSH2 0xC3D JUMPI DUP1 PUSH4 0x6C98D513 EQ PUSH2 0xC17 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xBDF JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0xB38 JUMPI DUP1 PUSH4 0x85572FFB EQ PUSH2 0x74D JUMPI DUP1 PUSH4 0x8CF19D19 EQ PUSH2 0x709 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x6E1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x5C6 JUMPI DUP1 PUSH4 0x9637120F EQ PUSH2 0x51B JUMPI DUP1 PUSH4 0x995714AE EQ PUSH2 0x467 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x3BE JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0xB0F479A1 EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0xB2D92955 EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0xE12B948B EQ PUSH2 0x251 JUMPI PUSH4 0xF2FDE38B SUB PUSH2 0x11 JUMPI CALLVALUE PUSH2 0x24D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x24D JUMPI PUSH2 0x1B0 PUSH2 0x1EDC JUMP JUMPDEST SWAP1 PUSH2 0x1B9 PUSH2 0x2593 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 CALLER DUP5 EQ PUSH2 0x20A JUMPI POP POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP4 OR SWAP1 SSTORE DUP3 SLOAD AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x270 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x270 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xB SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x270 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x270 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x291 PUSH2 0x1EDC JUMP JUMPDEST DUP3 PUSH2 0x29A PUSH2 0x1EF2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP5 MSTORE PUSH1 0x3 DUP7 MSTORE SWAP3 KECCAK256 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 DUP4 MSTORE DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x24D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x24D JUMPI PUSH1 0xE0 SWAP3 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2EA PUSH2 0x1EDC JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE KECCAK256 DUP1 SLOAD SWAP3 PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD SWAP2 PUSH1 0x3 DUP5 ADD SLOAD SWAP4 ADD SLOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 MLOAD SWAP7 PUSH1 0xFF DUP2 AND ISZERO ISZERO DUP9 MSTORE PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND ISZERO ISZERO PUSH1 0x20 DUP10 ADD MSTORE PUSH1 0x10 SHR AND SWAP1 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x270 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x270 JUMPI MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x270 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x270 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x3B7 PUSH2 0x3AD PUSH2 0x1EDC JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x2224 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP DUP3 CALLVALUE PUSH2 0x464 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x464 JUMPI PUSH2 0x3D8 PUSH2 0x1EDC JUMP JUMPDEST SWAP2 DUP4 PUSH1 0x24 CALLDATALOAD SWAP3 CALLER DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP4 PUSH1 0x0 KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0x413 JUMPI PUSH1 0x20 DUP6 PUSH2 0x3B7 DUP6 DUP6 SUB DUP8 CALLER PUSH2 0x2438 JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x24D JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24D JUMPI CALLER DUP4 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH2 0x4BD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP5 DUP7 KECCAK256 SLOAD PUSH1 0x10 SHR AND SWAP1 PUSH32 0x0 AND EQ PUSH2 0x206A JUMP JUMPDEST CALLER DUP4 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0xFF DUP3 DUP5 KECCAK256 SLOAD AND ISZERO PUSH2 0x505 JUMPI POP CALLER DUP3 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE DUP2 KECCAK256 PUSH2 0x100 PUSH2 0xFF00 NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0xA SLOAD AND OR PUSH1 0xA SSTORE DUP1 RETURN JUMPDEST PUSH1 0x24 SWAP2 MLOAD SWAP1 PUSH4 0x6A9FF79F PUSH1 0xE1 SHL DUP3 MSTORE CALLER SWAP1 DUP3 ADD MSTORE REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x24D JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x24D JUMPI CALLER DUP4 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH2 0x573 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP4 DUP7 KECCAK256 SLOAD PUSH1 0x10 SHR AND SWAP1 PUSH32 0x0 AND EQ PUSH2 0x206A JUMP JUMPDEST CALLER DUP4 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0xFF DUP2 DUP5 KECCAK256 SLOAD AND ISZERO PUSH2 0x5AF JUMPI CALLER DUP4 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE DUP3 KECCAK256 TIMESTAMP PUSH1 0x1 DUP3 ADD SSTORE DUP2 CALLDATALOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x44 CALLDATALOAD SWAP2 ADD SSTORE DUP1 RETURN JUMPDEST PUSH1 0x24 SWAP3 POP MLOAD SWAP1 PUSH4 0x6A9FF79F PUSH1 0xE1 SHL DUP3 MSTORE CALLER SWAP1 DUP3 ADD MSTORE REVERT JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x464 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x464 JUMPI DUP2 MLOAD SWAP2 DUP2 PUSH1 0x6 SLOAD SWAP3 PUSH1 0x1 DUP5 DUP2 SHR SWAP2 DUP2 DUP7 AND SWAP6 DUP7 ISZERO PUSH2 0x6D7 JUMPI JUMPDEST PUSH1 0x20 SWAP7 DUP8 DUP6 LT DUP2 EQ PUSH2 0x6C4 JUMPI DUP9 SWAP10 POP SWAP7 DUP9 SWAP7 SWAP8 DUP6 DUP3 SWAP11 MSTORE SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x69D JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x641 JUMPI JUMPDEST POP POP POP PUSH2 0x63D SWAP3 SWAP2 PUSH2 0x62E SWAP2 SUB DUP6 PUSH2 0x1FF3 JUMP JUMPDEST MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x1F08 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP1 DUP7 SWAP4 POP PUSH1 0x6 DUP4 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F JUMPDEST DUP3 DUP5 LT PUSH2 0x685 JUMPI POP POP POP DUP3 ADD ADD DUP2 PUSH2 0x62E PUSH2 0x63D PUSH2 0x61B JUMP JUMPDEST DUP1 SLOAD DUP5 DUP11 ADD DUP7 ADD MSTORE DUP9 SWAP6 POP DUP8 SWAP5 SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x66C JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP3 ADD MSTORE SWAP4 ISZERO ISZERO PUSH1 0x5 SHL DUP7 ADD SWAP1 SWAP4 ADD SWAP4 POP DUP5 SWAP3 POP PUSH2 0x62E SWAP2 POP PUSH2 0x63D SWAP1 POP PUSH2 0x61B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x22 DUP11 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x5F1 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x270 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x270 JUMPI SWAP1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x270 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x270 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x24D JUMPI PUSH1 0x20 SWAP2 PUSH1 0x3 NOT DUP4 DUP2 CALLDATASIZE ADD SLT PUSH2 0x909 JUMPI DUP2 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 DUP4 GT PUSH2 0xA60 JUMPI PUSH1 0xA0 SWAP1 DUP4 CALLDATASIZE SUB ADD SLT PUSH2 0x98B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 PUSH32 0x0 DUP5 AND CALLER SUB PUSH2 0xB21 JUMPI DUP5 MLOAD SWAP2 PUSH2 0x7C0 DUP4 PUSH2 0x1F5E JUMP JUMPDEST DUP4 DUP3 ADD CALLDATALOAD DUP4 MSTORE PUSH1 0x24 SWAP1 DUP2 DUP6 ADD CALLDATALOAD DUP2 DUP2 AND DUP2 SUB PUSH2 0xAFC JUMPI DUP9 DUP6 ADD MSTORE PUSH1 0x44 DUP6 ADD CALLDATALOAD DUP2 DUP2 GT PUSH2 0xA68 JUMPI PUSH2 0x7F5 SWAP1 DUP5 CALLDATASIZE SWAP2 DUP9 ADD ADD PUSH2 0x2014 JUMP JUMPDEST SWAP4 DUP8 DUP2 ADD SWAP5 DUP6 MSTORE PUSH1 0x64 DUP7 ADD CALLDATALOAD DUP3 DUP2 GT PUSH2 0xB19 JUMPI PUSH2 0x817 SWAP1 DUP6 CALLDATASIZE SWAP2 DUP10 ADD ADD PUSH2 0x2014 JUMP JUMPDEST SWAP6 PUSH1 0x60 DUP3 ADD SWAP7 DUP8 MSTORE PUSH1 0x84 DUP2 ADD CALLDATALOAD SWAP1 DUP4 DUP3 GT PUSH2 0xB1D JUMPI ADD CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0xB19 JUMPI DUP5 DUP2 ADD CALLDATALOAD SWAP3 DUP4 GT PUSH2 0xB05 JUMPI DUP9 MLOAD SWAP3 PUSH2 0x855 DUP12 DUP3 PUSH1 0x5 SHL ADD DUP6 PUSH2 0x1FF3 JUMP JUMPDEST DUP1 DUP5 MSTORE DUP5 DUP12 DUP6 ADD SWAP2 PUSH1 0x6 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0xB01 JUMPI DUP6 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xAC2 JUMPI POP POP POP PUSH1 0x80 ADD MSTORE DUP3 MLOAD DUP8 DUP2 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0xA64 JUMPI PUSH2 0x897 DUP9 DUP8 SWAP3 ADD PUSH2 0x253A JUMP JUMPDEST AND DUP1 DUP10 MSTORE PUSH1 0x8 DUP9 MSTORE PUSH1 0xFF DUP8 DUP11 KECCAK256 SLOAD AND ISZERO PUSH2 0xAAD JUMPI POP DUP4 MLOAD DUP8 DUP2 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0xA64 JUMPI PUSH2 0x8C7 DUP9 PUSH1 0xFF SWAP3 ADD PUSH2 0x254E JUMP JUMPDEST AND DUP1 PUSH2 0x90D JUMPI POP POP POP POP MLOAD SWAP2 PUSH1 0x60 DUP4 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0x909 JUMPI PUSH2 0x8FC PUSH1 0x60 SWAP2 PUSH2 0x8F4 PUSH2 0x906 SWAP7 DUP7 ADD PUSH2 0x254E JUMP JUMPDEST POP DUP5 ADD PUSH2 0x253A JUMP JUMPDEST SWAP3 ADD MLOAD SWAP2 AND PUSH2 0x2394 JUMP JUMPDEST DUP1 RETURN JUMPDEST DUP5 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 SWAP9 SWAP8 SWAP6 SWAP4 SWAP5 SWAP7 SWAP9 EQ PUSH1 0x0 EQ PUSH2 0x98F JUMPI POP POP POP POP DUP2 MLOAD DUP4 DUP2 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0x98B JUMPI PUSH2 0x93D DUP5 DUP7 SWAP3 ADD PUSH2 0x253A JUMP JUMPDEST AND DUP6 MSTORE PUSH1 0x8 DUP4 MSTORE DUP5 KECCAK256 PUSH2 0x100 PUSH2 0xFF00 NOT DUP3 SLOAD AND OR SWAP1 SSTORE MLOAD SWAP1 DUP1 DUP3 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0x987 JUMPI PUSH2 0x96B SWAP2 ADD PUSH2 0x253A JUMP JUMPDEST AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0xA SLOAD AND OR PUSH1 0xA SSTORE DUP1 RETURN JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST PUSH1 0x2 SWAP1 SWAP8 SWAP5 SWAP6 SWAP8 SWAP7 SWAP4 SWAP7 EQ PUSH1 0x0 EQ PUSH2 0xA6C JUMPI POP MLOAD SWAP5 PUSH1 0x80 DUP7 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0xA60 JUMPI PUSH2 0x9BC DUP3 DUP8 ADD PUSH2 0x254E JUMP JUMPDEST POP DUP4 DUP7 ADD MLOAD SWAP6 PUSH1 0x80 PUSH1 0x60 DUP3 ADD MLOAD SWAP2 ADD MLOAD SWAP7 DUP3 MLOAD DUP5 DUP2 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0xA68 JUMPI PUSH2 0x9E7 DUP6 DUP8 SWAP3 ADD PUSH2 0x253A JUMP JUMPDEST AND DUP10 MSTORE PUSH1 0x8 DUP5 MSTORE TIMESTAMP PUSH1 0x1 DUP8 DUP12 KECCAK256 ADD SSTORE DUP3 MLOAD DUP5 DUP2 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0xA68 JUMPI PUSH2 0xA10 DUP6 DUP8 SWAP3 ADD PUSH2 0x253A JUMP JUMPDEST AND DUP10 MSTORE PUSH1 0x2 DUP7 DUP11 KECCAK256 ADD SSTORE DUP2 MLOAD DUP4 DUP2 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0xA64 JUMPI PUSH2 0xA34 DUP5 DUP7 SWAP3 ADD PUSH2 0x253A JUMP JUMPDEST AND DUP9 MSTORE PUSH1 0x3 DUP6 DUP10 KECCAK256 ADD SSTORE MLOAD SWAP1 DUP1 DUP3 DUP1 MLOAD DUP2 ADD SUB SLT PUSH2 0xA60 JUMPI PUSH2 0xA56 SWAP2 ADD PUSH2 0x253A JUMP JUMPDEST AND DUP5 MSTORE DUP4 KECCAK256 ADD SSTORE DUP1 RETURN JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST DUP10 DUP1 REVERT JUMPDEST DUP6 PUSH1 0x19 PUSH1 0x64 SWAP3 DUP6 DUP9 MLOAD SWAP4 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x696E76616C696420636F6D6D616E642066726F6D204E6F646500000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP7 MLOAD PUSH4 0x6A9FF79F PUSH1 0xE1 SHL DUP2 MSTORE DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE REVERT JUMPDEST DUP11 DUP3 CALLDATASIZE SUB SLT PUSH2 0xB01 JUMPI DUP11 MLOAD SWAP1 PUSH2 0xAD7 DUP3 PUSH2 0x1FBD JUMP JUMPDEST DUP3 CALLDATALOAD SWAP1 DUP12 DUP3 AND DUP3 SUB PUSH2 0xAFC JUMPI DUP3 DUP15 SWAP3 DUP15 SWAP5 MSTORE DUP3 DUP6 ADD CALLDATALOAD DUP4 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x86F JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP13 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x41 DUP7 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x0 REVERT JUMPDEST DUP11 DUP1 REVERT JUMPDEST DUP12 DUP1 REVERT JUMPDEST PUSH1 0x24 SWAP1 DUP6 MLOAD SWAP1 PUSH4 0x35FDCCCD PUSH1 0xE2 SHL DUP3 MSTORE CALLER SWAP1 DUP3 ADD MSTORE REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x24D JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24D JUMPI PUSH1 0x1 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 DUP5 AND CALLER SUB PUSH2 0xBA3 JUMPI POP POP DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP3 AND CALLER SWAP1 DUP2 OR DUP7 SSTORE SWAP4 AND PUSH1 0x1 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x26BAB9BA10313290383937B837B9B2B21037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x270 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x270 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xC07 PUSH2 0x1EDC JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x2 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x464 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x464 JUMPI PUSH2 0xC30 PUSH2 0x2593 JUMP JUMPDEST PUSH1 0xFF NOT PUSH1 0x9 SLOAD AND PUSH1 0x9 SSTORE DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x270 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x270 JUMPI PUSH1 0xA SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x270 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x270 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x9 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x270 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x270 JUMPI PUSH1 0x9 SLOAD SWAP1 MLOAD PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP3 SWAP1 POP CALLVALUE PUSH2 0x1207 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1207 JUMPI PUSH2 0xCD2 PUSH2 0x1F48 JUMP JUMPDEST SWAP2 PUSH2 0xCDB PUSH2 0x1EF2 JUMP JUMPDEST DUP3 MLOAD SWAP1 PUSH1 0x20 PUSH1 0x1 DUP2 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 SWAP7 AND SWAP3 DUP4 DUP7 DUP3 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP4 AND SWAP7 PUSH1 0x60 DUP9 DUP2 DUP5 ADD MSTORE DUP1 DUP4 MSTORE PUSH2 0xD15 DUP4 PUSH2 0x1FD8 JUMP JUMPDEST DUP5 PUSH1 0xA SLOAD AND DUP11 MSTORE PUSH1 0x8 DUP5 MSTORE DUP8 DUP11 KECCAK256 PUSH2 0xFF00 NOT DUP2 SLOAD AND SWAP1 SSTORE DUP5 PUSH1 0xA SLOAD AND SWAP3 DUP4 DUP12 MSTORE DUP9 DUP12 KECCAK256 SLOAD DUP4 DUP2 PUSH1 0x10 SHR AND SWAP4 PUSH32 0x0 AND DUP5 EQ PUSH1 0x0 EQ PUSH2 0xE02 JUMPI POP POP POP POP POP POP PUSH1 0xA SLOAD AND DUP1 EXTCODESIZE ISZERO PUSH2 0x98B JUMPI DUP6 SWAP3 DUP4 PUSH1 0x44 SWAP3 DUP7 MLOAD SWAP8 DUP9 SWAP6 DUP7 SWAP5 PUSH4 0x4BB297FF PUSH1 0xE1 SHL DUP7 MSTORE DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xDF9 JUMPI POP PUSH2 0xDE5 JUMPI JUMPDEST POP POP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x9 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH1 0x8 DUP4 SWAP1 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE TIMESTAMP PUSH1 0xB SSTORE DUP1 RETURN JUMPDEST PUSH2 0xDEE SWAP1 PUSH2 0x1FAA JUMP JUMPDEST PUSH2 0x464 JUMPI DUP1 CODESIZE PUSH2 0xDAA JUMP JUMPDEST MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 SWAP5 SWAP11 POP SWAP3 SWAP8 SWAP9 POP PUSH1 0xFF SWAP2 SWAP6 POP SWAP6 SWAP4 SWAP6 AND ISZERO PUSH2 0x11F0 JUMPI DUP5 PUSH1 0x7 SLOAD AND DUP3 DUP2 SWAP4 PUSH1 0x80 DUP11 MLOAD PUSH2 0xE2D DUP2 PUSH2 0x1F5E JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 DUP14 DUP3 ADD MSTORE DUP3 DUP13 DUP3 ADD MSTORE DUP14 DUP4 DUP3 ADD MSTORE ADD MSTORE DUP9 MLOAD SWAP8 DUP11 DUP10 ADD MSTORE DUP10 DUP9 MSTORE PUSH2 0xE54 DUP9 PUSH2 0x1FBD JUMP JUMPDEST DUP9 MLOAD PUSH2 0xE5F DUP2 PUSH2 0x1F8F JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH2 0xE7C DUP11 MLOAD PUSH2 0xE71 DUP2 PUSH2 0x1F8F JUMP JUMPDEST PUSH3 0x1E8480 DUP2 MSTORE PUSH2 0x255C JUMP JUMPDEST SWAP4 DUP11 MLOAD SWAP10 PUSH2 0xE89 DUP12 PUSH2 0x1F5E JUMP JUMPDEST DUP11 MSTORE DUP12 DUP11 ADD MSTORE DUP10 DUP10 ADD MSTORE DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD MSTORE DUP6 MLOAD PUSH4 0xB0F479A1 PUSH1 0xE0 SHL DUP2 MSTORE DUP8 DUP2 DUP5 DUP2 ADDRESS GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x11E6 JUMPI SWAP1 DUP6 SWAP2 DUP11 SWAP2 PUSH2 0x11AC JUMPI JUMPDEST POP AND SWAP4 DUP9 DUP8 MLOAD SWAP3 PUSH4 0x20487DED PUSH1 0xE0 SHL DUP5 MSTORE DUP10 DUP5 DUP1 PUSH2 0xEE0 DUP12 DUP11 DUP11 DUP5 ADD PUSH2 0x20C4 JUMP JUMPDEST SUB DUP2 DUP11 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x11A2 JUMPI SWAP1 DUP11 SWAP2 DUP4 SWAP6 PUSH2 0x1170 JUMPI JUMPDEST POP PUSH1 0x64 DUP11 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP4 MSTORE CALLER DUP11 DUP5 ADD MSTORE ADDRESS PUSH1 0x24 DUP5 ADD MSTORE DUP9 PUSH1 0x44 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x1166 JUMPI DUP11 SWAP2 PUSH2 0x1149 JUMPI JUMPDEST POP ISZERO PUSH2 0x1106 JUMPI PUSH1 0x7 SLOAD AND SWAP1 DUP7 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL SWAP1 DUP2 DUP2 MSTORE ADDRESS DUP6 DUP3 ADD MSTORE DUP10 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x10FC JUMPI DUP12 SWAP2 PUSH2 0x10CF JUMPI JUMPDEST POP DUP3 GT PUSH2 0x1053 JUMPI POP DUP7 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 DUP6 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP10 SWAP4 SWAP3 SWAP1 SWAP2 DUP10 SWAP2 DUP4 SWAP2 DUP3 SWAP1 DUP8 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x1049 JUMPI SWAP2 DUP9 SWAP6 SWAP4 SWAP2 PUSH2 0xFD2 SWAP9 SWAP8 SWAP6 SWAP4 PUSH2 0x101C JUMPI JUMPDEST POP DUP7 MLOAD PUSH4 0x96F4E9F9 PUSH1 0xE0 SHL DUP2 MSTORE SWAP8 DUP9 SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 ADD PUSH2 0x20C4 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x1013 JUMPI POP PUSH2 0xFEA JUMPI JUMPDEST POP POP PUSH2 0xDAD JUMP JUMPDEST DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x100C JUMPI JUMPDEST PUSH2 0xFFD DUP2 DUP4 PUSH2 0x1FF3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x464 JUMPI CODESIZE DUP1 PUSH2 0xFE3 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xFF3 JUMP JUMPDEST MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x103B SWAP1 DUP8 RETURNDATASIZE DUP10 GT PUSH2 0x1042 JUMPI JUMPDEST PUSH2 0x1033 DUP2 DUP4 PUSH2 0x1FF3 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2190 JUMP JUMPDEST POP CODESIZE PUSH2 0xFB7 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1029 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 DUP10 DUP9 DUP11 DUP1 DUP8 SWAP6 PUSH1 0x24 DUP5 MLOAD DUP1 SWAP10 DUP2 SWAP4 DUP3 MSTORE ADDRESS DUP11 DUP4 ADD MSTORE GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x10C4 JUMPI SWAP3 PUSH2 0x1093 JUMPI JUMPDEST POP MLOAD PUSH4 0x4787A103 PUSH1 0xE1 SHL DUP2 MSTORE SWAP3 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP2 POP REVERT JUMPDEST SWAP1 SWAP2 POP DUP5 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x10BD JUMPI JUMPDEST PUSH2 0x10AA DUP2 DUP4 PUSH2 0x1FF3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xAFC JUMPI PUSH1 0x44 SWAP4 MLOAD SWAP1 DUP6 PUSH2 0x1078 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x10A0 JUMP JUMPDEST DUP3 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP DUP10 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x10F5 JUMPI JUMPDEST PUSH2 0x10E6 DUP2 DUP4 PUSH2 0x1FF3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xAFC JUMPI MLOAD CODESIZE PUSH2 0xF5E JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x10DC JUMP JUMPDEST DUP10 MLOAD RETURNDATASIZE DUP14 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP10 SWAP1 MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F742070726F7669646564204C696E6B20666F722066656573000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x1160 SWAP2 POP DUP10 RETURNDATASIZE DUP12 GT PUSH2 0x1042 JUMPI PUSH2 0x1033 DUP2 DUP4 PUSH2 0x1FF3 JUMP JUMPDEST CODESIZE PUSH2 0xF2A JUMP JUMPDEST DUP9 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP3 POP SWAP4 POP DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x119B JUMPI JUMPDEST PUSH2 0x1188 DUP2 DUP4 PUSH2 0x1FF3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xAFC JUMPI DUP9 DUP11 SWAP2 MLOAD SWAP4 CODESIZE PUSH2 0xEF6 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x117E JUMP JUMPDEST DUP10 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP DUP10 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x11DF JUMPI JUMPDEST PUSH2 0x11C5 DUP2 DUP4 PUSH2 0x1FF3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xA64 JUMPI MLOAD DUP5 DUP2 AND DUP2 SUB PUSH2 0xA64 JUMPI DUP5 SWAP1 CODESIZE PUSH2 0xEBF JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x11BB JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP7 MLOAD PUSH4 0x6A9FF79F PUSH1 0xE1 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP8 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP POP REVERT JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x464 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x464 JUMPI PUSH2 0x1226 PUSH2 0x1F48 JUMP JUMPDEST SWAP2 PUSH2 0x122F PUSH2 0x1EF2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 PUSH1 0x44 CALLDATALOAD DUP6 DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0xAFC JUMPI PUSH1 0x64 CALLDATALOAD SWAP1 DUP7 DUP3 AND DUP1 SWAP3 SUB PUSH2 0xAFC JUMPI PUSH1 0x84 CALLDATALOAD SWAP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP10 GT PUSH2 0xA60 JUMPI PUSH2 0x127A PUSH2 0x12F6 SWAP7 SWAP8 SWAP9 SWAP10 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x2014 JUMP JUMPDEST DUP8 MLOAD SWAP5 PUSH1 0x20 SWAP11 DUP12 SWAP8 AND DUP8 DUP8 ADD MSTORE DUP7 DUP7 MSTORE PUSH2 0x1293 DUP7 PUSH2 0x1FBD JUMP JUMPDEST DUP9 MLOAD PUSH2 0x129E DUP2 PUSH2 0x1F8F JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH2 0x12BB DUP11 MLOAD PUSH2 0x12B0 DUP2 PUSH2 0x1F8F JUMP JUMPDEST PUSH3 0xF4240 DUP2 MSTORE PUSH2 0x255C JUMP JUMPDEST SWAP3 DUP11 MLOAD SWAP8 PUSH2 0x12C8 DUP10 PUSH2 0x1F5E JUMP JUMPDEST DUP9 MSTORE DUP9 DUP9 ADD MSTORE DUP10 DUP8 ADD MSTORE PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD MSTORE DUP7 MLOAD PUSH4 0x20487DED PUSH1 0xE0 SHL DUP2 MSTORE SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 SWAP4 DUP5 ADD PUSH2 0x20C4 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x10C4 JUMPI SWAP3 PUSH2 0x130E JUMPI JUMPDEST POP MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 POP DUP3 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1336 JUMPI JUMPDEST PUSH2 0x1326 DUP2 DUP4 PUSH2 0x1FF3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xAFC JUMPI MLOAD SWAP1 CODESIZE PUSH2 0x1307 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x131C JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x270 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x270 JUMPI PUSH2 0x3B7 PUSH1 0x20 SWAP3 DUP3 PUSH2 0x135E PUSH2 0x1EDC JUMP JUMPDEST SWAP2 CALLER DUP2 MSTORE PUSH1 0x3 DUP7 MSTORE KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 MSTORE DUP5 MSTORE PUSH2 0x1385 PUSH1 0x24 CALLDATALOAD DUP5 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x21A8 JUMP JUMPDEST SWAP1 CALLER PUSH2 0x2438 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x270 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x270 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x270 JUMPI PUSH1 0x20 SWAP3 DUP4 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24D JUMPI PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 MSTORE PUSH1 0x8 DUP1 DUP7 MSTORE DUP3 DUP6 KECCAK256 SLOAD DUP5 CALLDATALOAD SWAP3 SWAP2 SHR PUSH1 0xFF AND ISZERO PUSH2 0x1941 JUMPI CALLER DUP6 MSTORE PUSH1 0x2 DUP7 MSTORE DUP3 DUP6 KECCAK256 SLOAD DUP3 GT PUSH2 0x1908 JUMPI DUP3 MLOAD SWAP6 DUP6 DUP2 DUP9 ADD MSTORE CALLER DUP5 DUP9 ADD MSTORE PUSH1 0x60 DUP4 DUP2 DUP10 ADD MSTORE DUP1 DUP9 MSTORE PUSH2 0x1415 DUP9 PUSH2 0x1FD8 JUMP JUMPDEST CALLER ISZERO PUSH2 0x18BB JUMPI CALLER DUP8 MSTORE PUSH1 0x2 DUP3 MSTORE DUP5 DUP8 KECCAK256 SLOAD SWAP8 DUP5 DUP10 LT PUSH2 0x186D JUMPI DUP5 DUP9 SWAP10 SWAP9 SWAP7 SWAP8 SWAP9 CALLER DUP9 MSTORE PUSH1 0x2 DUP6 MSTORE SUB DUP8 DUP8 KECCAK256 SSTORE DUP5 DUP9 SLOAD SUB DUP9 SSTORE DUP6 DUP8 MLOAD DUP7 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 CALLER SWAP3 LOG3 DUP4 PUSH1 0xA SLOAD AND SWAP2 DUP3 DUP8 MSTORE PUSH1 0x8 DUP5 MSTORE DUP8 DUP8 KECCAK256 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 DUP4 DUP2 PUSH1 0x10 SHR AND SWAP4 PUSH32 0x0 AND DUP5 EQ PUSH1 0x0 EQ PUSH2 0x1516 JUMPI POP POP POP POP POP POP PUSH1 0xA SLOAD AND DUP1 EXTCODESIZE ISZERO PUSH2 0x24D JUMPI DUP4 MLOAD PUSH4 0x15E005B7 PUSH1 0xE3 SHL DUP2 MSTORE CALLER SWAP6 DUP2 ADD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP4 DUP5 SWAP2 SWAP1 DUP3 SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xDF9 JUMPI POP PUSH2 0x150D JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x906 SWAP1 PUSH2 0x1FAA JUMP JUMPDEST SWAP1 SWAP3 SWAP6 SWAP7 POP PUSH1 0xFF SWAP2 SWAP4 SWAP8 POP SWAP9 SWAP4 SWAP9 AND ISZERO PUSH2 0x11F0 JUMPI DUP5 PUSH1 0x7 SLOAD AND DUP3 DUP2 SWAP4 PUSH1 0x80 DUP11 MLOAD PUSH2 0x153F DUP2 PUSH2 0x1F5E JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 DUP14 DUP3 ADD MSTORE DUP3 DUP13 DUP3 ADD MSTORE DUP14 DUP4 DUP3 ADD MSTORE ADD MSTORE DUP9 MLOAD SWAP8 DUP11 DUP10 ADD MSTORE DUP10 DUP9 MSTORE PUSH2 0x1566 DUP9 PUSH2 0x1FBD JUMP JUMPDEST DUP9 MLOAD PUSH2 0x1571 DUP2 PUSH2 0x1F8F JUMP JUMPDEST DUP12 DUP2 MSTORE PUSH2 0x1582 DUP11 MLOAD PUSH2 0xE71 DUP2 PUSH2 0x1F8F JUMP JUMPDEST SWAP4 DUP11 MLOAD SWAP10 PUSH2 0x158F DUP12 PUSH2 0x1F5E JUMP JUMPDEST DUP11 MSTORE DUP12 DUP11 ADD MSTORE DUP10 DUP10 ADD MSTORE DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD MSTORE DUP6 MLOAD PUSH4 0xB0F479A1 PUSH1 0xE0 SHL DUP2 MSTORE DUP8 DUP2 DUP5 DUP2 ADDRESS GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x11E6 JUMPI SWAP1 DUP6 SWAP2 DUP11 SWAP2 PUSH2 0x1833 JUMPI JUMPDEST POP AND SWAP4 DUP9 DUP8 MLOAD SWAP3 PUSH4 0x20487DED PUSH1 0xE0 SHL DUP5 MSTORE DUP10 DUP5 DUP1 PUSH2 0x15E6 DUP12 DUP11 DUP11 DUP5 ADD PUSH2 0x20C4 JUMP JUMPDEST SUB DUP2 DUP11 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x11A2 JUMPI SWAP1 DUP11 SWAP2 DUP4 SWAP6 PUSH2 0x1802 JUMPI JUMPDEST POP PUSH1 0x64 DUP11 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP4 MSTORE CALLER DUP11 DUP5 ADD MSTORE ADDRESS PUSH1 0x24 DUP5 ADD MSTORE DUP9 PUSH1 0x44 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x1166 JUMPI DUP11 SWAP2 PUSH2 0x17E5 JUMPI JUMPDEST POP ISZERO PUSH2 0x1106 JUMPI SWAP1 DUP9 SWAP3 SWAP2 PUSH1 0x7 SLOAD AND SWAP1 DUP8 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL SWAP1 DUP2 DUP2 MSTORE ADDRESS DUP6 DUP3 ADD MSTORE DUP11 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x17DB JUMPI DUP7 SWAP2 PUSH2 0x17AE JUMPI JUMPDEST POP DUP3 GT PUSH2 0x172F JUMPI POP DUP8 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 DUP10 SWAP2 DUP4 SWAP2 SWAP1 DUP3 SWAP1 DUP8 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x1049 JUMPI SWAP2 DUP9 SWAP6 SWAP4 SWAP2 PUSH2 0x16D8 SWAP9 SWAP8 SWAP6 SWAP4 PUSH2 0x1712 JUMPI POP DUP7 MLOAD PUSH4 0x96F4E9F9 PUSH1 0xE0 SHL DUP2 MSTORE SWAP8 DUP9 SWAP6 DUP7 SWAP5 DUP6 SWAP4 DUP5 ADD PUSH2 0x20C4 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x1013 JUMPI POP PUSH2 0x16ED JUMPI POP POP DUP1 RETURN JUMPDEST DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x170B JUMPI JUMPDEST PUSH2 0x1700 DUP2 DUP4 PUSH2 0x1FF3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x464 JUMPI DUP1 RETURN JUMPDEST POP RETURNDATASIZE PUSH2 0x16F6 JUMP JUMPDEST PUSH2 0x1728 SWAP1 DUP8 RETURNDATASIZE DUP10 GT PUSH2 0x1042 JUMPI PUSH2 0x1033 DUP2 DUP4 PUSH2 0x1FF3 JUMP JUMPDEST POP DUP11 PUSH2 0xFB7 JUMP JUMPDEST DUP10 SWAP2 SWAP3 DUP3 DUP11 SWAP3 PUSH1 0x24 DUP5 MLOAD DUP1 SWAP5 DUP2 SWAP4 DUP3 MSTORE ADDRESS DUP11 DUP4 ADD MSTORE GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x17A4 JUMPI DUP7 SWAP4 PUSH2 0x1770 JUMPI JUMPDEST POP POP MLOAD PUSH4 0x4787A103 PUSH1 0xE1 SHL DUP2 MSTORE SWAP3 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP2 POP REVERT JUMPDEST SWAP1 DUP1 SWAP3 SWAP4 POP DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x179D JUMPI JUMPDEST PUSH2 0x1788 DUP2 DUP4 PUSH2 0x1FF3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x909 JUMPI PUSH1 0x44 SWAP5 POP MLOAD SWAP1 DUP6 DUP1 PUSH2 0x1754 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x177E JUMP JUMPDEST DUP3 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP DUP11 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x17D4 JUMPI JUMPDEST PUSH2 0x17C5 DUP2 DUP4 PUSH2 0x1FF3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x98B JUMPI MLOAD DUP13 PUSH2 0x1668 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x17BB JUMP JUMPDEST DUP11 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x17FC SWAP2 POP DUP10 RETURNDATASIZE DUP12 GT PUSH2 0x1042 JUMPI PUSH2 0x1033 DUP2 DUP4 PUSH2 0x1FF3 JUMP JUMPDEST DUP11 PUSH2 0x1630 JUMP JUMPDEST DUP3 DUP2 SWAP4 SWAP3 SWAP7 POP RETURNDATASIZE DUP4 GT PUSH2 0x182C JUMPI JUMPDEST PUSH2 0x181A DUP2 DUP4 PUSH2 0x1FF3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x270 JUMPI DUP10 SWAP1 MLOAD SWAP4 DUP13 PUSH2 0x15FC JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1810 JUMP JUMPDEST DUP1 SWAP3 POP DUP10 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x1866 JUMPI JUMPDEST PUSH2 0x184C DUP2 DUP4 PUSH2 0x1FF3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xA64 JUMPI MLOAD DUP5 DUP2 AND DUP2 SUB PUSH2 0xA64 JUMPI DUP5 SWAP1 DUP11 PUSH2 0x15C5 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1842 JUMP JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP9 ADD DUP5 SWAP1 MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP8 ADD DUP4 SWAP1 MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP6 ADD DUP8 SWAP1 MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E6F7420656E6F756768742062616C616E6365 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP6 ADD DUP8 SWAP1 MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4E6F6465206973206E6F7420416374697665 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x270 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x270 JUMPI PUSH2 0x1995 PUSH2 0x1EDC JUMP JUMPDEST PUSH2 0x199D PUSH2 0x1EF2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP5 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP6 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 MSTORE SWAP3 DUP5 SWAP1 KECCAK256 SLOAD PUSH1 0x44 CALLDATALOAD SWAP4 SWAP3 PUSH1 0x1 DUP3 ADD PUSH2 0x19D9 JUMPI JUMPDEST PUSH1 0x20 DUP7 PUSH2 0x3B7 DUP8 DUP8 DUP8 PUSH2 0x2224 JUMP JUMPDEST DUP5 DUP3 LT PUSH2 0x1A02 JUMPI POP SWAP2 DUP4 SWAP2 PUSH2 0x19F7 PUSH1 0x20 SWAP7 SWAP6 PUSH2 0x3B7 SWAP6 SUB CALLER DUP4 PUSH2 0x2438 JUMP JUMPDEST SWAP2 SWAP4 SWAP5 DUP2 SWAP4 POP PUSH2 0x19CB JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x464 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x464 JUMPI PUSH2 0x1A5F PUSH2 0x1EDC JUMP JUMPDEST SWAP3 PUSH2 0x1A68 PUSH2 0x1EF2 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP6 AND SWAP3 DUP4 DUP2 MSTORE PUSH1 0x8 SWAP6 PUSH1 0x20 SWAP7 DUP1 DUP9 MSTORE DUP7 DUP4 KECCAK256 SWAP6 PUSH1 0x1 DUP1 PUSH1 0xFF DUP10 SLOAD DUP6 SHR AND ISZERO ISZERO EQ SWAP8 DUP9 PUSH2 0x1BA2 JUMPI JUMPDEST POP DUP8 PUSH2 0x1B8E JUMPI JUMPDEST DUP8 PUSH2 0x1B6F JUMPI JUMPDEST DUP8 PUSH2 0x1B38 JUMPI JUMPDEST DUP8 PUSH2 0x1B1E JUMPI JUMPDEST POP DUP7 PUSH2 0x1B05 JUMPI JUMPDEST DUP7 PUSH2 0x1AF0 JUMPI JUMPDEST DUP7 PUSH2 0x1ACF JUMPI JUMPDEST DUP9 DUP8 DUP10 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP4 MSTORE DUP8 MSTORE DUP6 DUP3 KECCAK256 DUP4 ADD SLOAD SWAP4 AND DUP2 MSTORE DUP5 SWAP1 KECCAK256 ADD SLOAD GT SWAP1 POP CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x1AC4 JUMP JUMPDEST DUP1 DUP5 MSTORE DUP2 DUP10 MSTORE DUP8 DUP5 KECCAK256 DUP6 ADD SLOAD ISZERO ISZERO SWAP7 POP PUSH2 0x1ABE JUMP JUMPDEST DUP6 DUP4 AND DUP5 MSTORE DUP2 DUP10 MSTORE DUP8 DUP5 KECCAK256 SLOAD DUP3 SHR PUSH1 0xFF AND ISZERO SWAP7 POP PUSH2 0x1AB8 JUMP JUMPDEST DUP7 DUP5 AND DUP6 MSTORE DUP3 DUP11 MSTORE DUP9 DUP6 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ SWAP7 POP CODESIZE PUSH2 0x1AB1 JUMP JUMPDEST SWAP7 POP DUP3 DUP7 AND DUP5 MSTORE DUP2 DUP10 MSTORE DUP7 DUP9 DUP6 KECCAK256 ADD SLOAD PUSH2 0xE10 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x1B5C JUMPI TIMESTAMP LT SWAP7 PUSH2 0x1AAB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x11 DUP7 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST SWAP7 POP DUP1 DUP5 MSTORE DUP7 DUP9 DUP6 KECCAK256 ADD SLOAD PUSH2 0xE10 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x1B5C JUMPI TIMESTAMP LT SWAP7 PUSH2 0x1AA5 JUMP JUMPDEST DUP7 DUP5 AND DUP6 MSTORE DUP9 DUP6 KECCAK256 DUP2 ADD SLOAD ISZERO ISZERO SWAP8 POP PUSH2 0x1A9F JUMP JUMPDEST DUP2 ADD SLOAD ISZERO ISZERO SWAP8 POP CODESIZE PUSH2 0x1A98 JUMP JUMPDEST POP CALLVALUE PUSH2 0x24D JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24D JUMPI PUSH1 0x20 SWAP3 POP SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x270 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x270 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x1BF1 PUSH2 0x21CB JUMP JUMPDEST SWAP2 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x24D JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x24D JUMPI PUSH2 0x1C13 PUSH2 0x1EDC JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x909 JUMPI PUSH1 0x44 CALLDATALOAD SWAP2 DUP3 ISZERO ISZERO SWAP2 DUP3 DUP5 SUB PUSH2 0xA60 JUMPI PUSH2 0x1C3F PUSH2 0x2593 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x9 SLOAD AND ISZERO PUSH2 0x1CD6 JUMPI POP PUSH1 0x1 SWAP1 DUP2 DUP1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP6 DUP7 DUP9 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE DUP8 KECCAK256 SWAP3 PUSH2 0xFF00 PUSH10 0xFFFFFFFFFFFFFFFF0000 DUP6 SLOAD SWAP4 PUSH1 0x10 SHL AND SWAP3 PUSH10 0xFFFFFFFFFFFFFFFFFFFF NOT AND SWAP2 PUSH1 0x8 SHL AND OR OR OR SWAP1 SSTORE PUSH2 0x1C97 JUMPI DUP3 DUP1 RETURN JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH1 0x8 SWAP3 SWAP1 SWAP3 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE CODESIZE DUP1 DUP3 DUP1 RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x139BC81B5BDC99481B9BD9195CC8185B1B1BDDD959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x270 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x270 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x3B7 PUSH2 0x1D31 PUSH2 0x1EDC JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x2438 JUMP JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x464 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x464 JUMPI DUP2 MLOAD SWAP2 DUP2 PUSH1 0x5 SLOAD SWAP3 PUSH1 0x1 DUP5 DUP2 SHR SWAP2 DUP2 DUP7 AND SWAP6 DUP7 ISZERO PUSH2 0x1DFE JUMPI JUMPDEST PUSH1 0x20 SWAP7 DUP8 DUP6 LT DUP2 EQ PUSH2 0x6C4 JUMPI DUP9 SWAP10 POP SWAP7 DUP9 SWAP7 SWAP8 DUP6 DUP3 SWAP11 MSTORE SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x69D JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x1DA2 JUMPI POP POP POP PUSH2 0x63D SWAP3 SWAP2 PUSH2 0x62E SWAP2 SUB DUP6 PUSH2 0x1FF3 JUMP JUMPDEST SWAP2 SWAP1 DUP7 SWAP4 POP PUSH1 0x5 DUP4 MSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 JUMPDEST DUP3 DUP5 LT PUSH2 0x1DE6 JUMPI POP POP POP DUP3 ADD ADD DUP2 PUSH2 0x62E PUSH2 0x63D PUSH2 0x61B JUMP JUMPDEST DUP1 SLOAD DUP5 DUP11 ADD DUP7 ADD MSTORE DUP9 SWAP6 POP DUP8 SWAP5 SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x1DCD JUMP JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x1D66 JUMP JUMPDEST POP CALLVALUE PUSH2 0x24D JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24D JUMPI PUSH2 0x1E21 PUSH2 0x1EDC JUMP JUMPDEST SWAP2 CALLER DUP5 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH2 0x1E67 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP4 DUP8 KECCAK256 SLOAD PUSH1 0x10 SHR AND SWAP1 PUSH32 0x0 AND EQ PUSH2 0x206A JUMP JUMPDEST CALLER DUP5 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0xFF DUP2 DUP6 KECCAK256 SLOAD AND ISZERO PUSH2 0x5AF JUMPI DUP4 PUSH2 0x906 PUSH1 0x24 CALLDATALOAD DUP6 PUSH2 0x2394 JUMP JUMPDEST SWAP3 POP POP CALLVALUE PUSH2 0x24D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x24D JUMPI CALLDATALOAD PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 AND DUP1 SWAP2 SUB PUSH2 0x24D JUMPI PUSH1 0x20 SWAP3 POP PUSH4 0x85572FFB PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x1ECB JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP CODESIZE PUSH2 0x1EC4 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xAFC JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xAFC JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x1F34 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1F13 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xAFC JUMPI JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1F79 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1F79 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1F79 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1F79 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1F79 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1F79 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0xAFC JUMPI DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1F79 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x2048 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x1FF3 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0xAFC JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2071 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52657175697265206D617374657220616E64206E6F646520696E2073616D6520 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x31B430B4B7 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP4 SWAP3 SWAP4 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 SWAP2 DUP2 DUP4 DUP3 ADD MSTORE PUSH2 0x20F3 DUP6 MLOAD PUSH1 0xA0 DUP5 DUP5 ADD MSTORE PUSH1 0xE0 DUP4 ADD SWAP1 PUSH2 0x1F08 JUMP JUMPDEST SWAP2 PUSH2 0x210F DUP5 DUP8 ADD MLOAD SWAP4 PUSH1 0x3F NOT SWAP5 DUP6 DUP6 DUP4 SUB ADD PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x1F08 JUMP JUMPDEST DUP2 DUP8 ADD MLOAD SWAP5 DUP5 DUP5 DUP4 SUB ADD PUSH1 0x80 DUP6 ADD MSTORE DUP1 DUP1 DUP8 MLOAD SWAP4 DUP5 DUP2 MSTORE ADD SWAP7 ADD SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0x2167 JUMPI POP POP POP POP POP PUSH1 0xC0 PUSH1 0x80 PUSH2 0x2164 SWAP6 SWAP7 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x60 DUP3 ADD MLOAD AND PUSH1 0xA0 DUP6 ADD MSTORE ADD MLOAD SWAP3 DUP3 DUP6 SUB ADD SWAP2 ADD MSTORE PUSH2 0x1F08 JUMP JUMPDEST SWAP1 JUMP JUMPDEST DUP5 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 MSTORE DUP4 ADD MLOAD DUP9 DUP5 ADD MSTORE SWAP7 DUP8 ADD SWAP7 SWAP4 DUP3 ADD SWAP4 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x212E JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xAFC JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0xAFC JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x21B5 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x21FE JUMPI POP PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x10 SHR AND SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x9 SLOAD PUSH1 0x8 SHR AND PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x10 SHR AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x2341 JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x22F0 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 DUP1 DUP4 LT PUSH2 0x229C JUMPI PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE PUSH1 0x2 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x23F3 JUMPI PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP3 PUSH2 0x23D6 PUSH1 0x0 SWAP5 PUSH1 0x4 SLOAD PUSH2 0x21A8 JUMP JUMPDEST PUSH1 0x4 SSTORE DUP5 DUP5 MSTORE PUSH1 0x2 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x24E9 JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x2499 JUMPI PUSH1 0x20 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x3 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xAFC JUMPI JUMP JUMPDEST MLOAD SWAP1 PUSH1 0xFF DUP3 AND DUP3 SUB PUSH2 0xAFC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH4 0x97A657C9 PUSH1 0xE0 SHL PUSH1 0x20 DUP4 ADD MSTORE MLOAD PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x60 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1F79 JUMPI PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x25A7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x27B7363C9031B0B63630B1363290313C9037BBB732B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP 0x4A 0xBF ADD CALLCODE DUP13 PUSH19 0x7FD5118F4EA086FBC62DEA9DBD7A02D35B2B65 CALLDATACOPY DUP2 SLOAD 0xE7 REVERT 0xAA PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "9": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "10": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "11": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "LT",
      "path": "14"
    },
    "12": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "13": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x21"
    },
    "16": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "17": {
      "op": "JUMPDEST"
    },
    "18": {
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "19": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "20": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "21": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "22": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "23": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F"
    },
    "26": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "27": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "29": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "30": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "REVERT",
      "path": "14"
    },
    "31": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "32": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "STOP",
      "path": "14"
    },
    "33": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "34": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "36": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "37": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "38": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "39": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "41": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "SHR",
      "path": "14"
    },
    "42": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "43": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "44": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x1FFC9A7"
    },
    "49": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "EQ",
      "path": "14"
    },
    "50": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1E88"
    },
    "53": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "54": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "55": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "56": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x4783EA4"
    },
    "61": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "EQ",
      "path": "14"
    },
    "62": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1E08"
    },
    "65": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "66": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "67": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x6FDDE03"
    },
    "72": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "EQ",
      "path": "14"
    },
    "73": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1D3B"
    },
    "76": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "77": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "78": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x95EA7B3"
    },
    "83": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "EQ",
      "path": "14"
    },
    "84": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1D11"
    },
    "87": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "88": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "89": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x10A78DF8"
    },
    "94": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "EQ",
      "path": "14"
    },
    "95": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1BF9"
    },
    "98": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "99": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "100": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x1803C2F5"
    },
    "105": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "EQ",
      "path": "14"
    },
    "106": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1BCC"
    },
    "109": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "110": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "111": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x18160DDD"
    },
    "116": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "EQ",
      "path": "14"
    },
    "117": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1BAF"
    },
    "120": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "121": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "122": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x1D880928"
    },
    "127": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "EQ",
      "path": "14"
    },
    "128": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1A45"
    },
    "131": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "132": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "133": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x23B872DD"
    },
    "138": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "EQ",
      "path": "14"
    },
    "139": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1979"
    },
    "142": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "143": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "144": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x2E1A7D4D"
    },
    "149": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "EQ",
      "path": "14"
    },
    "150": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x13A8"
    },
    "153": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "154": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "155": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x313CE567"
    },
    "160": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "EQ",
      "path": "14"
    },
    "161": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x138C"
    },
    "164": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "165": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "166": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x39509351"
    },
    "171": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "EQ",
      "path": "14"
    },
    "172": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x133D"
    },
    "175": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "176": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "177": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x544B1709"
    },
    "182": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "EQ",
      "path": "14"
    },
    "183": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x120B"
    },
    "186": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "187": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "188": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "189": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x5C292BE5"
    },
    "194": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "EQ",
      "path": "14"
    },
    "195": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xCB7"
    },
    "198": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "199": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "200": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "201": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x61AC3F99"
    },
    "206": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "EQ",
      "path": "14"
    },
    "207": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC8A"
    },
    "210": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "211": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "212": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x654E8E0C"
    },
    "217": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "EQ",
      "path": "14"
    },
    "218": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC66"
    },
    "221": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "222": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "223": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x6C1DC077"
    },
    "228": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "EQ",
      "path": "14"
    },
    "229": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC3D"
    },
    "232": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "233": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "234": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x6C98D513"
    },
    "239": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "EQ",
      "path": "14"
    },
    "240": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC17"
    },
    "243": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "244": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "245": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x70A08231"
    },
    "250": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "EQ",
      "path": "14"
    },
    "251": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xBDF"
    },
    "254": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "255": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "256": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x79BA5097"
    },
    "261": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "EQ",
      "path": "14"
    },
    "262": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB38"
    },
    "265": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "266": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "267": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x85572FFB"
    },
    "272": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "EQ",
      "path": "14"
    },
    "273": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x74D"
    },
    "276": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "277": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "278": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x8CF19D19"
    },
    "283": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "EQ",
      "path": "14"
    },
    "284": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x709"
    },
    "287": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "288": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "289": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x8DA5CB5B"
    },
    "294": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "EQ",
      "path": "14"
    },
    "295": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x6E1"
    },
    "298": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "299": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "300": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x95D89B41"
    },
    "305": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "EQ",
      "path": "14"
    },
    "306": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5C6"
    },
    "309": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "310": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "311": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x9637120F"
    },
    "316": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "EQ",
      "path": "14"
    },
    "317": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x51B"
    },
    "320": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "321": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "322": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x995714AE"
    },
    "327": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "EQ",
      "path": "14"
    },
    "328": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x467"
    },
    "331": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "332": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "333": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xA457C2D7"
    },
    "338": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "EQ",
      "path": "14"
    },
    "339": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3BE"
    },
    "342": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "343": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "344": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xA9059CBB"
    },
    "349": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "EQ",
      "path": "14"
    },
    "350": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x38D"
    },
    "353": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "354": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "355": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xB0F479A1"
    },
    "360": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "EQ",
      "path": "14"
    },
    "361": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x349"
    },
    "364": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "365": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "366": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xB2D92955"
    },
    "371": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "EQ",
      "path": "14"
    },
    "372": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2C2"
    },
    "375": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "376": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "377": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xDD62ED3E"
    },
    "382": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "EQ",
      "path": "14"
    },
    "383": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x274"
    },
    "386": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "387": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "388": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xE12B948B"
    },
    "393": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "EQ",
      "path": "14"
    },
    "394": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x251"
    },
    "397": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "398": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xF2FDE38B"
    },
    "403": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "404": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x11"
    },
    "407": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "408": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "409": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x24D"
    },
    "412": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "413": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "415": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "416": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "418": {
      "op": "NOT"
    },
    "419": {
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "420": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "421": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x24D"
    },
    "424": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "425": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1B0"
    },
    "428": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1EDC"
    },
    "431": {
      "fn": null,
      "jump": "i",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "432": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "433": {
      "offset": [
        2032,
        2091
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "434": {
      "fn": null,
      "offset": [
        2032,
        2091
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1B9"
    },
    "437": {
      "fn": null,
      "offset": [
        2032,
        2091
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2593"
    },
    "440": {
      "fn": null,
      "jump": "i",
      "offset": [
        2032,
        2091
      ],
      "op": "JUMP",
      "path": "9"
    },
    "441": {
      "fn": null,
      "offset": [
        2032,
        2091
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "446": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "448": {
      "op": "SHL"
    },
    "449": {
      "op": "SUB"
    },
    "450": {
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "451": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "452": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "453": {
      "fn": null,
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "454": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1643,
        1653
      ],
      "op": "CALLER",
      "path": "9",
      "statement": 0
    },
    "455": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1637,
        1653
      ],
      "op": "DUP5",
      "path": "9"
    },
    "456": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1637,
        1653
      ],
      "op": "EQ",
      "path": "9"
    },
    "457": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x20A"
    },
    "460": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "461": {
      "op": "POP"
    },
    "462": {
      "op": "POP"
    },
    "463": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "465": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "466": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "471": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "473": {
      "op": "SHL"
    },
    "474": {
      "op": "SUB"
    },
    "475": {
      "op": "NOT"
    },
    "476": {
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "477": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "478": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "OR",
      "path": "14"
    },
    "479": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "480": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "481": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "482": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "483": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "484": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1719,
        1758
      ],
      "op": "PUSH32",
      "path": "9",
      "statement": 1,
      "value": "0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278"
    },
    "517": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "518": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "519": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        1719,
        1758
      ],
      "op": "LOG3",
      "path": "9"
    },
    "520": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "521": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "RETURN",
      "path": "14"
    },
    "522": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "523": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "524": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "526": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "528": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "529": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "530": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "531": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x461BCD"
    },
    "535": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE5"
    },
    "537": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "SHL",
      "path": "14"
    },
    "538": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "539": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "540": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "541": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "542": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "543": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x17"
    },
    "545": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "547": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "548": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "549": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "550": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000"
    },
    "583": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "585": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "586": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "587": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "588": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "REVERT",
      "path": "14"
    },
    "589": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "590": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "591": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "592": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "REVERT",
      "path": "14"
    },
    "593": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "594": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "595": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "596": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "597": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x270"
    },
    "600": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "601": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "602": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "604": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "NOT",
      "path": "14"
    },
    "605": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "606": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "607": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "608": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x270"
    },
    "611": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "612": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "614": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "615": {
      "offset": [
        2271,
        2300
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "617": {
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "618": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "619": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "620": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "621": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "622": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "623": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "RETURN",
      "path": "14"
    },
    "624": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "625": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "626": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "627": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "REVERT",
      "path": "14"
    },
    "628": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "629": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "630": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "631": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "632": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x270"
    },
    "635": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "636": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "637": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "639": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "NOT",
      "path": "14"
    },
    "640": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "641": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "642": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "643": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x270"
    },
    "646": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "647": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "649": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "650": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x291"
    },
    "653": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1EDC"
    },
    "656": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "jump": "i",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "657": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "658": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "659": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x29A"
    },
    "662": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1EF2"
    },
    "665": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "jump": "i",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "666": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "671": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "673": {
      "op": "SHL"
    },
    "674": {
      "op": "SUB"
    },
    "675": {
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "676": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "677": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "678": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "679": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "680": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "682": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "DUP7",
      "path": "14"
    },
    "683": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "684": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "685": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "686": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "687": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "688": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "690": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "691": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "692": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "693": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "694": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "695": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "696": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "697": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "698": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "699": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "700": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "701": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "702": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "703": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "704": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "705": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "RETURN",
      "path": "14"
    },
    "706": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "707": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "708": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "709": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "710": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x24D"
    },
    "713": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "714": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "716": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "717": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "719": {
      "op": "NOT"
    },
    "720": {
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "721": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "722": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x24D"
    },
    "725": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "726": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "728": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "729": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "730": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "731": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "735": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "737": {
      "op": "SHL"
    },
    "738": {
      "op": "SUB"
    },
    "739": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2EA"
    },
    "742": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1EDC"
    },
    "745": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "jump": "i",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "746": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "747": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "748": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "749": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "750": {
      "offset": [
        2111,
        2159
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "752": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "754": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "755": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "756": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "757": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "758": {
      "offset": [
        2111,
        2159
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "759": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "761": {
      "offset": [
        2111,
        2159
      ],
      "op": "DUP3",
      "path": "14"
    },
    "762": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        2111,
        2159
      ],
      "op": "ADD",
      "path": "14"
    },
    "763": {
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "764": {
      "offset": [
        2111,
        2159
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "766": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        2111,
        2159
      ],
      "op": "DUP4",
      "path": "14"
    },
    "767": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        2111,
        2159
      ],
      "op": "ADD",
      "path": "14"
    },
    "768": {
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "769": {
      "offset": [
        2111,
        2159
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "770": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "772": {
      "offset": [
        2111,
        2159
      ],
      "op": "DUP5",
      "path": "14"
    },
    "773": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        2111,
        2159
      ],
      "op": "ADD",
      "path": "14"
    },
    "774": {
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "775": {
      "offset": [
        2111,
        2159
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "776": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        2111,
        2159
      ],
      "op": "ADD",
      "path": "14"
    },
    "777": {
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "778": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "779": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "783": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "785": {
      "op": "SHL"
    },
    "786": {
      "op": "SUB"
    },
    "787": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "788": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "789": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "790": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "792": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "793": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "794": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "795": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "796": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "DUP9",
      "path": "14"
    },
    "797": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "798": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "800": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "801": {
      "offset": [
        2111,
        2159
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "803": {
      "offset": [
        783,
        15074
      ],
      "op": "SHR",
      "path": "14"
    },
    "804": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "805": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "806": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "807": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "809": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "DUP10",
      "path": "14"
    },
    "810": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "811": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "812": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x10"
    },
    "814": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "SHR",
      "path": "14"
    },
    "815": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "816": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "817": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "DUP7",
      "path": "14"
    },
    "818": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "819": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "820": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "822": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "823": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "824": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "825": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "827": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "828": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "829": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "830": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "832": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "833": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "834": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "835": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xC0"
    },
    "837": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "838": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "839": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "840": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "RETURN",
      "path": "14"
    },
    "841": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "842": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "843": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "844": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "845": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x270"
    },
    "848": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "849": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "850": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "852": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "NOT",
      "path": "14"
    },
    "853": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "854": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "855": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "856": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x270"
    },
    "859": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "860": {
      "fn": "ConfirmedOwnerWithProposal._transferOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "861": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        2277,
        2289
      ],
      "op": "PUSH32",
      "path": "4",
      "statement": 2,
      "value": "0x0"
    },
    "894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "898": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "900": {
      "op": "SHL"
    },
    "901": {
      "op": "SUB"
    },
    "902": {
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "903": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "904": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "905": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "907": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "908": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15074
      ],
      "op": "RETURN",
      "path": "14"
    },
    "909": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "910": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "911": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "912": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15074
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "913": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x270"
    },
    "916": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "917": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "918": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "920": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15074
      ],
      "op": "NOT",
      "path": "14"
    },
    "921": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "922": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "923": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "924": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x270"
    },
    "927": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "928": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "930": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "931": {
      "fn": "ERC20.transfer",
      "offset": [
        3881,
        3887
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 3,
      "value": "0x3B7"
    },
    "934": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3AD"
    },
    "937": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1EDC"
    },
    "940": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "941": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "942": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "944": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "945": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "3",
      "statement": 4
    },
    "946": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "947": {
      "fn": "ERC20.transfer",
      "offset": [
        3881,
        3887
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2224"
    },
    "950": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3881,
        3887
      ],
      "op": "JUMP",
      "path": "0"
    },
    "951": {
      "fn": "ERC20.transfer",
      "offset": [
        3881,
        3887
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "952": {
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "953": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "955": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "956": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "957": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15074
      ],
      "op": "RETURN",
      "path": "14"
    },
    "958": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "959": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "960": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "961": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15074
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "962": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x464"
    },
    "965": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "966": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "967": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "969": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15074
      ],
      "op": "NOT",
      "path": "14"
    },
    "970": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "971": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "972": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "973": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x464"
    },
    "976": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "977": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3D8"
    },
    "980": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1EDC"
    },
    "983": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "984": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "985": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "986": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "987": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "989": {
      "fn": "ERC20.transfer",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "990": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "991": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "992": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "993": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "994": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "996": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "998": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "999": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15074
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1000": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "1002": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1003": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "1005": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15074
      ],
      "op": "SHL",
      "path": "14"
    },
    "1006": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "1007": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1008": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "1009": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1011": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1012": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1014": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1015": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1016": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1018": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15074
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1019": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1020": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6809,
        6844
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 5
    },
    "1021": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6809,
        6844
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1022": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6809,
        6844
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1023": {
      "branch": 79,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6809,
        6844
      ],
      "op": "LT",
      "path": "0"
    },
    "1024": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x413"
    },
    "1027": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1028": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1030": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1031": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6945,
        6979
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 6,
      "value": "0x3B7"
    },
    "1034": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1035": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1036": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "1037": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "DUP8",
      "path": "14"
    },
    "1038": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1039": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6945,
        6979
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2438"
    },
    "1042": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6945,
        6979
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1043": {
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1044": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x84"
    },
    "1046": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1047": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1049": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "DUP7",
      "path": "14"
    },
    "1050": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1051": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1052": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x461BCD"
    },
    "1056": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE5"
    },
    "1058": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "SHL",
      "path": "14"
    },
    "1059": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1060": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1061": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1062": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "1063": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1064": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x25"
    },
    "1066": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "1068": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1069": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "1070": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1071": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "1104": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "1106": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1107": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "1108": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1109": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "1115": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "1117": {
      "op": "SHL"
    },
    "1118": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "1120": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1121": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "1122": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1123": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1124": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1125": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1126": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1127": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1128": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "1129": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "1130": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x24D"
    },
    "1133": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1134": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1135": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "1137": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "NOT",
      "path": "14"
    },
    "1138": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "1139": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "1140": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "1141": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x24D"
    },
    "1144": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1145": {
      "offset": [
        3046,
        3056
      ],
      "op": "CALLER",
      "path": "14"
    },
    "1146": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1147": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1148": {
      "offset": [
        3035,
        3045
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "1150": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1152": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1153": {
      "offset": [
        3014,
        3160
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4BD"
    },
    "1156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1158": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1160": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1162": {
      "op": "SHL"
    },
    "1163": {
      "op": "SUB"
    },
    "1164": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1165": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1166": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "DUP7",
      "path": "14"
    },
    "1167": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1168": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1169": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x10"
    },
    "1171": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "SHR",
      "path": "14"
    },
    "1172": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "1173": {
      "offset": [
        3073,
        3097
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1174": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        3073,
        3097
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x0"
    },
    "1207": {
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "1208": {
      "offset": [
        3035,
        3097
      ],
      "op": "EQ",
      "path": "14"
    },
    "1209": {
      "offset": [
        3014,
        3160
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x206A"
    },
    "1212": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        3014,
        3160
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1213": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        3014,
        3160
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1214": {
      "offset": [
        3046,
        3056
      ],
      "op": "CALLER",
      "path": "14"
    },
    "1215": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1216": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1217": {
      "offset": [
        3035,
        3045
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "1219": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1221": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1222": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "1224": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1225": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1226": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1227": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1228": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "1229": {
      "offset": [
        2839,
        2875
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1230": {
      "offset": [
        2835,
        2945
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x505"
    },
    "1233": {
      "offset": [
        2835,
        2945
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1234": {
      "offset": [
        3046,
        3056
      ],
      "op": "POP",
      "path": "14"
    },
    "1235": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        3046,
        3056
      ],
      "op": "CALLER",
      "path": "14"
    },
    "1236": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1237": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1238": {
      "offset": [
        3035,
        3045
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "1240": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1242": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1243": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1244": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1245": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x100"
    },
    "1248": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xFF00"
    },
    "1251": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "NOT",
      "path": "14"
    },
    "1252": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1253": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1254": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "1255": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "OR",
      "path": "14"
    },
    "1256": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1257": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "1258": {
      "offset": [
        3046,
        3056
      ],
      "op": "CALLER",
      "path": "14"
    },
    "1259": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH12",
      "path": "14",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "1272": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "1274": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "SHL",
      "path": "14"
    },
    "1275": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        5517,
        5540
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 7,
      "value": "0xA"
    },
    "1277": {
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1278": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "1279": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "OR",
      "path": "14"
    },
    "1280": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        5517,
        5540
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA"
    },
    "1282": {
      "offset": [
        783,
        15074
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "1283": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1284": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "RETURN",
      "path": "14"
    },
    "1285": {
      "offset": [
        2835,
        2945
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1286": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "1288": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1289": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1290": {
      "offset": [
        2898,
        2934
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1291": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        2898,
        2934
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x6A9FF79F"
    },
    "1296": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        2898,
        2934
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE1"
    },
    "1298": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        2898,
        2934
      ],
      "op": "SHL",
      "path": "14"
    },
    "1299": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        2898,
        2934
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1300": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        2898,
        2934
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1301": {
      "offset": [
        3046,
        3056
      ],
      "op": "CALLER",
      "path": "14"
    },
    "1302": {
      "offset": [
        2898,
        2934
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1303": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        2898,
        2934
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1304": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        2898,
        2934
      ],
      "op": "ADD",
      "path": "14"
    },
    "1305": {
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1306": {
      "offset": [
        2898,
        2934
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1307": {
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1308": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "1309": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1310": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "1311": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x24D"
    },
    "1314": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1315": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "1317": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "1318": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "1320": {
      "op": "NOT"
    },
    "1321": {
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "1322": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "1323": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x24D"
    },
    "1326": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1327": {
      "offset": [
        3046,
        3056
      ],
      "op": "CALLER",
      "path": "14"
    },
    "1328": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1329": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1330": {
      "offset": [
        3035,
        3045
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "1332": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1334": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1335": {
      "offset": [
        3014,
        3160
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x573"
    },
    "1338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1342": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1344": {
      "op": "SHL"
    },
    "1345": {
      "op": "SUB"
    },
    "1346": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1347": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1348": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "DUP7",
      "path": "14"
    },
    "1349": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1350": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1351": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x10"
    },
    "1353": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "SHR",
      "path": "14"
    },
    "1354": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "1355": {
      "offset": [
        3073,
        3097
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1356": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        3073,
        3097
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x0"
    },
    "1389": {
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "1390": {
      "offset": [
        3035,
        3097
      ],
      "op": "EQ",
      "path": "14"
    },
    "1391": {
      "offset": [
        3014,
        3160
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x206A"
    },
    "1394": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "jump": "i",
      "offset": [
        3014,
        3160
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1395": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        3014,
        3160
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1396": {
      "offset": [
        3046,
        3056
      ],
      "op": "CALLER",
      "path": "14"
    },
    "1397": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1398": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1399": {
      "offset": [
        3035,
        3045
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "1401": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1403": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1404": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "1406": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1407": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1408": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1409": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1410": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "1411": {
      "offset": [
        2839,
        2875
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1412": {
      "offset": [
        2835,
        2945
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5AF"
    },
    "1415": {
      "offset": [
        2835,
        2945
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1416": {
      "offset": [
        3046,
        3056
      ],
      "op": "CALLER",
      "path": "14"
    },
    "1417": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1418": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1419": {
      "offset": [
        3035,
        3045
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "1421": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1423": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1424": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1425": {
      "fn": "MasterNode._resmumeOperationsFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1426": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        6998,
        7013
      ],
      "op": "TIMESTAMP",
      "path": "14",
      "statement": 8
    },
    "1427": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "1429": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        6956,
        6995
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1430": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        6956,
        6995
      ],
      "op": "ADD",
      "path": "14"
    },
    "1431": {
      "offset": [
        783,
        15074
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "1432": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1433": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "1434": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        7023,
        7061
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 9,
      "value": "0x2"
    },
    "1436": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        7023,
        7061
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1437": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        7023,
        7061
      ],
      "op": "ADD",
      "path": "14"
    },
    "1438": {
      "offset": [
        783,
        15074
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "1439": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "1441": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "1442": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "1444": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        7089,
        7127
      ],
      "op": "DUP3",
      "path": "14",
      "statement": 10
    },
    "1445": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        7089,
        7127
      ],
      "op": "ADD",
      "path": "14"
    },
    "1446": {
      "offset": [
        783,
        15074
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "1447": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "1449": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "1450": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        7155,
        7188
      ],
      "op": "SWAP2",
      "path": "14",
      "statement": 11
    },
    "1451": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        7155,
        7188
      ],
      "op": "ADD",
      "path": "14"
    },
    "1452": {
      "offset": [
        783,
        15074
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "1453": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1454": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "RETURN",
      "path": "14"
    },
    "1455": {
      "offset": [
        2835,
        2945
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1456": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "1458": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1459": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "1460": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1461": {
      "offset": [
        2898,
        2934
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1462": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        2898,
        2934
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x6A9FF79F"
    },
    "1467": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        2898,
        2934
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE1"
    },
    "1469": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        2898,
        2934
      ],
      "op": "SHL",
      "path": "14"
    },
    "1470": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        2898,
        2934
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1471": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        2898,
        2934
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1472": {
      "offset": [
        3046,
        3056
      ],
      "op": "CALLER",
      "path": "14"
    },
    "1473": {
      "offset": [
        2898,
        2934
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1474": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        2898,
        2934
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1475": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        2898,
        2934
      ],
      "op": "ADD",
      "path": "14"
    },
    "1476": {
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1477": {
      "offset": [
        2898,
        2934
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1478": {
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1479": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "1480": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1481": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "1482": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x464"
    },
    "1485": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1486": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1487": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "1489": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "NOT",
      "path": "14"
    },
    "1490": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "1491": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "1492": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "1493": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x464"
    },
    "1496": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1497": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1498": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1499": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1500": {
      "fn": "MasterNode.nodeAaveFeedFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1501": {
      "fn": "ERC20.symbol",
      "offset": [
        2453,
        2460
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 12,
      "value": "0x6"
    },
    "1503": {
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1504": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1505": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "1507": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1508": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1509": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SHR",
      "path": "14"
    },
    "1510": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1511": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1512": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP7",
      "path": "14"
    },
    "1513": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "1514": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "1515": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP7",
      "path": "14"
    },
    "1516": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1517": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x6D7"
    },
    "1520": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1521": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1522": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1524": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "1525": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP8",
      "path": "14"
    },
    "1526": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1527": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "LT",
      "path": "14"
    },
    "1528": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1529": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "EQ",
      "path": "14"
    },
    "1530": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x6C4"
    },
    "1533": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1534": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP9",
      "path": "14"
    },
    "1535": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP10",
      "path": "14"
    },
    "1536": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "1537": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "1538": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP9",
      "path": "14"
    },
    "1539": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "1540": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "1541": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1542": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1543": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP11",
      "path": "14"
    },
    "1544": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1545": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1546": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1547": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1549": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "EQ",
      "path": "14"
    },
    "1550": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x69D"
    },
    "1553": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1554": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "1555": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "1556": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "1558": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "EQ",
      "path": "14"
    },
    "1559": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x641"
    },
    "1562": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1563": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1564": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "1565": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "1566": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "1567": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x63D"
    },
    "1570": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1571": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1572": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x62E"
    },
    "1575": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1576": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "1577": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1578": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FF3"
    },
    "1581": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1582": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1583": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1584": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1585": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1586": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1587": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1588": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1589": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1590": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1591": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "1592": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1593": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F08"
    },
    "1596": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1597": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1598": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "1599": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1600": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "RETURN",
      "path": "14"
    },
    "1601": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1602": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1603": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1604": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP7",
      "path": "14"
    },
    "1605": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1606": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "1607": {
      "fn": "ERC20.symbol",
      "offset": [
        2453,
        2460
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "1609": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1610": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1611": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F"
    },
    "1644": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1645": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1646": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1647": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "LT",
      "path": "14"
    },
    "1648": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x685"
    },
    "1651": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1652": {
      "op": "POP"
    },
    "1653": {
      "op": "POP"
    },
    "1654": {
      "op": "POP"
    },
    "1655": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1656": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "1657": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "1658": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1659": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x62E"
    },
    "1662": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x63D"
    },
    "1665": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x61B"
    },
    "1668": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1669": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1670": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1671": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1672": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1673": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP11",
      "path": "14"
    },
    "1674": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "1675": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP7",
      "path": "14"
    },
    "1676": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "1677": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1678": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP9",
      "path": "14"
    },
    "1679": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "1680": {
      "op": "POP"
    },
    "1681": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP8",
      "path": "14"
    },
    "1682": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "1683": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1684": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1685": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "1686": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1687": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1688": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "1689": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x66C"
    },
    "1692": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1693": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1694": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1696": {
      "op": "NOT"
    },
    "1697": {
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "1698": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP8",
      "path": "14"
    },
    "1699": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1700": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "1701": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1702": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1703": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1704": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1705": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x5"
    },
    "1707": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SHL",
      "path": "14"
    },
    "1708": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP7",
      "path": "14"
    },
    "1709": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "1710": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1711": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1712": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "1713": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1714": {
      "op": "POP"
    },
    "1715": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1716": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1717": {
      "op": "POP"
    },
    "1718": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x62E"
    },
    "1721": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1722": {
      "op": "POP"
    },
    "1723": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x63D"
    },
    "1726": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1727": {
      "op": "POP"
    },
    "1728": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x61B"
    },
    "1731": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1732": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1733": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1738": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1740": {
      "op": "SHL"
    },
    "1741": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1742": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1743": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x22"
    },
    "1745": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP11",
      "path": "14"
    },
    "1746": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1747": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "1749": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1750": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1751": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1752": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1753": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x7F"
    },
    "1755": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "1756": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1757": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5F1"
    },
    "1760": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1761": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1762": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "1763": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "1764": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "1765": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x270"
    },
    "1768": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1769": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1770": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "1772": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "NOT",
      "path": "14"
    },
    "1773": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "1774": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "1775": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "1776": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x270"
    },
    "1779": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1780": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1781": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1782": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1783": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1788": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1790": {
      "op": "SHL"
    },
    "1791": {
      "op": "SUB"
    },
    "1792": {
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1793": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1794": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "1795": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1796": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1797": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1799": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1800": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "RETURN",
      "path": "14"
    },
    "1801": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1802": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "1803": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "1804": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "1805": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x270"
    },
    "1808": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1809": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1810": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "1812": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "NOT",
      "path": "14"
    },
    "1813": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "1814": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "1815": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "1816": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x270"
    },
    "1819": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1820": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1822": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1823": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1826": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1828": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1830": {
      "op": "SHL"
    },
    "1831": {
      "op": "SUB"
    },
    "1832": {
      "offset": [
        1816,
        1864
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x0"
    },
    "1865": {
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "1866": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1867": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1868": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "RETURN",
      "path": "14"
    },
    "1869": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1870": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "1871": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1872": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "1873": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x24D"
    },
    "1876": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1877": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1879": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1880": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "1882": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "NOT",
      "path": "14"
    },
    "1883": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1884": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1885": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "1886": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "1887": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "1888": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x909"
    },
    "1891": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1892": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1893": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "1894": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1895": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1897": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1899": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1901": {
      "op": "SHL"
    },
    "1902": {
      "op": "SUB"
    },
    "1903": {
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1904": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1905": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1906": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "GT",
      "path": "14"
    },
    "1907": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA60"
    },
    "1910": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1911": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "1913": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1914": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1915": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "1916": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "1917": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "1918": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "1919": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x98B"
    },
    "1922": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1927": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1929": {
      "op": "SHL"
    },
    "1930": {
      "op": "SUB"
    },
    "1931": {
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1932": {
      "offset": [
        2449,
        2461
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x0"
    },
    "1965": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1966": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "1967": {
      "offset": [
        2427,
        2437
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1968": {
      "offset": [
        2427,
        2462
      ],
      "op": "SUB",
      "path": "4"
    },
    "1969": {
      "offset": [
        2423,
        2496
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB21"
    },
    "1972": {
      "offset": [
        2423,
        2496
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1973": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1974": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1975": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1976": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x7C0"
    },
    "1979": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1980": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F5E"
    },
    "1983": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1984": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1985": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1986": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1987": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "1988": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "1989": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1990": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1991": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "1993": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1994": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1995": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1996": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "1997": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "1998": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1999": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2000": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "2001": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2002": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "2003": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAFC"
    },
    "2006": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2007": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP9",
      "path": "14"
    },
    "2008": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2009": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "2010": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2011": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "2013": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2014": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "2015": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "2016": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2017": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2018": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "GT",
      "path": "14"
    },
    "2019": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA68"
    },
    "2022": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2023": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x7F5"
    },
    "2026": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2027": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2028": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "2029": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2030": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP9",
      "path": "14"
    },
    "2031": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "2032": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "2033": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2014"
    },
    "2036": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2037": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2038": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "2039": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP8",
      "path": "14"
    },
    "2040": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2041": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "2042": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "2043": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2044": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2045": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "2047": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2048": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "2049": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "2050": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2051": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2052": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "GT",
      "path": "14"
    },
    "2053": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB19"
    },
    "2056": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2057": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x817"
    },
    "2060": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2061": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2062": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "2063": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2064": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP10",
      "path": "14"
    },
    "2065": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "2066": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "2067": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2014"
    },
    "2070": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2071": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2072": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "2073": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "2075": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2076": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "2077": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "2078": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP8",
      "path": "14"
    },
    "2079": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2080": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x84"
    },
    "2082": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2083": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "2084": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "2085": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2086": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2087": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2088": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "GT",
      "path": "14"
    },
    "2089": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB1D"
    },
    "2092": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2093": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "2094": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "2095": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x23"
    },
    "2097": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2098": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "2099": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "2100": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2101": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB19"
    },
    "2104": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2105": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2106": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2107": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "2108": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "2109": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2110": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2111": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "GT",
      "path": "14"
    },
    "2112": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB05"
    },
    "2115": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2116": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP9",
      "path": "14"
    },
    "2117": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2118": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2119": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x855"
    },
    "2122": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP12",
      "path": "14"
    },
    "2123": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2124": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x5"
    },
    "2126": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SHL",
      "path": "14"
    },
    "2127": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "2128": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2129": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FF3"
    },
    "2132": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2133": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2134": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2135": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2136": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2137": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2138": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP12",
      "path": "14"
    },
    "2139": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2140": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "2141": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2142": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x6"
    },
    "2144": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SHL",
      "path": "14"
    },
    "2145": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2146": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "2147": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "2148": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2149": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "2150": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2151": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "GT",
      "path": "14"
    },
    "2152": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB01"
    },
    "2155": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2156": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2157": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "2158": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2159": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2160": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2161": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2162": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "LT",
      "path": "14"
    },
    "2163": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAC2"
    },
    "2166": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2167": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "2168": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "2169": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "2170": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "2172": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "2173": {
      "fn": "ERC20.symbol",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2174": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7824,
        7846
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2175": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7824,
        7846
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2176": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP8",
      "path": "14"
    },
    "2177": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2178": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2179": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2180": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7813,
        7858
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2181": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7813,
        7858
      ],
      "op": "ADD",
      "path": "14"
    },
    "2182": {
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "2183": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "2184": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA64"
    },
    "2187": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2188": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x897"
    },
    "2191": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7813,
        7858
      ],
      "op": "DUP9",
      "path": "14"
    },
    "2192": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7813,
        7858
      ],
      "op": "DUP8",
      "path": "14"
    },
    "2193": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7813,
        7858
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2194": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7813,
        7858
      ],
      "op": "ADD",
      "path": "14"
    },
    "2195": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x253A"
    },
    "2198": {
      "fn": "MasterNode._ccipReceive",
      "jump": "i",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2199": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2200": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "2201": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2202": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "DUP10",
      "path": "14"
    },
    "2203": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2204": {
      "offset": [
        2840,
        2850
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "2206": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP9",
      "path": "14"
    },
    "2207": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2208": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "2210": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "DUP8",
      "path": "14"
    },
    "2211": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "DUP11",
      "path": "14"
    },
    "2212": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "2213": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2214": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "2215": {
      "offset": [
        2839,
        2875
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2216": {
      "offset": [
        2835,
        2945
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAAD"
    },
    "2219": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2835,
        2945
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2220": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        477,
        497
      ],
      "op": "POP",
      "path": "15"
    },
    "2221": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        477,
        497
      ],
      "op": "DUP4",
      "path": "15"
    },
    "2222": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        477,
        497
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "2223": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP8",
      "path": "14"
    },
    "2224": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2225": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2226": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2227": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        466,
        507
      ],
      "op": "DUP2",
      "path": "15"
    },
    "2228": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        466,
        507
      ],
      "op": "ADD",
      "path": "15"
    },
    "2229": {
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "2230": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "2231": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA64"
    },
    "2234": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2235": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x8C7"
    },
    "2238": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        466,
        507
      ],
      "op": "DUP9",
      "path": "15"
    },
    "2239": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "2241": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        466,
        507
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2242": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        466,
        507
      ],
      "op": "ADD",
      "path": "15"
    },
    "2243": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x254E"
    },
    "2246": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "jump": "i",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2247": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2248": {
      "fn": "UtilsMasterNode._internalCommandRouter",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "2249": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7943,
        7955
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2250": {
      "branch": 69,
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7943,
        7955
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x90D"
    },
    "2253": {
      "branch": 69,
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7943,
        7955
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2254": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4247,
        4267
      ],
      "op": "POP",
      "path": "14"
    },
    "2255": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4247,
        4267
      ],
      "op": "POP",
      "path": "14"
    },
    "2256": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4247,
        4267
      ],
      "op": "POP",
      "path": "14"
    },
    "2257": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4247,
        4267
      ],
      "op": "POP",
      "path": "14"
    },
    "2258": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4247,
        4267
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2259": {
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2260": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "2262": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2263": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2264": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2265": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4223,
        4316
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2266": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4223,
        4316
      ],
      "op": "ADD",
      "path": "14"
    },
    "2267": {
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "2268": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "2269": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x909"
    },
    "2272": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2273": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x8FC"
    },
    "2276": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "2278": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4223,
        4316
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2279": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x8F4"
    },
    "2282": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4346,
        4352
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 13,
      "value": "0x906"
    },
    "2285": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4223,
        4316
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "2286": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4223,
        4316
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2287": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4223,
        4316
      ],
      "op": "ADD",
      "path": "14"
    },
    "2288": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x254E"
    },
    "2291": {
      "fn": "MasterNode._aWarpTokenMinter",
      "jump": "i",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2292": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2293": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "2294": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2295": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "2296": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x253A"
    },
    "2299": {
      "fn": "MasterNode._aWarpTokenMinter",
      "jump": "i",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2300": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2301": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2302": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "2303": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2304": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2305": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "2306": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4346,
        4352
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2394"
    },
    "2309": {
      "fn": "MasterNode._aWarpTokenMinter",
      "jump": "i",
      "offset": [
        4346,
        4352
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2310": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        4346,
        4352
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2311": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2312": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15074
      ],
      "op": "RETURN",
      "path": "14"
    },
    "2313": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2314": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2315": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2316": {
      "fn": "MasterNode._aWarpTokenMinter",
      "offset": [
        783,
        15074
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2317": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        7939,
        8245
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2318": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "2320": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8026,
        8038
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2321": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8026,
        8038
      ],
      "op": "SWAP9",
      "path": "14"
    },
    "2322": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8026,
        8038
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "2323": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8026,
        8038
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "2324": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8026,
        8038
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "2325": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8026,
        8038
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "2326": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8026,
        8038
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "2327": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8026,
        8038
      ],
      "op": "SWAP9",
      "path": "14"
    },
    "2328": {
      "branch": 70,
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8026,
        8038
      ],
      "op": "EQ",
      "path": "14"
    },
    "2329": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8022,
        8245
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2331": {
      "offset": [
        783,
        15074
      ],
      "op": "EQ",
      "path": "14"
    },
    "2332": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x98F"
    },
    "2335": {
      "branch": 70,
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2336": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5094,
        5116
      ],
      "op": "POP",
      "path": "14",
      "statement": 14
    },
    "2337": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5094,
        5116
      ],
      "op": "POP",
      "path": "14"
    },
    "2338": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5094,
        5116
      ],
      "op": "POP",
      "path": "14"
    },
    "2339": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5094,
        5116
      ],
      "op": "POP",
      "path": "14"
    },
    "2340": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5094,
        5116
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2341": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5094,
        5116
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2342": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2343": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2344": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2345": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2346": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5083,
        5128
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2347": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5083,
        5128
      ],
      "op": "ADD",
      "path": "14"
    },
    "2348": {
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "2349": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "2350": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x98B"
    },
    "2353": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2354": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x93D"
    },
    "2357": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5083,
        5128
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2358": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5083,
        5128
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2359": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5083,
        5128
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2360": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5083,
        5128
      ],
      "op": "ADD",
      "path": "14"
    },
    "2361": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x253A"
    },
    "2364": {
      "fn": "MasterNode._resmumeOperations",
      "jump": "i",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2365": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2366": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "2367": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2368": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2369": {
      "offset": [
        2840,
        2850
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "2371": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2372": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2373": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2374": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15074
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "2375": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x100"
    },
    "2378": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xFF00"
    },
    "2381": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15074
      ],
      "op": "NOT",
      "path": "14"
    },
    "2382": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2383": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2384": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "2385": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15074
      ],
      "op": "OR",
      "path": "14"
    },
    "2386": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2387": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15074
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "2388": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5197,
        5219
      ],
      "op": "MLOAD",
      "path": "14",
      "statement": 15
    },
    "2389": {
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2390": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2391": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2392": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2393": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2394": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5186,
        5231
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2395": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5186,
        5231
      ],
      "op": "ADD",
      "path": "14"
    },
    "2396": {
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "2397": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "2398": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x987"
    },
    "2401": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2402": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x96B"
    },
    "2405": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5186,
        5231
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2406": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5186,
        5231
      ],
      "op": "ADD",
      "path": "14"
    },
    "2407": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x253A"
    },
    "2410": {
      "fn": "MasterNode._resmumeOperations",
      "jump": "i",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2411": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2412": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "2413": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH12",
      "path": "14",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "2426": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "2428": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15074
      ],
      "op": "SHL",
      "path": "14"
    },
    "2429": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5173,
        5231
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA"
    },
    "2431": {
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2432": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "2433": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15074
      ],
      "op": "OR",
      "path": "14"
    },
    "2434": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        5173,
        5231
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA"
    },
    "2436": {
      "offset": [
        783,
        15074
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "2437": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2438": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15074
      ],
      "op": "RETURN",
      "path": "14"
    },
    "2439": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2440": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2441": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2442": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15074
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2443": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2444": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2445": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2446": {
      "fn": "MasterNode._resmumeOperations",
      "offset": [
        783,
        15074
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2447": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8022,
        8245
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2448": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8121,
        8122
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "2450": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8110,
        8122
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2451": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8110,
        8122
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "2452": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8110,
        8122
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "2453": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8110,
        8122
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "2454": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8110,
        8122
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "2455": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8110,
        8122
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "2456": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8110,
        8122
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "2457": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8110,
        8122
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "2458": {
      "branch": 71,
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8110,
        8122
      ],
      "op": "EQ",
      "path": "14"
    },
    "2459": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8106,
        8245
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2461": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8121,
        8122
      ],
      "op": "EQ",
      "path": "14"
    },
    "2462": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8121,
        8122
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA6C"
    },
    "2465": {
      "branch": 71,
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8121,
        8122
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2466": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6123,
        6143
      ],
      "op": "POP",
      "path": "14"
    },
    "2467": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6123,
        6143
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2468": {
      "offset": [
        783,
        15074
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "2469": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "2471": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2472": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2473": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2474": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6095,
        6209
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2475": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6095,
        6209
      ],
      "op": "ADD",
      "path": "14"
    },
    "2476": {
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "2477": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "2478": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA60"
    },
    "2481": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2482": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x9BC"
    },
    "2485": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6095,
        6209
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2486": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6095,
        6209
      ],
      "op": "DUP8",
      "path": "14"
    },
    "2487": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6095,
        6209
      ],
      "op": "ADD",
      "path": "14"
    },
    "2488": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x254E"
    },
    "2491": {
      "fn": "MasterNode._nodeAaveFeed",
      "jump": "i",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2492": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2493": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "2494": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2495": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2496": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "2497": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2498": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "2499": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "2501": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "2503": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2504": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "2505": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2506": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2507": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "2508": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2509": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6242,
        6264
      ],
      "op": "SWAP7",
      "path": "14",
      "statement": 16
    },
    "2510": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6242,
        6264
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2511": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6242,
        6264
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2512": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2513": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2514": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2515": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2516": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6231,
        6276
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2517": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6231,
        6276
      ],
      "op": "ADD",
      "path": "14"
    },
    "2518": {
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "2519": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "2520": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA68"
    },
    "2523": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2524": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x9E7"
    },
    "2527": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6231,
        6276
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2528": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6231,
        6276
      ],
      "op": "DUP8",
      "path": "14"
    },
    "2529": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6231,
        6276
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2530": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6231,
        6276
      ],
      "op": "ADD",
      "path": "14"
    },
    "2531": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x253A"
    },
    "2534": {
      "fn": "MasterNode._nodeAaveFeed",
      "jump": "i",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2535": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2536": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "2537": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "DUP10",
      "path": "14"
    },
    "2538": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2539": {
      "offset": [
        2840,
        2850
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "2541": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2542": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2543": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6310,
        6325
      ],
      "op": "TIMESTAMP",
      "path": "14"
    },
    "2544": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "2546": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "DUP8",
      "path": "14"
    },
    "2547": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "DUP12",
      "path": "14"
    },
    "2548": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "2549": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6220,
        6307
      ],
      "op": "ADD",
      "path": "14"
    },
    "2550": {
      "offset": [
        783,
        15074
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "2551": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6357,
        6379
      ],
      "op": "DUP3",
      "path": "14",
      "statement": 17
    },
    "2552": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6357,
        6379
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2553": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2554": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2555": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2556": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2557": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6346,
        6391
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2558": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6346,
        6391
      ],
      "op": "ADD",
      "path": "14"
    },
    "2559": {
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "2560": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "2561": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA68"
    },
    "2564": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2565": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA10"
    },
    "2568": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6346,
        6391
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2569": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6346,
        6391
      ],
      "op": "DUP8",
      "path": "14"
    },
    "2570": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6346,
        6391
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2571": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6346,
        6391
      ],
      "op": "ADD",
      "path": "14"
    },
    "2572": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x253A"
    },
    "2575": {
      "fn": "MasterNode._nodeAaveFeed",
      "jump": "i",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2576": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2577": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "2578": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "DUP10",
      "path": "14"
    },
    "2579": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2580": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8121,
        8122
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "2582": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2583": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "DUP11",
      "path": "14"
    },
    "2584": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "2585": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6335,
        6421
      ],
      "op": "ADD",
      "path": "14"
    },
    "2586": {
      "offset": [
        783,
        15074
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "2587": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6471,
        6493
      ],
      "op": "DUP2",
      "path": "14",
      "statement": 18
    },
    "2588": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6471,
        6493
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2589": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2590": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2591": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2592": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2593": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6460,
        6505
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2594": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6460,
        6505
      ],
      "op": "ADD",
      "path": "14"
    },
    "2595": {
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "2596": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "2597": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA64"
    },
    "2600": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2601": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA34"
    },
    "2604": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6460,
        6505
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2605": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6460,
        6505
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2606": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6460,
        6505
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2607": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6460,
        6505
      ],
      "op": "ADD",
      "path": "14"
    },
    "2608": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x253A"
    },
    "2611": {
      "fn": "MasterNode._nodeAaveFeed",
      "jump": "i",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2612": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2613": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "2614": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "DUP9",
      "path": "14"
    },
    "2615": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2616": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "2618": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2619": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "DUP10",
      "path": "14"
    },
    "2620": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "2621": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6449,
        6535
      ],
      "op": "ADD",
      "path": "14"
    },
    "2622": {
      "offset": [
        783,
        15074
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "2623": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6585,
        6607
      ],
      "op": "MLOAD",
      "path": "14",
      "statement": 19
    },
    "2624": {
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2625": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2626": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2627": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2628": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2629": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6574,
        6619
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2630": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6574,
        6619
      ],
      "op": "ADD",
      "path": "14"
    },
    "2631": {
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "2632": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "2633": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA60"
    },
    "2636": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2637": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA56"
    },
    "2640": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6574,
        6619
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2641": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6574,
        6619
      ],
      "op": "ADD",
      "path": "14"
    },
    "2642": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x253A"
    },
    "2645": {
      "fn": "MasterNode._nodeAaveFeed",
      "jump": "i",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2646": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2647": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "2648": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2649": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2650": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2651": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "2652": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        6563,
        6644
      ],
      "op": "ADD",
      "path": "14"
    },
    "2653": {
      "offset": [
        783,
        15074
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "2654": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2655": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "RETURN",
      "path": "14"
    },
    "2656": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2657": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2658": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2659": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2660": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2661": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "DUP9",
      "path": "14"
    },
    "2662": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2663": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2664": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2665": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "DUP10",
      "path": "14"
    },
    "2666": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2667": {
      "fn": "MasterNode._nodeAaveFeed",
      "offset": [
        783,
        15074
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2668": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8106,
        8245
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2669": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2670": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x19"
    },
    "2672": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "2674": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2675": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2676": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "DUP9",
      "path": "14"
    },
    "2677": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2678": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "2679": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x461BCD"
    },
    "2683": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE5"
    },
    "2685": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "SHL",
      "path": "14"
    },
    "2686": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8199,
        8234
      ],
      "op": "DUP6",
      "path": "14",
      "statement": 20
    },
    "2687": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8199,
        8234
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2688": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8199,
        8234
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2689": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8199,
        8234
      ],
      "op": "ADD",
      "path": "14"
    },
    "2690": {
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2691": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2692": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "2693": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2694": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x696E76616C696420636F6D6D616E642066726F6D204E6F646500000000000000"
    },
    "2727": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "2729": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2730": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "2731": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2732": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        8199,
        8234
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "14"
    },
    "2733": {
      "offset": [
        2835,
        2945
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2734": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2735": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2736": {
      "op": "PUSH4",
      "value": "0x6A9FF79F"
    },
    "2741": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2743": {
      "op": "SHL"
    },
    "2744": {
      "offset": [
        2898,
        2934
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2745": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2898,
        2934
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2746": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2898,
        2934
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2747": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2898,
        2934
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2748": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2898,
        2934
      ],
      "op": "ADD",
      "path": "14"
    },
    "2749": {
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2750": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2751": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2752": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2753": {
      "offset": [
        2898,
        2934
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2754": {
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2755": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "DUP11",
      "path": "14"
    },
    "2756": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2757": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "2758": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "2759": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "2760": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB01"
    },
    "2763": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2764": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "DUP11",
      "path": "14"
    },
    "2765": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2766": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2767": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAD7"
    },
    "2770": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2771": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FBD"
    },
    "2774": {
      "fn": "MasterNode._ccipReceive",
      "jump": "i",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2775": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2776": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2777": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "2778": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2779": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "DUP12",
      "path": "14"
    },
    "2780": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2781": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "2782": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2783": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "2784": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAFC"
    },
    "2787": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2788": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2789": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "DUP15",
      "path": "14"
    },
    "2790": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2791": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "DUP15",
      "path": "14"
    },
    "2792": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "2793": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2794": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2795": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2796": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "2797": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "2798": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2799": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2800": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "2801": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2802": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2803": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2804": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "2805": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2806": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "2807": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2808": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x86F"
    },
    "2811": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2812": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2813": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2815": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2816": {
      "first_revert": true,
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2817": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2818": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "DUP13",
      "path": "14"
    },
    "2819": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2820": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2821": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2822": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2823": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x41"
    },
    "2825": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2826": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x4E487B71"
    },
    "2831": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "2833": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "SHL",
      "path": "14"
    },
    "2834": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2836": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2837": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2838": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2840": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2841": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2842": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "DUP11",
      "path": "14"
    },
    "2843": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2844": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2845": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2846": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "DUP12",
      "path": "14"
    },
    "2847": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2848": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2849": {
      "offset": [
        2423,
        2496
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2850": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "2852": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2853": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2854": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2855": {
      "offset": [
        2471,
        2496
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2856": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2471,
        2496
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x35FDCCCD"
    },
    "2861": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2471,
        2496
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE2"
    },
    "2863": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2471,
        2496
      ],
      "op": "SHL",
      "path": "4"
    },
    "2864": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2471,
        2496
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2865": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2471,
        2496
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2866": {
      "offset": [
        2427,
        2437
      ],
      "op": "CALLER",
      "path": "4"
    },
    "2867": {
      "offset": [
        2471,
        2496
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2868": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2471,
        2496
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2869": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        2471,
        2496
      ],
      "op": "ADD",
      "path": "4"
    },
    "2870": {
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2871": {
      "offset": [
        2471,
        2496
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2872": {
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2873": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "2874": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2875": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "2876": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x24D"
    },
    "2879": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2880": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2881": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "2883": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "NOT",
      "path": "14"
    },
    "2884": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "2885": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "2886": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "2887": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x24D"
    },
    "2890": {
      "fn": "MasterNode._ccipReceive",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2891": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1142,
        1156
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 21,
      "value": "0x1"
    },
    "2893": {
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2894": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2895": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2897": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2899": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2901": {
      "op": "SHL"
    },
    "2902": {
      "op": "SUB"
    },
    "2903": {
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2904": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2905": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2906": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "2907": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1128,
        1138
      ],
      "op": "CALLER",
      "path": "9"
    },
    "2908": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1128,
        1156
      ],
      "op": "SUB",
      "path": "9"
    },
    "2909": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xBA3"
    },
    "2912": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2913": {
      "op": "POP"
    },
    "2914": {
      "op": "POP"
    },
    "2915": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2916": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2921": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2923": {
      "op": "SHL"
    },
    "2924": {
      "op": "SUB"
    },
    "2925": {
      "op": "NOT"
    },
    "2926": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2927": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2928": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "2929": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1128,
        1138
      ],
      "op": "CALLER",
      "path": "9"
    },
    "2930": {
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2931": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2932": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "OR",
      "path": "14"
    },
    "2933": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2934": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "2935": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "2936": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "2937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2939": {
      "offset": [
        783,
        15074
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "2940": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "2941": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1287,
        1329
      ],
      "op": "PUSH32",
      "path": "9",
      "statement": 22,
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "2974": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2975": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2976": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        1287,
        1329
      ],
      "op": "LOG3",
      "path": "9"
    },
    "2977": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2978": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "RETURN",
      "path": "14"
    },
    "2979": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2980": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2981": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2983": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "2985": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2986": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2987": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2988": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x461BCD"
    },
    "2992": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE5"
    },
    "2994": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "SHL",
      "path": "14"
    },
    "2995": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2996": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2997": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2998": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "2999": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3000": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x16"
    },
    "3002": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "3004": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3005": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "3006": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3007": {
      "op": "PUSH22",
      "value": "0x26BAB9BA10313290383937B837B9B2B21037BBB732B9"
    },
    "3030": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "3032": {
      "op": "SHL"
    },
    "3033": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "3035": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3036": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "3037": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3038": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "REVERT",
      "path": "14"
    },
    "3039": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3040": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "3041": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "3042": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "3043": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x270"
    },
    "3046": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3047": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3049": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "3050": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "3052": {
      "op": "NOT"
    },
    "3053": {
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "3054": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "3055": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x270"
    },
    "3058": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3059": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3061": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3062": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3063": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3068": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3070": {
      "op": "SHL"
    },
    "3071": {
      "op": "SUB"
    },
    "3072": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC07"
    },
    "3075": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1EDC"
    },
    "3078": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "jump": "i",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3079": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3080": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "3081": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3082": {
      "fn": "ConfirmedOwnerWithProposal.acceptOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3083": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3515
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 23,
      "value": "0x2"
    },
    "3085": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3086": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3087": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15074
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3088": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3089": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3090": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3091": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3092": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3093": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3094": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15074
      ],
      "op": "RETURN",
      "path": "14"
    },
    "3095": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3096": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3097": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15074
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "3098": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x464"
    },
    "3101": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3102": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3103": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "3105": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15074
      ],
      "op": "NOT",
      "path": "14"
    },
    "3106": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "3107": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "3108": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "3109": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x464"
    },
    "3112": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3113": {
      "offset": [
        2032,
        2091
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC30"
    },
    "3116": {
      "fn": "ERC20.balanceOf",
      "offset": [
        2032,
        2091
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2593"
    },
    "3119": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        2032,
        2091
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3120": {
      "fn": "ERC20.balanceOf",
      "offset": [
        2032,
        2091
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3121": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "3123": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15074
      ],
      "op": "NOT",
      "path": "14"
    },
    "3124": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        3240,
        3262
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 24,
      "value": "0x9"
    },
    "3126": {
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3127": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "3128": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        3240,
        3262
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9"
    },
    "3130": {
      "offset": [
        783,
        15074
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "3131": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3132": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "RETURN",
      "path": "14"
    },
    "3133": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3134": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "3135": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "3136": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "3137": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x270"
    },
    "3140": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3141": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3142": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "3144": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "NOT",
      "path": "14"
    },
    "3145": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "3146": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "3147": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "3148": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x270"
    },
    "3151": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3152": {
      "offset": [
        2240,
        2265
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA"
    },
    "3154": {
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3155": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3156": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3161": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3163": {
      "op": "SHL"
    },
    "3164": {
      "op": "SUB"
    },
    "3165": {
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3166": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3167": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "3168": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3169": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3170": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3172": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3173": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "RETURN",
      "path": "14"
    },
    "3174": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3175": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "3176": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "3177": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "3178": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x270"
    },
    "3181": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3182": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3183": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "3185": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "NOT",
      "path": "14"
    },
    "3186": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "3187": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "3188": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "3189": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x270"
    },
    "3192": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3193": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3195": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3196": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "3198": {
      "offset": [
        2166,
        2199
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9"
    },
    "3200": {
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3201": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "3202": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3203": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3204": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3205": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3206": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3207": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3208": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3209": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "RETURN",
      "path": "14"
    },
    "3210": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3211": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "3212": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "3213": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "3214": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x270"
    },
    "3217": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3218": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3219": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "3221": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "NOT",
      "path": "14"
    },
    "3222": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "3223": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "3224": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "3225": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x270"
    },
    "3228": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3229": {
      "offset": [
        2205,
        2234
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9"
    },
    "3231": {
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3232": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3233": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3234": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "3236": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3237": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3238": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3239": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "SHR",
      "path": "14"
    },
    "3240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3244": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3246": {
      "op": "SHL"
    },
    "3247": {
      "op": "SUB"
    },
    "3248": {
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "3249": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3250": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3251": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3253": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3254": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "RETURN",
      "path": "14"
    },
    "3255": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3256": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3257": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3258": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "3259": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "3260": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1207"
    },
    "3263": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3264": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3265": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "3267": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "NOT",
      "path": "14"
    },
    "3268": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "3269": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "3270": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "3271": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1207"
    },
    "3274": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3275": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xCD2"
    },
    "3278": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F48"
    },
    "3281": {
      "fn": "MasterNode.stopAddingNodes",
      "jump": "i",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3282": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3283": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3284": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xCDB"
    },
    "3287": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1EF2"
    },
    "3290": {
      "fn": "MasterNode.stopAddingNodes",
      "jump": "i",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3291": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3292": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3293": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3294": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3295": {
      "fn": "MasterNode.stopAddingNodes",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3297": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12142,
        12143
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "3299": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12174,
        12294
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3300": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12174,
        12294
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3301": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12174,
        12294
      ],
      "op": "ADD",
      "path": "14"
    },
    "3302": {
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3307": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3309": {
      "op": "SHL"
    },
    "3310": {
      "op": "SUB"
    },
    "3311": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3312": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "3313": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "3314": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3315": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3316": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "DUP7",
      "path": "14"
    },
    "3317": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3318": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "3319": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3320": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "3322": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3323": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "3325": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "SHL",
      "path": "14"
    },
    "3326": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "3327": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3328": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "3329": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "3330": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "3331": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "3333": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "DUP9",
      "path": "14"
    },
    "3334": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3335": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3336": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "3337": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3338": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12174,
        12294
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3339": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12174,
        12294
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3340": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12174,
        12294
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3341": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12174,
        12294
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xD15"
    },
    "3344": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12174,
        12294
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3345": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12174,
        12294
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FD8"
    },
    "3348": {
      "fn": "MasterNode.warpAssets",
      "jump": "i",
      "offset": [
        12174,
        12294
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3349": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12174,
        12294
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3350": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3351": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12315,
        12325
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 25,
      "value": "0xA"
    },
    "3353": {
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3354": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "3355": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "DUP11",
      "path": "14"
    },
    "3356": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3357": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12304,
        12314
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "3359": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3360": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3361": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "DUP8",
      "path": "14"
    },
    "3362": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "DUP11",
      "path": "14"
    },
    "3363": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3364": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xFF00"
    },
    "3367": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "NOT",
      "path": "14"
    },
    "3368": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3369": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3370": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "3371": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3372": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "3373": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3374": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12315,
        12325
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA"
    },
    "3376": {
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3377": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "3378": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3379": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3380": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "DUP12",
      "path": "14"
    },
    "3381": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3382": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "DUP9",
      "path": "14"
    },
    "3383": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "DUP12",
      "path": "14"
    },
    "3384": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3385": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3386": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3387": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3388": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x10"
    },
    "3390": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "SHR",
      "path": "14"
    },
    "3391": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "3392": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12400,
        12424
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "3393": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12400,
        12424
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x0"
    },
    "3426": {
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "3427": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12362,
        12424
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3428": {
      "branch": 72,
      "fn": "MasterNode.warpAssets",
      "offset": [
        12362,
        12424
      ],
      "op": "EQ",
      "path": "14"
    },
    "3429": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12358,
        12680
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3431": {
      "offset": [
        783,
        15074
      ],
      "op": "EQ",
      "path": "14"
    },
    "3432": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE02"
    },
    "3435": {
      "branch": 72,
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3436": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "3437": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "3438": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "3439": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "3440": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "3441": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "3442": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12315,
        12325
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA"
    },
    "3444": {
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3445": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "3446": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12440,
        12572
      ],
      "op": "DUP1",
      "path": "14",
      "statement": 26
    },
    "3447": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12440,
        12572
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "3448": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12440,
        12572
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3449": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12440,
        12572
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x98B"
    },
    "3452": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12440,
        12572
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3453": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "3454": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3455": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3456": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "3458": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3459": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "DUP7",
      "path": "14"
    },
    "3460": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3461": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "3462": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "DUP9",
      "path": "14"
    },
    "3463": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "3464": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "DUP7",
      "path": "14"
    },
    "3465": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "3466": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x4BB297FF"
    },
    "3471": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE1"
    },
    "3473": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "SHL",
      "path": "14"
    },
    "3474": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12440,
        12572
      ],
      "op": "DUP7",
      "path": "14"
    },
    "3475": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12440,
        12572
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3476": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12440,
        12572
      ],
      "op": "DUP6",
      "path": "14"
    },
    "3477": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12440,
        12572
      ],
      "op": "ADD",
      "path": "14"
    },
    "3478": {
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3479": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "3481": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3482": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "3483": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3484": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12440,
        12572
      ],
      "op": "GAS",
      "path": "14"
    },
    "3485": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12440,
        12572
      ],
      "op": "CALL",
      "path": "14"
    },
    "3486": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12440,
        12572
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3487": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12440,
        12572
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3488": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12440,
        12572
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3489": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12440,
        12572
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xDF9"
    },
    "3492": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12440,
        12572
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3493": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12440,
        12572
      ],
      "op": "POP",
      "path": "14"
    },
    "3494": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12440,
        12572
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xDE5"
    },
    "3497": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12440,
        12572
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3498": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12358,
        12680
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3499": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12358,
        12680
      ],
      "op": "POP",
      "path": "14"
    },
    "3500": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12358,
        12680
      ],
      "op": "POP",
      "path": "14"
    },
    "3501": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12358,
        12680
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3502": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12315,
        12325
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA"
    },
    "3504": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3505": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3506": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12690,
        12717
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 27,
      "value": "0x9"
    },
    "3508": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3509": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3510": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "3513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3515": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "3517": {
      "op": "SHL"
    },
    "3518": {
      "op": "SUB"
    },
    "3519": {
      "op": "NOT"
    },
    "3520": {
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "3521": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12304,
        12314
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "3523": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3524": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3525": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "SHL",
      "path": "14"
    },
    "3526": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "3529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3531": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "3533": {
      "op": "SHL"
    },
    "3534": {
      "op": "SUB"
    },
    "3535": {
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "3536": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "OR",
      "path": "14"
    },
    "3537": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3538": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "3539": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3543": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3545": {
      "op": "SHL"
    },
    "3546": {
      "op": "SUB"
    },
    "3547": {
      "op": "NOT"
    },
    "3548": {
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "3549": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3550": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "3551": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12777,
        12792
      ],
      "op": "TIMESTAMP",
      "path": "14",
      "statement": 28
    },
    "3552": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12760,
        12792
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "3554": {
      "offset": [
        783,
        15074
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "3555": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3556": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "RETURN",
      "path": "14"
    },
    "3557": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12440,
        12572
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3558": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12440,
        12572
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xDEE"
    },
    "3561": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12440,
        12572
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3562": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12440,
        12572
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FAA"
    },
    "3565": {
      "fn": "MasterNode.warpAssets",
      "jump": "i",
      "offset": [
        12440,
        12572
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3566": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12440,
        12572
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3567": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x464"
    },
    "3570": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3571": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12440,
        12572
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3572": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12440,
        12572
      ],
      "op": "CODESIZE",
      "path": "14"
    },
    "3573": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12440,
        12572
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xDAA"
    },
    "3576": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12440,
        12572
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3577": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12440,
        12572
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3578": {
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3579": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "3580": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3581": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3582": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "3583": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "3584": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3585": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "REVERT",
      "path": "14"
    },
    "3586": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12358,
        12680
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3587": {
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3588": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "3589": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP11",
      "path": "14"
    },
    "3590": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "3591": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3592": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "3593": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP9",
      "path": "14"
    },
    "3594": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "3595": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "3597": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3598": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "3599": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "3600": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "3601": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "3602": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "3603": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "3604": {
      "offset": [
        2839,
        2875
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3605": {
      "offset": [
        2835,
        2945
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x11F0"
    },
    "3608": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        2835,
        2945
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3609": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3610": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9135,
        9146
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x7"
    },
    "3612": {
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3613": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "3614": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3615": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3616": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "3617": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "3619": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP11",
      "path": "14"
    },
    "3620": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3621": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE2D"
    },
    "3624": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3625": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F5E"
    },
    "3628": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3629": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3630": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3631": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3632": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3633": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3634": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP14",
      "path": "14"
    },
    "3635": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3636": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "3637": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3638": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3639": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP13",
      "path": "14"
    },
    "3640": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3641": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "3642": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3643": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP14",
      "path": "14"
    },
    "3644": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3645": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3646": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "3647": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3648": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "3649": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3650": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP9",
      "path": "14"
    },
    "3651": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3652": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10878,
        10899
      ],
      "op": "SWAP8",
      "path": "14",
      "statement": 29
    },
    "3653": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10878,
        10899
      ],
      "op": "DUP11",
      "path": "14"
    },
    "3654": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10878,
        10899
      ],
      "op": "DUP10",
      "path": "14"
    },
    "3655": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10878,
        10899
      ],
      "op": "ADD",
      "path": "14"
    },
    "3656": {
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3657": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10878,
        10899
      ],
      "op": "DUP10",
      "path": "14"
    },
    "3658": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10878,
        10899
      ],
      "op": "DUP9",
      "path": "14"
    },
    "3659": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10878,
        10899
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3660": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10878,
        10899
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE54"
    },
    "3663": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10878,
        10899
      ],
      "op": "DUP9",
      "path": "14"
    },
    "3664": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10878,
        10899
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FBD"
    },
    "3667": {
      "fn": "MasterNode._buildCCIPMessage",
      "jump": "i",
      "offset": [
        10878,
        10899
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3668": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10878,
        10899
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3669": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP9",
      "path": "14"
    },
    "3670": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3671": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE5F"
    },
    "3674": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3675": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F8F"
    },
    "3678": {
      "fn": "MasterNode._buildCCIPMessage",
      "jump": "i",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3679": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3680": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3682": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3683": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3684": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11123,
        11289
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE7C"
    },
    "3687": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP11",
      "path": "14"
    },
    "3688": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3689": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE71"
    },
    "3692": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3693": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F8F"
    },
    "3696": {
      "fn": "MasterNode._buildCCIPMessage",
      "jump": "i",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3697": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3698": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11260,
        11269
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x1E8480"
    },
    "3702": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3703": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3704": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11123,
        11289
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x255C"
    },
    "3707": {
      "fn": "MasterNode._buildCCIPMessage",
      "jump": "i",
      "offset": [
        11123,
        11289
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3708": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11123,
        11289
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3709": {
      "offset": [
        783,
        15074
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "3710": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP11",
      "path": "14"
    },
    "3711": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3712": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP10",
      "path": "14"
    },
    "3713": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE89"
    },
    "3716": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP12",
      "path": "14"
    },
    "3717": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F5E"
    },
    "3720": {
      "fn": "MasterNode._buildCCIPMessage",
      "jump": "i",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3721": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3722": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP11",
      "path": "14"
    },
    "3723": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3724": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10828,
        11454
      ],
      "op": "DUP12",
      "path": "14"
    },
    "3725": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10828,
        11454
      ],
      "op": "DUP11",
      "path": "14"
    },
    "3726": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10828,
        11454
      ],
      "op": "ADD",
      "path": "14"
    },
    "3727": {
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3728": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10828,
        11454
      ],
      "op": "DUP10",
      "path": "14"
    },
    "3729": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10828,
        11454
      ],
      "op": "DUP10",
      "path": "14"
    },
    "3730": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10828,
        11454
      ],
      "op": "ADD",
      "path": "14"
    },
    "3731": {
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3732": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10828,
        11454
      ],
      "op": "DUP8",
      "path": "14"
    },
    "3733": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10828,
        11454
      ],
      "op": "ADD",
      "path": "14"
    },
    "3734": {
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3735": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "3737": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10828,
        11454
      ],
      "op": "DUP7",
      "path": "14"
    },
    "3738": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10828,
        11454
      ],
      "op": "ADD",
      "path": "14"
    },
    "3739": {
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3740": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "3741": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3742": {
      "op": "PUSH4",
      "value": "0xB0F479A1"
    },
    "3747": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3749": {
      "op": "SHL"
    },
    "3750": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3751": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3752": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10828,
        11454
      ],
      "op": "DUP8",
      "path": "14"
    },
    "3753": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3754": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9292
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3755": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3756": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9292
      ],
      "op": "ADDRESS",
      "path": "14"
    },
    "3757": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "GAS",
      "path": "14"
    },
    "3758": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "3759": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3760": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3761": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3762": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x11E6"
    },
    "3765": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3766": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3767": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "DUP6",
      "path": "14"
    },
    "3768": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3769": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "DUP11",
      "path": "14"
    },
    "3770": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3771": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x11AC"
    },
    "3774": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3775": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12358,
        12680
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3776": {
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "3777": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "3778": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "3779": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "DUP9",
      "path": "14"
    },
    "3780": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "DUP8",
      "path": "14"
    },
    "3781": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3782": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3783": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x20487DED"
    },
    "3788": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "3790": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "SHL",
      "path": "14"
    },
    "3791": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3792": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3793": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "DUP10",
      "path": "14"
    },
    "3794": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3795": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3796": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xEE0"
    },
    "3799": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "DUP12",
      "path": "14"
    },
    "3800": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "DUP11",
      "path": "14"
    },
    "3801": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "DUP11",
      "path": "14"
    },
    "3802": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3803": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "ADD",
      "path": "14"
    },
    "3804": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x20C4"
    },
    "3807": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9388,
        9444
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3808": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3809": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "SUB",
      "path": "14"
    },
    "3810": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3811": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "DUP11",
      "path": "14"
    },
    "3812": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "GAS",
      "path": "14"
    },
    "3813": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "3814": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "3815": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3816": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3817": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x11A2"
    },
    "3820": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3821": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3822": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "DUP11",
      "path": "14"
    },
    "3823": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3824": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3825": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "3826": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1170"
    },
    "3829": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3830": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12358,
        12680
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3831": {
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "3832": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "3834": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "DUP11",
      "path": "14"
    },
    "3835": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3836": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3837": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "3838": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3839": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "3840": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x23B872DD"
    },
    "3845": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "3847": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "SHL",
      "path": "14"
    },
    "3848": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "DUP4",
      "path": "14",
      "statement": 30
    },
    "3849": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3850": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9501,
        9511
      ],
      "op": "CALLER",
      "path": "14"
    },
    "3851": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "DUP11",
      "path": "14"
    },
    "3852": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3853": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "ADD",
      "path": "14"
    },
    "3854": {
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3855": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9292
      ],
      "op": "ADDRESS",
      "path": "14"
    },
    "3856": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "3858": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3859": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "3860": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3861": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP9",
      "path": "14"
    },
    "3862": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "3864": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3865": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "3866": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3867": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "GAS",
      "path": "14"
    },
    "3868": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "CALL",
      "path": "14"
    },
    "3869": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3870": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3871": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3872": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1166"
    },
    "3875": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3876": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "DUP11",
      "path": "14"
    },
    "3877": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3878": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1149"
    },
    "3881": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3882": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12358,
        12680
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3883": {
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "3884": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3885": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1106"
    },
    "3888": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3889": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9135,
        9146
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x7"
    },
    "3891": {
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3892": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "3893": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3894": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP7",
      "path": "14"
    },
    "3895": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3896": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x70A08231"
    },
    "3901": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "3903": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SHL",
      "path": "14"
    },
    "3904": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "SWAP1",
      "path": "14",
      "statement": 31
    },
    "3905": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3906": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3907": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3908": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9292
      ],
      "op": "ADDRESS",
      "path": "14"
    },
    "3909": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "DUP6",
      "path": "14"
    },
    "3910": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3911": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "ADD",
      "path": "14"
    },
    "3912": {
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3913": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "DUP10",
      "path": "14"
    },
    "3914": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3915": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "3917": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3918": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "DUP8",
      "path": "14"
    },
    "3919": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "GAS",
      "path": "14"
    },
    "3920": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "3921": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3922": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3923": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3924": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x10FC"
    },
    "3927": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3928": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "DUP12",
      "path": "14"
    },
    "3929": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3930": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x10CF"
    },
    "3933": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3934": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12358,
        12680
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3935": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9600,
        9643
      ],
      "op": "POP",
      "path": "14"
    },
    "3936": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9600,
        9643
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3937": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9600,
        9643
      ],
      "op": "GT",
      "path": "14"
    },
    "3938": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9596,
        9724
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1053"
    },
    "3941": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9596,
        9724
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3942": {
      "op": "POP"
    },
    "3943": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP7",
      "path": "14"
    },
    "3944": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3945": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "3950": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3952": {
      "op": "SHL"
    },
    "3953": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "DUP2",
      "path": "14",
      "statement": 32
    },
    "3954": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3959": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3961": {
      "op": "SHL"
    },
    "3962": {
      "op": "SUB"
    },
    "3963": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP7",
      "path": "14"
    },
    "3964": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "3965": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3966": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "DUP6",
      "path": "14"
    },
    "3967": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "ADD",
      "path": "14"
    },
    "3968": {
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3969": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3970": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3971": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3973": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3974": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "3975": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3976": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3977": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3978": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3979": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP10",
      "path": "14"
    },
    "3980": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "3981": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3982": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3983": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3984": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP10",
      "path": "14"
    },
    "3985": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3986": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3987": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3988": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3989": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3990": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP8",
      "path": "14"
    },
    "3991": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3992": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3993": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3994": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3996": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "3997": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "SUB",
      "path": "14"
    },
    "3998": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3999": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "GAS",
      "path": "14"
    },
    "4000": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "CALL",
      "path": "14"
    },
    "4001": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4002": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4003": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1049"
    },
    "4006": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4007": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4008": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "DUP9",
      "path": "14"
    },
    "4009": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "4010": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "4011": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4012": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 33,
      "value": "0xFD2"
    },
    "4015": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "SWAP9",
      "path": "14"
    },
    "4016": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "4017": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "4018": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "4019": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x101C"
    },
    "4022": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4023": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12358,
        12680
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4024": {
      "op": "POP"
    },
    "4025": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP7",
      "path": "14"
    },
    "4026": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4027": {
      "op": "PUSH4",
      "value": "0x96F4E9F9"
    },
    "4032": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4034": {
      "op": "SHL"
    },
    "4035": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4036": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4037": {
      "offset": [
        783,
        15074
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "4038": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP9",
      "path": "14"
    },
    "4039": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "4040": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP7",
      "path": "14"
    },
    "4041": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "4042": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "4043": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "4044": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "DUP5",
      "path": "14"
    },
    "4045": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "ADD",
      "path": "14"
    },
    "4046": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x20C4"
    },
    "4049": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9988,
        10046
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4050": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4051": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "SUB",
      "path": "14"
    },
    "4052": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4053": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "GAS",
      "path": "14"
    },
    "4054": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "CALL",
      "path": "14"
    },
    "4055": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4056": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4057": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4058": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1013"
    },
    "4061": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4062": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "POP",
      "path": "14"
    },
    "4063": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xFEA"
    },
    "4066": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4067": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12358,
        12680
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4068": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12358,
        12680
      ],
      "op": "POP",
      "path": "14"
    },
    "4069": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12358,
        12680
      ],
      "op": "POP",
      "path": "14"
    },
    "4070": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12358,
        12680
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xDAD"
    },
    "4073": {
      "fn": "MasterNode.warpAssets",
      "offset": [
        12358,
        12680
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4074": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4075": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4076": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4077": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4078": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "GT",
      "path": "14"
    },
    "4079": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x100C"
    },
    "4082": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4083": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4084": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xFFD"
    },
    "4087": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4088": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4089": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FF3"
    },
    "4092": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9988,
        10046
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4093": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4094": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4095": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "ADD",
      "path": "14"
    },
    "4096": {
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "4097": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "4098": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x464"
    },
    "4101": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4102": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "CODESIZE",
      "path": "14"
    },
    "4103": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4104": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xFE3"
    },
    "4107": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4108": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4109": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "POP",
      "path": "14"
    },
    "4110": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4111": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xFF3"
    },
    "4114": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4115": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4116": {
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4117": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4118": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "4119": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4120": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "4121": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4122": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4123": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4124": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4125": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x103B"
    },
    "4128": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4129": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "DUP8",
      "path": "14"
    },
    "4130": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4131": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "DUP10",
      "path": "14"
    },
    "4132": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "GT",
      "path": "14"
    },
    "4133": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1042"
    },
    "4136": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4137": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4138": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1033"
    },
    "4141": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4142": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4143": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FF3"
    },
    "4146": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9842,
        9884
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4147": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4148": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4149": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "ADD",
      "path": "14"
    },
    "4150": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4151": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2190"
    },
    "4154": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9842,
        9884
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4155": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4156": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "POP",
      "path": "14"
    },
    "4157": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "CODESIZE",
      "path": "14"
    },
    "4158": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xFB7"
    },
    "4161": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4162": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4163": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "POP",
      "path": "14"
    },
    "4164": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4165": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1029"
    },
    "4168": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4169": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4170": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP8",
      "path": "14"
    },
    "4171": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4172": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4173": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "4174": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4175": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "4176": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4177": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4178": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4179": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9596,
        9724
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4180": {
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4181": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP10",
      "path": "14"
    },
    "4182": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP9",
      "path": "14"
    },
    "4183": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP11",
      "path": "14"
    },
    "4184": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4185": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP8",
      "path": "14"
    },
    "4186": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "4187": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "4189": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "4190": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4191": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4192": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "SWAP10",
      "path": "14"
    },
    "4193": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4194": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "4195": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4196": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4197": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9292
      ],
      "op": "ADDRESS",
      "path": "14"
    },
    "4198": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "DUP11",
      "path": "14"
    },
    "4199": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4200": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "ADD",
      "path": "14"
    },
    "4201": {
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4202": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "GAS",
      "path": "14"
    },
    "4203": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "4204": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4205": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4206": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4207": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x10C4"
    },
    "4210": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4211": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4212": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1093"
    },
    "4215": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4216": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9596,
        9724
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4217": {
      "op": "POP"
    },
    "4218": {
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4219": {
      "op": "PUSH4",
      "value": "0x4787A103"
    },
    "4224": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4226": {
      "op": "SHL"
    },
    "4227": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9664,
        9724
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4228": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9664,
        9724
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4229": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9664,
        9724
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4230": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9664,
        9724
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4231": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9664,
        9724
      ],
      "op": "ADD",
      "path": "14"
    },
    "4232": {
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4233": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "4235": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4236": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "4237": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4238": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "4240": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4241": {
      "op": "POP"
    },
    "4242": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9664,
        9724
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4243": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4244": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4245": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4246": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "POP",
      "path": "14"
    },
    "4247": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "DUP5",
      "path": "14"
    },
    "4248": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4249": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4250": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4251": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "GT",
      "path": "14"
    },
    "4252": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x10BD"
    },
    "4255": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4256": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4257": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x10AA"
    },
    "4260": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4261": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4262": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FF3"
    },
    "4265": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9681,
        9717
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4266": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4267": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4268": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "ADD",
      "path": "14"
    },
    "4269": {
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "4270": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "4271": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAFC"
    },
    "4274": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4275": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "4277": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "4278": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4279": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4280": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "DUP6",
      "path": "14"
    },
    "4281": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1078"
    },
    "4284": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4285": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4286": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "POP",
      "path": "14"
    },
    "4287": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4288": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x10A0"
    },
    "4291": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4292": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4293": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4294": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4295": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4296": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4297": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4298": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4299": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "4300": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4301": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4302": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4303": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4304": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4305": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "POP",
      "path": "14"
    },
    "4306": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "DUP10",
      "path": "14"
    },
    "4307": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4308": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4309": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4310": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4311": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "GT",
      "path": "14"
    },
    "4312": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x10F5"
    },
    "4315": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4316": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4317": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x10E6"
    },
    "4320": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4321": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4322": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FF3"
    },
    "4325": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9607,
        9643
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4326": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4327": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4328": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "ADD",
      "path": "14"
    },
    "4329": {
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "4330": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "4331": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAFC"
    },
    "4334": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4335": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4336": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "CODESIZE",
      "path": "14"
    },
    "4337": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xF5E"
    },
    "4340": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4341": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4342": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "POP",
      "path": "14"
    },
    "4343": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4344": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x10DC"
    },
    "4347": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4348": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4349": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP10",
      "path": "14"
    },
    "4350": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4351": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4352": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP14",
      "path": "14"
    },
    "4353": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4354": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "4355": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4356": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4357": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4358": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4359": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP7",
      "path": "14"
    },
    "4360": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4361": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4365": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4367": {
      "op": "SHL"
    },
    "4368": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4369": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4370": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4371": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "4372": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "4373": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP10",
      "path": "14"
    },
    "4374": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4375": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4376": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1A"
    },
    "4378": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "4380": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4381": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "4382": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4383": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x4E6F742070726F7669646564204C696E6B20666F722066656573000000000000"
    },
    "4416": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "4418": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4419": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "4420": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4421": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "4423": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4424": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4425": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4426": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1160"
    },
    "4429": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4430": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "POP",
      "path": "14"
    },
    "4431": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "DUP10",
      "path": "14"
    },
    "4432": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4433": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "DUP12",
      "path": "14"
    },
    "4434": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "GT",
      "path": "14"
    },
    "4435": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1042"
    },
    "4438": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4439": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1033"
    },
    "4442": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4443": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4444": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FF3"
    },
    "4447": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9476,
        9533
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4448": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4449": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "CODESIZE",
      "path": "14"
    },
    "4450": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xF2A"
    },
    "4453": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4454": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4455": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP9",
      "path": "14"
    },
    "4456": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4457": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4458": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP13",
      "path": "14"
    },
    "4459": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4460": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "4461": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4462": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4463": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4464": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4465": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4466": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "POP",
      "path": "14"
    },
    "4467": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "4468": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "POP",
      "path": "14"
    },
    "4469": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4470": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4471": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4472": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4473": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "GT",
      "path": "14"
    },
    "4474": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x119B"
    },
    "4477": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4478": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4479": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1188"
    },
    "4482": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4483": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4484": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FF3"
    },
    "4487": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9388,
        9444
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4488": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4489": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4490": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "ADD",
      "path": "14"
    },
    "4491": {
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "4492": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "4493": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAFC"
    },
    "4496": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4497": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP9",
      "path": "14"
    },
    "4498": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP11",
      "path": "14"
    },
    "4499": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4500": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4501": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "4502": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "CODESIZE",
      "path": "14"
    },
    "4503": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xEF6"
    },
    "4506": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4507": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4508": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "POP",
      "path": "14"
    },
    "4509": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4510": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x117E"
    },
    "4513": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4514": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4515": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP10",
      "path": "14"
    },
    "4516": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4517": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4518": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "4519": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4520": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "4521": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4522": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4523": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4524": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4525": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4526": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4527": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "POP",
      "path": "14"
    },
    "4528": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "DUP10",
      "path": "14"
    },
    "4529": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4530": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4531": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "POP",
      "path": "14"
    },
    "4532": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4533": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4534": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "GT",
      "path": "14"
    },
    "4535": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x11DF"
    },
    "4538": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4539": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4540": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x11C5"
    },
    "4543": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4544": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4545": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FF3"
    },
    "4548": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9288,
        9304
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4549": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4550": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4551": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "ADD",
      "path": "14"
    },
    "4552": {
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "4553": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "4554": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA64"
    },
    "4557": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4558": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4559": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "4560": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4561": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "4562": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4563": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "4564": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA64"
    },
    "4567": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4568": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "DUP5",
      "path": "14"
    },
    "4569": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4570": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "CODESIZE",
      "path": "14"
    },
    "4571": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xEBF"
    },
    "4574": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4575": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4576": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "POP",
      "path": "14"
    },
    "4577": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4578": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x11BB"
    },
    "4581": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4582": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4583": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP8",
      "path": "14"
    },
    "4584": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4585": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4586": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP12",
      "path": "14"
    },
    "4587": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4588": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "4589": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4590": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4591": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4592": {
      "offset": [
        2835,
        2945
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4593": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP7",
      "path": "14"
    },
    "4594": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4595": {
      "op": "PUSH4",
      "value": "0x6A9FF79F"
    },
    "4600": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4602": {
      "op": "SHL"
    },
    "4603": {
      "offset": [
        2898,
        2934
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4604": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        2898,
        2934
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4605": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        2898,
        2934
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4606": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        2898,
        2934
      ],
      "op": "DUP5",
      "path": "14"
    },
    "4607": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        2898,
        2934
      ],
      "op": "ADD",
      "path": "14"
    },
    "4608": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP8",
      "path": "14"
    },
    "4609": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4610": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4611": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "4613": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4614": {
      "offset": [
        2898,
        2934
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4615": {
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4616": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "4617": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "4618": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4619": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4620": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "4621": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4622": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "4623": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x464"
    },
    "4626": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4627": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "4629": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "4630": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "4632": {
      "op": "NOT"
    },
    "4633": {
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "4634": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "4635": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x464"
    },
    "4638": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4639": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1226"
    },
    "4642": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F48"
    },
    "4645": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4646": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4647": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4648": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x122F"
    },
    "4651": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1EF2"
    },
    "4654": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4655": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4656": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4658": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4660": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4662": {
      "op": "SHL"
    },
    "4663": {
      "op": "SUB"
    },
    "4664": {
      "offset": [
        783,
        15074
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "4665": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "4667": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "4668": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "4669": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4670": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "4671": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4672": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4673": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4674": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4675": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "4676": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAFC"
    },
    "4679": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4680": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "4682": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "4683": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4684": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP7",
      "path": "14"
    },
    "4685": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4686": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "4687": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4688": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4689": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "4690": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAFC"
    },
    "4693": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4694": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x84"
    },
    "4696": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "4697": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "4698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4702": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4704": {
      "op": "SHL"
    },
    "4705": {
      "op": "SUB"
    },
    "4706": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP10",
      "path": "14"
    },
    "4707": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "GT",
      "path": "14"
    },
    "4708": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA60"
    },
    "4711": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4712": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x127A"
    },
    "4715": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x12F6"
    },
    "4718": {
      "offset": [
        783,
        15074
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "4719": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "4720": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP9",
      "path": "14"
    },
    "4721": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP10",
      "path": "14"
    },
    "4722": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "4723": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4724": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4725": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "4726": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2014"
    },
    "4729": {
      "fn": "UtilsMasterNode.getLinkFees",
      "jump": "i",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4730": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4731": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "DUP8",
      "path": "14"
    },
    "4732": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4733": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "4734": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4736": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP11",
      "path": "14"
    },
    "4737": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "DUP12",
      "path": "14"
    },
    "4738": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "4739": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "4740": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        992,
        1012
      ],
      "op": "DUP8",
      "path": "15"
    },
    "4741": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        992,
        1012
      ],
      "op": "DUP8",
      "path": "15"
    },
    "4742": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        992,
        1012
      ],
      "op": "ADD",
      "path": "15"
    },
    "4743": {
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4744": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        992,
        1012
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4745": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        992,
        1012
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4746": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        992,
        1012
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4747": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        992,
        1012
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1293"
    },
    "4750": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        992,
        1012
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4751": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        992,
        1012
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1FBD"
    },
    "4754": {
      "fn": "UtilsMasterNode.getLinkFees",
      "jump": "i",
      "offset": [
        992,
        1012
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4755": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        992,
        1012
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4756": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP9",
      "path": "14"
    },
    "4757": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4758": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x129E"
    },
    "4761": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4762": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F8F"
    },
    "4765": {
      "fn": "UtilsMasterNode.getLinkFees",
      "jump": "i",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4766": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4767": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4769": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4770": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4771": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1226,
        1383
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x12BB"
    },
    "4774": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP11",
      "path": "14"
    },
    "4775": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4776": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x12B0"
    },
    "4779": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4780": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F8F"
    },
    "4783": {
      "fn": "UtilsMasterNode.getLinkFees",
      "jump": "i",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4784": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4785": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1357,
        1366
      ],
      "op": "PUSH3",
      "path": "15",
      "value": "0xF4240"
    },
    "4789": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4790": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4791": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1226,
        1383
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x255C"
    },
    "4794": {
      "fn": "UtilsMasterNode.getLinkFees",
      "jump": "i",
      "offset": [
        1226,
        1383
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4795": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1226,
        1383
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4796": {
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4797": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "DUP11",
      "path": "14"
    },
    "4798": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4799": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "4800": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x12C8"
    },
    "4803": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "DUP10",
      "path": "14"
    },
    "4804": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F5E"
    },
    "4807": {
      "fn": "UtilsMasterNode.getLinkFees",
      "jump": "i",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4808": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4809": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "DUP9",
      "path": "14"
    },
    "4810": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4811": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        945,
        1519
      ],
      "op": "DUP9",
      "path": "15"
    },
    "4812": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        945,
        1519
      ],
      "op": "DUP9",
      "path": "15"
    },
    "4813": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        945,
        1519
      ],
      "op": "ADD",
      "path": "15"
    },
    "4814": {
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4815": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        945,
        1519
      ],
      "op": "DUP10",
      "path": "15"
    },
    "4816": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        945,
        1519
      ],
      "op": "DUP8",
      "path": "15"
    },
    "4817": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        945,
        1519
      ],
      "op": "ADD",
      "path": "15"
    },
    "4818": {
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4819": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "4821": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        945,
        1519
      ],
      "op": "DUP7",
      "path": "15"
    },
    "4822": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        945,
        1519
      ],
      "op": "ADD",
      "path": "15"
    },
    "4823": {
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4824": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "4826": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        945,
        1519
      ],
      "op": "DUP6",
      "path": "15"
    },
    "4827": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        945,
        1519
      ],
      "op": "ADD",
      "path": "15"
    },
    "4828": {
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4829": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "DUP7",
      "path": "14"
    },
    "4830": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4831": {
      "op": "PUSH4",
      "value": "0x20487DED"
    },
    "4836": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4838": {
      "op": "SHL"
    },
    "4839": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4840": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4841": {
      "offset": [
        783,
        15074
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "4842": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "DUP7",
      "path": "14"
    },
    "4843": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "4844": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "4845": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "4846": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "4847": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "4848": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "DUP5",
      "path": "15"
    },
    "4849": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "ADD",
      "path": "15"
    },
    "4850": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x20C4"
    },
    "4853": {
      "fn": "UtilsMasterNode.getLinkFees",
      "jump": "i",
      "offset": [
        1662,
        1710
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4854": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4855": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "SUB",
      "path": "15"
    },
    "4856": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4857": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "GAS",
      "path": "15"
    },
    "4858": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "STATICCALL",
      "path": "15"
    },
    "4859": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4860": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4861": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4862": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x10C4"
    },
    "4865": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4866": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4867": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x130E"
    },
    "4870": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4871": {
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4872": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "4873": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4874": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4875": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4876": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4877": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "RETURN",
      "path": "14"
    },
    "4878": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4879": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4880": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4881": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "POP",
      "path": "15"
    },
    "4882": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4883": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4884": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4885": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "4886": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4887": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "GT",
      "path": "15"
    },
    "4888": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1336"
    },
    "4891": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4892": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4893": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1326"
    },
    "4896": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4897": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4898": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1FF3"
    },
    "4901": {
      "fn": "UtilsMasterNode.getLinkFees",
      "jump": "i",
      "offset": [
        1662,
        1710
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4902": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4903": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4904": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "ADD",
      "path": "15"
    },
    "4905": {
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "4906": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "4907": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAFC"
    },
    "4910": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4911": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4912": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4913": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "CODESIZE",
      "path": "15"
    },
    "4914": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1307"
    },
    "4917": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4918": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4919": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "POP",
      "path": "15"
    },
    "4920": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "4921": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x131C"
    },
    "4924": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        1662,
        1710
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4925": {
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4926": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "4927": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "4928": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "4929": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x270"
    },
    "4932": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4933": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4934": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "4936": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "NOT",
      "path": "14"
    },
    "4937": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "4938": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "4939": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "4940": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x270"
    },
    "4943": {
      "fn": "UtilsMasterNode.getLinkFees",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4944": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6038,
        6076
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 34,
      "value": "0x3B7"
    },
    "4947": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4949": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4950": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4951": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x135E"
    },
    "4954": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1EDC"
    },
    "4957": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4958": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4959": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4960": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "4961": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4962": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4963": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "4965": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15074
      ],
      "op": "DUP7",
      "path": "14"
    },
    "4966": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4967": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15074
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "4968": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "4970": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4971": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "4973": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15074
      ],
      "op": "SHL",
      "path": "14"
    },
    "4974": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "4975": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4976": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "4977": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4979": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4980": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "4981": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4982": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6038,
        6076
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1385"
    },
    "4985": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "4987": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "4988": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "4989": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4991": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "4992": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "4993": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6038,
        6076
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21A8"
    },
    "4996": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6038,
        6076
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4997": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6038,
        6076
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4998": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4999": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "5000": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6038,
        6076
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2438"
    },
    "5003": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6038,
        6076
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5004": {
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5005": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "5006": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "5007": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "5008": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x270"
    },
    "5011": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5012": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5013": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "5015": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "NOT",
      "path": "14"
    },
    "5016": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "5017": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "5018": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "5019": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x270"
    },
    "5022": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5023": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "5025": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5026": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5027": {
      "fn": "ERC20.decimals",
      "offset": [
        3173,
        3175
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 35,
      "value": "0x12"
    },
    "5029": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5030": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5031": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15074
      ],
      "op": "RETURN",
      "path": "14"
    },
    "5032": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5033": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "5034": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5035": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5036": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15074
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "5037": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x270"
    },
    "5040": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5041": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "5043": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5044": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5045": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "5047": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15074
      ],
      "op": "NOT",
      "path": "14"
    },
    "5048": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "5049": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "5050": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "5051": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x24D"
    },
    "5054": {
      "fn": "ERC20.decimals",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5055": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13109,
        13119
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 36,
      "value": "0xA"
    },
    "5057": {
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5062": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5064": {
      "op": "SHL"
    },
    "5065": {
      "op": "SUB"
    },
    "5066": {
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5067": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5068": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "5069": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5070": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5071": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13098,
        13108
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "5073": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5074": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "DUP7",
      "path": "14"
    },
    "5075": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5076": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5077": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "5078": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "5079": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5080": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5081": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "5082": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5083": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5084": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "SHR",
      "path": "14"
    },
    "5085": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "5087": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "5088": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "5089": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1941"
    },
    "5092": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5093": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13195,
        13205
      ],
      "op": "CALLER",
      "path": "14",
      "statement": 37
    },
    "5094": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "5095": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5096": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3515
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "5098": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP7",
      "path": "14"
    },
    "5099": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5100": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5101": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "5102": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15074
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "5103": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5104": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13175,
        13206
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5105": {
      "branch": 73,
      "fn": "MasterNode.withdraw",
      "offset": [
        13175,
        13206
      ],
      "op": "GT",
      "path": "14"
    },
    "5106": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1908"
    },
    "5109": {
      "branch": 73,
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5110": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5111": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5112": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13296,
        13342
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "5113": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13296,
        13342
      ],
      "op": "DUP6",
      "path": "14"
    },
    "5114": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13296,
        13342
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5115": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13296,
        13342
      ],
      "op": "DUP9",
      "path": "14"
    },
    "5116": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13296,
        13342
      ],
      "op": "ADD",
      "path": "14"
    },
    "5117": {
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5118": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13195,
        13205
      ],
      "op": "CALLER",
      "path": "14"
    },
    "5119": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5120": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "DUP9",
      "path": "14"
    },
    "5121": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "5122": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5123": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "5125": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5126": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5127": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "DUP10",
      "path": "14"
    },
    "5128": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "5129": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5130": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13296,
        13342
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5131": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13296,
        13342
      ],
      "op": "DUP9",
      "path": "14"
    },
    "5132": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13296,
        13342
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5133": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13296,
        13342
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1415"
    },
    "5136": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13296,
        13342
      ],
      "op": "DUP9",
      "path": "14"
    },
    "5137": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13296,
        13342
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FD8"
    },
    "5140": {
      "fn": "MasterNode.withdraw",
      "jump": "i",
      "offset": [
        13296,
        13342
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5141": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13296,
        13342
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5142": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13195,
        13205
      ],
      "op": "CALLER",
      "path": "14"
    },
    "5143": {
      "branch": 80,
      "fn": "ERC20._burn",
      "offset": [
        9505,
        9526
      ],
      "op": "ISZERO",
      "path": "0",
      "statement": 38
    },
    "5144": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x18BB"
    },
    "5147": {
      "fn": "ERC20._burn",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5148": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13195,
        13205
      ],
      "op": "CALLER",
      "path": "14"
    },
    "5149": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP8",
      "path": "14"
    },
    "5150": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5151": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3515
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "5153": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5154": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5155": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5156": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15074
      ],
      "op": "DUP8",
      "path": "14"
    },
    "5157": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15074
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "5158": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5159": {
      "fn": "ERC20._burn",
      "offset": [
        9696,
        9720
      ],
      "op": "SWAP8",
      "path": "0",
      "statement": 39
    },
    "5160": {
      "fn": "ERC20._burn",
      "offset": [
        9696,
        9720
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5161": {
      "fn": "ERC20._burn",
      "offset": [
        9696,
        9720
      ],
      "op": "DUP10",
      "path": "0"
    },
    "5162": {
      "branch": 81,
      "fn": "ERC20._burn",
      "offset": [
        9696,
        9720
      ],
      "op": "LT",
      "path": "0"
    },
    "5163": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x186D"
    },
    "5166": {
      "fn": "ERC20._burn",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5167": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13195,
        13205
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5168": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13195,
        13205
      ],
      "op": "DUP9",
      "path": "14"
    },
    "5169": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13195,
        13205
      ],
      "op": "SWAP10",
      "path": "14"
    },
    "5170": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13195,
        13205
      ],
      "op": "SWAP9",
      "path": "14"
    },
    "5171": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13195,
        13205
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "5172": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13195,
        13205
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "5173": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13195,
        13205
      ],
      "op": "SWAP9",
      "path": "14"
    },
    "5174": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13195,
        13205
      ],
      "op": "CALLER",
      "path": "14"
    },
    "5175": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP9",
      "path": "14"
    },
    "5176": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5177": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3506,
        3515
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "5179": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "5180": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5181": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "5182": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15074
      ],
      "op": "DUP8",
      "path": "14"
    },
    "5183": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15074
      ],
      "op": "DUP8",
      "path": "14"
    },
    "5184": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15074
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "5185": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15074
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "5186": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5187": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15074
      ],
      "op": "DUP9",
      "path": "14"
    },
    "5188": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5189": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "5190": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15074
      ],
      "op": "DUP9",
      "path": "14"
    },
    "5191": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15074
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "5192": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "5193": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15074
      ],
      "op": "DUP8",
      "path": "14"
    },
    "5194": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5195": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15074
      ],
      "op": "DUP7",
      "path": "14"
    },
    "5196": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5197": {
      "fn": "ERC20.balanceOf",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5198": {
      "fn": "ERC20._burn",
      "offset": [
        9978,
        10015
      ],
      "op": "PUSH32",
      "path": "0",
      "statement": 40,
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "5231": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13195,
        13205
      ],
      "op": "DUP6",
      "path": "14"
    },
    "5232": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13195,
        13205
      ],
      "op": "CALLER",
      "path": "14"
    },
    "5233": {
      "fn": "ERC20._burn",
      "offset": [
        9978,
        10015
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5234": {
      "fn": "ERC20._burn",
      "offset": [
        9978,
        10015
      ],
      "op": "LOG3",
      "path": "0"
    },
    "5235": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5236": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13109,
        13119
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA"
    },
    "5238": {
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5239": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "5240": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5241": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5242": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "DUP8",
      "path": "14"
    },
    "5243": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5244": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13098,
        13108
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "5246": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5247": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5248": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "DUP8",
      "path": "14"
    },
    "5249": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "DUP8",
      "path": "14"
    },
    "5250": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "5251": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5252": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5253": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5257": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5259": {
      "op": "SHL"
    },
    "5260": {
      "op": "SUB"
    },
    "5261": {
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5262": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5263": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5264": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x10"
    },
    "5266": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "SHR",
      "path": "14"
    },
    "5267": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "5268": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13431,
        13455
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "5269": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13431,
        13455
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x0"
    },
    "5302": {
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "5303": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13393,
        13455
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5304": {
      "branch": 74,
      "fn": "MasterNode.withdraw",
      "offset": [
        13393,
        13455
      ],
      "op": "EQ",
      "path": "14"
    },
    "5305": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13389,
        13638
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "5307": {
      "offset": [
        783,
        15074
      ],
      "op": "EQ",
      "path": "14"
    },
    "5308": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1516"
    },
    "5311": {
      "branch": 74,
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5312": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "5313": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "5314": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "5315": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "5316": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "5317": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "5318": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13109,
        13119
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA"
    },
    "5320": {
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5321": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "5322": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13471,
        13530
      ],
      "op": "DUP1",
      "path": "14",
      "statement": 41
    },
    "5323": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13471,
        13530
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "5324": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13471,
        13530
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "5325": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13471,
        13530
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x24D"
    },
    "5328": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13471,
        13530
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5329": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5330": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5331": {
      "op": "PUSH4",
      "value": "0x15E005B7"
    },
    "5336": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "5338": {
      "op": "SHL"
    },
    "5339": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13471,
        13530
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5340": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13471,
        13530
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5341": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13195,
        13205
      ],
      "op": "CALLER",
      "path": "14"
    },
    "5342": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13471,
        13530
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "5343": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13471,
        13530
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5344": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13471,
        13530
      ],
      "op": "ADD",
      "path": "14"
    },
    "5345": {
      "offset": [
        783,
        15074
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "5346": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "DUP7",
      "path": "14"
    },
    "5347": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5348": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "5350": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "DUP7",
      "path": "14"
    },
    "5351": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "5352": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5353": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5354": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5355": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5356": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5357": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "5358": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5359": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5360": {
      "op": "SWAP1"
    },
    "5361": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5362": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5363": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5364": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5365": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5366": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5367": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "5369": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "5370": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13471,
        13530
      ],
      "op": "SUB",
      "path": "14"
    },
    "5371": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13471,
        13530
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5372": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13471,
        13530
      ],
      "op": "GAS",
      "path": "14"
    },
    "5373": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13471,
        13530
      ],
      "op": "CALL",
      "path": "14"
    },
    "5374": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13471,
        13530
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5375": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13471,
        13530
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5376": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13471,
        13530
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "5377": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13471,
        13530
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xDF9"
    },
    "5380": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13471,
        13530
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5381": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13471,
        13530
      ],
      "op": "POP",
      "path": "14"
    },
    "5382": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13471,
        13530
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x150D"
    },
    "5385": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13471,
        13530
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5386": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13389,
        13638
      ],
      "op": "POP",
      "path": "14"
    },
    "5387": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5388": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "RETURN",
      "path": "14"
    },
    "5389": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13471,
        13530
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5390": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13471,
        13530
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x906"
    },
    "5393": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13471,
        13530
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5394": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13471,
        13530
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FAA"
    },
    "5397": {
      "fn": "MasterNode.withdraw",
      "jump": "i",
      "offset": [
        13471,
        13530
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5398": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13389,
        13638
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5399": {
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5400": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5401": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "5402": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "5403": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "5404": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "5406": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5407": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "5408": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "5409": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "5410": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP9",
      "path": "14"
    },
    "5411": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "5412": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP9",
      "path": "14"
    },
    "5413": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "5414": {
      "offset": [
        2839,
        2875
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "5415": {
      "offset": [
        2835,
        2945
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x11F0"
    },
    "5418": {
      "fn": "MasterNode.withdraw",
      "offset": [
        2835,
        2945
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5419": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5420": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9135,
        9146
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x7"
    },
    "5422": {
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5423": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "5424": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5425": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5426": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "5427": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "5429": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP11",
      "path": "14"
    },
    "5430": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5431": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x153F"
    },
    "5434": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5435": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F5E"
    },
    "5438": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5439": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5440": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5441": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5442": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5443": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5444": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP14",
      "path": "14"
    },
    "5445": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5446": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "5447": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5448": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5449": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP13",
      "path": "14"
    },
    "5450": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5451": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "5452": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5453": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP14",
      "path": "14"
    },
    "5454": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5455": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5456": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "5457": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5458": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "5459": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5460": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP9",
      "path": "14"
    },
    "5461": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5462": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10878,
        10899
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "5463": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10878,
        10899
      ],
      "op": "DUP11",
      "path": "14"
    },
    "5464": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10878,
        10899
      ],
      "op": "DUP10",
      "path": "14"
    },
    "5465": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10878,
        10899
      ],
      "op": "ADD",
      "path": "14"
    },
    "5466": {
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5467": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10878,
        10899
      ],
      "op": "DUP10",
      "path": "14"
    },
    "5468": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10878,
        10899
      ],
      "op": "DUP9",
      "path": "14"
    },
    "5469": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10878,
        10899
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5470": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10878,
        10899
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1566"
    },
    "5473": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10878,
        10899
      ],
      "op": "DUP9",
      "path": "14"
    },
    "5474": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10878,
        10899
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FBD"
    },
    "5477": {
      "fn": "MasterNode._buildCCIPMessage",
      "jump": "i",
      "offset": [
        10878,
        10899
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5478": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10878,
        10899
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5479": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP9",
      "path": "14"
    },
    "5480": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5481": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1571"
    },
    "5484": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5485": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F8F"
    },
    "5488": {
      "fn": "MasterNode._buildCCIPMessage",
      "jump": "i",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5489": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5490": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP12",
      "path": "14"
    },
    "5491": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5492": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5493": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11123,
        11289
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1582"
    },
    "5496": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP11",
      "path": "14"
    },
    "5497": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5498": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE71"
    },
    "5501": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5502": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F8F"
    },
    "5505": {
      "fn": "MasterNode._buildCCIPMessage",
      "jump": "i",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5506": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        11123,
        11289
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5507": {
      "offset": [
        783,
        15074
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "5508": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP11",
      "path": "14"
    },
    "5509": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5510": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP10",
      "path": "14"
    },
    "5511": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x158F"
    },
    "5514": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP12",
      "path": "14"
    },
    "5515": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F5E"
    },
    "5518": {
      "fn": "MasterNode._buildCCIPMessage",
      "jump": "i",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5519": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5520": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP11",
      "path": "14"
    },
    "5521": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5522": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10828,
        11454
      ],
      "op": "DUP12",
      "path": "14"
    },
    "5523": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10828,
        11454
      ],
      "op": "DUP11",
      "path": "14"
    },
    "5524": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10828,
        11454
      ],
      "op": "ADD",
      "path": "14"
    },
    "5525": {
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5526": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10828,
        11454
      ],
      "op": "DUP10",
      "path": "14"
    },
    "5527": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10828,
        11454
      ],
      "op": "DUP10",
      "path": "14"
    },
    "5528": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10828,
        11454
      ],
      "op": "ADD",
      "path": "14"
    },
    "5529": {
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5530": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10828,
        11454
      ],
      "op": "DUP8",
      "path": "14"
    },
    "5531": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10828,
        11454
      ],
      "op": "ADD",
      "path": "14"
    },
    "5532": {
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5533": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "5535": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10828,
        11454
      ],
      "op": "DUP7",
      "path": "14"
    },
    "5536": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10828,
        11454
      ],
      "op": "ADD",
      "path": "14"
    },
    "5537": {
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5538": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "5539": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5540": {
      "op": "PUSH4",
      "value": "0xB0F479A1"
    },
    "5545": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5547": {
      "op": "SHL"
    },
    "5548": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5549": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5550": {
      "fn": "MasterNode._buildCCIPMessage",
      "offset": [
        10828,
        11454
      ],
      "op": "DUP8",
      "path": "14"
    },
    "5551": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5552": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9292
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5553": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5554": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9292
      ],
      "op": "ADDRESS",
      "path": "14"
    },
    "5555": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "GAS",
      "path": "14"
    },
    "5556": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "5557": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5558": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5559": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "5560": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x11E6"
    },
    "5563": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5564": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5565": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "DUP6",
      "path": "14"
    },
    "5566": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5567": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "DUP11",
      "path": "14"
    },
    "5568": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5569": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1833"
    },
    "5572": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5573": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13389,
        13638
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5574": {
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "5575": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "5576": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "5577": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "DUP9",
      "path": "14"
    },
    "5578": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "DUP8",
      "path": "14"
    },
    "5579": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5580": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5581": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x20487DED"
    },
    "5586": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "5588": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "SHL",
      "path": "14"
    },
    "5589": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5590": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5591": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "DUP10",
      "path": "14"
    },
    "5592": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5593": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5594": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x15E6"
    },
    "5597": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "DUP12",
      "path": "14"
    },
    "5598": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "DUP11",
      "path": "14"
    },
    "5599": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "DUP11",
      "path": "14"
    },
    "5600": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5601": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "ADD",
      "path": "14"
    },
    "5602": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x20C4"
    },
    "5605": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9388,
        9444
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5606": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5607": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "SUB",
      "path": "14"
    },
    "5608": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5609": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "DUP11",
      "path": "14"
    },
    "5610": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "GAS",
      "path": "14"
    },
    "5611": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "5612": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "5613": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5614": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "5615": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x11A2"
    },
    "5618": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5619": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5620": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "DUP11",
      "path": "14"
    },
    "5621": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5622": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5623": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "5624": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1802"
    },
    "5627": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5628": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13389,
        13638
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5629": {
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "5630": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "5632": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "DUP11",
      "path": "14"
    },
    "5633": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5634": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5635": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "5636": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5637": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "5638": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x23B872DD"
    },
    "5643": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "5645": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "SHL",
      "path": "14"
    },
    "5646": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5647": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5648": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13195,
        13205
      ],
      "op": "CALLER",
      "path": "14"
    },
    "5649": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "DUP11",
      "path": "14"
    },
    "5650": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5651": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "ADD",
      "path": "14"
    },
    "5652": {
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5653": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9292
      ],
      "op": "ADDRESS",
      "path": "14"
    },
    "5654": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "5656": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5657": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "5658": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5659": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP9",
      "path": "14"
    },
    "5660": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "5662": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5663": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "5664": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5665": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "GAS",
      "path": "14"
    },
    "5666": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "CALL",
      "path": "14"
    },
    "5667": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5668": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5669": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "5670": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1166"
    },
    "5673": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5674": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "DUP11",
      "path": "14"
    },
    "5675": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5676": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x17E5"
    },
    "5679": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5680": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13389,
        13638
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5681": {
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "5682": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "5683": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1106"
    },
    "5686": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5687": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5688": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "DUP9",
      "path": "14"
    },
    "5689": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5690": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5691": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9135,
        9146
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x7"
    },
    "5693": {
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5694": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "5695": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5696": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP8",
      "path": "14"
    },
    "5697": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5698": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x70A08231"
    },
    "5703": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "5705": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SHL",
      "path": "14"
    },
    "5706": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5707": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5708": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5709": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5710": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9292
      ],
      "op": "ADDRESS",
      "path": "14"
    },
    "5711": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "DUP6",
      "path": "14"
    },
    "5712": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5713": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "ADD",
      "path": "14"
    },
    "5714": {
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5715": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "DUP11",
      "path": "14"
    },
    "5716": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5717": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "5719": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5720": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "DUP8",
      "path": "14"
    },
    "5721": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "GAS",
      "path": "14"
    },
    "5722": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "5723": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5724": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5725": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "5726": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x17DB"
    },
    "5729": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5730": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "DUP7",
      "path": "14"
    },
    "5731": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5732": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x17AE"
    },
    "5735": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5736": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13389,
        13638
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5737": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9600,
        9643
      ],
      "op": "POP",
      "path": "14"
    },
    "5738": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9600,
        9643
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5739": {
      "branch": 75,
      "fn": "MasterNode._sendMessage",
      "offset": [
        9600,
        9643
      ],
      "op": "GT",
      "path": "14"
    },
    "5740": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9596,
        9724
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x172F"
    },
    "5743": {
      "branch": 75,
      "fn": "MasterNode._sendMessage",
      "offset": [
        9596,
        9724
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5744": {
      "op": "POP"
    },
    "5745": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP8",
      "path": "14"
    },
    "5746": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5747": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "5752": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5754": {
      "op": "SHL"
    },
    "5755": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5756": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5761": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5763": {
      "op": "SHL"
    },
    "5764": {
      "op": "SUB"
    },
    "5765": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP8",
      "path": "14"
    },
    "5766": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "5767": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5768": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5769": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "ADD",
      "path": "14"
    },
    "5770": {
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5771": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5772": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5773": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "5775": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5776": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "5777": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5778": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5779": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5780": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5781": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5782": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP10",
      "path": "14"
    },
    "5783": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5784": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5785": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5786": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5787": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5788": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5789": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP8",
      "path": "14"
    },
    "5790": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5791": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5792": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5793": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "5795": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "5796": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "SUB",
      "path": "14"
    },
    "5797": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5798": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "GAS",
      "path": "14"
    },
    "5799": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "CALL",
      "path": "14"
    },
    "5800": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5801": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "5802": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1049"
    },
    "5805": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5806": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5807": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "DUP9",
      "path": "14"
    },
    "5808": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "5809": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "5810": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5811": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x16D8"
    },
    "5814": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "SWAP9",
      "path": "14"
    },
    "5815": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "5816": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "5817": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "5818": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1712"
    },
    "5821": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5822": {
      "op": "POP"
    },
    "5823": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP7",
      "path": "14"
    },
    "5824": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5825": {
      "op": "PUSH4",
      "value": "0x96F4E9F9"
    },
    "5830": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5832": {
      "op": "SHL"
    },
    "5833": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5834": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5835": {
      "offset": [
        783,
        15074
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "5836": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP9",
      "path": "14"
    },
    "5837": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "5838": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP7",
      "path": "14"
    },
    "5839": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "5840": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "5841": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "5842": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5843": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "ADD",
      "path": "14"
    },
    "5844": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x20C4"
    },
    "5847": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9988,
        10046
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5848": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5849": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "SUB",
      "path": "14"
    },
    "5850": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5851": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "GAS",
      "path": "14"
    },
    "5852": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "CALL",
      "path": "14"
    },
    "5853": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5854": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5855": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "5856": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1013"
    },
    "5859": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5860": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "POP",
      "path": "14"
    },
    "5861": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x16ED"
    },
    "5864": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5865": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13389,
        13638
      ],
      "op": "POP",
      "path": "14"
    },
    "5866": {
      "fn": "MasterNode.withdraw",
      "offset": [
        13389,
        13638
      ],
      "op": "POP",
      "path": "14"
    },
    "5867": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5868": {
      "fn": "MasterNode.withdraw",
      "offset": [
        783,
        15074
      ],
      "op": "RETURN",
      "path": "14"
    },
    "5869": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5870": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5871": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "5872": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5873": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "GT",
      "path": "14"
    },
    "5874": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x170B"
    },
    "5877": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5878": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5879": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1700"
    },
    "5882": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5883": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5884": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FF3"
    },
    "5887": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9988,
        10046
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5888": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5889": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5890": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "ADD",
      "path": "14"
    },
    "5891": {
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "5892": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "5893": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x464"
    },
    "5896": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5897": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5898": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "RETURN",
      "path": "14"
    },
    "5899": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5900": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "POP",
      "path": "14"
    },
    "5901": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "5902": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x16F6"
    },
    "5905": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9988,
        10046
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5906": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5907": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1728"
    },
    "5910": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5911": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "DUP8",
      "path": "14"
    },
    "5912": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "5913": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "DUP10",
      "path": "14"
    },
    "5914": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "GT",
      "path": "14"
    },
    "5915": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1042"
    },
    "5918": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5919": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1033"
    },
    "5922": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5923": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5924": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FF3"
    },
    "5927": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9842,
        9884
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5928": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5929": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "POP",
      "path": "14"
    },
    "5930": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "DUP11",
      "path": "14"
    },
    "5931": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xFB7"
    },
    "5934": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9842,
        9884
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5935": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9596,
        9724
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5936": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP10",
      "path": "14"
    },
    "5937": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5938": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5939": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5940": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP11",
      "path": "14"
    },
    "5941": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5942": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "5944": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "5945": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5946": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5947": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "5948": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5949": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "5950": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5951": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5952": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9292
      ],
      "op": "ADDRESS",
      "path": "14"
    },
    "5953": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "DUP11",
      "path": "14"
    },
    "5954": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5955": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "ADD",
      "path": "14"
    },
    "5956": {
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5957": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "GAS",
      "path": "14"
    },
    "5958": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "5959": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5960": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5961": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "5962": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x17A4"
    },
    "5965": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5966": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "DUP7",
      "path": "14"
    },
    "5967": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "5968": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1770"
    },
    "5971": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5972": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9596,
        9724
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5973": {
      "op": "POP"
    },
    "5974": {
      "op": "POP"
    },
    "5975": {
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5976": {
      "op": "PUSH4",
      "value": "0x4787A103"
    },
    "5981": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "5983": {
      "op": "SHL"
    },
    "5984": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9664,
        9724
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5985": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9664,
        9724
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5986": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9664,
        9724
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5987": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9664,
        9724
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5988": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9664,
        9724
      ],
      "op": "ADD",
      "path": "14"
    },
    "5989": {
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5990": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "5992": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5993": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "5994": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5995": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "5997": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5998": {
      "op": "POP"
    },
    "5999": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9664,
        9724
      ],
      "op": "REVERT",
      "path": "14"
    },
    "6000": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6001": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6002": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6003": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "6004": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "6005": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "POP",
      "path": "14"
    },
    "6006": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6007": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6008": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6009": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "GT",
      "path": "14"
    },
    "6010": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x179D"
    },
    "6013": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6014": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6015": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1788"
    },
    "6018": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6019": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6020": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FF3"
    },
    "6023": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9681,
        9717
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6024": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6025": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6026": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "ADD",
      "path": "14"
    },
    "6027": {
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "6028": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "6029": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x909"
    },
    "6032": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6033": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "6035": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "6036": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "6037": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6038": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6039": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "DUP6",
      "path": "14"
    },
    "6040": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6041": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1754"
    },
    "6044": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6045": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6046": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "POP",
      "path": "14"
    },
    "6047": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6048": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x177E"
    },
    "6051": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6052": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9681,
        9717
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6053": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6054": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6055": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6056": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP9",
      "path": "14"
    },
    "6057": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6058": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "6059": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6060": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6061": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "REVERT",
      "path": "14"
    },
    "6062": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6063": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6064": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "POP",
      "path": "14"
    },
    "6065": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "DUP11",
      "path": "14"
    },
    "6066": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6067": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6068": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6069": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6070": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "GT",
      "path": "14"
    },
    "6071": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x17D4"
    },
    "6074": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6075": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6076": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x17C5"
    },
    "6079": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6080": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6081": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FF3"
    },
    "6084": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9607,
        9643
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6085": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6086": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6087": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "ADD",
      "path": "14"
    },
    "6088": {
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "6089": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "6090": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x98B"
    },
    "6093": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6094": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6095": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "DUP13",
      "path": "14"
    },
    "6096": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1668"
    },
    "6099": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6100": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6101": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "POP",
      "path": "14"
    },
    "6102": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6103": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x17BB"
    },
    "6106": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6107": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9607,
        9643
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6108": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP11",
      "path": "14"
    },
    "6109": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6110": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6111": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP9",
      "path": "14"
    },
    "6112": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6113": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "6114": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6115": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6116": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "REVERT",
      "path": "14"
    },
    "6117": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6118": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x17FC"
    },
    "6121": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "6122": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "POP",
      "path": "14"
    },
    "6123": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "DUP10",
      "path": "14"
    },
    "6124": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6125": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "DUP12",
      "path": "14"
    },
    "6126": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "GT",
      "path": "14"
    },
    "6127": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1042"
    },
    "6130": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6131": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1033"
    },
    "6134": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6135": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6136": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FF3"
    },
    "6139": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9476,
        9533
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6140": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6141": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "DUP11",
      "path": "14"
    },
    "6142": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1630"
    },
    "6145": {
      "branch": 76,
      "fn": "MasterNode._sendMessage",
      "offset": [
        9476,
        9533
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6146": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6147": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6148": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6149": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "6150": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "6151": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "6152": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "POP",
      "path": "14"
    },
    "6153": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6154": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6155": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "GT",
      "path": "14"
    },
    "6156": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x182C"
    },
    "6159": {
      "branch": 76,
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6160": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6161": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x181A"
    },
    "6164": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6165": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6166": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FF3"
    },
    "6169": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9388,
        9444
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6170": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6171": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6172": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "ADD",
      "path": "14"
    },
    "6173": {
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "6174": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "6175": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x270"
    },
    "6178": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6179": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP10",
      "path": "14"
    },
    "6180": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6181": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6182": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "6183": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "DUP13",
      "path": "14"
    },
    "6184": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x15FC"
    },
    "6187": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6188": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6189": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "POP",
      "path": "14"
    },
    "6190": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6191": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1810"
    },
    "6194": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9388,
        9444
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6195": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6196": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6197": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "6198": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "POP",
      "path": "14"
    },
    "6199": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "DUP10",
      "path": "14"
    },
    "6200": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6201": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "6202": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "POP",
      "path": "14"
    },
    "6203": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6204": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6205": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "GT",
      "path": "14"
    },
    "6206": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1866"
    },
    "6209": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6210": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6211": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x184C"
    },
    "6214": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6215": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6216": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FF3"
    },
    "6219": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        9288,
        9304
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6220": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6221": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6222": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "ADD",
      "path": "14"
    },
    "6223": {
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "6224": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "6225": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA64"
    },
    "6228": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6229": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6230": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "6231": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6232": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "6233": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6234": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "6235": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA64"
    },
    "6238": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6239": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "DUP5",
      "path": "14"
    },
    "6240": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6241": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "DUP11",
      "path": "14"
    },
    "6242": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x15C5"
    },
    "6245": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6246": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6247": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "POP",
      "path": "14"
    },
    "6248": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6249": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1842"
    },
    "6252": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        9288,
        9304
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6253": {
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6254": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "6255": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6256": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6260": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6262": {
      "op": "SHL"
    },
    "6263": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6264": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6265": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6266": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP9",
      "path": "14"
    },
    "6267": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "6268": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "6269": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6270": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6271": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x22"
    },
    "6273": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "6275": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6276": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "6277": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6278": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
    },
    "6311": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "6313": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6314": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "6315": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6316": {
      "op": "PUSH2",
      "value": "0x6365"
    },
    "6319": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "6321": {
      "op": "SHL"
    },
    "6322": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "6324": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6325": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "6326": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6327": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x84"
    },
    "6329": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6330": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "REVERT",
      "path": "14"
    },
    "6331": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6332": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "6333": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6334": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6338": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6340": {
      "op": "SHL"
    },
    "6341": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6342": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6343": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6344": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP8",
      "path": "14"
    },
    "6345": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "6346": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6347": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6348": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6349": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x21"
    },
    "6351": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "6353": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6354": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "6355": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6356": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
    },
    "6389": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "6391": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6392": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "6393": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6394": {
      "op": "PUSH1",
      "value": "0x73"
    },
    "6396": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "6398": {
      "op": "SHL"
    },
    "6399": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "6401": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6402": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "6403": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6404": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x84"
    },
    "6406": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6407": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "REVERT",
      "path": "14"
    },
    "6408": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6409": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6410": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6411": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6415": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6417": {
      "op": "SHL"
    },
    "6418": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6419": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6420": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6421": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "6422": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "6423": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP8",
      "path": "14"
    },
    "6424": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6425": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6426": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x13"
    },
    "6428": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "6430": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6431": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "6432": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6433": {
      "op": "PUSH19",
      "value": "0x4E6F7420656E6F756768742062616C616E6365"
    },
    "6453": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "6455": {
      "op": "SHL"
    },
    "6456": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "6458": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6459": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "6460": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6461": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "6463": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6464": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "REVERT",
      "path": "14"
    },
    "6465": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6466": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6467": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6468": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6472": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6474": {
      "op": "SHL"
    },
    "6475": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6476": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6477": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6478": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "6479": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "6480": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP8",
      "path": "14"
    },
    "6481": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6482": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6483": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x12"
    },
    "6485": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "6487": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6488": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "6489": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6490": {
      "op": "PUSH18",
      "value": "0x4E6F6465206973206E6F7420416374697665"
    },
    "6509": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "6511": {
      "op": "SHL"
    },
    "6512": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "6514": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6515": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "6516": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6517": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "6519": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6520": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "REVERT",
      "path": "14"
    },
    "6521": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6522": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "6523": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6524": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6525": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "6526": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x270"
    },
    "6529": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6530": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "6532": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "6533": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "6535": {
      "op": "NOT"
    },
    "6536": {
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "6537": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "6538": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x270"
    },
    "6541": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6542": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1995"
    },
    "6545": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1EDC"
    },
    "6548": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6549": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6550": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x199D"
    },
    "6553": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1EF2"
    },
    "6556": {
      "fn": "MasterNode._sendMessage",
      "jump": "i",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6557": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6558": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6560": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6562": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6564": {
      "op": "SHL"
    },
    "6565": {
      "op": "SUB"
    },
    "6566": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6567": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "6568": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "6569": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6570": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "6572": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "6574": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6575": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6576": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6577": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "6578": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "6579": {
      "fn": "MasterNode._sendMessage",
      "offset": [
        783,
        15074
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "6580": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "6581": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP7",
      "path": "14"
    },
    "6582": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6583": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6584": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6585": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "6586": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "6587": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6588": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15074
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "6589": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "6590": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "6592": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "6593": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "6594": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "6595": {
      "fn": "Context._msgSender",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "6597": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11351,
        11388
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6598": {
      "branch": 82,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11351,
        11388
      ],
      "op": "ADD",
      "path": "0"
    },
    "6599": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19D9"
    },
    "6602": {
      "branch": 82,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6603": {
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6604": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "6606": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5441,
        5447
      ],
      "op": "DUP7",
      "path": "0",
      "statement": 42
    },
    "6607": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5441,
        5447
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B7"
    },
    "6610": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5441,
        5447
      ],
      "op": "DUP8",
      "path": "0"
    },
    "6611": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5441,
        5447
      ],
      "op": "DUP8",
      "path": "0"
    },
    "6612": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5441,
        5447
      ],
      "op": "DUP8",
      "path": "0"
    },
    "6613": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5441,
        5447
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2224"
    },
    "6616": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5441,
        5447
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6617": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6618": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11412,
        11438
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 43
    },
    "6619": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11412,
        11438
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6620": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11412,
        11438
      ],
      "op": "LT",
      "path": "0"
    },
    "6621": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1A02"
    },
    "6624": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6625": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "6626": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "6627": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6628": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "6629": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11539,
        11564
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 44,
      "value": "0x19F7"
    },
    "6632": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "6634": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "6635": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "6636": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5441,
        5447
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B7"
    },
    "6639": {
      "offset": [
        783,
        15074
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "6640": {
      "fn": "ERC20.transferFrom",
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "6641": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "6642": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11539,
        11564
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6643": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11539,
        11564
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2438"
    },
    "6646": {
      "fn": "ERC20._spendAllowance",
      "jump": "i",
      "offset": [
        11539,
        11564
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6647": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11539,
        11564
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6648": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6649": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "6650": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "6651": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6652": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "6653": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "POP",
      "path": "0"
    },
    "6654": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19CB"
    },
    "6657": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11347,
        11590
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6658": {
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6659": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "6661": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6662": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "6664": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "DUP8",
      "path": "14"
    },
    "6665": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6666": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "6667": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x461BCD"
    },
    "6671": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE5"
    },
    "6673": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "SHL",
      "path": "14"
    },
    "6674": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6675": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6676": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6677": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "6678": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6679": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1D"
    },
    "6681": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "6683": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6684": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "6685": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6686": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
    },
    "6719": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "6721": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6722": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "6723": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6724": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "REVERT",
      "path": "14"
    },
    "6725": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6726": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "6727": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "6728": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "6729": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x464"
    },
    "6732": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6733": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6734": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "6736": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "NOT",
      "path": "14"
    },
    "6737": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "6738": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "6739": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "6740": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x464"
    },
    "6743": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6744": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1A5F"
    },
    "6747": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1EDC"
    },
    "6750": {
      "fn": "ERC20._spendAllowance",
      "jump": "i",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6751": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6752": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "6753": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1A68"
    },
    "6756": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1EF2"
    },
    "6759": {
      "fn": "ERC20._spendAllowance",
      "jump": "i",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6760": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6761": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6762": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "6764": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6765": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "6767": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "SHL",
      "path": "14"
    },
    "6768": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "6769": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6770": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "6771": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "6772": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "6773": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6774": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6775": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6776": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14080
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 45,
      "value": "0x8"
    },
    "6778": {
      "offset": [
        783,
        15074
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "6779": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "6781": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "6782": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6783": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP9",
      "path": "14"
    },
    "6784": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6785": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP7",
      "path": "14"
    },
    "6786": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6787": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "6788": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "6789": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "6791": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6792": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "6794": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP10",
      "path": "14"
    },
    "6795": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "6796": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "6797": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "SHR",
      "path": "14"
    },
    "6798": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "6799": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "6800": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "6801": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14114
      ],
      "op": "EQ",
      "path": "14"
    },
    "6802": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14174
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "6803": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14174
      ],
      "op": "DUP9",
      "path": "14"
    },
    "6804": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14174
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1BA2"
    },
    "6807": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14174
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6808": {
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6809": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14238
      ],
      "op": "POP",
      "path": "14"
    },
    "6810": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14238
      ],
      "op": "DUP8",
      "path": "14"
    },
    "6811": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14238
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1B8E"
    },
    "6814": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14238
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6815": {
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6816": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14319
      ],
      "op": "DUP8",
      "path": "14"
    },
    "6817": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14319
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1B6F"
    },
    "6820": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14319
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6821": {
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6822": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14416
      ],
      "op": "DUP8",
      "path": "14"
    },
    "6823": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14416
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1B38"
    },
    "6826": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14416
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6827": {
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6828": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14479
      ],
      "op": "DUP8",
      "path": "14"
    },
    "6829": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14479
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1B1E"
    },
    "6832": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14479
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6833": {
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6834": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14544
      ],
      "op": "POP",
      "path": "14"
    },
    "6835": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14544
      ],
      "op": "DUP7",
      "path": "14"
    },
    "6836": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14544
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1B05"
    },
    "6839": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14544
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6840": {
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6841": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14598
      ],
      "op": "DUP7",
      "path": "14"
    },
    "6842": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14598
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1AF0"
    },
    "6845": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14598
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6846": {
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6847": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14701
      ],
      "op": "DUP7",
      "path": "14"
    },
    "6848": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14701
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1ACF"
    },
    "6851": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14701
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6852": {
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6853": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP9",
      "path": "14"
    },
    "6854": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP8",
      "path": "14"
    },
    "6855": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP10",
      "path": "14"
    },
    "6856": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6857": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6858": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "6859": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "6860": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6861": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6862": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "RETURN",
      "path": "14"
    },
    "6863": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14701
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6864": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6865": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6866": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP8",
      "path": "14"
    },
    "6867": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6868": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "6869": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6870": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "6871": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14614,
        14648
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6872": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14614,
        14648
      ],
      "op": "ADD",
      "path": "14"
    },
    "6873": {
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "6874": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "6875": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "6876": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6877": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6878": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "6879": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6880": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "6881": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14663,
        14701
      ],
      "op": "ADD",
      "path": "14"
    },
    "6882": {
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "6883": {
      "op": "GT"
    },
    "6884": {
      "op": "SWAP1"
    },
    "6885": {
      "op": "POP"
    },
    "6886": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14701
      ],
      "op": "CODESIZE",
      "path": "14"
    },
    "6887": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14701
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6888": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14701
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6889": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14701
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6890": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14701
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6891": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14701
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6892": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14701
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1AC4"
    },
    "6895": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14701
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6896": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14598
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6897": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6898": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "6899": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6900": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6901": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP10",
      "path": "14"
    },
    "6902": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6903": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP8",
      "path": "14"
    },
    "6904": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "6905": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "6906": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14560,
        14594
      ],
      "op": "DUP6",
      "path": "14"
    },
    "6907": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14560,
        14594
      ],
      "op": "ADD",
      "path": "14"
    },
    "6908": {
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "6909": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14560,
        14598
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "6910": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14560,
        14598
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "6911": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14560,
        14598
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "6912": {
      "op": "POP"
    },
    "6913": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14598
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1ABE"
    },
    "6916": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14598
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6917": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14544
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6918": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "6919": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6920": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "6921": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "6922": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6923": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6924": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP10",
      "path": "14"
    },
    "6925": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6926": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP8",
      "path": "14"
    },
    "6927": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "6928": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "6929": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "6930": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6931": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "SHR",
      "path": "14"
    },
    "6932": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "6934": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "6935": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "6936": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "6937": {
      "op": "POP"
    },
    "6938": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14544
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1AB8"
    },
    "6941": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14544
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6942": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14479
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6943": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP7",
      "path": "14"
    },
    "6944": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "6945": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "6946": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "6947": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6948": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6949": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP11",
      "path": "14"
    },
    "6950": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6951": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP9",
      "path": "14"
    },
    "6952": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "6953": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "6954": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "6955": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "6957": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "6958": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "6959": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "6960": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14432,
        14479
      ],
      "op": "EQ",
      "path": "14"
    },
    "6961": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14432,
        14479
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "6962": {
      "op": "POP"
    },
    "6963": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14479
      ],
      "op": "CODESIZE",
      "path": "14"
    },
    "6964": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14479
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1AB1"
    },
    "6967": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14479
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6968": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14416
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6969": {
      "offset": [
        783,
        15074
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "6970": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "6971": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6972": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP7",
      "path": "14"
    },
    "6973": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "6974": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "6975": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6976": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6977": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP10",
      "path": "14"
    },
    "6978": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6979": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP7",
      "path": "14"
    },
    "6980": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP9",
      "path": "14"
    },
    "6981": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "6982": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "6983": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14335,
        14379
      ],
      "op": "ADD",
      "path": "14"
    },
    "6984": {
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "6985": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14382,
        14386
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE10"
    },
    "6988": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6989": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "6990": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6991": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "6992": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "GT",
      "path": "14"
    },
    "6993": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1B5C"
    },
    "6996": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6997": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14401,
        14416
      ],
      "op": "TIMESTAMP",
      "path": "14"
    },
    "6998": {
      "op": "LT"
    },
    "6999": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14416
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "7000": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14416
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1AAB"
    },
    "7003": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14416
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7004": {
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7005": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7010": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7012": {
      "op": "SHL"
    },
    "7013": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "7014": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7015": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x11"
    },
    "7017": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP7",
      "path": "14"
    },
    "7018": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7019": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "7021": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "7022": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "REVERT",
      "path": "14"
    },
    "7023": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14319
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7024": {
      "offset": [
        783,
        15074
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "7025": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "7026": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7027": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "7028": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7029": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP7",
      "path": "14"
    },
    "7030": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP9",
      "path": "14"
    },
    "7031": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "7032": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "7033": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14254,
        14294
      ],
      "op": "ADD",
      "path": "14"
    },
    "7034": {
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "7035": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14297,
        14301
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE10"
    },
    "7038": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7039": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "7040": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7041": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7042": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "GT",
      "path": "14"
    },
    "7043": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1B5C"
    },
    "7046": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7047": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14304,
        14319
      ],
      "op": "TIMESTAMP",
      "path": "14"
    },
    "7048": {
      "op": "LT"
    },
    "7049": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14319
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "7050": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14319
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1AA5"
    },
    "7053": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14319
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7054": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14238
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7055": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP7",
      "path": "14"
    },
    "7056": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "7057": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "7058": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "7059": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7060": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP9",
      "path": "14"
    },
    "7061": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "7062": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "7063": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14190,
        14234
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7064": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14190,
        14234
      ],
      "op": "ADD",
      "path": "14"
    },
    "7065": {
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "7066": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14190,
        14238
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "7067": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14190,
        14238
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "7068": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14190,
        14238
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "7069": {
      "op": "POP"
    },
    "7070": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14238
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1A9F"
    },
    "7073": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14238
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7074": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14174
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7075": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14130,
        14170
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7076": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14130,
        14170
      ],
      "op": "ADD",
      "path": "14"
    },
    "7077": {
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "7078": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14130,
        14174
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "7079": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14130,
        14174
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "7080": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14130,
        14174
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "7081": {
      "op": "POP"
    },
    "7082": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14174
      ],
      "op": "CODESIZE",
      "path": "14"
    },
    "7083": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14174
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1A98"
    },
    "7086": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        14070,
        14174
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7087": {
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7088": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "7089": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "7090": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x24D"
    },
    "7093": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7094": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7095": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "7097": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "NOT",
      "path": "14"
    },
    "7098": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "7099": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "7100": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "7101": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x24D"
    },
    "7104": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7105": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "7107": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "7108": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "7109": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "7110": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7111": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "7112": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7113": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7114": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7115": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "RETURN",
      "path": "14"
    },
    "7116": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7117": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "7118": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "7119": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "7120": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x270"
    },
    "7123": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7124": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7125": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "7127": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "NOT",
      "path": "14"
    },
    "7128": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "7129": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "7130": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "7131": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x270"
    },
    "7134": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7135": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "7137": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7142": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7144": {
      "op": "SHL"
    },
    "7145": {
      "op": "SUB"
    },
    "7146": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1BF1"
    },
    "7149": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x21CB"
    },
    "7152": {
      "fn": "MasterNode.checkApprovedWarp",
      "jump": "i",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7153": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7154": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7155": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "7156": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7157": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "7158": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7159": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7160": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "RETURN",
      "path": "14"
    },
    "7161": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7162": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "7163": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "7164": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x24D"
    },
    "7167": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7168": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "7170": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "7171": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "7173": {
      "op": "NOT"
    },
    "7174": {
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "7175": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "7176": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x24D"
    },
    "7179": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7180": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1C13"
    },
    "7183": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1EDC"
    },
    "7186": {
      "fn": "MasterNode.checkApprovedWarp",
      "jump": "i",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7187": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7188": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7189": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "7191": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "7192": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7197": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7199": {
      "op": "SHL"
    },
    "7200": {
      "op": "SUB"
    },
    "7201": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7202": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "7203": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7204": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "7205": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x909"
    },
    "7208": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7209": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "7211": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "7212": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7213": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7214": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "7215": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "7216": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7217": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7218": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "7219": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "7220": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA60"
    },
    "7223": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7224": {
      "offset": [
        2032,
        2091
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1C3F"
    },
    "7227": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        2032,
        2091
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2593"
    },
    "7230": {
      "fn": "MasterNode.checkApprovedWarp",
      "jump": "i",
      "offset": [
        2032,
        2091
      ],
      "op": "JUMP",
      "path": "9"
    },
    "7231": {
      "fn": "MasterNode.checkApprovedWarp",
      "offset": [
        2032,
        2091
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "7232": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "7234": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        3424,
        3438
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 46,
      "value": "0x9"
    },
    "7236": {
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "7237": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "7238": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "7239": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1CD6"
    },
    "7242": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7243": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "7244": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "7246": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7247": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7248": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7249": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "7251": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "SHL",
      "path": "14"
    },
    "7252": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "7253": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "7254": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "7255": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "7256": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "DUP7",
      "path": "14"
    },
    "7257": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "DUP9",
      "path": "14"
    },
    "7258": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7259": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        3474,
        3484
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 47,
      "value": "0x8"
    },
    "7261": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "7263": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7264": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "DUP8",
      "path": "14"
    },
    "7265": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "7266": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "7267": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xFF00"
    },
    "7270": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH10",
      "path": "14",
      "value": "0xFFFFFFFFFFFFFFFF0000"
    },
    "7281": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "7282": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "7283": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "7284": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x10"
    },
    "7286": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "SHL",
      "path": "14"
    },
    "7287": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "7288": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "7289": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH10",
      "path": "14",
      "value": "0xFFFFFFFFFFFFFFFFFFFF"
    },
    "7300": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "NOT",
      "path": "14"
    },
    "7301": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "7302": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7303": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        3474,
        3484
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "7305": {
      "offset": [
        783,
        15074
      ],
      "op": "SHL",
      "path": "14"
    },
    "7306": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "7307": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "OR",
      "path": "14"
    },
    "7308": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "OR",
      "path": "14"
    },
    "7309": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "OR",
      "path": "14"
    },
    "7310": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7311": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "7312": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        3647,
        3756
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1C97"
    },
    "7315": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        3647,
        3756
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7316": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7317": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7318": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "RETURN",
      "path": "14"
    },
    "7319": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        3647,
        3756
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7320": {
      "branch": 77,
      "fn": "MasterNode.addValidNode",
      "offset": [
        3424,
        3438
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9"
    },
    "7322": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7323": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "7324": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "7327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7329": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "7331": {
      "op": "SHL"
    },
    "7332": {
      "op": "SUB"
    },
    "7333": {
      "op": "NOT"
    },
    "7334": {
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "7335": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        3474,
        3484
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "7337": {
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "7338": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7339": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "7340": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "SHL",
      "path": "14"
    },
    "7341": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "7344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7346": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "7348": {
      "op": "SHL"
    },
    "7349": {
      "op": "SUB"
    },
    "7350": {
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "7351": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7352": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7353": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7354": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "OR",
      "path": "14"
    },
    "7355": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7356": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "7357": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        3721,
        3745
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 48,
      "value": "0xA"
    },
    "7359": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7360": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "7361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7363": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7365": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7367": {
      "op": "SHL"
    },
    "7368": {
      "op": "SUB"
    },
    "7369": {
      "op": "NOT"
    },
    "7370": {
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "7371": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7372": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7373": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7374": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "OR",
      "path": "14"
    },
    "7375": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7376": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "7377": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        3647,
        3756
      ],
      "op": "CODESIZE",
      "path": "14"
    },
    "7378": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        3647,
        3756
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7379": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7380": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7381": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "RETURN",
      "path": "14"
    },
    "7382": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7383": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "7385": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7386": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "7388": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "DUP8",
      "path": "14"
    },
    "7389": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "7390": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7391": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH3",
      "path": "14",
      "value": "0x461BCD"
    },
    "7395": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE5"
    },
    "7397": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "SHL",
      "path": "14"
    },
    "7398": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "7399": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7400": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7401": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "7402": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7403": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x15"
    },
    "7405": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "7407": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7408": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "7409": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7410": {
      "op": "PUSH21",
      "value": "0x139BC81B5BDC99481B9BD9195CC8185B1B1BDDD959"
    },
    "7432": {
      "op": "PUSH1",
      "value": "0x5A"
    },
    "7434": {
      "op": "SHL"
    },
    "7435": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "7437": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7438": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "7439": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7440": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "REVERT",
      "path": "14"
    },
    "7441": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7442": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "7443": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "7444": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "7445": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x270"
    },
    "7448": {
      "branch": 77,
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7449": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7450": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "7452": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "NOT",
      "path": "14"
    },
    "7453": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "7454": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "7455": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "7456": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x270"
    },
    "7459": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7460": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "7462": {
      "fn": "MasterNode.addValidNode",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7463": {
      "fn": "ERC20.approve",
      "offset": [
        4593,
        4599
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 49,
      "value": "0x3B7"
    },
    "7466": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1D31"
    },
    "7469": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1EDC"
    },
    "7472": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7473": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7474": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "7476": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "7477": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7478": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "7479": {
      "fn": "ERC20.approve",
      "offset": [
        4593,
        4599
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2438"
    },
    "7482": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4593,
        4599
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7483": {
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7484": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "7485": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7486": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15074
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "7487": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x464"
    },
    "7490": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7491": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7492": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "7494": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15074
      ],
      "op": "NOT",
      "path": "14"
    },
    "7495": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "7496": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "7497": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "7498": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x464"
    },
    "7501": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7502": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7503": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "7504": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7505": {
      "fn": "ERC20.approve",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7506": {
      "fn": "ERC20.name",
      "offset": [
        2240,
        2245
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 50,
      "value": "0x5"
    },
    "7508": {
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "7509": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "7510": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "7512": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "7513": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7514": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "SHR",
      "path": "14"
    },
    "7515": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7516": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7517": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "DUP7",
      "path": "14"
    },
    "7518": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "7519": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "7520": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "DUP7",
      "path": "14"
    },
    "7521": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "7522": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1DFE"
    },
    "7525": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7526": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7527": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "7529": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "7530": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "DUP8",
      "path": "14"
    },
    "7531": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "7532": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "LT",
      "path": "14"
    },
    "7533": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7534": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "EQ",
      "path": "14"
    },
    "7535": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x6C4"
    },
    "7538": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7539": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "DUP9",
      "path": "14"
    },
    "7540": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP10",
      "path": "14"
    },
    "7541": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "7542": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "7543": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "DUP9",
      "path": "14"
    },
    "7544": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "7545": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "7546": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "7547": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7548": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP11",
      "path": "14"
    },
    "7549": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7550": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7551": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7552": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "7554": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "EQ",
      "path": "14"
    },
    "7555": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x69D"
    },
    "7558": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7559": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "7560": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "7561": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "7563": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "EQ",
      "path": "14"
    },
    "7564": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1DA2"
    },
    "7567": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7568": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "7569": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "7570": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "7571": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x63D"
    },
    "7574": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "7575": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7576": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x62E"
    },
    "7579": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7580": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "7581": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "7582": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FF3"
    },
    "7585": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7586": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7587": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7588": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7589": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "DUP7",
      "path": "14"
    },
    "7590": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "7591": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "7592": {
      "fn": "ERC20.name",
      "offset": [
        2240,
        2245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "7594": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "7595": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7596": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0"
    },
    "7629": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7630": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7631": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "7632": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "LT",
      "path": "14"
    },
    "7633": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1DE6"
    },
    "7636": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7637": {
      "op": "POP"
    },
    "7638": {
      "op": "POP"
    },
    "7639": {
      "op": "POP"
    },
    "7640": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7641": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "7642": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "7643": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7644": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x62E"
    },
    "7647": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x63D"
    },
    "7650": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x61B"
    },
    "7653": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7654": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7655": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7656": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "7657": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "7658": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "DUP11",
      "path": "14"
    },
    "7659": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "7660": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "DUP7",
      "path": "14"
    },
    "7661": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "7662": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7663": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "DUP9",
      "path": "14"
    },
    "7664": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "7665": {
      "op": "POP"
    },
    "7666": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP8",
      "path": "14"
    },
    "7667": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "7668": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7669": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "7670": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "7671": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "7672": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7673": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "7674": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1DCD"
    },
    "7677": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7678": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7679": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "7680": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x7F"
    },
    "7682": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "7683": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "7684": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1D66"
    },
    "7687": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7688": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7689": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "7690": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "7691": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x24D"
    },
    "7694": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7695": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7696": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "7698": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "NOT",
      "path": "14"
    },
    "7699": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "7700": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "7701": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "7702": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x24D"
    },
    "7705": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7706": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1E21"
    },
    "7709": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1EDC"
    },
    "7712": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7713": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7714": {
      "offset": [
        3046,
        3056
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7715": {
      "fn": "ERC20.name",
      "offset": [
        3046,
        3056
      ],
      "op": "CALLER",
      "path": "14"
    },
    "7716": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "7717": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7718": {
      "offset": [
        3035,
        3045
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "7720": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "7722": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7723": {
      "offset": [
        3014,
        3160
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1E67"
    },
    "7726": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7728": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7730": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7732": {
      "op": "SHL"
    },
    "7733": {
      "op": "SUB"
    },
    "7734": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7735": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "7736": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "DUP8",
      "path": "14"
    },
    "7737": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "7738": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "7739": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x10"
    },
    "7741": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "SHR",
      "path": "14"
    },
    "7742": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "7743": {
      "offset": [
        3073,
        3097
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7744": {
      "fn": "ERC20.name",
      "offset": [
        3073,
        3097
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x0"
    },
    "7777": {
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "7778": {
      "offset": [
        3035,
        3097
      ],
      "op": "EQ",
      "path": "14"
    },
    "7779": {
      "offset": [
        3014,
        3160
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x206A"
    },
    "7782": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        3014,
        3160
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7783": {
      "fn": "ERC20.name",
      "offset": [
        3014,
        3160
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7784": {
      "offset": [
        3046,
        3056
      ],
      "op": "CALLER",
      "path": "14"
    },
    "7785": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "7786": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7787": {
      "offset": [
        3035,
        3045
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "7789": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "7791": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7792": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "7794": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7795": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "7796": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "7797": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "7798": {
      "fn": "ERC20.name",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "7799": {
      "offset": [
        2839,
        2875
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "7800": {
      "offset": [
        2835,
        2945
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5AF"
    },
    "7803": {
      "offset": [
        2835,
        2945
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7804": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "7805": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        4638,
        4644
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 51,
      "value": "0x906"
    },
    "7808": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "7810": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "7811": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "7812": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        4638,
        4644
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2394"
    },
    "7815": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "jump": "i",
      "offset": [
        4638,
        4644
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7816": {
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7817": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "7818": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "7819": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "7820": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "7821": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x24D"
    },
    "7824": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7825": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "7827": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "7828": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "7830": {
      "op": "NOT"
    },
    "7831": {
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "7832": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "7833": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x24D"
    },
    "7836": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7837": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "7838": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xFFFFFFFF"
    },
    "7843": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "7845": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "SHL",
      "path": "14"
    },
    "7846": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7847": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "7848": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7849": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7850": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "7851": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x24D"
    },
    "7854": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7855": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "7857": {
      "fn": "MasterNode.aWarpTokenMinterFromSameChain",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "7858": {
      "op": "POP"
    },
    "7859": {
      "op": "PUSH4",
      "value": "0x85572FFB"
    },
    "7864": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7866": {
      "op": "SHL"
    },
    "7867": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1565
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 52
    },
    "7868": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1565
      ],
      "op": "EQ",
      "path": "4"
    },
    "7869": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1565
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7870": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1609
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7871": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1609
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "7872": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1609
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1ECB"
    },
    "7875": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1609
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "7876": {
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7877": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "7878": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "7879": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "7880": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7881": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7882": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "RETURN",
      "path": "14"
    },
    "7883": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1609
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7884": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "7889": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7891": {
      "op": "SHL"
    },
    "7892": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1569,
        1609
      ],
      "op": "EQ",
      "path": "4"
    },
    "7893": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1569,
        1609
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7894": {
      "op": "POP"
    },
    "7895": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1609
      ],
      "op": "CODESIZE",
      "path": "4"
    },
    "7896": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1609
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1EC4"
    },
    "7899": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1609
      ],
      "op": "JUMP",
      "path": "4"
    },
    "7900": {
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7901": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "7903": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "7904": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7907": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7909": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7911": {
      "op": "SHL"
    },
    "7912": {
      "op": "SUB"
    },
    "7913": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7914": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "7915": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7916": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "7917": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAFC"
    },
    "7920": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7921": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7922": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7923": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "7925": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "7926": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7931": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7933": {
      "op": "SHL"
    },
    "7934": {
      "op": "SUB"
    },
    "7935": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7936": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "7937": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7938": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "7939": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAFC"
    },
    "7942": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7943": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7944": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7945": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7946": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7947": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7948": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "7949": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "7950": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "7951": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7952": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7953": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "7955": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7956": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "7957": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7958": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "LT",
      "path": "14"
    },
    "7959": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F34"
    },
    "7962": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "7963": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "7964": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "7965": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "7966": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "7968": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "7970": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7971": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "7972": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "7973": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "7974": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "7975": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "7976": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "7977": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "7979": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7980": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "NOT",
      "path": "14"
    },
    "7981": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "7982": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "7983": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "7984": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "7985": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "7986": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "7987": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7988": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "7989": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "7991": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7992": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "7993": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "7994": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "7995": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "7996": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "7997": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "7998": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "7999": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "8000": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8001": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "8002": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8003": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "8004": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F13"
    },
    "8007": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8008": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8009": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "8011": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "8012": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8017": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8019": {
      "op": "SHL"
    },
    "8020": {
      "op": "SUB"
    },
    "8021": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8022": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "8023": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8024": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "8025": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAFC"
    },
    "8028": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8029": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8030": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8031": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "8033": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8034": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "8035": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8036": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8037": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "LT",
      "path": "14"
    },
    "8038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8042": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8044": {
      "op": "SHL"
    },
    "8045": {
      "op": "SUB"
    },
    "8046": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8047": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "GT",
      "path": "14"
    },
    "8048": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "OR",
      "path": "14"
    },
    "8049": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F79"
    },
    "8052": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8053": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8055": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8056": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8057": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8058": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x4E487B71"
    },
    "8063": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "8065": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SHL",
      "path": "14"
    },
    "8066": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "8068": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8069": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x41"
    },
    "8071": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "8073": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8074": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "8076": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "8078": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "REVERT",
      "path": "14"
    },
    "8079": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8080": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8082": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8083": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "8084": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8085": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8086": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "LT",
      "path": "14"
    },
    "8087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8091": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8093": {
      "op": "SHL"
    },
    "8094": {
      "op": "SUB"
    },
    "8095": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8096": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "GT",
      "path": "14"
    },
    "8097": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "OR",
      "path": "14"
    },
    "8098": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F79"
    },
    "8101": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8102": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8104": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8105": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8106": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8111": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8113": {
      "op": "SHL"
    },
    "8114": {
      "op": "SUB"
    },
    "8115": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8116": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "GT",
      "path": "14"
    },
    "8117": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F79"
    },
    "8120": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8121": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8123": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8124": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8125": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8126": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8128": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8129": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "8130": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8131": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8132": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "LT",
      "path": "14"
    },
    "8133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8137": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8139": {
      "op": "SHL"
    },
    "8140": {
      "op": "SUB"
    },
    "8141": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8142": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "GT",
      "path": "14"
    },
    "8143": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "OR",
      "path": "14"
    },
    "8144": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F79"
    },
    "8147": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8148": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8150": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8151": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8152": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8153": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "8155": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8156": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "8157": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8158": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8159": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "LT",
      "path": "14"
    },
    "8160": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8164": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8166": {
      "op": "SHL"
    },
    "8167": {
      "op": "SUB"
    },
    "8168": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8169": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "GT",
      "path": "14"
    },
    "8170": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "OR",
      "path": "14"
    },
    "8171": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F79"
    },
    "8174": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8175": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8177": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8178": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8179": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8180": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8181": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "8183": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8184": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "NOT",
      "path": "14"
    },
    "8185": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "8186": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "8187": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "8188": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8189": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "8190": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8191": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8192": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "LT",
      "path": "14"
    },
    "8193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8197": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8199": {
      "op": "SHL"
    },
    "8200": {
      "op": "SUB"
    },
    "8201": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8202": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "GT",
      "path": "14"
    },
    "8203": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "OR",
      "path": "14"
    },
    "8204": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F79"
    },
    "8207": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8208": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8210": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8211": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8212": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8213": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8214": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "8216": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8217": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "8218": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "8219": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "8220": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAFC"
    },
    "8223": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8224": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8225": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "8226": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8229": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8231": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8233": {
      "op": "SHL"
    },
    "8234": {
      "op": "SUB"
    },
    "8235": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8236": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "GT",
      "path": "14"
    },
    "8237": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F79"
    },
    "8240": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8241": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8243": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8244": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "8245": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2048"
    },
    "8248": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "8250": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "8251": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "8252": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8254": {
      "op": "NOT"
    },
    "8255": {
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "8256": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8258": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "8259": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "8260": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FF3"
    },
    "8263": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "i",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8264": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8265": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8266": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "8267": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8268": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8270": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8271": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8272": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "8273": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "8274": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "GT",
      "path": "14"
    },
    "8275": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAFC"
    },
    "8278": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8279": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8280": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8282": {
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "8283": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8285": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8286": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "8287": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "8288": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8289": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP7",
      "path": "14"
    },
    "8290": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "8291": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "CALLDATACOPY",
      "path": "14"
    },
    "8292": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8293": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "8294": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "8295": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8296": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8297": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8298": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8299": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "8300": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2071"
    },
    "8303": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8304": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8305": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8306": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8308": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8309": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8313": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8315": {
      "op": "SHL"
    },
    "8316": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8317": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8318": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8320": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "8322": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8323": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "8324": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8325": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x25"
    },
    "8327": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "8329": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8330": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "8331": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8332": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x52657175697265206D617374657220616E64206E6F646520696E2073616D6520"
    },
    "8365": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "8367": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8368": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "8369": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8370": {
      "op": "PUSH5",
      "value": "0x31B430B4B7"
    },
    "8376": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "8378": {
      "op": "SHL"
    },
    "8379": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "8381": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8382": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "8383": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8384": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x84"
    },
    "8386": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8387": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "REVERT",
      "path": "14"
    },
    "8388": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8389": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8394": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8396": {
      "op": "SHL"
    },
    "8397": {
      "op": "SUB"
    },
    "8398": {
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8399": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "8400": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "8401": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "8402": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "8403": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8404": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8405": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8407": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8409": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "8410": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8411": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8412": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8413": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "8414": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8415": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x20F3"
    },
    "8418": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "8419": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8420": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "8422": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "8423": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "8424": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "8425": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8426": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "8428": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8429": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "8430": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8431": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F08"
    },
    "8434": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "i",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8435": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8436": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "8437": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x210F"
    },
    "8440": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "8441": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP8",
      "path": "14"
    },
    "8442": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "8443": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8444": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "8445": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3F"
    },
    "8447": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "NOT",
      "path": "14"
    },
    "8448": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "8449": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "8450": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "8451": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8452": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "8453": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "8454": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "8456": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP7",
      "path": "14"
    },
    "8457": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "8458": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8459": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F08"
    },
    "8462": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "i",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8463": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8464": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8465": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP8",
      "path": "14"
    },
    "8466": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "8467": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8468": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "8469": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "8470": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "8471": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8472": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "8473": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "8474": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "8476": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "8477": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "8478": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8479": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8480": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8481": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP8",
      "path": "14"
    },
    "8482": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8483": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "8484": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "8485": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8486": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8487": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "8488": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "8489": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "8490": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "8491": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "8493": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8494": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8495": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8496": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8497": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "LT",
      "path": "14"
    },
    "8498": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2167"
    },
    "8501": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8502": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "8503": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "8504": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "8505": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "8506": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "8507": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xC0"
    },
    "8509": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "8511": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2164"
    },
    "8514": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "8515": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "8516": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "8518": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8519": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "8521": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SHL",
      "path": "14"
    },
    "8522": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "8523": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "8525": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8526": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "8527": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8528": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "8529": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA0"
    },
    "8531": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "8532": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "8533": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8534": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "8535": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8536": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "8537": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8538": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "8539": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "8540": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "8541": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "8542": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "8543": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8544": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F08"
    },
    "8547": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "i",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8548": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8549": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8550": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8551": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8552": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "8553": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8554": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8555": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8558": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8560": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8562": {
      "op": "SHL"
    },
    "8563": {
      "op": "SUB"
    },
    "8564": {
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "8565": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP10",
      "path": "14"
    },
    "8566": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8567": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "8568": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "8569": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8570": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP9",
      "path": "14"
    },
    "8571": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "8572": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "8573": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8574": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "8575": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP8",
      "path": "14"
    },
    "8576": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "8577": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "8578": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "8579": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8580": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "8581": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "8582": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "8584": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8585": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "8586": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "8587": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8588": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x212E"
    },
    "8591": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8592": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8593": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8594": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8595": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8597": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "8598": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "8599": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SLT",
      "path": "14"
    },
    "8600": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAFC"
    },
    "8603": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8604": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8605": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8606": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "8607": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "8608": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8609": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "8610": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAFC"
    },
    "8613": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8614": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8615": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8616": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8617": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "8618": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8619": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8620": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "8621": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "8622": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "8623": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "GT",
      "path": "14"
    },
    "8624": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x21B5"
    },
    "8627": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8628": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8629": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8630": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x4E487B71"
    },
    "8635": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "8637": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "SHL",
      "path": "14"
    },
    "8638": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "8640": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8641": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x11"
    },
    "8643": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "8645": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8646": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "8648": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "8650": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        783,
        15074
      ],
      "op": "REVERT",
      "path": "14"
    },
    "8651": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        14837,
        15072
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8652": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        14918,
        14928
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA"
    },
    "8654": {
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "8655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8659": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8661": {
      "op": "SHL"
    },
    "8662": {
      "op": "SUB"
    },
    "8663": {
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8664": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8665": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "8666": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8667": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        14918,
        14942
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8668": {
      "branch": 78,
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        14918,
        14942
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "8669": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        14914,
        15014
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x21FE"
    },
    "8672": {
      "branch": 78,
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        14914,
        15014
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8673": {
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "8674": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8676": {
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8677": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        15031,
        15041
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 53,
      "value": "0x8"
    },
    "8679": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8681": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8682": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8684": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8686": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8688": {
      "op": "SHL"
    },
    "8689": {
      "op": "SUB"
    },
    "8690": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8692": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8694": {
      "offset": [
        783,
        15074
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "8695": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "8696": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x10"
    },
    "8698": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        15074
      ],
      "op": "SHR",
      "path": "14"
    },
    "8699": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "8700": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        14837,
        15072
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8701": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "jump": "o",
      "offset": [
        14837,
        15072
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8702": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        14914,
        15014
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8703": {
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8704": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        15074
      ],
      "op": "POP",
      "path": "14"
    },
    "8705": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        14976,
        14990
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 54,
      "value": "0x9"
    },
    "8707": {
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "8708": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "8710": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        15074
      ],
      "op": "SHR",
      "path": "14"
    },
    "8711": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "8712": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8714": {
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8715": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "8717": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8719": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8720": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8722": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8724": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8726": {
      "op": "SHL"
    },
    "8727": {
      "op": "SUB"
    },
    "8728": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8730": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8732": {
      "offset": [
        783,
        15074
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "8733": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "8734": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x10"
    },
    "8736": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        15074
      ],
      "op": "SHR",
      "path": "14"
    },
    "8737": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "8738": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "offset": [
        14958,
        15003
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8739": {
      "fn": "MasterNode.getChainIdFromActiveNode",
      "jump": "o",
      "offset": [
        14958,
        15003
      ],
      "op": "JUMP",
      "path": "14"
    },
    "8740": {
      "fn": "ERC20._transfer",
      "offset": [
        7473,
        8291
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8745": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8747": {
      "op": "SHL"
    },
    "8748": {
      "op": "SUB"
    },
    "8749": {
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8750": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8751": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "8752": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "8753": {
      "fn": "ERC20._transfer",
      "offset": [
        7599,
        7617
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 55
    },
    "8754": {
      "fn": "ERC20._transfer",
      "offset": [
        7599,
        7617
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8755": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2341"
    },
    "8758": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8759": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "8760": {
      "fn": "ERC20._transfer",
      "offset": [
        7677,
        7693
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 56
    },
    "8761": {
      "fn": "ERC20._transfer",
      "offset": [
        7677,
        7693
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8762": {
      "fn": "ERC20._transfer",
      "offset": [
        7677,
        7693
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8763": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x22F0"
    },
    "8766": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8767": {
      "fn": "ERC20._transfer",
      "offset": [
        7615,
        7616
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8769": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8770": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8771": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8772": {
      "fn": "ERC20._transfer",
      "offset": [
        7815,
        7824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "8774": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8776": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8777": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8779": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8780": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "8781": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "8782": {
      "fn": "ERC20._transfer",
      "offset": [
        7848,
        7869
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 57
    },
    "8783": {
      "fn": "ERC20._transfer",
      "offset": [
        7848,
        7869
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8784": {
      "fn": "ERC20._transfer",
      "offset": [
        7848,
        7869
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8785": {
      "fn": "ERC20._transfer",
      "offset": [
        7848,
        7869
      ],
      "op": "LT",
      "path": "0"
    },
    "8786": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x229C"
    },
    "8789": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8790": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8792": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8793": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8794": {
      "fn": "ERC20._transfer",
      "offset": [
        8210,
        8236
      ],
      "op": "PUSH32",
      "path": "0",
      "statement": 58,
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "8827": {
      "offset": [
        783,
        15074
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "8828": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "DUP8",
      "path": "14"
    },
    "8829": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8831": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "8832": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8833": {
      "fn": "ERC20._transfer",
      "offset": [
        7815,
        7824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "8835": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP7",
      "path": "14"
    },
    "8836": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8837": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "8838": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8839": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8840": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "8841": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "8842": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "DUP7",
      "path": "14"
    },
    "8843": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8844": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8845": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "8846": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8847": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8848": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "8849": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "8850": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8851": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "8852": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8854": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8855": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8856": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8857": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8858": {
      "fn": "ERC20._transfer",
      "offset": [
        8210,
        8236
      ],
      "op": "LOG3",
      "path": "0"
    },
    "8859": {
      "fn": "ERC20._transfer",
      "jump": "o",
      "offset": [
        7473,
        8291
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8860": {
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8861": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8863": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8864": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8868": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8870": {
      "op": "SHL"
    },
    "8871": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8872": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8873": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8875": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "8877": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8878": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "8879": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8880": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x26"
    },
    "8882": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "8884": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8885": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "8886": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8887": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "8920": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "8922": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8923": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "8924": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8925": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "8932": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "8934": {
      "op": "SHL"
    },
    "8935": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "8937": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8938": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "8939": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8940": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x84"
    },
    "8942": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8943": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "REVERT",
      "path": "14"
    },
    "8944": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8945": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8947": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8948": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8952": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8954": {
      "op": "SHL"
    },
    "8955": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8956": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8957": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "8959": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "8961": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8962": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "8963": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8964": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x23"
    },
    "8966": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "8968": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "8969": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "8970": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8971": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "9004": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "9006": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9007": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "9008": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9009": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "9013": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "9015": {
      "op": "SHL"
    },
    "9016": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "9018": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9019": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "9020": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9021": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x84"
    },
    "9023": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9024": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "REVERT",
      "path": "14"
    },
    "9025": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9026": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9028": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "9029": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9033": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9035": {
      "op": "SHL"
    },
    "9036": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9037": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9038": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "9040": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "9042": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9043": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "9044": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9045": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x25"
    },
    "9047": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "9049": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9050": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "9051": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9052": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "9085": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "9087": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9088": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "9089": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9090": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "9096": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "9098": {
      "op": "SHL"
    },
    "9099": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "9101": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9102": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "9103": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9104": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x84"
    },
    "9106": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9107": {
      "fn": "ERC20._transfer",
      "offset": [
        783,
        15074
      ],
      "op": "REVERT",
      "path": "14"
    },
    "9108": {
      "fn": "ERC20._mint",
      "offset": [
        8567,
        9102
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9111": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9113": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9115": {
      "op": "SHL"
    },
    "9116": {
      "op": "SUB"
    },
    "9117": {
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "9118": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9119": {
      "fn": "ERC20._mint",
      "offset": [
        8650,
        8671
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 59
    },
    "9120": {
      "fn": "ERC20._mint",
      "offset": [
        8650,
        8671
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9121": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x23F3"
    },
    "9124": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "9125": {
      "fn": "ERC20._mint",
      "offset": [
        8999,
        9036
      ],
      "op": "PUSH32",
      "path": "0",
      "statement": 60,
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "9158": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "9160": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9161": {
      "fn": "ERC20._mint",
      "offset": [
        8778,
        8800
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 61,
      "value": "0x23D6"
    },
    "9164": {
      "fn": "ERC20._mint",
      "offset": [
        8669,
        8670
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9166": {
      "offset": [
        783,
        15074
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "9167": {
      "fn": "ERC20._mint",
      "offset": [
        8778,
        8800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9169": {
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "9170": {
      "fn": "ERC20._mint",
      "offset": [
        8778,
        8800
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21A8"
    },
    "9173": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8778,
        8800
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9174": {
      "fn": "ERC20._mint",
      "offset": [
        8778,
        8800
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9175": {
      "fn": "ERC20._mint",
      "offset": [
        8778,
        8800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9177": {
      "offset": [
        783,
        15074
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "9178": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "9179": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "9180": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9181": {
      "fn": "ERC20._mint",
      "offset": [
        8946,
        8955
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 62,
      "value": "0x2"
    },
    "9183": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9184": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9185": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9187": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15074
      ],
      "op": "DUP5",
      "path": "14"
    },
    "9188": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15074
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "9189": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9190": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9191": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "9192": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "9193": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9194": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15074
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "9195": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9197": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "9198": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9199": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9200": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9201": {
      "fn": "ERC20._mint",
      "offset": [
        8999,
        9036
      ],
      "op": "LOG3",
      "path": "0"
    },
    "9202": {
      "fn": "ERC20._mint",
      "jump": "o",
      "offset": [
        8567,
        9102
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9203": {
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9204": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9206": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "9207": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9211": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9213": {
      "op": "SHL"
    },
    "9214": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9215": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9216": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "9218": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "9220": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9221": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "9222": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9223": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "9225": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "9227": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9228": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "9229": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9230": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "9263": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "9265": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9266": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "9267": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9268": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "9270": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9271": {
      "fn": "ERC20._mint",
      "offset": [
        783,
        15074
      ],
      "op": "REVERT",
      "path": "14"
    },
    "9272": {
      "fn": "ERC20._approve",
      "offset": [
        10504,
        10874
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9277": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9279": {
      "op": "SHL"
    },
    "9280": {
      "op": "SUB"
    },
    "9281": {
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9282": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9283": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "9284": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "9285": {
      "fn": "ERC20._approve",
      "offset": [
        10635,
        10654
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 63
    },
    "9286": {
      "fn": "ERC20._approve",
      "offset": [
        10635,
        10654
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9287": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x24E9"
    },
    "9290": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "9291": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "9292": {
      "fn": "ERC20._approve",
      "offset": [
        10713,
        10734
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 64
    },
    "9293": {
      "fn": "ERC20._approve",
      "offset": [
        10713,
        10734
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9294": {
      "fn": "ERC20._approve",
      "offset": [
        10713,
        10734
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9295": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2499"
    },
    "9298": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "9299": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "9301": {
      "fn": "ERC20._approve",
      "offset": [
        10835,
        10867
      ],
      "op": "PUSH32",
      "path": "0",
      "statement": 65,
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "9334": {
      "offset": [
        783,
        15074
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "9335": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "DUP4",
      "path": "14"
    },
    "9336": {
      "fn": "ERC20._approve",
      "offset": [
        10652,
        10653
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9338": {
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9339": {
      "fn": "ERC20._approve",
      "offset": [
        10784,
        10795
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 66,
      "value": "0x3"
    },
    "9341": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9342": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9343": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9345": {
      "fn": "ERC20._approve",
      "offset": [
        10652,
        10653
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9347": {
      "offset": [
        783,
        15074
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "9348": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "DUP6",
      "path": "14"
    },
    "9349": {
      "fn": "ERC20._approve",
      "offset": [
        10652,
        10653
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9351": {
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9352": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9353": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9354": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "9355": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9357": {
      "fn": "ERC20._approve",
      "offset": [
        10652,
        10653
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9359": {
      "offset": [
        783,
        15074
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "9360": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "9361": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9363": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "9364": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9365": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9366": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9367": {
      "fn": "ERC20._approve",
      "offset": [
        10835,
        10867
      ],
      "op": "LOG3",
      "path": "0"
    },
    "9368": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        10504,
        10874
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9369": {
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9370": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9372": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "9373": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9377": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9379": {
      "op": "SHL"
    },
    "9380": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9381": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9382": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "9384": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "9386": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9387": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "9388": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9389": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x22"
    },
    "9391": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "9393": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9394": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "9395": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9396": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "9429": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "9431": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9432": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "9433": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9434": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "9437": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "9439": {
      "op": "SHL"
    },
    "9440": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "9442": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9443": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "9444": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9445": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x84"
    },
    "9447": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9448": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "REVERT",
      "path": "14"
    },
    "9449": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9450": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9452": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "9453": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9457": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9459": {
      "op": "SHL"
    },
    "9460": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9461": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9462": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "9464": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "9466": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9467": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "9468": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9469": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "9471": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "DUP1",
      "path": "14"
    },
    "9472": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9473": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "9474": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9475": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "9508": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "9510": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9511": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "9512": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9513": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "9518": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9520": {
      "op": "SHL"
    },
    "9521": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "9523": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9524": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "9525": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9526": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x84"
    },
    "9528": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9529": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "REVERT",
      "path": "14"
    },
    "9530": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9531": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "9532": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9537": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9539": {
      "op": "SHL"
    },
    "9540": {
      "op": "SUB"
    },
    "9541": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9542": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "9543": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9544": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "9545": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAFC"
    },
    "9548": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "9549": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "9550": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9551": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "9552": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9553": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "9555": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9556": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "9557": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9558": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "SUB",
      "path": "14"
    },
    "9559": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAFC"
    },
    "9562": {
      "fn": "ERC20._approve",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "9563": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        783,
        15074
      ],
      "op": "JUMP",
      "path": "14"
    },
    "9564": {
      "fn": "Client._argsToBytes",
      "offset": [
        1285,
        1455
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "9565": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9567": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "9568": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9569": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x97A657C9"
    },
    "9574": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "9576": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        15074
      ],
      "op": "SHL",
      "path": "14"
    },
    "9577": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 67,
      "value": "0x20"
    },
    "9579": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "DUP4",
      "path": "7"
    },
    "9580": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "ADD",
      "path": "7"
    },
    "9581": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "9582": {
      "offset": [
        1218,
        1228
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "9583": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x24"
    },
    "9585": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "DUP3",
      "path": "7"
    },
    "9586": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "ADD",
      "path": "7"
    },
    "9587": {
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9588": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x24"
    },
    "9590": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "DUP2",
      "path": "7"
    },
    "9591": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "9592": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "9594": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9595": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "9596": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9597": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9598": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        15074
      ],
      "op": "LT",
      "path": "14"
    },
    "9599": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9601": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9603": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9605": {
      "op": "SHL"
    },
    "9606": {
      "op": "SUB"
    },
    "9607": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9608": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        15074
      ],
      "op": "GT",
      "path": "14"
    },
    "9609": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        15074
      ],
      "op": "OR",
      "path": "14"
    },
    "9610": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F79"
    },
    "9613": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "9614": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9616": {
      "fn": "Client._argsToBytes",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9617": {
      "fn": "Client._argsToBytes",
      "offset": [
        1285,
        1455
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "9618": {
      "fn": "Client._argsToBytes",
      "jump": "o",
      "offset": [
        1285,
        1455
      ],
      "op": "JUMP",
      "path": "7"
    },
    "9619": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        1797,
        1955
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "9620": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        1916,
        1923
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 68,
      "value": "0x0"
    },
    "9622": {
      "offset": [
        783,
        15074
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "9623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9627": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9629": {
      "op": "SHL"
    },
    "9630": {
      "op": "SUB"
    },
    "9631": {
      "offset": [
        783,
        15074
      ],
      "op": "AND",
      "path": "14"
    },
    "9632": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        1902,
        1912
      ],
      "op": "CALLER",
      "path": "9"
    },
    "9633": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        1902,
        1923
      ],
      "op": "SUB",
      "path": "9"
    },
    "9634": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x25A7"
    },
    "9637": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "9638": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "jump": "o",
      "offset": [
        1797,
        1955
      ],
      "op": "JUMP",
      "path": "9"
    },
    "9639": {
      "offset": [
        783,
        15074
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9640": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9642": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "9643": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9647": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9649": {
      "op": "SHL"
    },
    "9650": {
      "offset": [
        783,
        15074
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9651": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9652": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "9654": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "9656": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9657": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "9658": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9659": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x16"
    },
    "9661": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "9663": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9664": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "9665": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9666": {
      "op": "PUSH22",
      "value": "0x27B7363C9031B0B63630B1363290313C9037BBB732B9"
    },
    "9689": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "9691": {
      "op": "SHL"
    },
    "9692": {
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "9694": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9695": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "ADD",
      "path": "14"
    },
    "9696": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9697": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "9699": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9700": {
      "fn": "ConfirmedOwnerWithProposal._validateOwnership",
      "offset": [
        783,
        15074
      ],
      "op": "REVERT",
      "path": "14"
    }
  },
  "sha1": "0c86331d792fc602c91a0d185eff41c78b16ac19",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.19;\n\nimport {IRouterClient} from \"@chainlink/contracts/src/v0.8/ccip/interfaces/IRouterClient.sol\";\nimport {OwnerIsCreator} from \"@chainlink/contracts/src/v0.8/shared/access/OwnerIsCreator.sol\";\nimport {Client} from \"@chainlink/contracts/src/v0.8/ccip/libraries/Client.sol\";\nimport {CCIPReceiver} from \"@chainlink/contracts/src/v0.8/ccip/applications/CCIPReceiver.sol\";\n\nimport {LinkTokenInterface} from \"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol\";\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"./utils_node/UtilsMasterNode.sol\";\n\n// Node interface\nimport \"../interfaces/INode.sol\";\n\n/// @title - A simple messenger contract for transferring/receiving tokens and data across chains.\ncontract MasterNode is CCIPReceiver, OwnerIsCreator, ERC20, UtilsMasterNode {\n    // Custom errors to provide more descriptive revert messages.\n    error NotEnoughBalance(uint256 currentBalance, uint256 calculatedFees); // Used to make sure contract has enough balance to cover the fees.\n    error NothingToWithdraw(); // Used when trying to withdraw Ether but there's nothing to withdraw.\n    error FailedToWithdrawEth(address owner, address target, uint256 value); // Used when the withdrawal of Ether fails.\n    error DestinationNodeNotValid(address nodeAddress); // Used when the destination address has not been allowlisted by the contract owner.\n    error SourceChainNotAllowed(uint64 sourceChainSelector); // Used when the source chain has not been allowlisted by the contract owner.\n    error SenderNotAllowed(address sender); // Used when the sender has not been allowlisted by the contract owner.\n    error InvalidReceiverAddress(); // Used when the receiver address is 0.\n\n    LinkTokenInterface private s_linkToken;\n\n    uint64 public immutable MASTER_CONTRACT_CHAIN_ID;\n\n    struct ValidNodes {\n        bool isValidNode;\n        bool isActiveNode;\n        uint64 chainCCIPid;\n        uint256 lastDataFromAave;\n        uint256 totalUsdcSupply;\n        uint256 totalUsdcBorrow;\n        uint256 supplyRate;\n    }\n\n    mapping(address => ValidNodes) public validNodes;\n\n    bool public allowMoreNodes = true;\n    address public lastActiveNode;\n    address public activeNode;\n    uint256 public lastTimeWarped;\n\n    /// @notice Constructor initializes the contract with the router address.\n    /// @param _router The address of the router contract.\n    /// @param _link The address of the link contract.\n    constructor(\n        address _router,\n        address _link,\n        uint64 _MASTER_CONTRACT_CHAIN_ID\n    ) CCIPReceiver(_router) ERC20(\"WarpYield\", \"aWRP\") {\n        s_linkToken = LinkTokenInterface(_link);\n        MASTER_CONTRACT_CHAIN_ID = _MASTER_CONTRACT_CHAIN_ID;\n    }\n\n    modifier onlyValidNodes(address nodeAddress) {\n        if (!validNodes[nodeAddress].isValidNode) {\n            revert DestinationNodeNotValid(nodeAddress);\n        }\n        _;\n    }\n\n    modifier masterAndNodeInSameChain() {\n        require(\n            validNodes[msg.sender].chainCCIPid == MASTER_CONTRACT_CHAIN_ID,\n            \"Require master and node in same chain\"\n        );\n        _;\n    }\n\n    function stopAddingNodes() external onlyOwner {\n        allowMoreNodes = false;\n    }\n\n    function addValidNode(\n        address nodeAddress,\n        uint64 chainCCIPid,\n        bool isActiveNode\n    ) external onlyOwner {\n        require(allowMoreNodes, \"No more nodes allowed\");\n        validNodes[nodeAddress].isValidNode = true;\n        validNodes[nodeAddress].isActiveNode = isActiveNode;\n        validNodes[nodeAddress].chainCCIPid = chainCCIPid;\n\n        if (isActiveNode) {\n            lastActiveNode = nodeAddress;\n            activeNode = nodeAddress;\n        }\n    }\n\n    /////////////////////////////////////////////////////////////////////////\n    ////////////////////  INCOMING DEPOSIT => MINT aWRP  ///////////////////\n    ////////////////////////  COMMAND == 0  ///////////////////////////////\n    //////////////////////////////////////////////////////////////////////\n\n    function _aWarpTokenMinter(\n        Client.Any2EVMMessage memory _any2EvmMessage\n    ) internal {\n        (, address userAddress, uint256 shares) = abi.decode(\n            _any2EvmMessage.data,\n            (uint8, address, uint256)\n        );\n\n        _mint(userAddress, shares);\n    }\n\n    ///////////////////  DEPOSIT, MASTER AND NODE IN SAME CHAIN  /////////////////\n\n    function aWarpTokenMinterFromSameChain(\n        address userAddress,\n        uint256 shares\n    ) external masterAndNodeInSameChain onlyValidNodes(msg.sender) {\n        _mint(userAddress, shares);\n    }\n\n    /////////////////////////////////////////////////////////////////////////\n    //////////////////////  RESUME PROTOCOL OPERATIONS  ////////////////////\n    ////////////////////////  COMMAND == 1  ///////////////////////////////\n    //////////////////////////////////////////////////////////////////////\n\n    function _resmumeOperations(\n        Client.Any2EVMMessage memory _any2EvmMessage\n    ) internal {\n        validNodes[abi.decode(_any2EvmMessage.sender, (address))]\n            .isActiveNode = true;\n\n        activeNode = abi.decode(_any2EvmMessage.sender, (address));\n    }\n\n    ///////////  RESUME OPERATIONS, MASTER AND NODE IN SAME CHAIN  //////////\n\n    function _resmumeOperationsFromSameChain()\n        external\n        masterAndNodeInSameChain\n        onlyValidNodes(msg.sender)\n    {\n        validNodes[msg.sender].isActiveNode = true;\n        activeNode = msg.sender;\n    }\n\n    /////////////////////////////////////////////////////////////////////////\n    /////////////////////////  DATA AAVE FROM NODE  ////////////////////////\n    ////////////////////////  COMMAND == 2  ///////////////////////////////\n    //////////////////////////////////////////////////////////////////////\n\n    function _nodeAaveFeed(\n        Client.Any2EVMMessage memory _any2EvmMessage\n    ) internal {\n        (\n            ,\n            uint256 totalUsdcSupply,\n            uint256 totalUsdcBorrow,\n            uint256 supplyRate\n        ) = abi.decode(\n                _any2EvmMessage.data,\n                (uint8, uint256, uint256, uint256)\n            );\n\n        validNodes[abi.decode(_any2EvmMessage.sender, (address))]\n            .lastDataFromAave = block.timestamp;\n        validNodes[abi.decode(_any2EvmMessage.sender, (address))]\n            .totalUsdcSupply = totalUsdcSupply;\n        validNodes[abi.decode(_any2EvmMessage.sender, (address))]\n            .totalUsdcBorrow = totalUsdcBorrow;\n        validNodes[abi.decode(_any2EvmMessage.sender, (address))]\n            .supplyRate = supplyRate;\n    }\n\n    ////////////////  DATA AAVE, MASTER AND NODE IN SAME CHAIN  //////////////\n\n    function nodeAaveFeedFromSameChain(\n        uint256 totalUsdcSupply,\n        uint256 totalUsdcBorrow,\n        uint256 supplyRate\n    ) external masterAndNodeInSameChain onlyValidNodes(msg.sender) {\n        validNodes[msg.sender].lastDataFromAave = block.timestamp;\n        validNodes[msg.sender].totalUsdcSupply = totalUsdcSupply;\n        validNodes[msg.sender].totalUsdcBorrow = totalUsdcBorrow;\n        validNodes[msg.sender].supplyRate = supplyRate;\n    }\n\n    //////////////////////////////////////////////////////////////////////////\n    /////////////////////////////////////////////////////////////////////////\n    ////////////////////////  INCOMING MESAGE HANDLER  /////////////////////\n    /////////////////  THIS FUNC IS CALLED BY CHAINLINK  //////////////////\n    //////////////////////////////////////////////////////////////////////\n    /////////////////////////////////////////////////////////////////////\n\n    function _ccipReceive(\n        Client.Any2EVMMessage memory _any2EvmMessage\n    )\n        internal\n        override\n        onlyValidNodes(abi.decode(_any2EvmMessage.sender, (address)))\n    {\n        uint8 command = _internalCommandRouter(_any2EvmMessage);\n        if (command == 0) {\n            _aWarpTokenMinter(_any2EvmMessage);\n        } else if (command == 1) {\n            _resmumeOperations(_any2EvmMessage);\n        } else if (command == 2) {\n            _nodeAaveFeed(_any2EvmMessage);\n        } else {\n            revert(\"invalid command from Node\");\n        }\n    }\n\n    /////////////////////////////////////////////////////////////////////////\n    ////////////////////////////////////////////////////////////////////////\n    ///////////////////////  OUTGOING MESAGES HANDLER  ////////////////////\n    //////////////////////////////////////////////////////////////////////\n    /////////////////////////////////////////////////////////////////////\n\n    function _sendMessage(\n        uint64 _destinationChainSelector,\n        address _receiver,\n        bytes memory _data\n    ) internal onlyValidNodes(_receiver) returns (bytes32 messageId) {\n        // Create an EVM2AnyMessage struct in memory with necessary information for sending a cross-chain message\n        // address(linkToken) means fees are paid in LINK\n        Client.EVM2AnyMessage memory evm2AnyMessage = _buildCCIPMessage(\n            _receiver,\n            _data,\n            address(s_linkToken)\n        );\n\n        // Initialize a router client instance to interact with cross-chain router\n        IRouterClient router = IRouterClient(this.getRouter());\n\n        // Get the fee required to send the CCIP message\n        uint256 fees = router.getFee(_destinationChainSelector, evm2AnyMessage);\n\n        require(\n            s_linkToken.transferFrom(msg.sender, address(this), fees),\n            \"Not provided Link for fees\"\n        );\n\n        if (fees > s_linkToken.balanceOf(address(this)))\n            revert NotEnoughBalance(s_linkToken.balanceOf(address(this)), fees);\n\n        // approve the Router to transfer LINK tokens on contract's behalf. It will spend the fees in LINK\n        s_linkToken.approve(address(router), fees);\n\n        // Send the message through the router and store the returned message ID\n        messageId = router.ccipSend(_destinationChainSelector, evm2AnyMessage);\n\n        // Return the message ID\n        return messageId;\n    }\n\n    /// @notice Construct a CCIP message.\n    /// @dev This function will create an EVM2AnyMessage struct with all the necessary information for programmable tokens transfer.\n    /// @param _receiver The address of the receiver.\n    /// @param _data The bytes data to be sent.\n    /// @param _feeTokenAddress The address of the token used for fees. Set address(0) for native gas.\n    /// @return Client.EVM2AnyMessage Returns an EVM2AnyMessage struct which contains information for sending a CCIP message.\n    function _buildCCIPMessage(\n        address _receiver,\n        bytes memory _data,\n        address _feeTokenAddress\n    ) private pure returns (Client.EVM2AnyMessage memory) {\n        return\n            Client.EVM2AnyMessage({\n                receiver: abi.encode(_receiver), // ABI-encoded receiver address\n                data: _data, // ABI-encoded string\n                tokenAmounts: new Client.EVMTokenAmount[](0), // The amount and type of token being transferred\n                extraArgs: Client._argsToBytes(\n                    // Additional arguments, setting gas limit\n                    Client.EVMExtraArgsV1({gasLimit: 2_000_000})\n                ),\n                // Set the feeToken to a feeTokenAddress, indicating specific asset will be used for fees\n                feeToken: _feeTokenAddress\n            });\n    }\n\n    /// @notice Fallback function to allow the contract to receive Ether.\n    /// @dev This function has no function body, making it a default function for receiving Ether.\n    /// It is automatically called when Ether is sent to the contract without any data.\n    receive() external payable {}\n\n    /////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////  WARP ASSETS  //////////////////////////\n    ///////////////////////////////////////////////////////////////////////\n\n    function warpAssets(\n        uint64 _destinationCCIPid,\n        address _destinationNodeAddress\n    ) external {\n        uint8 commandWarpAssets = 1;\n\n        bytes memory data = abi.encode(\n            commandWarpAssets,\n            _destinationCCIPid,\n            _destinationNodeAddress\n        );\n        validNodes[activeNode].isActiveNode = false;\n\n        if (validNodes[activeNode].chainCCIPid == MASTER_CONTRACT_CHAIN_ID) {\n            INode(activeNode).warpAssetsFromSameChain(\n                _destinationCCIPid,\n                _destinationNodeAddress\n            );\n        } else {\n            _sendMessage(validNodes[activeNode].chainCCIPid, activeNode, data);\n        }\n\n        lastActiveNode = activeNode;\n        activeNode = address(0);\n        lastTimeWarped = block.timestamp;\n    }\n\n    /////////////////////////////////////////////////////////////////////////\n    /////////////////////////////  WITHDRAW  ///////////////////////////////\n    ///////////////////////////////////////////////////////////////////////\n\n    function withdraw(uint256 shares) external {\n        require(validNodes[activeNode].isActiveNode, \"Node is not Active\");\n\n        require(shares <= balanceOf(msg.sender), \"Not enought balance\");\n\n        uint8 commandWitdraw = 0;\n\n        bytes memory data = abi.encode(commandWitdraw, msg.sender, shares);\n\n        _burn(msg.sender, shares);\n\n        if (validNodes[activeNode].chainCCIPid == MASTER_CONTRACT_CHAIN_ID) {\n            INode(activeNode).withdrawFromSameChain(msg.sender, shares);\n        } else {\n            _sendMessage(validNodes[activeNode].chainCCIPid, activeNode, data);\n        }\n    }\n\n    /////////////////////////////////////////////////////////////////////////\n    /////////////////////////////   UTILS   ////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////\n\n    function checkApprovedWarp(\n        address _activeNode,\n        address destinationNode\n    ) public view returns (bool) {\n        //require 24 after last warp\n        return\n            validNodes[_activeNode].isActiveNode == true &&\n            validNodes[_activeNode].lastDataFromAave > 0 &&\n            validNodes[destinationNode].lastDataFromAave > 0 &&\n            validNodes[_activeNode].lastDataFromAave + 3600 > block.timestamp &&\n            validNodes[destinationNode].lastDataFromAave + 3600 >\n            block.timestamp &&\n            validNodes[destinationNode].isValidNode == true &&\n            validNodes[destinationNode].isActiveNode == false &&\n            validNodes[_activeNode].supplyRate > 0 &&\n            validNodes[_activeNode].supplyRate <\n            validNodes[destinationNode].supplyRate;\n    }\n\n    // get ChainId from active node or last active node in case vault is warping, only for frontend, no impact in contract\n    function getChainIdFromActiveNode() external view returns (uint64) {\n        if (activeNode == address(0)) {\n            return validNodes[lastActiveNode].chainCCIPid;\n        }\n\n        return validNodes[activeNode].chainCCIPid;\n    }\n}\n",
  "sourceMap": "783:14291:14:-:0;;;;-1:-1:-1;;783:14291:14;-1:-1:-1;;;;;783:14291:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;783:14291:14;;;;;;:::i;:::-;;;;;-1:-1:-1;;;783:14291:14;;;;;-1:-1:-1;;;;;783:14291:14;;;;542:20:4;538:58;;602:21;;291:10:10;594:22:9;783:14291:14;;-1:-1:-1;783:14291:14;;-1:-1:-1;;;;;;783:14291:14;;;291:10:10;783:14291:14;;;;;;;-1:-1:-1;;291:10:10;783:14291:14;;;;;2042:13:0;783:14291:14;;;;;;;;;;;;;;;;-1:-1:-1;783:14291:14;;;;;;;;;;;;;;-1:-1:-1;783:14291:14;;;;;;;;;;;;;;;-1:-1:-1;;;;783:14291:14;;;;;;;;;;;;;;;;;;;;;2065:17:0;783:14291:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;783:14291:14;;;;;;;;;;;2065:17:0;783:14291:14;;;;;;;;;;;;2666:39;783:14291;;;2666:39;783:14291;;2715:52;783:14291;;;;;;;;602:21:4;783:14291:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;783:14291:14;;;;;2065:17:0;783:14291:14;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;783:14291:14;;;;;;;;;2065:17:0;783:14291:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2065:17:0;783:14291:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;783:14291:14;;;;;;;;;;;;;-1:-1:-1;;;;783:14291:14;;;;;;;;;;;;;;;;-1:-1:-1;;;783:14291:14;;;;;;;;;;;;-1:-1:-1;783:14291:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;783:14291:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;783:14291:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;783:14291:14;;;;;;;;;;;;;;;;;;;;;538:58:4;783:14291:14;;-1:-1:-1;;;571:25:4;;-1:-1:-1;571:25:4;;;783:14291:14;;;571:25:4;783:14291:14;-1:-1:-1;783:14291:14;;;;;;-1:-1:-1;783:14291:14;;;;;-1:-1:-1;783:14291:14;;;;;;;;;-1:-1:-1;;;;;783:14291:14;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;783:14291:14;;;;;;:::o",
  "sourcePath": "contracts/MasterNode.sol",
  "type": "contract"
}