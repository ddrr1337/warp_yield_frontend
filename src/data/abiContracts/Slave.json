{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_router",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_link",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenUSDC",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenAUSDC",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_circleTokenMessengerAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_circleMessageTansmiterAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_POOL_ADDRESS_PROVIDER_ADDRESS",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_POOL_DATA_PROVIDER_ADDRESS",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_MASTER_CONTRACT",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "router",
          "type": "address"
        }
      ],
      "name": "InvalidRouter",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "currentBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "calculatedFees",
          "type": "uint256"
        }
      ],
      "name": "NotEnoughBalance",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "messageId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "uint64",
          "name": "sourceChainSelector",
          "type": "uint64"
        }
      ],
      "name": "MessageReceived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "messageId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "uint64",
          "name": "destinationChainSelector",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "feeToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fees",
          "type": "uint256"
        }
      ],
      "name": "MessageSent",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MASTER_CHAIN",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MASTER_CONTRACT",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "POOL_ADDRESS_PROVIDER_ADDRESS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "POOL_DATA_PROVIDER_ADDRESS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "aUsdcTokenSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "aWrpTotalSupplySlaveView",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "calculateSharesValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "messageId",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "sourceChainSelector",
              "type": "uint64"
            },
            {
              "internalType": "bytes",
              "name": "sender",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Client.EVMTokenAmount[]",
              "name": "destTokenAmounts",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Client.Any2EVMMessage",
          "name": "message",
          "type": "tuple"
        }
      ],
      "name": "ccipReceive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "circleMessageTansmiterAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "circleTokenMessengerAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "attestation",
          "type": "bytes"
        }
      ],
      "name": "claimAssetsFromBridge",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "destinationChainSelector",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "getLinkFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRouter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "getUserNonces",
      "outputs": [
        {
          "internalType": "uint128[]",
          "name": "",
          "type": "uint128[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isNodeActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mainNonceDeposits",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "newNonceAndSupply",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "name": "nonceDataDeposits",
      "outputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sendAaveData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "_nonce",
          "type": "uint128"
        }
      ],
      "name": "sendDepositByNonce",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "messageId",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "sourceChainSelector",
              "type": "uint64"
            },
            {
              "internalType": "bytes",
              "name": "sender",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Client.EVMTokenAmount[]",
              "name": "destTokenAmounts",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Client.Any2EVMMessage",
          "name": "_any2EvmMessage",
          "type": "tuple"
        }
      ],
      "name": "setTotalSupplyAndNonce",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testerBalanceUsdc",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testerSuccess",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testingActivateNode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testingReturnFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenAUSDC",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenUSDC",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "userNoncesDeposits",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "name": "userNoncesWithdraw",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "messageId",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "sourceChainSelector",
              "type": "uint64"
            },
            {
              "internalType": "bytes",
              "name": "sender",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Client.EVMTokenAmount[]",
              "name": "destTokenAmounts",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Client.Any2EVMMessage",
          "name": "_any2EvmMessage",
          "type": "tuple"
        }
      ],
      "name": "warpAssets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "warpIdToDestinationChain",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "circleChainId",
          "type": "uint32"
        },
        {
          "internalType": "bytes32",
          "name": "destinationAddress",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "warpIds",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "messageId",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "sourceChainSelector",
              "type": "uint64"
            },
            {
              "internalType": "bytes",
              "name": "sender",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Client.EVMTokenAmount[]",
              "name": "destTokenAmounts",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Client.Any2EVMMessage",
          "name": "_any2EvmMessage",
          "type": "tuple"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/incae/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.3/contracts/token/ERC20/IERC20.sol",
    "1": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/ccip/applications/CCIPReceiver.sol",
    "10": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/vendor/openzeppelin-solidity/v4.8.3/contracts/utils/introspection/IERC165.sol",
    "11": "contracts/Slave.sol",
    "12": "interfaces/IMessageTransmitter.sol",
    "13": "interfaces/IPool.sol",
    "14": "interfaces/IPoolAddressesProvider.sol",
    "15": "interfaces/IPoolDataProvider.sol",
    "16": "interfaces/ITokenMessenger.sol",
    "2": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol",
    "3": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/ccip/interfaces/IRouterClient.sol",
    "4": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/ccip/libraries/Client.sol",
    "9": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol"
  },
  "ast": {
    "absolutePath": "contracts/Slave.sol",
    "exportedSymbols": {
      "CCIPReceiver": [
        1347
      ],
      "Client": [
        1454
      ],
      "DataTypes": [
        3079
      ],
      "IERC20": [
        1227
      ],
      "IMessageTransmitter": [
        1578
      ],
      "IPool": [
        2217
      ],
      "IPoolAddressesProvider": [
        2727
      ],
      "IPoolDataProvider": [
        2441
      ],
      "IRouterClient": [
        1399
      ],
      "ITokenMessenger": [
        2472
      ],
      "LinkTokenInterface": [
        1565
      ],
      "OwnerIsCreator": [
        1470
      ],
      "Slave": [
        1149
      ]
    },
    "id": 1150,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:11"
      },
      {
        "absolutePath": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/ccip/libraries/Client.sol",
        "file": "@chainlink/contracts/src/v0.8/ccip/libraries/Client.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1150,
        "sourceUnit": 1455,
        "src": "57:79:11",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2,
              "name": "Client",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1454,
              "src": "65:6:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/ccip/applications/CCIPReceiver.sol",
        "file": "@chainlink/contracts/src/v0.8/ccip/applications/CCIPReceiver.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1150,
        "sourceUnit": 1348,
        "src": "137:94:11",
        "symbolAliases": [
          {
            "foreign": {
              "id": 4,
              "name": "CCIPReceiver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1347,
              "src": "145:12:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/ccip/interfaces/IRouterClient.sol",
        "file": "@chainlink/contracts/src/v0.8/ccip/interfaces/IRouterClient.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1150,
        "sourceUnit": 1400,
        "src": "232:94:11",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6,
              "name": "IRouterClient",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1399,
              "src": "240:13:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/shared/access/OwnerIsCreator.sol",
        "file": "@chainlink/contracts/src/v0.8/shared/access/OwnerIsCreator.sol",
        "id": 9,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1150,
        "sourceUnit": 1471,
        "src": "327:94:11",
        "symbolAliases": [
          {
            "foreign": {
              "id": 8,
              "name": "OwnerIsCreator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1470,
              "src": "335:14:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/incae/.brownie/packages/smartcontractkit/ccip@2.9.1-ccip1.4.9-release/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol",
        "file": "@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol",
        "id": 11,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1150,
        "sourceUnit": 1566,
        "src": "423:106:11",
        "symbolAliases": [
          {
            "foreign": {
              "id": 10,
              "name": "LinkTokenInterface",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1565,
              "src": "431:18:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/incae/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.3/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 12,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1150,
        "sourceUnit": 1228,
        "src": "531:56:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/ITokenMessenger.sol",
        "file": "../interfaces/ITokenMessenger.sol",
        "id": 13,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1150,
        "sourceUnit": 2473,
        "src": "588:43:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IMessageTransmitter.sol",
        "file": "../interfaces/IMessageTransmitter.sol",
        "id": 14,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1150,
        "sourceUnit": 1579,
        "src": "632:47:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IPool.sol",
        "file": "../interfaces/IPool.sol",
        "id": 15,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1150,
        "sourceUnit": 2218,
        "src": "680:33:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IPoolDataProvider.sol",
        "file": "../interfaces/IPoolDataProvider.sol",
        "id": 16,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1150,
        "sourceUnit": 2442,
        "src": "714:45:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 17,
              "name": "CCIPReceiver",
              "nameLocations": [
                "779:12:11"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1347,
              "src": "779:12:11"
            },
            "id": 18,
            "nodeType": "InheritanceSpecifier",
            "src": "779:12:11"
          }
        ],
        "canonicalName": "Slave",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1149,
        "linearizedBaseContracts": [
          1149,
          1347,
          2497,
          2485
        ],
        "name": "Slave",
        "nameLocation": "770:5:11",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "eventSelector": "90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15",
            "id": 26,
            "name": "Deposit",
            "nameLocation": "804:7:11",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 25,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "828:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 26,
                  "src": "812:20:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "812:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "842:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 26,
                  "src": "834:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "834:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "858:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 26,
                  "src": "850:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "850:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "811:57:11"
            },
            "src": "798:71:11"
          },
          {
            "anonymous": false,
            "eventSelector": "556d717a59d7ef2969f5a9f2c6f9199f9a4e78cb7704aa4162ee70f7d2b771f1",
            "id": 32,
            "name": "MessageReceived",
            "nameLocation": "948:15:11",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "messageId",
                  "nameLocation": "989:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 32,
                  "src": "973:25:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "973:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sourceChainSelector",
                  "nameLocation": "1056:19:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 32,
                  "src": "1041:34:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1041:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "963:161:11"
            },
            "src": "942:183:11"
          },
          {
            "errorSelector": "8f0f4206",
            "id": 38,
            "name": "NotEnoughBalance",
            "nameLocation": "1136:16:11",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34,
                  "mutability": "mutable",
                  "name": "currentBalance",
                  "nameLocation": "1161:14:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 38,
                  "src": "1153:22:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1153:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36,
                  "mutability": "mutable",
                  "name": "calculatedFees",
                  "nameLocation": "1185:14:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 38,
                  "src": "1177:22:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1177:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1152:48:11"
            },
            "src": "1130:71:11"
          },
          {
            "anonymous": false,
            "eventSelector": "9fb548811cfe022ba6400d8533a80d63fbc228e596f93603959dc47b1886af54",
            "id": 50,
            "name": "MessageSent",
            "nameLocation": "1325:11:11",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "messageId",
                  "nameLocation": "1362:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 50,
                  "src": "1346:25:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1346:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "destinationChainSelector",
                  "nameLocation": "1434:24:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 50,
                  "src": "1419:39:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1419:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "1524:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 50,
                  "src": "1516:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1516:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "feeToken",
                  "nameLocation": "1607:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 50,
                  "src": "1599:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1599:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "fees",
                  "nameLocation": "1677:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 50,
                  "src": "1669:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1669:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1336:398:11"
            },
            "src": "1319:416:11"
          },
          {
            "constant": true,
            "functionSelector": "ca65a4fe",
            "id": 53,
            "mutability": "constant",
            "name": "MASTER_CHAIN",
            "nameLocation": "1764:12:11",
            "nodeType": "VariableDeclaration",
            "scope": 1149,
            "src": "1741:58:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 51,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "1741:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "value": {
              "hexValue": "3136303135323836363031373537383235373533",
              "id": 52,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1779:20:11",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_16015286601757825753_by_1",
                "typeString": "int_const 16015286601757825753"
              },
              "value": "16015286601757825753"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a2a41a92",
            "id": 55,
            "mutability": "immutable",
            "name": "MASTER_CONTRACT",
            "nameLocation": "1863:15:11",
            "nodeType": "VariableDeclaration",
            "scope": 1149,
            "src": "1838:40:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 54,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1838:7:11",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "67062580",
            "id": 57,
            "mutability": "immutable",
            "name": "POOL_ADDRESS_PROVIDER_ADDRESS",
            "nameLocation": "1909:29:11",
            "nodeType": "VariableDeclaration",
            "scope": 1149,
            "src": "1884:54:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 56,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1884:7:11",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "982d1f18",
            "id": 59,
            "mutability": "immutable",
            "name": "POOL_DATA_PROVIDER_ADDRESS",
            "nameLocation": "1969:26:11",
            "nodeType": "VariableDeclaration",
            "scope": 1149,
            "src": "1944:51:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 58,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1944:7:11",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 62,
            "mutability": "mutable",
            "name": "s_router",
            "nameLocation": "2024:8:11",
            "nodeType": "VariableDeclaration",
            "scope": 1149,
            "src": "2002:30:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IRouterClient_$1399",
              "typeString": "contract IRouterClient"
            },
            "typeName": {
              "id": 61,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 60,
                "name": "IRouterClient",
                "nameLocations": [
                  "2002:13:11"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1399,
                "src": "2002:13:11"
              },
              "referencedDeclaration": 1399,
              "src": "2002:13:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IRouterClient_$1399",
                "typeString": "contract IRouterClient"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 65,
            "mutability": "mutable",
            "name": "s_linkToken",
            "nameLocation": "2066:11:11",
            "nodeType": "VariableDeclaration",
            "scope": 1149,
            "src": "2039:38:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LinkTokenInterface_$1565",
              "typeString": "contract LinkTokenInterface"
            },
            "typeName": {
              "id": 64,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 63,
                "name": "LinkTokenInterface",
                "nameLocations": [
                  "2039:18:11"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1565,
                "src": "2039:18:11"
              },
              "referencedDeclaration": 1565,
              "src": "2039:18:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LinkTokenInterface_$1565",
                "typeString": "contract LinkTokenInterface"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "c86d4040",
            "id": 67,
            "mutability": "mutable",
            "name": "tokenUSDC",
            "nameLocation": "2099:9:11",
            "nodeType": "VariableDeclaration",
            "scope": 1149,
            "src": "2084:24:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 66,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2084:7:11",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c3f4a838",
            "id": 69,
            "mutability": "mutable",
            "name": "tokenAUSDC",
            "nameLocation": "2129:10:11",
            "nodeType": "VariableDeclaration",
            "scope": 1149,
            "src": "2114:25:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 68,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2114:7:11",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "97e8b613",
            "id": 71,
            "mutability": "mutable",
            "name": "circleTokenMessengerAddress",
            "nameLocation": "2161:27:11",
            "nodeType": "VariableDeclaration",
            "scope": 1149,
            "src": "2146:42:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 70,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2146:7:11",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3d2e2d61",
            "id": 73,
            "mutability": "mutable",
            "name": "circleMessageTansmiterAddress",
            "nameLocation": "2209:29:11",
            "nodeType": "VariableDeclaration",
            "scope": 1149,
            "src": "2194:44:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 72,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2194:7:11",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Slave.WarpIdToDestinationChain",
            "id": 78,
            "members": [
              {
                "constant": false,
                "id": 75,
                "mutability": "mutable",
                "name": "circleChainId",
                "nameLocation": "2294:13:11",
                "nodeType": "VariableDeclaration",
                "scope": 78,
                "src": "2287:20:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 74,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "2287:6:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 77,
                "mutability": "mutable",
                "name": "destinationAddress",
                "nameLocation": "2325:18:11",
                "nodeType": "VariableDeclaration",
                "scope": 78,
                "src": "2317:26:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 76,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "2317:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "WarpIdToDestinationChain",
            "nameLocation": "2252:24:11",
            "nodeType": "StructDefinition",
            "scope": 1149,
            "src": "2245:105:11",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "cbec3e30",
            "id": 83,
            "mutability": "mutable",
            "name": "warpIdToDestinationChain",
            "nameLocation": "2416:24:11",
            "nodeType": "VariableDeclaration",
            "scope": 1149,
            "src": "2356:84:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_WarpIdToDestinationChain_$78_storage_$",
              "typeString": "mapping(bytes32 => struct Slave.WarpIdToDestinationChain)"
            },
            "typeName": {
              "id": 82,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 79,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2364:7:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "2356:44:11",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_WarpIdToDestinationChain_$78_storage_$",
                "typeString": "mapping(bytes32 => struct Slave.WarpIdToDestinationChain)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 81,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 80,
                  "name": "WarpIdToDestinationChain",
                  "nameLocations": [
                    "2375:24:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 78,
                  "src": "2375:24:11"
                },
                "referencedDeclaration": 78,
                "src": "2375:24:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_WarpIdToDestinationChain_$78_storage_ptr",
                  "typeString": "struct Slave.WarpIdToDestinationChain"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d1451be6",
            "id": 86,
            "mutability": "mutable",
            "name": "warpIds",
            "nameLocation": "2463:7:11",
            "nodeType": "VariableDeclaration",
            "scope": 1149,
            "src": "2446:24:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
              "typeString": "bytes32[]"
            },
            "typeName": {
              "baseType": {
                "id": 84,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2446:7:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "id": 85,
              "nodeType": "ArrayTypeName",
              "src": "2446:9:11",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                "typeString": "bytes32[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1d34b4ff",
            "id": 89,
            "mutability": "mutable",
            "name": "isNodeActive",
            "nameLocation": "2489:12:11",
            "nodeType": "VariableDeclaration",
            "scope": 1149,
            "src": "2477:32:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 87,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2477:4:11",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 88,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2504:5:11",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2b72dc26",
            "id": 91,
            "mutability": "mutable",
            "name": "aUsdcTokenSupply",
            "nameLocation": "2531:16:11",
            "nodeType": "VariableDeclaration",
            "scope": 1149,
            "src": "2516:31:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 90,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2516:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "335d92f3",
            "id": 93,
            "mutability": "mutable",
            "name": "aWrpTotalSupplySlaveView",
            "nameLocation": "2626:24:11",
            "nodeType": "VariableDeclaration",
            "scope": 1149,
            "src": "2611:39:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 92,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2611:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a2feb55a",
            "id": 95,
            "mutability": "mutable",
            "name": "mainNonceDeposits",
            "nameLocation": "2671:17:11",
            "nodeType": "VariableDeclaration",
            "scope": 1149,
            "src": "2656:32:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint128",
              "typeString": "uint128"
            },
            "typeName": {
              "id": 94,
              "name": "uint128",
              "nodeType": "ElementaryTypeName",
              "src": "2656:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint128",
                "typeString": "uint128"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Slave.NonceDataDeposits",
            "id": 100,
            "members": [
              {
                "constant": false,
                "id": 97,
                "mutability": "mutable",
                "name": "userAddress",
                "nameLocation": "2738:11:11",
                "nodeType": "VariableDeclaration",
                "scope": 100,
                "src": "2730:19:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 96,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2730:7:11",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 99,
                "mutability": "mutable",
                "name": "shares",
                "nameLocation": "2767:6:11",
                "nodeType": "VariableDeclaration",
                "scope": 100,
                "src": "2759:14:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 98,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2759:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "NonceDataDeposits",
            "nameLocation": "2702:17:11",
            "nodeType": "StructDefinition",
            "scope": 1149,
            "src": "2695:85:11",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b91da80e",
            "id": 105,
            "mutability": "mutable",
            "name": "nonceDataDeposits",
            "nameLocation": "2831:17:11",
            "nodeType": "VariableDeclaration",
            "scope": 1149,
            "src": "2786:62:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint128_$_t_struct$_NonceDataDeposits_$100_storage_$",
              "typeString": "mapping(uint128 => struct Slave.NonceDataDeposits)"
            },
            "typeName": {
              "id": 104,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 101,
                "name": "uint128",
                "nodeType": "ElementaryTypeName",
                "src": "2794:7:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                }
              },
              "nodeType": "Mapping",
              "src": "2786:37:11",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint128_$_t_struct$_NonceDataDeposits_$100_storage_$",
                "typeString": "mapping(uint128 => struct Slave.NonceDataDeposits)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 103,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 102,
                  "name": "NonceDataDeposits",
                  "nameLocations": [
                    "2805:17:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 100,
                  "src": "2805:17:11"
                },
                "referencedDeclaration": 100,
                "src": "2805:17:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_NonceDataDeposits_$100_storage_ptr",
                  "typeString": "struct Slave.NonceDataDeposits"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7adc6710",
            "id": 110,
            "mutability": "mutable",
            "name": "userNoncesDeposits",
            "nameLocation": "2891:18:11",
            "nodeType": "VariableDeclaration",
            "scope": 1149,
            "src": "2854:55:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint128_$dyn_storage_$",
              "typeString": "mapping(address => uint128[])"
            },
            "typeName": {
              "id": 109,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 106,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2862:7:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2854:29:11",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint128_$dyn_storage_$",
                "typeString": "mapping(address => uint128[])"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "baseType": {
                  "id": 107,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "2873:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "id": 108,
                "nodeType": "ArrayTypeName",
                "src": "2873:9:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint128_$dyn_storage_ptr",
                  "typeString": "uint128[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "60e39095",
            "id": 114,
            "mutability": "mutable",
            "name": "userNoncesWithdraw",
            "nameLocation": "2951:18:11",
            "nodeType": "VariableDeclaration",
            "scope": 1149,
            "src": "2916:53:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint128_$_t_address_$",
              "typeString": "mapping(uint128 => address)"
            },
            "typeName": {
              "id": 113,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 111,
                "name": "uint128",
                "nodeType": "ElementaryTypeName",
                "src": "2924:7:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                }
              },
              "nodeType": "Mapping",
              "src": "2916:27:11",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint128_$_t_address_$",
                "typeString": "mapping(uint128 => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 112,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2935:7:11",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0fdfaa97",
            "id": 117,
            "mutability": "mutable",
            "name": "newNonceAndSupply",
            "nameLocation": "2988:17:11",
            "nodeType": "VariableDeclaration",
            "scope": 1149,
            "src": "2976:36:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 115,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2976:4:11",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "74727565",
              "id": 116,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3008:4:11",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "true"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e48c59d8",
            "id": 119,
            "mutability": "mutable",
            "name": "testerSuccess",
            "nameLocation": "3031:13:11",
            "nodeType": "VariableDeclaration",
            "scope": 1149,
            "src": "3019:25:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 118,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "3019:4:11",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b007661b",
            "id": 121,
            "mutability": "mutable",
            "name": "testerBalanceUsdc",
            "nameLocation": "3065:17:11",
            "nodeType": "VariableDeclaration",
            "scope": 1149,
            "src": "3050:32:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 120,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3050:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 186,
              "nodeType": "Block",
              "src": "4280:488:11",
              "statements": [
                {
                  "expression": {
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 146,
                      "name": "s_router",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62,
                      "src": "4290:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRouterClient_$1399",
                        "typeString": "contract IRouterClient"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 148,
                          "name": "_router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 124,
                          "src": "4315:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 147,
                        "name": "IRouterClient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1399,
                        "src": "4301:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IRouterClient_$1399_$",
                          "typeString": "type(contract IRouterClient)"
                        }
                      },
                      "id": 149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4301:22:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRouterClient_$1399",
                        "typeString": "contract IRouterClient"
                      }
                    },
                    "src": "4290:33:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRouterClient_$1399",
                      "typeString": "contract IRouterClient"
                    }
                  },
                  "id": 151,
                  "nodeType": "ExpressionStatement",
                  "src": "4290:33:11"
                },
                {
                  "expression": {
                    "id": 156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 152,
                      "name": "s_linkToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "4333:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LinkTokenInterface_$1565",
                        "typeString": "contract LinkTokenInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 154,
                          "name": "_link",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 126,
                          "src": "4366:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 153,
                        "name": "LinkTokenInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1565,
                        "src": "4347:18:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LinkTokenInterface_$1565_$",
                          "typeString": "type(contract LinkTokenInterface)"
                        }
                      },
                      "id": 155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4347:25:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LinkTokenInterface_$1565",
                        "typeString": "contract LinkTokenInterface"
                      }
                    },
                    "src": "4333:39:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LinkTokenInterface_$1565",
                      "typeString": "contract LinkTokenInterface"
                    }
                  },
                  "id": 157,
                  "nodeType": "ExpressionStatement",
                  "src": "4333:39:11"
                },
                {
                  "expression": {
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 158,
                      "name": "tokenUSDC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "4383:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 159,
                      "name": "_tokenUSDC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 128,
                      "src": "4395:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4383:22:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 161,
                  "nodeType": "ExpressionStatement",
                  "src": "4383:22:11"
                },
                {
                  "expression": {
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 162,
                      "name": "tokenAUSDC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "4415:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 163,
                      "name": "_tokenAUSDC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 130,
                      "src": "4428:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4415:24:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 165,
                  "nodeType": "ExpressionStatement",
                  "src": "4415:24:11"
                },
                {
                  "expression": {
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 166,
                      "name": "circleTokenMessengerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "4449:27:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 167,
                      "name": "_circleTokenMessengerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 132,
                      "src": "4479:28:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4449:58:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 169,
                  "nodeType": "ExpressionStatement",
                  "src": "4449:58:11"
                },
                {
                  "expression": {
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 170,
                      "name": "circleMessageTansmiterAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "4517:29:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 171,
                      "name": "_circleMessageTansmiterAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "4549:30:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4517:62:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 173,
                  "nodeType": "ExpressionStatement",
                  "src": "4517:62:11"
                },
                {
                  "expression": {
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 174,
                      "name": "POOL_ADDRESS_PROVIDER_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "4589:29:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 175,
                      "name": "_POOL_ADDRESS_PROVIDER_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 136,
                      "src": "4621:30:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4589:62:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 177,
                  "nodeType": "ExpressionStatement",
                  "src": "4589:62:11"
                },
                {
                  "expression": {
                    "id": 180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 178,
                      "name": "MASTER_CONTRACT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "4661:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 179,
                      "name": "_MASTER_CONTRACT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 140,
                      "src": "4679:16:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4661:34:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 181,
                  "nodeType": "ExpressionStatement",
                  "src": "4661:34:11"
                },
                {
                  "expression": {
                    "id": 184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 182,
                      "name": "POOL_DATA_PROVIDER_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
                      "src": "4705:26:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 183,
                      "name": "_POOL_DATA_PROVIDER_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138,
                      "src": "4734:27:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4705:56:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 185,
                  "nodeType": "ExpressionStatement",
                  "src": "4705:56:11"
                }
              ]
            },
            "documentation": {
              "id": 122,
              "nodeType": "StructuredDocumentation",
              "src": "3161:748:11",
              "text": "@notice Constructor initializes the contract with the router address.\n @param _router The address of the router contract (CCIP chainlink router).\n @param _link The address of the LINK token contract.\n @param _tokenUSDC The address of the Circle USDC token contract.\n @param _tokenAUSDC The address of the ausdc provided by aave when deposit is done.\n @param _circleTokenMessengerAddress The address of the Circle token messenger contract.\n @param _POOL_ADDRESS_PROVIDER_ADDRESS The address of the Pool address provider contract (aave).\n @param _POOL_DATA_PROVIDER_ADDRESS The address of the Pool data provider contract (aave).\n @param _MASTER_CONTRACT The address of the master contract."
            },
            "id": 187,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 143,
                    "name": "_router",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 124,
                    "src": "4271:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 144,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 142,
                  "name": "CCIPReceiver",
                  "nameLocations": [
                    "4258:12:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1347,
                  "src": "4258:12:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "4258:21:11"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 124,
                  "mutability": "mutable",
                  "name": "_router",
                  "nameLocation": "3943:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 187,
                  "src": "3935:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3935:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 126,
                  "mutability": "mutable",
                  "name": "_link",
                  "nameLocation": "3968:5:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 187,
                  "src": "3960:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 125,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3960:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 128,
                  "mutability": "mutable",
                  "name": "_tokenUSDC",
                  "nameLocation": "3991:10:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 187,
                  "src": "3983:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 127,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3983:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 130,
                  "mutability": "mutable",
                  "name": "_tokenAUSDC",
                  "nameLocation": "4019:11:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 187,
                  "src": "4011:19:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 129,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4011:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 132,
                  "mutability": "mutable",
                  "name": "_circleTokenMessengerAddress",
                  "nameLocation": "4048:28:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 187,
                  "src": "4040:36:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 131,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4040:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 134,
                  "mutability": "mutable",
                  "name": "_circleMessageTansmiterAddress",
                  "nameLocation": "4094:30:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 187,
                  "src": "4086:38:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 133,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4086:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 136,
                  "mutability": "mutable",
                  "name": "_POOL_ADDRESS_PROVIDER_ADDRESS",
                  "nameLocation": "4142:30:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 187,
                  "src": "4134:38:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 135,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4134:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 138,
                  "mutability": "mutable",
                  "name": "_POOL_DATA_PROVIDER_ADDRESS",
                  "nameLocation": "4190:27:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 187,
                  "src": "4182:35:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 137,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4182:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 140,
                  "mutability": "mutable",
                  "name": "_MASTER_CONTRACT",
                  "nameLocation": "4235:16:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 187,
                  "src": "4227:24:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 139,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4227:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3925:332:11"
            },
            "returnParameters": {
              "id": 145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4280:0:11"
            },
            "scope": 1149,
            "src": "3914:854:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 199,
              "nodeType": "Block",
              "src": "4871:55:11",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 195,
                      "name": "userNoncesDeposits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 110,
                      "src": "4888:18:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint128_$dyn_storage_$",
                        "typeString": "mapping(address => uint128[] storage ref)"
                      }
                    },
                    "id": 197,
                    "indexExpression": {
                      "id": 196,
                      "name": "userAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 189,
                      "src": "4907:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4888:31:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint128_$dyn_storage",
                      "typeString": "uint128[] storage ref"
                    }
                  },
                  "functionReturnParameters": 194,
                  "id": 198,
                  "nodeType": "Return",
                  "src": "4881:38:11"
                }
              ]
            },
            "functionSelector": "fca4df39",
            "id": 200,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserNonces",
            "nameLocation": "4783:13:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 189,
                  "mutability": "mutable",
                  "name": "userAddress",
                  "nameLocation": "4814:11:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 200,
                  "src": "4806:19:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 188,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4806:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4796:35:11"
            },
            "returnParameters": {
              "id": 194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 193,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 200,
                  "src": "4853:16:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                    "typeString": "uint128[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 191,
                      "name": "uint128",
                      "nodeType": "ElementaryTypeName",
                      "src": "4853:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "id": 192,
                    "nodeType": "ArrayTypeName",
                    "src": "4853:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint128_$dyn_storage_ptr",
                      "typeString": "uint128[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4852:18:11"
            },
            "scope": 1149,
            "src": "4774:152:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 221,
              "nodeType": "Block",
              "src": "5049:99:11",
              "statements": [
                {
                  "assignments": [
                    209
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 209,
                      "mutability": "mutable",
                      "name": "command",
                      "nameLocation": "5065:7:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 221,
                      "src": "5059:13:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 208,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "5059:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 218,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 212,
                          "name": "_any2EvmMessage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 203,
                          "src": "5086:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Any2EVMMessage_$1419_memory_ptr",
                            "typeString": "struct Client.Any2EVMMessage memory"
                          }
                        },
                        "id": 213,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5102:4:11",
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1414,
                        "src": "5086:20:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 215,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5109:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": {
                              "id": 214,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "5109:5:11",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 216,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "5108:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        }
                      ],
                      "expression": {
                        "id": 210,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "5075:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 211,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "5079:6:11",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "5075:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5075:41:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5059:57:11"
                },
                {
                  "expression": {
                    "id": 219,
                    "name": "command",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 209,
                    "src": "5134:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 207,
                  "id": 220,
                  "nodeType": "Return",
                  "src": "5127:14:11"
                }
              ]
            },
            "id": 222,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_internalCommandRouter",
            "nameLocation": "4941:22:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 203,
                  "mutability": "mutable",
                  "name": "_any2EvmMessage",
                  "nameLocation": "5002:15:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 222,
                  "src": "4973:44:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Any2EVMMessage_$1419_memory_ptr",
                    "typeString": "struct Client.Any2EVMMessage"
                  },
                  "typeName": {
                    "id": 202,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 201,
                      "name": "Client.Any2EVMMessage",
                      "nameLocations": [
                        "4973:6:11",
                        "4980:14:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1419,
                      "src": "4973:21:11"
                    },
                    "referencedDeclaration": 1419,
                    "src": "4973:21:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Any2EVMMessage_$1419_storage_ptr",
                      "typeString": "struct Client.Any2EVMMessage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4963:60:11"
            },
            "returnParameters": {
              "id": 207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 206,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 222,
                  "src": "5042:5:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 205,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5042:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5041:7:11"
            },
            "scope": 1149,
            "src": "4932:216:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 319,
              "nodeType": "Block",
              "src": "5227:958:11",
              "statements": [
                {
                  "expression": {
                    "id": 230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 228,
                      "name": "isNodeActive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89,
                      "src": "5266:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5281:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "5266:20:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 231,
                  "nodeType": "ExpressionStatement",
                  "src": "5266:20:11"
                },
                {
                  "assignments": [
                    null,
                    233,
                    235,
                    237
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 233,
                      "mutability": "mutable",
                      "name": "newNodeChainId",
                      "nameLocation": "5331:14:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 319,
                      "src": "5324:21:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 232,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5324:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 235,
                      "mutability": "mutable",
                      "name": "newNodeChainIdCCIP",
                      "nameLocation": "5366:18:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 319,
                      "src": "5359:25:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 234,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "5359:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 237,
                      "mutability": "mutable",
                      "name": "newNodeReceiver",
                      "nameLocation": "5406:15:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 319,
                      "src": "5398:23:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 236,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5398:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 252,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 240,
                          "name": "_any2EvmMessage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 225,
                          "src": "5445:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Any2EVMMessage_$1419_memory_ptr",
                            "typeString": "struct Client.Any2EVMMessage memory"
                          }
                        },
                        "id": 241,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5461:4:11",
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1414,
                        "src": "5445:20:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 243,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5468:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": {
                              "id": 242,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "5468:5:11",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 245,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5475:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint32_$",
                              "typeString": "type(uint32)"
                            },
                            "typeName": {
                              "id": 244,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "5475:6:11",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 247,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5483:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint64_$",
                              "typeString": "type(uint64)"
                            },
                            "typeName": {
                              "id": 246,
                              "name": "uint64",
                              "nodeType": "ElementaryTypeName",
                              "src": "5483:6:11",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 249,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5491:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 248,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "5491:7:11",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 250,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "5467:32:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint8_$_$_t_type$_t_uint32_$_$_t_type$_t_uint64_$_$_t_type$_t_bytes32_$_$",
                          "typeString": "tuple(type(uint8),type(uint32),type(uint64),type(bytes32))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint8_$_$_t_type$_t_uint32_$_$_t_type$_t_uint64_$_$_t_type$_t_bytes32_$_$",
                          "typeString": "tuple(type(uint8),type(uint32),type(uint64),type(bytes32))"
                        }
                      ],
                      "expression": {
                        "id": 238,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "5434:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 239,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "5438:6:11",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "5434:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5434:66:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_uint32_$_t_uint64_$_t_bytes32_$",
                      "typeString": "tuple(uint8,uint32,uint64,bytes32)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5296:204:11"
                },
                {
                  "assignments": [
                    254
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 254,
                      "mutability": "mutable",
                      "name": "balanceAusdcNode",
                      "nameLocation": "5519:16:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 319,
                      "src": "5511:24:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 253,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5511:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 264,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 261,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5575:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Slave_$1149",
                              "typeString": "contract Slave"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Slave_$1149",
                              "typeString": "contract Slave"
                            }
                          ],
                          "id": 260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5567:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 259,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5567:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5567:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 256,
                            "name": "tokenAUSDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69,
                            "src": "5545:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 255,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1227,
                          "src": "5538:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1227_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5538:18:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1227",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5557:9:11",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1184,
                      "src": "5538:28:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5538:43:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5511:70:11"
                },
                {
                  "assignments": [
                    266
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 266,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "5599:4:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 319,
                      "src": "5591:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 265,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5591:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 269,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 267,
                      "name": "_getPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 695,
                      "src": "5606:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5606:10:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5591:25:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 274,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 266,
                        "src": "5654:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 275,
                        "name": "balanceAusdcNode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 254,
                        "src": "5660:16:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 271,
                            "name": "tokenAUSDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69,
                            "src": "5634:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 270,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1227,
                          "src": "5627:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1227_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5627:18:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1227",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 273,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5646:7:11",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1214,
                      "src": "5627:26:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5627:50:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 277,
                  "nodeType": "ExpressionStatement",
                  "src": "5627:50:11"
                },
                {
                  "assignments": [
                    279
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 279,
                      "mutability": "mutable",
                      "name": "usdcwithdrawn",
                      "nameLocation": "5696:13:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 319,
                      "src": "5688:21:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 278,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5688:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 282,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 280,
                      "name": "_assetsAllocationWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1028,
                      "src": "5712:25:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () returns (uint256)"
                      }
                    },
                    "id": 281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5712:27:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5688:51:11"
                },
                {
                  "expression": {
                    "id": 285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 283,
                      "name": "testerBalanceUsdc",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 121,
                      "src": "5750:17:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 284,
                      "name": "usdcwithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 279,
                      "src": "5770:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5750:33:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 286,
                  "nodeType": "ExpressionStatement",
                  "src": "5750:33:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 291,
                        "name": "circleTokenMessengerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71,
                        "src": "5820:27:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 292,
                        "name": "usdcwithdrawn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "5849:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 288,
                            "name": "tokenUSDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67,
                            "src": "5801:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 287,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1227,
                          "src": "5794:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1227_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5794:17:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1227",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5812:7:11",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1214,
                      "src": "5794:25:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5794:69:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 294,
                  "nodeType": "ExpressionStatement",
                  "src": "5794:69:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 299,
                        "name": "usdcwithdrawn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "5947:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 300,
                        "name": "newNodeChainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 233,
                        "src": "5974:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 301,
                        "name": "newNodeReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 237,
                        "src": "6002:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 302,
                        "name": "tokenUSDC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "6031:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 296,
                            "name": "circleTokenMessengerAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 71,
                            "src": "5890:27:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 295,
                          "name": "ITokenMessenger",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2472,
                          "src": "5874:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ITokenMessenger_$2472_$",
                            "typeString": "type(contract ITokenMessenger)"
                          }
                        },
                        "id": 297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5874:44:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITokenMessenger_$2472",
                          "typeString": "contract ITokenMessenger"
                        }
                      },
                      "id": 298,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5919:14:11",
                      "memberName": "depositForBurn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2456,
                      "src": "5874:59:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint32_$_t_bytes32_$_t_address_$returns$_t_uint64_$",
                        "typeString": "function (uint256,uint32,bytes32,address) external returns (uint64)"
                      }
                    },
                    "id": 303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5874:176:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 304,
                  "nodeType": "ExpressionStatement",
                  "src": "5874:176:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 306,
                        "name": "newNodeChainIdCCIP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 235,
                        "src": "6094:18:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 313,
                                    "name": "newNodeReceiver",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 237,
                                    "src": "6150:15:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 312,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6142:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 311,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6142:7:11",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 314,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6142:24:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 310,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6134:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint160_$",
                                "typeString": "type(uint160)"
                              },
                              "typeName": {
                                "id": 309,
                                "name": "uint160",
                                "nodeType": "ElementaryTypeName",
                                "src": "6134:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 315,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6134:33:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          ],
                          "id": 308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6126:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 307,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6126:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6126:42:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 305,
                      "name": "_sendSupplyAndNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 347,
                      "src": "6061:19:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint64_$_t_address_$returns$__$",
                        "typeString": "function (uint64,address)"
                      }
                    },
                    "id": 317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6061:117:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 318,
                  "nodeType": "ExpressionStatement",
                  "src": "6061:117:11"
                }
              ]
            },
            "functionSelector": "e346fdfa",
            "id": 320,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "warpAssets",
            "nameLocation": "5163:10:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 226,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 225,
                  "mutability": "mutable",
                  "name": "_any2EvmMessage",
                  "nameLocation": "5203:15:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 320,
                  "src": "5174:44:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Any2EVMMessage_$1419_memory_ptr",
                    "typeString": "struct Client.Any2EVMMessage"
                  },
                  "typeName": {
                    "id": 224,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 223,
                      "name": "Client.Any2EVMMessage",
                      "nameLocations": [
                        "5174:6:11",
                        "5181:14:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1419,
                      "src": "5174:21:11"
                    },
                    "referencedDeclaration": 1419,
                    "src": "5174:21:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Any2EVMMessage_$1419_storage_ptr",
                      "typeString": "struct Client.Any2EVMMessage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5173:46:11"
            },
            "returnParameters": {
              "id": 227,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5227:0:11"
            },
            "scope": 1149,
            "src": "5154:1031:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 346,
              "nodeType": "Block",
              "src": "6300:237:11",
              "statements": [
                {
                  "assignments": [
                    328
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 328,
                      "mutability": "mutable",
                      "name": "command",
                      "nameLocation": "6316:7:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 346,
                      "src": "6310:13:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 327,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "6310:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 330,
                  "initialValue": {
                    "hexValue": "32",
                    "id": 329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6326:1:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6310:17:11"
                },
                {
                  "assignments": [
                    332
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 332,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "6350:4:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 346,
                      "src": "6337:17:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 331,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "6337:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 339,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 335,
                        "name": "command",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 328,
                        "src": "6381:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 336,
                        "name": "aWrpTotalSupplySlaveView",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 93,
                        "src": "6402:24:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 337,
                        "name": "mainNonceDeposits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 95,
                        "src": "6440:17:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 333,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "6357:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 334,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "6361:6:11",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "6357:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6357:110:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6337:130:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 341,
                        "name": "chainCCIPid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 322,
                        "src": "6491:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 342,
                        "name": "nodeAddressReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 324,
                        "src": "6504:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 343,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 332,
                        "src": "6525:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 340,
                      "name": "_sendMessage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 679,
                      "src": "6478:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint64_$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (uint64,address,bytes memory) returns (bytes32)"
                      }
                    },
                    "id": 344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6478:52:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 345,
                  "nodeType": "ExpressionStatement",
                  "src": "6478:52:11"
                }
              ]
            },
            "id": 347,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_sendSupplyAndNonce",
            "nameLocation": "6200:19:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 325,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 322,
                  "mutability": "mutable",
                  "name": "chainCCIPid",
                  "nameLocation": "6236:11:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 347,
                  "src": "6229:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 321,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "6229:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 324,
                  "mutability": "mutable",
                  "name": "nodeAddressReceiver",
                  "nameLocation": "6265:19:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 347,
                  "src": "6257:27:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 323,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6257:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6219:71:11"
            },
            "returnParameters": {
              "id": 326,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6300:0:11"
            },
            "scope": 1149,
            "src": "6191:346:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 386,
              "nodeType": "Block",
              "src": "6642:359:11",
              "statements": [
                {
                  "expression": {
                    "id": 355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 353,
                      "name": "isNodeActive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89,
                      "src": "6679:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6694:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6679:19:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 356,
                  "nodeType": "ExpressionStatement",
                  "src": "6679:19:11"
                },
                {
                  "assignments": [
                    null,
                    358,
                    360
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 358,
                      "mutability": "mutable",
                      "name": "_aWrpTotalSupplySlaveView",
                      "nameLocation": "6720:25:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 386,
                      "src": "6712:33:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 357,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6712:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 360,
                      "mutability": "mutable",
                      "name": "_mainNonceDeposits",
                      "nameLocation": "6755:18:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 386,
                      "src": "6747:26:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 359,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "6747:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 373,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 363,
                          "name": "_any2EvmMessage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 350,
                          "src": "6801:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Any2EVMMessage_$1419_memory_ptr",
                            "typeString": "struct Client.Any2EVMMessage memory"
                          }
                        },
                        "id": 364,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6817:4:11",
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1414,
                        "src": "6801:20:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 366,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6824:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": {
                              "id": 365,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "6824:5:11",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 368,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6831:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 367,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6831:7:11",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 370,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6840:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint128_$",
                              "typeString": "type(uint128)"
                            },
                            "typeName": {
                              "id": 369,
                              "name": "uint128",
                              "nodeType": "ElementaryTypeName",
                              "src": "6840:7:11",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 371,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "6823:25:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint8_$_$_t_type$_t_uint256_$_$_t_type$_t_uint128_$_$",
                          "typeString": "tuple(type(uint8),type(uint256),type(uint128))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint8_$_$_t_type$_t_uint256_$_$_t_type$_t_uint128_$_$",
                          "typeString": "tuple(type(uint8),type(uint256),type(uint128))"
                        }
                      ],
                      "expression": {
                        "id": 361,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "6777:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "6794:6:11",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "6777:23:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6777:72:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_uint256_$_t_uint128_$",
                      "typeString": "tuple(uint8,uint256,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6709:140:11"
                },
                {
                  "expression": {
                    "id": 376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 374,
                      "name": "aWrpTotalSupplySlaveView",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 93,
                      "src": "6860:24:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 375,
                      "name": "_aWrpTotalSupplySlaveView",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 358,
                      "src": "6887:25:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6860:52:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 377,
                  "nodeType": "ExpressionStatement",
                  "src": "6860:52:11"
                },
                {
                  "expression": {
                    "id": 380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 378,
                      "name": "mainNonceDeposits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "6922:17:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 379,
                      "name": "_mainNonceDeposits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 360,
                      "src": "6942:18:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "6922:38:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 381,
                  "nodeType": "ExpressionStatement",
                  "src": "6922:38:11"
                },
                {
                  "expression": {
                    "id": 384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 382,
                      "name": "newNonceAndSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 117,
                      "src": "6970:17:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 383,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6990:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6970:24:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 385,
                  "nodeType": "ExpressionStatement",
                  "src": "6970:24:11"
                }
              ]
            },
            "functionSelector": "bd193173",
            "id": 387,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setTotalSupplyAndNonce",
            "nameLocation": "6552:22:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 351,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 350,
                  "mutability": "mutable",
                  "name": "_any2EvmMessage",
                  "nameLocation": "6613:15:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 387,
                  "src": "6584:44:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Any2EVMMessage_$1419_memory_ptr",
                    "typeString": "struct Client.Any2EVMMessage"
                  },
                  "typeName": {
                    "id": 349,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 348,
                      "name": "Client.Any2EVMMessage",
                      "nameLocations": [
                        "6584:6:11",
                        "6591:14:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1419,
                      "src": "6584:21:11"
                    },
                    "referencedDeclaration": 1419,
                    "src": "6584:21:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Any2EVMMessage_$1419_storage_ptr",
                      "typeString": "struct Client.Any2EVMMessage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6574:60:11"
            },
            "returnParameters": {
              "id": 352,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6642:0:11"
            },
            "scope": 1149,
            "src": "6543:458:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 471,
              "nodeType": "Block",
              "src": "7078:573:11",
              "statements": [
                {
                  "assignments": [
                    null,
                    394,
                    396
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 394,
                      "mutability": "mutable",
                      "name": "transferToUser",
                      "nameLocation": "7099:14:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 471,
                      "src": "7091:22:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 393,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7091:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 396,
                      "mutability": "mutable",
                      "name": "shares",
                      "nameLocation": "7123:6:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 471,
                      "src": "7115:14:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 395,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7115:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 409,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 399,
                          "name": "_any2EvmMessage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 390,
                          "src": "7157:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Any2EVMMessage_$1419_memory_ptr",
                            "typeString": "struct Client.Any2EVMMessage memory"
                          }
                        },
                        "id": 400,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7173:4:11",
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1414,
                        "src": "7157:20:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 402,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7192:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": {
                              "id": 401,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "7192:5:11",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 404,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7199:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 403,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7199:7:11",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 406,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7208:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 405,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7208:7:11",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 407,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "7191:25:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint8_$_$_t_type$_t_address_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(uint8),type(address),type(uint256))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint8_$_$_t_type$_t_address_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(uint8),type(address),type(uint256))"
                        }
                      ],
                      "expression": {
                        "id": 397,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "7133:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 398,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "7137:6:11",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "7133:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7133:93:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_address_payable_$_t_uint256_$",
                      "typeString": "tuple(uint8,address payable,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7088:138:11"
                },
                {
                  "assignments": [
                    411
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 411,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "7245:4:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 471,
                      "src": "7237:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 410,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7237:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 414,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 412,
                      "name": "_getPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 695,
                      "src": "7252:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7252:10:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7237:25:11"
                },
                {
                  "assignments": [
                    416
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 416,
                      "mutability": "mutable",
                      "name": "totalAusdc",
                      "nameLocation": "7280:10:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 471,
                      "src": "7272:18:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 415,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7272:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 426,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 423,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7330:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Slave_$1149",
                              "typeString": "contract Slave"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Slave_$1149",
                              "typeString": "contract Slave"
                            }
                          ],
                          "id": 422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7322:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 421,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7322:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7322:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 418,
                            "name": "tokenAUSDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69,
                            "src": "7300:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 417,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1227,
                          "src": "7293:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1227_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7293:18:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1227",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7312:9:11",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1184,
                      "src": "7293:28:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7293:43:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7272:64:11"
                },
                {
                  "assignments": [
                    429
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 429,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "7379:6:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 471,
                      "src": "7371:14:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 428,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7371:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "TESTING ///",
                  "id": 441,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 434,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 430,
                                  "name": "shares",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 396,
                                  "src": "7390:6:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  },
                                  "id": 433,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "3130",
                                    "id": 431,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7399:2:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "hexValue": "3138",
                                    "id": 432,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7405:2:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_18_by_1",
                                      "typeString": "int_const 18"
                                    },
                                    "value": "18"
                                  },
                                  "src": "7399:8:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  }
                                },
                                "src": "7390:17:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 435,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "7389:19:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 436,
                            "name": "totalAusdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 416,
                            "src": "7411:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7389:32:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 438,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "7388:34:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 439,
                      "name": "aWrpTotalSupplySlaveView",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 93,
                      "src": "7437:24:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7388:73:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7371:90:11"
                },
                {
                  "expression": {
                    "id": 444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 442,
                      "name": "aWrpTotalSupplySlaveView",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 93,
                      "src": "7472:24:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 443,
                      "name": "shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 396,
                      "src": "7500:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7472:34:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 445,
                  "nodeType": "ExpressionStatement",
                  "src": "7472:34:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 450,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 411,
                        "src": "7544:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 451,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 429,
                          "src": "7550:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 452,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7559:2:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 453,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7565:2:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "7559:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "7550:17:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 447,
                            "name": "tokenAUSDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69,
                            "src": "7524:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 446,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1227,
                          "src": "7517:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1227_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7517:18:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1227",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 449,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7536:7:11",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1214,
                      "src": "7517:26:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7517:51:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 457,
                  "nodeType": "ExpressionStatement",
                  "src": "7517:51:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 462,
                        "name": "tokenUSDC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "7599:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 463,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 429,
                          "src": "7610:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 464,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7619:2:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 465,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7625:2:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "7619:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "7610:17:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 468,
                        "name": "transferToUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 394,
                        "src": "7629:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 459,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 411,
                            "src": "7584:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 458,
                          "name": "IPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2217,
                          "src": "7578:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IPool_$2217_$",
                            "typeString": "type(contract IPool)"
                          }
                        },
                        "id": 460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7578:11:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPool_$2217",
                          "typeString": "contract IPool"
                        }
                      },
                      "id": 461,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7590:8:11",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1834,
                      "src": "7578:20:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256,address) external returns (uint256)"
                      }
                    },
                    "id": 469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7578:66:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 470,
                  "nodeType": "ExpressionStatement",
                  "src": "7578:66:11"
                }
              ]
            },
            "functionSelector": "e9644410",
            "id": 472,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "7016:8:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 391,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 390,
                  "mutability": "mutable",
                  "name": "_any2EvmMessage",
                  "nameLocation": "7054:15:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 472,
                  "src": "7025:44:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Any2EVMMessage_$1419_memory_ptr",
                    "typeString": "struct Client.Any2EVMMessage"
                  },
                  "typeName": {
                    "id": 389,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 388,
                      "name": "Client.Any2EVMMessage",
                      "nameLocations": [
                        "7025:6:11",
                        "7032:14:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1419,
                      "src": "7025:21:11"
                    },
                    "referencedDeclaration": 1419,
                    "src": "7025:21:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Any2EVMMessage_$1419_storage_ptr",
                      "typeString": "struct Client.Any2EVMMessage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7024:46:11"
            },
            "returnParameters": {
              "id": 392,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7078:0:11"
            },
            "scope": 1149,
            "src": "7007:644:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 511,
              "nodeType": "Block",
              "src": "7785:216:11",
              "statements": [
                {
                  "assignments": [
                    480
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 480,
                      "mutability": "mutable",
                      "name": "totalAusdc",
                      "nameLocation": "7803:10:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 511,
                      "src": "7795:18:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 479,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7795:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 490,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 487,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7853:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Slave_$1149",
                              "typeString": "contract Slave"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Slave_$1149",
                              "typeString": "contract Slave"
                            }
                          ],
                          "id": 486,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7845:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 485,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7845:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7845:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 482,
                            "name": "tokenAUSDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69,
                            "src": "7823:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 481,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1227,
                          "src": "7816:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1227_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7816:18:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1227",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 484,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7835:9:11",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1184,
                      "src": "7816:28:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7816:43:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7795:64:11"
                },
                {
                  "assignments": [
                    492
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 492,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "7877:6:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 511,
                      "src": "7869:14:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 491,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7869:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 504,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 500,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 497,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 493,
                                  "name": "shares",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 474,
                                  "src": "7888:6:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  },
                                  "id": 496,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "3130",
                                    "id": 494,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7897:2:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "hexValue": "3138",
                                    "id": 495,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7903:2:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_18_by_1",
                                      "typeString": "int_const 18"
                                    },
                                    "value": "18"
                                  },
                                  "src": "7897:8:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  }
                                },
                                "src": "7888:17:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 498,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "7887:19:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 499,
                            "name": "totalAusdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 480,
                            "src": "7909:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7887:32:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 501,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "7886:34:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 502,
                      "name": "aWrpTotalSupplySlaveView",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 93,
                      "src": "7935:24:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7886:73:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7869:90:11"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 505,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 492,
                      "src": "7977:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "id": 508,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7986:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "hexValue": "3138",
                        "id": 507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7992:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      },
                      "src": "7986:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      }
                    },
                    "src": "7977:17:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 478,
                  "id": 510,
                  "nodeType": "Return",
                  "src": "7970:24:11"
                }
              ]
            },
            "functionSelector": "98b3c1f8",
            "id": 512,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateSharesValue",
            "nameLocation": "7702:20:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 475,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 474,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "7740:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 512,
                  "src": "7732:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 473,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7732:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7722:30:11"
            },
            "returnParameters": {
              "id": 478,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 477,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 512,
                  "src": "7776:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 476,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7776:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7775:9:11"
            },
            "scope": 1149,
            "src": "7693:308:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1312
            ],
            "body": {
              "id": 558,
              "nodeType": "Block",
              "src": "8140:834:11",
              "statements": [
                {
                  "assignments": [
                    521
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 521,
                      "mutability": "mutable",
                      "name": "command",
                      "nameLocation": "8427:7:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 558,
                      "src": "8421:13:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 520,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "8421:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 525,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 523,
                        "name": "any2EvmMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 516,
                        "src": "8460:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Any2EVMMessage_$1419_memory_ptr",
                          "typeString": "struct Client.Any2EVMMessage memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Any2EVMMessage_$1419_memory_ptr",
                          "typeString": "struct Client.Any2EVMMessage memory"
                        }
                      ],
                      "id": 522,
                      "name": "_internalCommandRouter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 222,
                      "src": "8437:22:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Any2EVMMessage_$1419_memory_ptr_$returns$_t_uint8_$",
                        "typeString": "function (struct Client.Any2EVMMessage memory) returns (uint8)"
                      }
                    },
                    "id": 524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8437:38:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8421:54:11"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 526,
                      "name": "command",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 521,
                      "src": "8490:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 527,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8501:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8490:12:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 536,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 534,
                        "name": "command",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 521,
                        "src": "8565:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8576:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "8565:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 542,
                          "name": "command",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 521,
                          "src": "8638:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8649:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "8638:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 554,
                        "nodeType": "Block",
                        "src": "8721:62:11",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "696e76616c696420636f6d6d616e642066726f6d204d6173746572",
                                  "id": 551,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8742:29:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_6df3aa59066d22831eb610799a4ade3e09bd5f27f6ec26cfaed9799158935096",
                                    "typeString": "literal_string \"invalid command from Master\""
                                  },
                                  "value": "invalid command from Master"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_6df3aa59066d22831eb610799a4ade3e09bd5f27f6ec26cfaed9799158935096",
                                    "typeString": "literal_string \"invalid command from Master\""
                                  }
                                ],
                                "id": 550,
                                "name": "revert",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -19,
                                  -19
                                ],
                                "referencedDeclaration": -19,
                                "src": "8735:6:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (string memory) pure"
                                }
                              },
                              "id": 552,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8735:37:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 553,
                            "nodeType": "ExpressionStatement",
                            "src": "8735:37:11"
                          }
                        ]
                      },
                      "id": 555,
                      "nodeType": "IfStatement",
                      "src": "8634:149:11",
                      "trueBody": {
                        "id": 549,
                        "nodeType": "Block",
                        "src": "8652:63:11",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 546,
                                  "name": "any2EvmMessage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 516,
                                  "src": "8689:14:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Any2EVMMessage_$1419_memory_ptr",
                                    "typeString": "struct Client.Any2EVMMessage memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_struct$_Any2EVMMessage_$1419_memory_ptr",
                                    "typeString": "struct Client.Any2EVMMessage memory"
                                  }
                                ],
                                "id": 545,
                                "name": "setTotalSupplyAndNonce",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 387,
                                "src": "8666:22:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Any2EVMMessage_$1419_memory_ptr_$returns$__$",
                                  "typeString": "function (struct Client.Any2EVMMessage memory)"
                                }
                              },
                              "id": 547,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8666:38:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 548,
                            "nodeType": "ExpressionStatement",
                            "src": "8666:38:11"
                          }
                        ]
                      }
                    },
                    "id": 556,
                    "nodeType": "IfStatement",
                    "src": "8561:222:11",
                    "trueBody": {
                      "id": 541,
                      "nodeType": "Block",
                      "src": "8579:49:11",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 538,
                                "name": "any2EvmMessage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 516,
                                "src": "8602:14:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Any2EVMMessage_$1419_memory_ptr",
                                  "typeString": "struct Client.Any2EVMMessage memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Any2EVMMessage_$1419_memory_ptr",
                                  "typeString": "struct Client.Any2EVMMessage memory"
                                }
                              ],
                              "id": 537,
                              "name": "withdraw",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 472,
                              "src": "8593:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Any2EVMMessage_$1419_memory_ptr_$returns$__$",
                                "typeString": "function (struct Client.Any2EVMMessage memory)"
                              }
                            },
                            "id": 539,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8593:24:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 540,
                          "nodeType": "ExpressionStatement",
                          "src": "8593:24:11"
                        }
                      ]
                    }
                  },
                  "id": 557,
                  "nodeType": "IfStatement",
                  "src": "8486:297:11",
                  "trueBody": {
                    "id": 533,
                    "nodeType": "Block",
                    "src": "8504:51:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 530,
                              "name": "any2EvmMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 516,
                              "src": "8529:14:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Any2EVMMessage_$1419_memory_ptr",
                                "typeString": "struct Client.Any2EVMMessage memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Any2EVMMessage_$1419_memory_ptr",
                                "typeString": "struct Client.Any2EVMMessage memory"
                              }
                            ],
                            "id": 529,
                            "name": "warpAssets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 320,
                            "src": "8518:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Any2EVMMessage_$1419_memory_ptr_$returns$__$",
                              "typeString": "function (struct Client.Any2EVMMessage memory)"
                            }
                          },
                          "id": 531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8518:26:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 532,
                        "nodeType": "ExpressionStatement",
                        "src": "8518:26:11"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 513,
              "nodeType": "StructuredDocumentation",
              "src": "8007:29:11",
              "text": "handle a received message"
            },
            "id": 559,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_ccipReceive",
            "nameLocation": "8050:12:11",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 518,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8131:8:11"
            },
            "parameters": {
              "id": 517,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 516,
                  "mutability": "mutable",
                  "name": "any2EvmMessage",
                  "nameLocation": "8101:14:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 559,
                  "src": "8072:43:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Any2EVMMessage_$1419_memory_ptr",
                    "typeString": "struct Client.Any2EVMMessage"
                  },
                  "typeName": {
                    "id": 515,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 514,
                      "name": "Client.Any2EVMMessage",
                      "nameLocations": [
                        "8072:6:11",
                        "8079:14:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1419,
                      "src": "8072:21:11"
                    },
                    "referencedDeclaration": 1419,
                    "src": "8072:21:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Any2EVMMessage_$1419_storage_ptr",
                      "typeString": "struct Client.Any2EVMMessage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8062:59:11"
            },
            "returnParameters": {
              "id": 519,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8140:0:11"
            },
            "scope": 1149,
            "src": "8041:933:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 678,
              "nodeType": "Block",
              "src": "9140:1835:11",
              "statements": [
                {
                  "assignments": [
                    574
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 574,
                      "mutability": "mutable",
                      "name": "evm2AnyMessage",
                      "nameLocation": "9179:14:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 678,
                      "src": "9150:43:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EVM2AnyMessage_$1432_memory_ptr",
                        "typeString": "struct Client.EVM2AnyMessage"
                      },
                      "typeName": {
                        "id": 573,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 572,
                          "name": "Client.EVM2AnyMessage",
                          "nameLocations": [
                            "9150:6:11",
                            "9157:14:11"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1432,
                          "src": "9150:21:11"
                        },
                        "referencedDeclaration": 1432,
                        "src": "9150:21:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EVM2AnyMessage_$1432_storage_ptr",
                          "typeString": "struct Client.EVM2AnyMessage"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 575,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9150:43:11"
                },
                {
                  "expression": {
                    "id": 602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 576,
                      "name": "evm2AnyMessage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 574,
                      "src": "9318:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EVM2AnyMessage_$1432_memory_ptr",
                        "typeString": "struct Client.EVM2AnyMessage memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 581,
                              "name": "receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 563,
                              "src": "9392:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 579,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "9381:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 580,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "9385:6:11",
                            "memberName": "encode",
                            "nodeType": "MemberAccess",
                            "src": "9381:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9381:20:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "id": 583,
                          "name": "_data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 565,
                          "src": "9453:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 588,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9536:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 587,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "9508:27:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_EVMTokenAmount_$1406_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (struct Client.EVMTokenAmount memory[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 585,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 584,
                                  "name": "Client.EVMTokenAmount",
                                  "nameLocations": [
                                    "9512:6:11",
                                    "9519:14:11"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 1406,
                                  "src": "9512:21:11"
                                },
                                "referencedDeclaration": 1406,
                                "src": "9512:21:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_EVMTokenAmount_$1406_storage_ptr",
                                  "typeString": "struct Client.EVMTokenAmount"
                                }
                              },
                              "id": 586,
                              "nodeType": "ArrayTypeName",
                              "src": "9512:23:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$1406_storage_$dyn_storage_ptr",
                                "typeString": "struct Client.EVMTokenAmount[]"
                              }
                            }
                          },
                          "id": 589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9508:30:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$1406_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct Client.EVMTokenAmount memory[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "315f3030305f303030",
                                  "id": 594,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9743:9:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000_by_1",
                                    "typeString": "int_const 1000000"
                                  },
                                  "value": "1_000_000"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1000000_by_1",
                                    "typeString": "int_const 1000000"
                                  }
                                ],
                                "expression": {
                                  "id": 592,
                                  "name": "Client",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1454,
                                  "src": "9710:6:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Client_$1454_$",
                                    "typeString": "type(library Client)"
                                  }
                                },
                                "id": 593,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9717:14:11",
                                "memberName": "EVMExtraArgsV1",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1438,
                                "src": "9710:21:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_EVMExtraArgsV1_$1438_storage_ptr_$",
                                  "typeString": "type(struct Client.EVMExtraArgsV1 storage pointer)"
                                }
                              },
                              "id": 595,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [
                                "9733:8:11"
                              ],
                              "names": [
                                "gasLimit"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "9710:44:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_EVMExtraArgsV1_$1438_memory_ptr",
                                "typeString": "struct Client.EVMExtraArgsV1 memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_EVMExtraArgsV1_$1438_memory_ptr",
                                "typeString": "struct Client.EVMExtraArgsV1 memory"
                              }
                            ],
                            "expression": {
                              "id": 590,
                              "name": "Client",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1454,
                              "src": "9614:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Client_$1454_$",
                                "typeString": "type(library Client)"
                              }
                            },
                            "id": 591,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9621:12:11",
                            "memberName": "_argsToBytes",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1453,
                            "src": "9614:19:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_EVMExtraArgsV1_$1438_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (struct Client.EVMExtraArgsV1 memory) pure returns (bytes memory)"
                            }
                          },
                          "id": 596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9614:154:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 599,
                              "name": "s_linkToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65,
                              "src": "9880:11:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LinkTokenInterface_$1565",
                                "typeString": "contract LinkTokenInterface"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_LinkTokenInterface_$1565",
                                "typeString": "contract LinkTokenInterface"
                              }
                            ],
                            "id": 598,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9872:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 597,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9872:7:11",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9872:20:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$1406_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct Client.EVMTokenAmount memory[] memory"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 577,
                          "name": "Client",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1454,
                          "src": "9335:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Client_$1454_$",
                            "typeString": "type(library Client)"
                          }
                        },
                        "id": 578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9342:14:11",
                        "memberName": "EVM2AnyMessage",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1432,
                        "src": "9335:21:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_EVM2AnyMessage_$1432_storage_ptr_$",
                          "typeString": "type(struct Client.EVM2AnyMessage storage pointer)"
                        }
                      },
                      "id": 601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "9371:8:11",
                        "9447:4:11",
                        "9494:12:11",
                        "9603:9:11",
                        "9862:8:11"
                      ],
                      "names": [
                        "receiver",
                        "data",
                        "tokenAmounts",
                        "extraArgs",
                        "feeToken"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "9335:568:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EVM2AnyMessage_$1432_memory_ptr",
                        "typeString": "struct Client.EVM2AnyMessage memory"
                      }
                    },
                    "src": "9318:585:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EVM2AnyMessage_$1432_memory_ptr",
                      "typeString": "struct Client.EVM2AnyMessage memory"
                    }
                  },
                  "id": 603,
                  "nodeType": "ExpressionStatement",
                  "src": "9318:585:11"
                },
                {
                  "assignments": [
                    605
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 605,
                      "mutability": "mutable",
                      "name": "fees",
                      "nameLocation": "9974:4:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 678,
                      "src": "9966:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 604,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9966:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 611,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 608,
                        "name": "destinationChainSelector",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 561,
                        "src": "10010:24:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 609,
                        "name": "evm2AnyMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 574,
                        "src": "10048:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EVM2AnyMessage_$1432_memory_ptr",
                          "typeString": "struct Client.EVM2AnyMessage memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_struct$_EVM2AnyMessage_$1432_memory_ptr",
                          "typeString": "struct Client.EVM2AnyMessage memory"
                        }
                      ],
                      "expression": {
                        "id": 606,
                        "name": "s_router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "9981:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRouterClient_$1399",
                          "typeString": "contract IRouterClient"
                        }
                      },
                      "id": 607,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9990:6:11",
                      "memberName": "getFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1387,
                      "src": "9981:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint64_$_t_struct$_EVM2AnyMessage_$1432_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint64,struct Client.EVM2AnyMessage memory) view external returns (uint256)"
                      }
                    },
                    "id": 610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9981:91:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9966:106:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 615,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "10128:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 616,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10132:6:11",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "10128:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 619,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "10148:4:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Slave_$1149",
                                  "typeString": "contract Slave"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Slave_$1149",
                                  "typeString": "contract Slave"
                                }
                              ],
                              "id": 618,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10140:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 617,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10140:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 620,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10140:13:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 621,
                            "name": "fees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 605,
                            "src": "10155:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 613,
                            "name": "s_linkToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65,
                            "src": "10103:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LinkTokenInterface_$1565",
                              "typeString": "contract LinkTokenInterface"
                            }
                          },
                          "id": 614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10115:12:11",
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1564,
                          "src": "10103:24:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10103:57:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f74204c696e6b207472616e73666572656420666f7220706179696e6720434349502066656573",
                        "id": 623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10174:42:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8da29c0be73468a16eea271a4a15bf6fb2010d24ef1589e23ba7bc9bcdbddccf",
                          "typeString": "literal_string \"Not Link transfered for paying CCIP fees\""
                        },
                        "value": "Not Link transfered for paying CCIP fees"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8da29c0be73468a16eea271a4a15bf6fb2010d24ef1589e23ba7bc9bcdbddccf",
                          "typeString": "literal_string \"Not Link transfered for paying CCIP fees\""
                        }
                      ],
                      "id": 612,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10082:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10082:144:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 625,
                  "nodeType": "ExpressionStatement",
                  "src": "10082:144:11"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 626,
                      "name": "fees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 605,
                      "src": "10241:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 631,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "10278:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Slave_$1149",
                                "typeString": "contract Slave"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Slave_$1149",
                                "typeString": "contract Slave"
                              }
                            ],
                            "id": 630,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10270:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 629,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10270:7:11",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10270:13:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 627,
                          "name": "s_linkToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "10248:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LinkTokenInterface_$1565",
                            "typeString": "contract LinkTokenInterface"
                          }
                        },
                        "id": 628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10260:9:11",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1497,
                        "src": "10248:21:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 633,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10248:36:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10241:43:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 646,
                  "nodeType": "IfStatement",
                  "src": "10237:128:11",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 640,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "10352:4:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Slave_$1149",
                                    "typeString": "contract Slave"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Slave_$1149",
                                    "typeString": "contract Slave"
                                  }
                                ],
                                "id": 639,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10344:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 638,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10344:7:11",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 641,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10344:13:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 636,
                              "name": "s_linkToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65,
                              "src": "10322:11:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LinkTokenInterface_$1565",
                                "typeString": "contract LinkTokenInterface"
                              }
                            },
                            "id": 637,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10334:9:11",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1497,
                            "src": "10322:21:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10322:36:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 643,
                          "name": "fees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 605,
                          "src": "10360:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 635,
                        "name": "NotEnoughBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "10305:16:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                          "typeString": "function (uint256,uint256) pure"
                        }
                      },
                      "id": 644,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10305:60:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 645,
                    "nodeType": "RevertStatement",
                    "src": "10298:67:11"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 652,
                            "name": "s_router",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62,
                            "src": "10511:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IRouterClient_$1399",
                              "typeString": "contract IRouterClient"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IRouterClient_$1399",
                              "typeString": "contract IRouterClient"
                            }
                          ],
                          "id": 651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10503:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 650,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10503:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10503:17:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 654,
                        "name": "fees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 605,
                        "src": "10522:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 647,
                        "name": "s_linkToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65,
                        "src": "10483:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LinkTokenInterface_$1565",
                          "typeString": "contract LinkTokenInterface"
                        }
                      },
                      "id": 649,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10495:7:11",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1490,
                      "src": "10483:19:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10483:44:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 656,
                  "nodeType": "ExpressionStatement",
                  "src": "10483:44:11"
                },
                {
                  "expression": {
                    "id": 663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 657,
                      "name": "messageId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 568,
                      "src": "10619:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 660,
                          "name": "destinationChainSelector",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 561,
                          "src": "10649:24:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        {
                          "id": 661,
                          "name": "evm2AnyMessage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 574,
                          "src": "10675:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_EVM2AnyMessage_$1432_memory_ptr",
                            "typeString": "struct Client.EVM2AnyMessage memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          {
                            "typeIdentifier": "t_struct$_EVM2AnyMessage_$1432_memory_ptr",
                            "typeString": "struct Client.EVM2AnyMessage memory"
                          }
                        ],
                        "expression": {
                          "id": 658,
                          "name": "s_router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62,
                          "src": "10631:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IRouterClient_$1399",
                            "typeString": "contract IRouterClient"
                          }
                        },
                        "id": 659,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10640:8:11",
                        "memberName": "ccipSend",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1398,
                        "src": "10631:17:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint64_$_t_struct$_EVM2AnyMessage_$1432_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (uint64,struct Client.EVM2AnyMessage memory) payable external returns (bytes32)"
                        }
                      },
                      "id": 662,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10631:59:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "10619:71:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 664,
                  "nodeType": "ExpressionStatement",
                  "src": "10619:71:11"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 666,
                        "name": "messageId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 568,
                        "src": "10777:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 667,
                        "name": "destinationChainSelector",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 561,
                        "src": "10800:24:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 668,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 563,
                        "src": "10838:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 671,
                            "name": "s_linkToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65,
                            "src": "10868:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LinkTokenInterface_$1565",
                              "typeString": "contract LinkTokenInterface"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LinkTokenInterface_$1565",
                              "typeString": "contract LinkTokenInterface"
                            }
                          ],
                          "id": 670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10860:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 669,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10860:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10860:20:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 673,
                        "name": "fees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 605,
                        "src": "10894:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 665,
                      "name": "MessageSent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50,
                      "src": "10752:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint64_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,uint64,address,address,uint256)"
                      }
                    },
                    "id": 674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10752:156:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 675,
                  "nodeType": "EmitStatement",
                  "src": "10747:161:11"
                },
                {
                  "expression": {
                    "id": 676,
                    "name": "messageId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 568,
                    "src": "10959:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 569,
                  "id": 677,
                  "nodeType": "Return",
                  "src": "10952:16:11"
                }
              ]
            },
            "id": 679,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_sendMessage",
            "nameLocation": "8989:12:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 561,
                  "mutability": "mutable",
                  "name": "destinationChainSelector",
                  "nameLocation": "9018:24:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 679,
                  "src": "9011:31:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 560,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "9011:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 563,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "9060:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 679,
                  "src": "9052:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 562,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9052:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 565,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "9091:5:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 679,
                  "src": "9078:18:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 564,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9078:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9001:101:11"
            },
            "returnParameters": {
              "id": 569,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 568,
                  "mutability": "mutable",
                  "name": "messageId",
                  "nameLocation": "9129:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 679,
                  "src": "9121:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 567,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9121:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9120:19:11"
            },
            "scope": 1149,
            "src": "8980:1995:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 694,
              "nodeType": "Block",
              "src": "11033:130:11",
              "statements": [
                {
                  "assignments": [
                    685
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 685,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "11051:4:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 694,
                      "src": "11043:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 684,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11043:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 691,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 687,
                            "name": "POOL_ADDRESS_PROVIDER_ADDRESS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57,
                            "src": "11081:29:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 686,
                          "name": "IPoolAddressesProvider",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2727,
                          "src": "11058:22:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IPoolAddressesProvider_$2727_$",
                            "typeString": "type(contract IPoolAddressesProvider)"
                          }
                        },
                        "id": 688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11058:53:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPoolAddressesProvider_$2727",
                          "typeString": "contract IPoolAddressesProvider"
                        }
                      },
                      "id": 689,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11125:7:11",
                      "memberName": "getPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2648,
                      "src": "11058:74:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11058:76:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11043:91:11"
                },
                {
                  "expression": {
                    "id": 692,
                    "name": "pool",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 685,
                    "src": "11152:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 683,
                  "id": 693,
                  "nodeType": "Return",
                  "src": "11145:11:11"
                }
              ]
            },
            "id": 695,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getPool",
            "nameLocation": "10990:8:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 680,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10998:2:11"
            },
            "returnParameters": {
              "id": 683,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 682,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 695,
                  "src": "11024:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 681,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11024:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11023:9:11"
            },
            "scope": 1149,
            "src": "10981:182:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 844,
              "nodeType": "Block",
              "src": "11286:1189:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 705,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "11348:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 706,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11352:6:11",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "11348:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 709,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "11368:4:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Slave_$1149",
                                  "typeString": "contract Slave"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Slave_$1149",
                                  "typeString": "contract Slave"
                                }
                              ],
                              "id": 708,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11360:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 707,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11360:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 710,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11360:13:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 711,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 697,
                            "src": "11375:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 702,
                                "name": "tokenUSDC",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67,
                                "src": "11324:9:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 701,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1227,
                              "src": "11317:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$1227_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 703,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11317:17:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1227",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11335:12:11",
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1226,
                          "src": "11317:30:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11317:65:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f207472616e7366657220616d6f756e74",
                        "id": 713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11396:27:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1d1259a1e8ddf3827cb9faa2b894ba23d9ffcee88f87e034e7aaea602eea29ff",
                          "typeString": "literal_string \"Failed to transfer amount\""
                        },
                        "value": "Failed to transfer amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1d1259a1e8ddf3827cb9faa2b894ba23d9ffcee88f87e034e7aaea602eea29ff",
                          "typeString": "literal_string \"Failed to transfer amount\""
                        }
                      ],
                      "id": 700,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11296:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11296:137:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 715,
                  "nodeType": "ExpressionStatement",
                  "src": "11296:137:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 717,
                        "name": "isNodeActive",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89,
                        "src": "11451:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f6465206973206e6f7420616374697665",
                        "id": 718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11465:20:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8f10dda95a01060367b589884f58383a4ae8851609b8efb1617c7e77a34f8347",
                          "typeString": "literal_string \"Node is not active\""
                        },
                        "value": "Node is not active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8f10dda95a01060367b589884f58383a4ae8851609b8efb1617c7e77a34f8347",
                          "typeString": "literal_string \"Node is not active\""
                        }
                      ],
                      "id": 716,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11443:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11443:43:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 720,
                  "nodeType": "ExpressionStatement",
                  "src": "11443:43:11"
                },
                {
                  "assignments": [
                    722
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 722,
                      "mutability": "mutable",
                      "name": "totalAusdcNode",
                      "nameLocation": "11505:14:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 844,
                      "src": "11497:22:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 721,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11497:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 732,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 729,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "11559:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Slave_$1149",
                              "typeString": "contract Slave"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Slave_$1149",
                              "typeString": "contract Slave"
                            }
                          ],
                          "id": 728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11551:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 727,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11551:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11551:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 724,
                            "name": "tokenAUSDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69,
                            "src": "11529:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 723,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1227,
                          "src": "11522:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1227_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11522:18:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1227",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 726,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11541:9:11",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1184,
                      "src": "11522:28:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11522:43:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11497:68:11"
                },
                {
                  "assignments": [
                    734
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 734,
                      "mutability": "mutable",
                      "name": "shares",
                      "nameLocation": "11584:6:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 844,
                      "src": "11576:14:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 733,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11576:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 735,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11576:14:11"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 736,
                      "name": "aWrpTotalSupplySlaveView",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 93,
                      "src": "11604:24:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 737,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11632:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "11604:29:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 757,
                    "nodeType": "Block",
                    "src": "11692:86:11",
                    "statements": [
                      {
                        "expression": {
                          "id": 755,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 748,
                            "name": "shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 734,
                            "src": "11706:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 754,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 751,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 749,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 697,
                                    "src": "11716:6:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 750,
                                    "name": "aWrpTotalSupplySlaveView",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 93,
                                    "src": "11725:24:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "11716:33:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 752,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "11715:35:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 753,
                              "name": "totalAusdcNode",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 722,
                              "src": "11753:14:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "11715:52:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11706:61:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 756,
                        "nodeType": "ExpressionStatement",
                        "src": "11706:61:11"
                      }
                    ]
                  },
                  "id": 758,
                  "nodeType": "IfStatement",
                  "src": "11600:178:11",
                  "trueBody": {
                    "id": 747,
                    "nodeType": "Block",
                    "src": "11635:51:11",
                    "statements": [
                      {
                        "expression": {
                          "id": 745,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 739,
                            "name": "shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 734,
                            "src": "11649:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 744,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 740,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 697,
                              "src": "11658:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000_by_1",
                                "typeString": "int_const 1000000000000"
                              },
                              "id": 743,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 741,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11667:2:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3132",
                                "id": 742,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11673:2:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_12_by_1",
                                  "typeString": "int_const 12"
                                },
                                "value": "12"
                              },
                              "src": "11667:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000_by_1",
                                "typeString": "int_const 1000000000000"
                              }
                            },
                            "src": "11658:17:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11649:26:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 746,
                        "nodeType": "ExpressionStatement",
                        "src": "11649:26:11"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    760
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 760,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "11800:4:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 844,
                      "src": "11787:17:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 759,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "11787:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 772,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 765,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11837:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11831:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 763,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "11831:5:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11831:8:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "expression": {
                          "id": 767,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "11853:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11857:6:11",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "11853:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 769,
                        "name": "mainNonceDeposits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 95,
                        "src": "11877:17:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 770,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 734,
                        "src": "11908:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 761,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "11807:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "11811:6:11",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "11807:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11807:117:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11787:137:11"
                },
                {
                  "expression": {
                    "id": 779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 773,
                          "name": "nonceDataDeposits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105,
                          "src": "11935:17:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint128_$_t_struct$_NonceDataDeposits_$100_storage_$",
                            "typeString": "mapping(uint128 => struct Slave.NonceDataDeposits storage ref)"
                          }
                        },
                        "id": 775,
                        "indexExpression": {
                          "id": 774,
                          "name": "mainNonceDeposits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 95,
                          "src": "11953:17:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11935:36:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NonceDataDeposits_$100_storage",
                          "typeString": "struct Slave.NonceDataDeposits storage ref"
                        }
                      },
                      "id": 776,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "11972:11:11",
                      "memberName": "userAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 97,
                      "src": "11935:48:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 777,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "11986:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 778,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11990:6:11",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "11986:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11935:61:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 780,
                  "nodeType": "ExpressionStatement",
                  "src": "11935:61:11"
                },
                {
                  "expression": {
                    "id": 786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 781,
                          "name": "nonceDataDeposits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105,
                          "src": "12006:17:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint128_$_t_struct$_NonceDataDeposits_$100_storage_$",
                            "typeString": "mapping(uint128 => struct Slave.NonceDataDeposits storage ref)"
                          }
                        },
                        "id": 783,
                        "indexExpression": {
                          "id": 782,
                          "name": "mainNonceDeposits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 95,
                          "src": "12024:17:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12006:36:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NonceDataDeposits_$100_storage",
                          "typeString": "struct Slave.NonceDataDeposits storage ref"
                        }
                      },
                      "id": 784,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "12043:6:11",
                      "memberName": "shares",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 99,
                      "src": "12006:43:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 785,
                      "name": "shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 734,
                      "src": "12052:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12006:52:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 787,
                  "nodeType": "ExpressionStatement",
                  "src": "12006:52:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 793,
                        "name": "mainNonceDeposits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 95,
                        "src": "12104:17:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 788,
                          "name": "userNoncesDeposits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 110,
                          "src": "12068:18:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint128_$dyn_storage_$",
                            "typeString": "mapping(address => uint128[] storage ref)"
                          }
                        },
                        "id": 791,
                        "indexExpression": {
                          "expression": {
                            "id": 789,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "12087:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12091:6:11",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "12087:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12068:30:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint128_$dyn_storage",
                          "typeString": "uint128[] storage ref"
                        }
                      },
                      "id": 792,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12099:4:11",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "12068:35:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint128_$dyn_storage_ptr_$_t_uint128_$returns$__$attached_to$_t_array$_t_uint128_$dyn_storage_ptr_$",
                        "typeString": "function (uint128[] storage pointer,uint128)"
                      }
                    },
                    "id": 794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12068:54:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 795,
                  "nodeType": "ExpressionStatement",
                  "src": "12068:54:11"
                },
                {
                  "expression": {
                    "id": 798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 796,
                      "name": "aWrpTotalSupplySlaveView",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 93,
                      "src": "12133:24:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 797,
                      "name": "shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 734,
                      "src": "12161:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12133:34:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 799,
                  "nodeType": "ExpressionStatement",
                  "src": "12133:34:11"
                },
                {
                  "expression": {
                    "id": 802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 800,
                      "name": "mainNonceDeposits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "12177:17:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 801,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12198:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "12177:22:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 803,
                  "nodeType": "ExpressionStatement",
                  "src": "12177:22:11"
                },
                {
                  "assignments": [
                    805
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 805,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "12217:4:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 844,
                      "src": "12209:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 804,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "12209:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 808,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 806,
                      "name": "_getPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 695,
                      "src": "12224:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12224:10:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12209:25:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 813,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 805,
                        "src": "12270:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 814,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 697,
                        "src": "12276:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 810,
                            "name": "tokenUSDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67,
                            "src": "12251:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 809,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1227,
                          "src": "12244:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1227_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12244:17:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1227",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 812,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12262:7:11",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1214,
                      "src": "12244:25:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12244:39:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 816,
                  "nodeType": "ExpressionStatement",
                  "src": "12244:39:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 821,
                        "name": "tokenUSDC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "12313:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 822,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 697,
                        "src": "12324:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 825,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "12340:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Slave_$1149",
                              "typeString": "contract Slave"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Slave_$1149",
                              "typeString": "contract Slave"
                            }
                          ],
                          "id": 824,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12332:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 823,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12332:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12332:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12347:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 818,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 805,
                            "src": "12299:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 817,
                          "name": "IPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2217,
                          "src": "12293:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IPool_$2217_$",
                            "typeString": "type(contract IPool)"
                          }
                        },
                        "id": 819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12293:11:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPool_$2217",
                          "typeString": "contract IPool"
                        }
                      },
                      "id": 820,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12305:7:11",
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2216,
                      "src": "12293:19:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint16_$returns$__$",
                        "typeString": "function (address,uint256,address,uint16) external"
                      }
                    },
                    "id": 828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12293:56:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 829,
                  "nodeType": "ExpressionStatement",
                  "src": "12293:56:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 831,
                        "name": "MASTER_CHAIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "12373:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 832,
                        "name": "MASTER_CONTRACT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "12387:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 833,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 760,
                        "src": "12404:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 830,
                      "name": "_sendMessage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 679,
                      "src": "12360:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint64_$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (uint64,address,bytes memory) returns (bytes32)"
                      }
                    },
                    "id": 834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12360:49:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 835,
                  "nodeType": "ExpressionStatement",
                  "src": "12360:49:11"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 837,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "12432:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12436:6:11",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12432:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 839,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 734,
                        "src": "12444:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 840,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "12452:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12458:9:11",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "12452:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 836,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "12424:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12424:44:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 843,
                  "nodeType": "EmitStatement",
                  "src": "12419:49:11"
                }
              ]
            },
            "functionSelector": "b6b55f25",
            "id": 845,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "11253:7:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 698,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 697,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "11269:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 845,
                  "src": "11261:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 696,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11261:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11260:16:11"
            },
            "returnParameters": {
              "id": 699,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11286:0:11"
            },
            "scope": 1149,
            "src": "11244:1231:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 884,
              "nodeType": "Block",
              "src": "12532:371:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 851,
                              "name": "nonceDataDeposits",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 105,
                              "src": "12563:17:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint128_$_t_struct$_NonceDataDeposits_$100_storage_$",
                                "typeString": "mapping(uint128 => struct Slave.NonceDataDeposits storage ref)"
                              }
                            },
                            "id": 853,
                            "indexExpression": {
                              "id": 852,
                              "name": "_nonce",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 847,
                              "src": "12581:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12563:25:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_NonceDataDeposits_$100_storage",
                              "typeString": "struct Slave.NonceDataDeposits storage ref"
                            }
                          },
                          "id": 854,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12589:11:11",
                          "memberName": "userAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 97,
                          "src": "12563:37:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 855,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "12604:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12608:6:11",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "12604:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12563:51:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41646472657373206e6f74206d617463682077697468206e6f6e63652064617461",
                        "id": 858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12628:35:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a42f2729e069d43c398955923a5efc153a8b24307defc14f34b99751fa0c181e",
                          "typeString": "literal_string \"Address not match with nonce data\""
                        },
                        "value": "Address not match with nonce data"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a42f2729e069d43c398955923a5efc153a8b24307defc14f34b99751fa0c181e",
                          "typeString": "literal_string \"Address not match with nonce data\""
                        }
                      ],
                      "id": 850,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12542:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12542:131:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 860,
                  "nodeType": "ExpressionStatement",
                  "src": "12542:131:11"
                },
                {
                  "assignments": [
                    862
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 862,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "12697:4:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 884,
                      "src": "12684:17:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 861,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "12684:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 877,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 867,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12734:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12728:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 865,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "12728:5:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12728:8:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "expression": {
                          "id": 869,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "12750:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12754:6:11",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12750:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 871,
                        "name": "_nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 847,
                        "src": "12774:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 872,
                            "name": "nonceDataDeposits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105,
                            "src": "12794:17:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint128_$_t_struct$_NonceDataDeposits_$100_storage_$",
                              "typeString": "mapping(uint128 => struct Slave.NonceDataDeposits storage ref)"
                            }
                          },
                          "id": 874,
                          "indexExpression": {
                            "id": 873,
                            "name": "_nonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 847,
                            "src": "12812:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12794:25:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NonceDataDeposits_$100_storage",
                            "typeString": "struct Slave.NonceDataDeposits storage ref"
                          }
                        },
                        "id": 875,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12820:6:11",
                        "memberName": "shares",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 99,
                        "src": "12794:32:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 863,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "12704:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 864,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "12708:6:11",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "12704:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12704:132:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12684:152:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 879,
                        "name": "MASTER_CHAIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "12860:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 880,
                        "name": "MASTER_CONTRACT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "12874:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 881,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 862,
                        "src": "12891:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 878,
                      "name": "_sendMessage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 679,
                      "src": "12847:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint64_$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (uint64,address,bytes memory) returns (bytes32)"
                      }
                    },
                    "id": 882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12847:49:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 883,
                  "nodeType": "ExpressionStatement",
                  "src": "12847:49:11"
                }
              ]
            },
            "functionSelector": "28d74cb6",
            "id": 885,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendDepositByNonce",
            "nameLocation": "12490:18:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 848,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 847,
                  "mutability": "mutable",
                  "name": "_nonce",
                  "nameLocation": "12517:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 885,
                  "src": "12509:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 846,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "12509:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12508:16:11"
            },
            "returnParameters": {
              "id": 849,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12532:0:11"
            },
            "scope": 1149,
            "src": "12481:422:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 920,
              "nodeType": "Block",
              "src": "12940:566:11",
              "statements": [
                {
                  "assignments": [
                    null,
                    null,
                    889,
                    null,
                    891,
                    893,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    null,
                    {
                      "constant": false,
                      "id": 889,
                      "mutability": "mutable",
                      "name": "totalUsdcSupply",
                      "nameLocation": "13000:15:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 920,
                      "src": "12992:23:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 888,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12992:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    {
                      "constant": false,
                      "id": 891,
                      "mutability": "mutable",
                      "name": "totalUsdcBorrow",
                      "nameLocation": "13051:15:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 920,
                      "src": "13043:23:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 890,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13043:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 893,
                      "mutability": "mutable",
                      "name": "supplyRate",
                      "nameLocation": "13088:10:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 920,
                      "src": "13080:18:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 892,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13080:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null,
                    null,
                    null,
                    null
                  ],
                  "id": 900,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 898,
                        "name": "tokenUSDC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "13261:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 895,
                            "name": "POOL_DATA_PROVIDER_ADDRESS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59,
                            "src": "13201:26:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 894,
                          "name": "IPoolDataProvider",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2441,
                          "src": "13183:17:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IPoolDataProvider_$2441_$",
                            "typeString": "type(contract IPoolDataProvider)"
                          }
                        },
                        "id": 896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13183:45:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPoolDataProvider_$2441",
                          "typeString": "contract IPoolDataProvider"
                        }
                      },
                      "id": 897,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13229:14:11",
                      "memberName": "getReserveData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2370,
                      "src": "13183:60:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint40_$",
                        "typeString": "function (address) view external returns (uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint40)"
                      }
                    },
                    "id": 899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13183:101:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint40_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint40)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12950:334:11"
                },
                {
                  "assignments": [
                    902
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 902,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "13308:4:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 920,
                      "src": "13295:17:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 901,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "13295:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 913,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 907,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13345:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 906,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13339:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 905,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "13339:5:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13339:8:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 909,
                        "name": "totalUsdcSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 889,
                        "src": "13361:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 910,
                        "name": "totalUsdcBorrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 891,
                        "src": "13390:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 911,
                        "name": "supplyRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 893,
                        "src": "13419:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 903,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "13315:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 904,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "13319:6:11",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "13315:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13315:124:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13295:144:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 915,
                        "name": "MASTER_CHAIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "13463:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 916,
                        "name": "MASTER_CONTRACT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "13477:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 917,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 902,
                        "src": "13494:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 914,
                      "name": "_sendMessage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 679,
                      "src": "13450:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint64_$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (uint64,address,bytes memory) returns (bytes32)"
                      }
                    },
                    "id": 918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13450:49:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 919,
                  "nodeType": "ExpressionStatement",
                  "src": "13450:49:11"
                }
              ]
            },
            "functionSelector": "d8bba68f",
            "id": 921,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendAaveData",
            "nameLocation": "12918:12:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 886,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12930:2:11"
            },
            "returnParameters": {
              "id": 887,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12940:0:11"
            },
            "scope": 1149,
            "src": "12909:597:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 942,
              "nodeType": "Block",
              "src": "13623:293:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 933,
                            "name": "message",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 923,
                            "src": "13737:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          {
                            "id": 934,
                            "name": "attestation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 925,
                            "src": "13762:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            },
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 930,
                                "name": "circleMessageTansmiterAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 73,
                                "src": "13674:29:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 929,
                              "name": "IMessageTransmitter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1578,
                              "src": "13654:19:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IMessageTransmitter_$1578_$",
                                "typeString": "type(contract IMessageTransmitter)"
                              }
                            },
                            "id": 931,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13654:50:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IMessageTransmitter_$1578",
                              "typeString": "contract IMessageTransmitter"
                            }
                          },
                          "id": 932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "13705:14:11",
                          "memberName": "receiveMessage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1577,
                          "src": "13654:65:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (bytes memory,bytes memory) external returns (bool)"
                          }
                        },
                        "id": 935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13654:133:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6661696c65642066726f6d20636972636c652062726964676520494d6573736167655472616e736d69747465722072657475726e65642066616c7365",
                        "id": 936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13801:62:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40060070acd180f720ef0579c2713e8072e6509f86ea4bfce9dfee6db27df7b1",
                          "typeString": "literal_string \"failed from circle bridge IMessageTransmitter returned false\""
                        },
                        "value": "failed from circle bridge IMessageTransmitter returned false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40060070acd180f720ef0579c2713e8072e6509f86ea4bfce9dfee6db27df7b1",
                          "typeString": "literal_string \"failed from circle bridge IMessageTransmitter returned false\""
                        }
                      ],
                      "id": 928,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13633:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13633:240:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 938,
                  "nodeType": "ExpressionStatement",
                  "src": "13633:240:11"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 939,
                      "name": "_assetsAllocationDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 985,
                      "src": "13883:24:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13883:26:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 941,
                  "nodeType": "ExpressionStatement",
                  "src": "13883:26:11"
                }
              ]
            },
            "functionSelector": "7e96b20c",
            "id": 943,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimAssetsFromBridge",
            "nameLocation": "13520:21:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 926,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 923,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "13566:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 943,
                  "src": "13551:22:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 922,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13551:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 925,
                  "mutability": "mutable",
                  "name": "attestation",
                  "nameLocation": "13598:11:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 943,
                  "src": "13583:26:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 924,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13583:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13541:74:11"
            },
            "returnParameters": {
              "id": 927,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13623:0:11"
            },
            "scope": 1149,
            "src": "13511:405:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 984,
              "nodeType": "Block",
              "src": "13967:251:11",
              "statements": [
                {
                  "assignments": [
                    947
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 947,
                      "mutability": "mutable",
                      "name": "blanceUsdcNode",
                      "nameLocation": "13985:14:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 984,
                      "src": "13977:22:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 946,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13977:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 957,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 954,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "14038:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Slave_$1149",
                              "typeString": "contract Slave"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Slave_$1149",
                              "typeString": "contract Slave"
                            }
                          ],
                          "id": 953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14030:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 952,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14030:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14030:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 949,
                            "name": "tokenUSDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67,
                            "src": "14009:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 948,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1227,
                          "src": "14002:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1227_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14002:17:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1227",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 951,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14020:9:11",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1184,
                      "src": "14002:27:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14002:42:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13977:67:11"
                },
                {
                  "assignments": [
                    959
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 959,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "14062:4:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 984,
                      "src": "14054:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 958,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "14054:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 962,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 960,
                      "name": "_getPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 695,
                      "src": "14069:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14069:10:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14054:25:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 967,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 959,
                        "src": "14116:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 968,
                        "name": "blanceUsdcNode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 947,
                        "src": "14122:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 964,
                            "name": "tokenUSDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67,
                            "src": "14097:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 963,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1227,
                          "src": "14090:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1227_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 965,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14090:17:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1227",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 966,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14108:7:11",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1214,
                      "src": "14090:25:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14090:47:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 970,
                  "nodeType": "ExpressionStatement",
                  "src": "14090:47:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 975,
                        "name": "tokenUSDC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "14167:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 976,
                        "name": "blanceUsdcNode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 947,
                        "src": "14178:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 979,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "14202:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Slave_$1149",
                              "typeString": "contract Slave"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Slave_$1149",
                              "typeString": "contract Slave"
                            }
                          ],
                          "id": 978,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14194:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 977,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14194:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 980,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14194:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14209:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 972,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 959,
                            "src": "14153:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 971,
                          "name": "IPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2217,
                          "src": "14147:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IPool_$2217_$",
                            "typeString": "type(contract IPool)"
                          }
                        },
                        "id": 973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14147:11:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPool_$2217",
                          "typeString": "contract IPool"
                        }
                      },
                      "id": 974,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14159:7:11",
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2216,
                      "src": "14147:19:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint16_$returns$__$",
                        "typeString": "function (address,uint256,address,uint16) external"
                      }
                    },
                    "id": 982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14147:64:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 983,
                  "nodeType": "ExpressionStatement",
                  "src": "14147:64:11"
                }
              ]
            },
            "id": 985,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_assetsAllocationDeposit",
            "nameLocation": "13931:24:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 944,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13955:2:11"
            },
            "returnParameters": {
              "id": 945,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13967:0:11"
            },
            "scope": 1149,
            "src": "13922:296:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1027,
              "nodeType": "Block",
              "src": "14288:265:11",
              "statements": [
                {
                  "assignments": [
                    991
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 991,
                      "mutability": "mutable",
                      "name": "balanceAusdcNode",
                      "nameLocation": "14306:16:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1027,
                      "src": "14298:24:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 990,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14298:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1001,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 998,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "14362:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Slave_$1149",
                              "typeString": "contract Slave"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Slave_$1149",
                              "typeString": "contract Slave"
                            }
                          ],
                          "id": 997,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14354:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 996,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14354:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14354:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 993,
                            "name": "tokenAUSDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69,
                            "src": "14332:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 992,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1227,
                          "src": "14325:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1227_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14325:18:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1227",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 995,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14344:9:11",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1184,
                      "src": "14325:28:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14325:43:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14298:70:11"
                },
                {
                  "assignments": [
                    1003
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1003,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "14386:4:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1027,
                      "src": "14378:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1002,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "14378:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1006,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1004,
                      "name": "_getPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 695,
                      "src": "14393:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 1005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14393:10:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14378:25:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1011,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1003,
                        "src": "14441:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1012,
                        "name": "balanceAusdcNode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 991,
                        "src": "14447:16:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1008,
                            "name": "tokenAUSDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69,
                            "src": "14421:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1007,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1227,
                          "src": "14414:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1227_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14414:18:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1227",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1010,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14433:7:11",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1214,
                      "src": "14414:26:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14414:50:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1014,
                  "nodeType": "ExpressionStatement",
                  "src": "14414:50:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1019,
                        "name": "tokenUSDC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "14503:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1020,
                        "name": "balanceAusdcNode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 991,
                        "src": "14514:16:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1023,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "14540:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Slave_$1149",
                              "typeString": "contract Slave"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Slave_$1149",
                              "typeString": "contract Slave"
                            }
                          ],
                          "id": 1022,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14532:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1021,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14532:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14532:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1016,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1003,
                            "src": "14488:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1015,
                          "name": "IPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2217,
                          "src": "14482:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IPool_$2217_$",
                            "typeString": "type(contract IPool)"
                          }
                        },
                        "id": 1017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14482:11:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPool_$2217",
                          "typeString": "contract IPool"
                        }
                      },
                      "id": 1018,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14494:8:11",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1834,
                      "src": "14482:20:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256,address) external returns (uint256)"
                      }
                    },
                    "id": 1025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14482:64:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 989,
                  "id": 1026,
                  "nodeType": "Return",
                  "src": "14475:71:11"
                }
              ]
            },
            "id": 1028,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_assetsAllocationWithdraw",
            "nameLocation": "14233:25:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 986,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14258:2:11"
            },
            "returnParameters": {
              "id": 989,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 988,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1028,
                  "src": "14279:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 987,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14279:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14278:9:11"
            },
            "scope": 1149,
            "src": "14224:329:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1047,
              "nodeType": "Block",
              "src": "14606:117:11",
              "statements": [
                {
                  "assignments": [
                    1032
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1032,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "14629:4:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1047,
                      "src": "14616:17:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1031,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "14616:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1040,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "32",
                            "id": 1037,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14653:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "id": 1036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14647:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 1035,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "14647:5:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14647:8:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "id": 1033,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "14636:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 1034,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "14640:6:11",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "14636:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 1039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14636:20:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14616:40:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1042,
                        "name": "MASTER_CHAIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "14680:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 1043,
                        "name": "MASTER_CONTRACT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "14694:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1044,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1032,
                        "src": "14711:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1041,
                      "name": "_sendMessage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 679,
                      "src": "14667:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint64_$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (uint64,address,bytes memory) returns (bytes32)"
                      }
                    },
                    "id": 1045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14667:49:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1046,
                  "nodeType": "ExpressionStatement",
                  "src": "14667:49:11"
                }
              ]
            },
            "id": 1048,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_resumeWithdrawsNodeActive",
            "nameLocation": "14568:26:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1029,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14594:2:11"
            },
            "returnParameters": {
              "id": 1030,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14606:0:11"
            },
            "scope": 1149,
            "src": "14559:164:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1086,
              "nodeType": "Block",
              "src": "14766:228:11",
              "statements": [
                {
                  "assignments": [
                    1052
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1052,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "14784:7:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1086,
                      "src": "14776:15:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1051,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14776:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1062,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1059,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "14831:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Slave_$1149",
                              "typeString": "contract Slave"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Slave_$1149",
                              "typeString": "contract Slave"
                            }
                          ],
                          "id": 1058,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14823:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1057,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14823:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14823:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1054,
                            "name": "tokenAUSDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69,
                            "src": "14801:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1053,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1227,
                          "src": "14794:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1227_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14794:18:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1227",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1056,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14813:9:11",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1184,
                      "src": "14794:28:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14794:43:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14776:61:11"
                },
                {
                  "assignments": [
                    1064
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1064,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "14856:4:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1086,
                      "src": "14848:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1063,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "14848:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1067,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1065,
                      "name": "_getPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 695,
                      "src": "14863:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 1066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14863:10:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14848:25:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1072,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1064,
                        "src": "14911:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1073,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1052,
                        "src": "14917:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1069,
                            "name": "tokenAUSDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69,
                            "src": "14891:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1068,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1227,
                          "src": "14884:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1227_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1070,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14884:18:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1227",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1071,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14903:7:11",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1214,
                      "src": "14884:26:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14884:41:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1075,
                  "nodeType": "ExpressionStatement",
                  "src": "14884:41:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1080,
                        "name": "tokenUSDC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "14956:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1081,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1052,
                        "src": "14967:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1082,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "14976:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14980:6:11",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "14976:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1077,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1064,
                            "src": "14941:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1076,
                          "name": "IPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2217,
                          "src": "14935:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IPool_$2217_$",
                            "typeString": "type(contract IPool)"
                          }
                        },
                        "id": 1078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14935:11:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPool_$2217",
                          "typeString": "contract IPool"
                        }
                      },
                      "id": 1079,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14947:8:11",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1834,
                      "src": "14935:20:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256,address) external returns (uint256)"
                      }
                    },
                    "id": 1084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14935:52:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1085,
                  "nodeType": "ExpressionStatement",
                  "src": "14935:52:11"
                }
              ]
            },
            "functionSelector": "28d41def",
            "id": 1087,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testingReturnFunds",
            "nameLocation": "14738:18:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1049,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14756:2:11"
            },
            "returnParameters": {
              "id": 1050,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14766:0:11"
            },
            "scope": 1149,
            "src": "14729:265:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1094,
              "nodeType": "Block",
              "src": "15038:36:11",
              "statements": [
                {
                  "expression": {
                    "id": 1092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1090,
                      "name": "isNodeActive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89,
                      "src": "15048:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1091,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15063:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "15048:19:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1093,
                  "nodeType": "ExpressionStatement",
                  "src": "15048:19:11"
                }
              ]
            },
            "functionSelector": "3beded9f",
            "id": 1095,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testingActivateNode",
            "nameLocation": "15009:19:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1088,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15028:2:11"
            },
            "returnParameters": {
              "id": 1089,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15038:0:11"
            },
            "scope": 1149,
            "src": "15000:74:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1147,
              "nodeType": "Block",
              "src": "15232:819:11",
              "statements": [
                {
                  "assignments": [
                    1110
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1110,
                      "mutability": "mutable",
                      "name": "evm2AnyMessage",
                      "nameLocation": "15271:14:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1147,
                      "src": "15242:43:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EVM2AnyMessage_$1432_memory_ptr",
                        "typeString": "struct Client.EVM2AnyMessage"
                      },
                      "typeName": {
                        "id": 1109,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1108,
                          "name": "Client.EVM2AnyMessage",
                          "nameLocations": [
                            "15242:6:11",
                            "15249:14:11"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1432,
                          "src": "15242:21:11"
                        },
                        "referencedDeclaration": 1432,
                        "src": "15242:21:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EVM2AnyMessage_$1432_storage_ptr",
                          "typeString": "struct Client.EVM2AnyMessage"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1136,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1115,
                            "name": "receiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1099,
                            "src": "15345:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1113,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "15334:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "15338:6:11",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "15334:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15334:20:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 1117,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1101,
                        "src": "15406:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15487:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "15459:27:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_EVMTokenAmount_$1406_memory_ptr_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (struct Client.EVMTokenAmount memory[] memory)"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 1119,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1118,
                                "name": "Client.EVMTokenAmount",
                                "nameLocations": [
                                  "15463:6:11",
                                  "15470:14:11"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1406,
                                "src": "15463:21:11"
                              },
                              "referencedDeclaration": 1406,
                              "src": "15463:21:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_EVMTokenAmount_$1406_storage_ptr",
                                "typeString": "struct Client.EVMTokenAmount"
                              }
                            },
                            "id": 1120,
                            "nodeType": "ArrayTypeName",
                            "src": "15463:23:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$1406_storage_$dyn_storage_ptr",
                              "typeString": "struct Client.EVMTokenAmount[]"
                            }
                          }
                        },
                        "id": 1123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15459:30:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$1406_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Client.EVMTokenAmount memory[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "315f3030305f303030",
                                "id": 1128,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "15694:9:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000_by_1",
                                  "typeString": "int_const 1000000"
                                },
                                "value": "1_000_000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1000000_by_1",
                                  "typeString": "int_const 1000000"
                                }
                              ],
                              "expression": {
                                "id": 1126,
                                "name": "Client",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1454,
                                "src": "15661:6:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Client_$1454_$",
                                  "typeString": "type(library Client)"
                                }
                              },
                              "id": 1127,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15668:14:11",
                              "memberName": "EVMExtraArgsV1",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1438,
                              "src": "15661:21:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_EVMExtraArgsV1_$1438_storage_ptr_$",
                                "typeString": "type(struct Client.EVMExtraArgsV1 storage pointer)"
                              }
                            },
                            "id": 1129,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [
                              "15684:8:11"
                            ],
                            "names": [
                              "gasLimit"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "15661:44:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_EVMExtraArgsV1_$1438_memory_ptr",
                              "typeString": "struct Client.EVMExtraArgsV1 memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_EVMExtraArgsV1_$1438_memory_ptr",
                              "typeString": "struct Client.EVMExtraArgsV1 memory"
                            }
                          ],
                          "expression": {
                            "id": 1124,
                            "name": "Client",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1454,
                            "src": "15565:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Client_$1454_$",
                              "typeString": "type(library Client)"
                            }
                          },
                          "id": 1125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15572:12:11",
                          "memberName": "_argsToBytes",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1453,
                          "src": "15565:19:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_EVMExtraArgsV1_$1438_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (struct Client.EVMExtraArgsV1 memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 1130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15565:154:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1133,
                            "name": "s_linkToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65,
                            "src": "15831:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LinkTokenInterface_$1565",
                              "typeString": "contract LinkTokenInterface"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LinkTokenInterface_$1565",
                              "typeString": "contract LinkTokenInterface"
                            }
                          ],
                          "id": 1132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15823:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1131,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15823:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15823:20:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_EVMTokenAmount_$1406_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Client.EVMTokenAmount memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1111,
                        "name": "Client",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1454,
                        "src": "15288:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Client_$1454_$",
                          "typeString": "type(library Client)"
                        }
                      },
                      "id": 1112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15295:14:11",
                      "memberName": "EVM2AnyMessage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1432,
                      "src": "15288:21:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_EVM2AnyMessage_$1432_storage_ptr_$",
                        "typeString": "type(struct Client.EVM2AnyMessage storage pointer)"
                      }
                    },
                    "id": 1135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "15324:8:11",
                      "15400:4:11",
                      "15445:12:11",
                      "15554:9:11",
                      "15813:8:11"
                    ],
                    "names": [
                      "receiver",
                      "data",
                      "tokenAmounts",
                      "extraArgs",
                      "feeToken"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "15288:566:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EVM2AnyMessage_$1432_memory_ptr",
                      "typeString": "struct Client.EVM2AnyMessage memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15242:612:11"
                },
                {
                  "assignments": [
                    1138
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1138,
                      "mutability": "mutable",
                      "name": "fees",
                      "nameLocation": "15925:4:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1147,
                      "src": "15917:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1137,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15917:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1144,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1141,
                        "name": "destinationChainSelector",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1097,
                        "src": "15961:24:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 1142,
                        "name": "evm2AnyMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1110,
                        "src": "15999:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EVM2AnyMessage_$1432_memory_ptr",
                          "typeString": "struct Client.EVM2AnyMessage memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_struct$_EVM2AnyMessage_$1432_memory_ptr",
                          "typeString": "struct Client.EVM2AnyMessage memory"
                        }
                      ],
                      "expression": {
                        "id": 1139,
                        "name": "s_router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "15932:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRouterClient_$1399",
                          "typeString": "contract IRouterClient"
                        }
                      },
                      "id": 1140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15941:6:11",
                      "memberName": "getFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1387,
                      "src": "15932:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint64_$_t_struct$_EVM2AnyMessage_$1432_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint64,struct Client.EVM2AnyMessage memory) view external returns (uint256)"
                      }
                    },
                    "id": 1143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15932:91:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15917:106:11"
                },
                {
                  "expression": {
                    "id": 1145,
                    "name": "fees",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1138,
                    "src": "16040:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1105,
                  "id": 1146,
                  "nodeType": "Return",
                  "src": "16033:11:11"
                }
              ]
            },
            "functionSelector": "8fb41ef5",
            "id": 1148,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLinkFees",
            "nameLocation": "15089:11:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1097,
                  "mutability": "mutable",
                  "name": "destinationChainSelector",
                  "nameLocation": "15117:24:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1148,
                  "src": "15110:31:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 1096,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "15110:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1099,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "15159:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1148,
                  "src": "15151:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1098,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15151:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1101,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "15190:5:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1148,
                  "src": "15177:18:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1100,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "15177:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15100:101:11"
            },
            "returnParameters": {
              "id": 1105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1104,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1148,
                  "src": "15223:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1103,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15223:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15222:9:11"
            },
            "scope": 1149,
            "src": "15080:971:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1150,
        "src": "761:15292:11",
        "usedErrors": [
          38,
          1328
        ]
      }
    ],
    "src": "32:16022:11"
  },
  "bytecode": "6101006040526008805460ff19908116909155600f805490911660011790553480156200002b57600080fd5b5060405162002c3338038062002c338339810160408190526200004e9162000125565b886001600160a01b0381166200007e576040516335fdcccd60e21b81526000600482015260240160405180910390fd5b6001600160a01b03908116608052600080546001600160a01b03199081169b83169b909b179055600180548b1699821699909917909855600280548a16978916979097179096556003805489169588169590951790945560048054881693871693909317909255600580549096169085161790945592821660c052811660a0521660e052620001e0565b80516001600160a01b03811681146200012057600080fd5b919050565b60008060008060008060008060006101208a8c0312156200014557600080fd5b620001508a62000108565b98506200016060208b0162000108565b97506200017060408b0162000108565b96506200018060608b0162000108565b95506200019060808b0162000108565b9450620001a060a08b0162000108565b9350620001b060c08b0162000108565b9250620001c060e08b0162000108565b9150620001d16101008b0162000108565b90509295985092959850929598565b60805160a05160c05160e0516129ef620002446000396000818161039e01526110e901526000818161030001526116f20152600081816103d80152818161083b01528181610fcb01526111b401526000818161041801526109b001526129ef6000f3fe608060405234801561001057600080fd5b50600436106102115760003560e01c806398b3c1f811610125578063c86d4040116100ad578063d8bba68f1161007c578063d8bba68f14610560578063e346fdfa14610568578063e48c59d81461057b578063e96444101461058d578063fca4df39146105a057600080fd5b8063c86d4040146104c7578063ca65a4fe146104da578063cbec3e3014610501578063d1451be61461054d57600080fd5b8063b0f479a1116100f4578063b0f479a114610416578063b6b55f251461043c578063b91da80e1461044f578063bd193173146104a1578063c3f4a838146104b457600080fd5b806398b3c1f8146103c0578063a2a41a92146103d3578063a2feb55a146103fa578063b007661b1461040d57600080fd5b80633d2e2d61116101a85780637e96b20c116101775780637e96b20c1461034d57806385572ffb146103605780638fb41ef51461037357806397e8b61314610386578063982d1f181461039957600080fd5b80633d2e2d61146102a757806360e39095146102d257806367062580146102fb5780637adc67101461032257600080fd5b806328d74cb6116101e457806328d74cb6146102625780632b72dc2614610275578063335d92f31461028c5780633beded9f1461029557600080fd5b806301ffc9a7146102165780630fdfaa971461023e5780631d34b4ff1461024b57806328d41def14610258575b600080fd5b61022961022436600461202e565b6105c0565b60405190151581526020015b60405180910390f35b600f546102299060ff1681565b6008546102299060ff1681565b6102606105f7565b005b61026061027036600461206d565b61076c565b61027e60095481565b604051908152602001610235565b61027e600a5481565b6102606008805460ff19166001179055565b6005546102ba906001600160a01b031681565b6040516001600160a01b039091168152602001610235565b6102ba6102e036600461206d565b600e602052600090815260409020546001600160a01b031681565b6102ba7f000000000000000000000000000000000000000000000000000000000000000081565b61033561033036600461209f565b610860565b6040516001600160801b039091168152602001610235565b61026061035b366004612113565b6108ac565b61026061036e36600461217e565b6109a5565b61027e6103813660046122dc565b610a04565b6004546102ba906001600160a01b031681565b6102ba7f000000000000000000000000000000000000000000000000000000000000000081565b61027e6103ce36600461233d565b610b3a565b6102ba7f000000000000000000000000000000000000000000000000000000000000000081565b600b54610335906001600160801b031681565b61027e60105481565b7f00000000000000000000000000000000000000000000000000000000000000006102ba565b61026061044a36600461233d565b610bf7565b61048261045d36600461206d565b600c60205260009081526040902080546001909101546001600160a01b039091169082565b604080516001600160a01b039093168352602083019190915201610235565b6102606104af3660046124b0565b611032565b6003546102ba906001600160a01b031681565b6002546102ba906001600160a01b031681565b6104e967de41ba4fc9d91ad981565b6040516001600160401b039091168152602001610235565b61053161050f36600461233d565b6006602052600090815260409020805460019091015463ffffffff9091169082565b6040805163ffffffff9093168352602083019190915201610235565b61027e61055b36600461233d565b61109f565b6102606110c0565b6102606105763660046124b0565b6111e0565b600f5461022990610100900460ff1681565b61026061059b3660046124b0565b611434565b6105b36105ae3660046124e4565b61164f565b6040516102359190612501565b60006001600160e01b031982166385572ffb60e01b14806105f157506001600160e01b031982166301ffc9a760e01b145b92915050565b6003546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610640573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610664919061254e565b905060006106706116ed565b60035460405163095ea7b360e01b81526001600160a01b0380841660048301526024820186905292935091169063095ea7b3906044016020604051808303816000875af11580156106c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e99190612567565b50600254604051631a4ca37b60e21b81526001600160a01b03918216600482015260248101849052336044820152908216906369328dec906064016020604051808303816000875af1158015610743573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610767919061254e565b505050565b6001600160801b0381166000908152600c60205260409020546001600160a01b031633146107eb5760405162461bcd60e51b815260206004820152602160248201527f41646472657373206e6f74206d617463682077697468206e6f6e6365206461746044820152606160f81b60648201526084015b60405180910390fd5b6001600160801b0381166000908152600c6020908152604080832060010154905161081c9284923392879201612589565b604051602081830303815290604052905061076767de41ba4fc9d91ad97f000000000000000000000000000000000000000000000000000000000000000083611772565b600d602052816000526040600020818154811061087c57600080fd5b9060005260206000209060029182820401919006601002915091509054906101000a90046001600160801b031681565b600554604051630afd9fa560e31b81526001600160a01b03909116906357ecfd28906108e29087908790879087906004016125e4565b6020604051808303816000875af1158015610901573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109259190612567565b6109975760405162461bcd60e51b815260206004820152603c60248201527f6661696c65642066726f6d20636972636c652062726964676520494d6573736160448201527f67655472616e736d69747465722072657475726e65642066616c73650000000060648201526084016107e2565b61099f611c08565b50505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146109f0576040516335fdcccd60e21b81523360048201526024016107e2565b610a016109fc82612616565b611d72565b50565b6040805160a081019091526001600160a01b03831660c082015260009081908060e0810160408051808303601f190181529181529082526020808301879052815160008082529181018352929091019190610a81565b6040805180820190915260008082526020820152815260200190600190039081610a5a5790505b5081526001546001600160a01b0316602080830191909152604080519182018152620f4240825290910190610ab590611e07565b9052600080546040516320487ded60e01b815292935090916001600160a01b03909116906320487ded90610aef9089908690600401612668565b602060405180830381865afa158015610b0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b30919061254e565b9695505050505050565b6003546040516370a0823160e01b815230600482015260009182916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610b87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bab919061254e565b90506000600a548285670de0b6b3a7640000610bc79190612757565b610bd19190612757565b610bdb919061276e565b9050610bef670de0b6b3a76400008261276e565b949350505050565b6002546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610c4e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c729190612567565b610cbe5760405162461bcd60e51b815260206004820152601960248201527f4661696c656420746f207472616e7366657220616d6f756e740000000000000060448201526064016107e2565b60085460ff16610d055760405162461bcd60e51b81526020600482015260126024820152714e6f6465206973206e6f742061637469766560701b60448201526064016107e2565b6003546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610d4e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d72919061254e565b90506000600a54600003610d9657610d8f8364e8d4a51000612757565b9050610db2565b81600a5484610da59190612757565b610daf919061276e565b90505b600b54604051600091610dd991839133916001600160801b03909116908690602001612589565b60408051601f19818403018152918152600b80546001600160801b039081166000908152600c602090815284822080546001600160a01b0319163390811790915584548416835285832060019081018a9055908352600d825294822093548454808701865594835290822060028504018054601095909616949094026101000a9083168102920219909316179055600a80549293508492909190610e7e908490612790565b9091555050600b805460019190600090610ea29084906001600160801b03166127a3565b92506101000a8154816001600160801b0302191690836001600160801b031602179055506000610ed06116ed565b60025460405163095ea7b360e01b81526001600160a01b0380841660048301526024820189905292935091169063095ea7b3906044016020604051808303816000875af1158015610f25573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f499190612567565b5060025460405163e8eda9df60e01b81526001600160a01b03918216600482015260248101879052306044820152600060648201529082169063e8eda9df90608401600060405180830381600087803b158015610fa557600080fd5b505af1158015610fb9573d6000803e3d6000fd5b50505050610ff067de41ba4fc9d91ad97f000000000000000000000000000000000000000000000000000000000000000084611772565b506040805184815242602082015233917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15910160405180910390a25050505050565b6008805460ff1916600117905560608101518051600091829161105e91908101602090810191016127db565b600a91909155600b80546fffffffffffffffffffffffffffffffff19166001600160801b039092169190911790555050600f805460ff191660011790555050565b600781815481106110af57600080fd5b600091825260209091200154905081565b6002546040516335ea6a7560e01b81526001600160a01b039182166004820152600091829182917f000000000000000000000000000000000000000000000000000000000000000016906335ea6a759060240161018060405180830381865afa158015611131573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611155919061281b565b505060408051600160208201529081018990526060810187905260808101869052979c50949a50929850600097505060a090940194506111959350505050565b60405160208183030381529060405290506111d967de41ba4fc9d91ad97f000000000000000000000000000000000000000000000000000000000000000083611772565b5050505050565b6008805460ff19169055606081015180516000918291829161120a918101602090810191016128b8565b6003546040516370a0823160e01b81523060048201529397509195509350600092506001600160a01b0316906370a0823190602401602060405180830381865afa15801561125c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611280919061254e565b9050600061128c6116ed565b60035460405163095ea7b360e01b81526001600160a01b0380841660048301526024820186905292935091169063095ea7b3906044016020604051808303816000875af11580156112e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113059190612567565b506000611310611e44565b60108190556002546004805460405163095ea7b360e01b81526001600160a01b03918216928101929092526024820184905292935091169063095ea7b3906044016020604051808303816000875af1158015611370573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113949190612567565b50600480546002546040516337e9a82760e11b815292830184905263ffffffff89166024840152604483018790526001600160a01b0390811660648401521690636fd3504e906084016020604051808303816000875af11580156113fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114209190612911565b5061142b8585611fbf565b50505050505050565b600080826060015180602001905181019061144f919061292e565b9250925050600061145e6116ed565b6003546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa1580156114ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114d0919061254e565b90506000600a548285670de0b6b3a76400006114ec9190612757565b6114f69190612757565b611500919061276e565b905083600a6000828254611514919061296e565b90915550506003546001600160a01b031663095ea7b38461153d670de0b6b3a76400008561276e565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015611588573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ac9190612567565b506002546001600160a01b03808516916369328dec91166115d5670de0b6b3a76400008561276e565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152602481019190915290881660448201526064016020604051808303816000875af115801561162b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061142b919061254e565b6001600160a01b0381166000908152600d60209081526040918290208054835181840281018401909452808452606093928301828280156116e157602002820191906000526020600020906000905b82829054906101000a90046001600160801b03166001600160801b031681526020019060100190602082600f0104928301926001038202915080841161169e5790505b50505050509050919050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663026b1d5f6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561174e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f19190612981565b60006117af6040518060a0016040528060608152602001606081526020016060815260200160006001600160a01b03168152602001606081525090565b6040805160a081019091526001600160a01b03851660c08201528060e0810160408051808303601f190181529181529082526020808301879052815160008082529181018352929091019190611827565b60408051808201909152600080825260208201528152602001906001900390816118005790505b5081526001546001600160a01b0316602080830191909152604080519182018152620f424082529091019061185b90611e07565b9052600080546040516320487ded60e01b815292935090916001600160a01b03909116906320487ded906118959089908690600401612668565b602060405180830381865afa1580156118b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118d6919061254e565b6001546040516323b872dd60e01b8152336004820152306024820152604481018390529192506001600160a01b0316906323b872dd906064016020604051808303816000875af115801561192e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119529190612567565b6119af5760405162461bcd60e51b815260206004820152602860248201527f4e6f74204c696e6b207472616e73666572656420666f7220706179696e672043604482015267434950206665657360c01b60648201526084016107e2565b6001546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156119f7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a1b919061254e565b811115611ab2576001546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015611a6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a8e919061254e565b604051634787a10360e11b81526004810191909152602481018290526044016107e2565b60015460005460405163095ea7b360e01b81526001600160a01b0391821660048201526024810184905291169063095ea7b3906044016020604051808303816000875af1158015611b07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b2b9190612567565b506000546040516396f4e9f960e01b81526001600160a01b03909116906396f4e9f990611b5e9089908690600401612668565b6020604051808303816000875af1158015611b7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ba1919061254e565b600154604080516001600160a01b03808a168252909216602083015281018390529093506001600160401b0387169084907f9fb548811cfe022ba6400d8533a80d63fbc228e596f93603959dc47b1886af549060600160405180910390a350509392505050565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015611c51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c75919061254e565b90506000611c816116ed565b60025460405163095ea7b360e01b81526001600160a01b0380841660048301526024820186905292935091169063095ea7b3906044016020604051808303816000875af1158015611cd6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cfa9190612567565b5060025460405163e8eda9df60e01b81526001600160a01b03918216600482015260248101849052306044820152600060648201529082169063e8eda9df90608401600060405180830381600087803b158015611d5657600080fd5b505af1158015611d6a573d6000803e3d6000fd5b505050505050565b6000611d7d8261200c565b90508060ff16600003611d9757611d93826111e0565b5050565b8060ff16600103611dab57611d9382611434565b8060ff16600203611dbf57611d9382611032565b60405162461bcd60e51b815260206004820152601b60248201527f696e76616c696420636f6d6d616e642066726f6d204d6173746572000000000060448201526064016107e2565b60408051915160248084019190915281518084039091018152604490920190526020810180516001600160e01b03166397a657c960e01b17905290565b6003546040516370a0823160e01b815230600482015260009182916001600160a01b03909116906370a0823190602401602060405180830381865afa158015611e91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611eb5919061254e565b90506000611ec16116ed565b60035460405163095ea7b360e01b81526001600160a01b0380841660048301526024820186905292935091169063095ea7b3906044016020604051808303816000875af1158015611f16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f3a9190612567565b50600254604051631a4ca37b60e21b81526001600160a01b03918216600482015260248101849052306044820152908216906369328dec906064016020604051808303816000875af1158015611f94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fb8919061254e565b9250505090565b600a54600b5460408051600260208201819052918101939093526001600160801b0390911660608301529060009060800160405160208183030381529060405290506111d9848483611772565b6000808260600151806020019051810190612027919061299e565b9392505050565b60006020828403121561204057600080fd5b81356001600160e01b03198116811461202757600080fd5b6001600160801b0381168114610a0157600080fd5b60006020828403121561207f57600080fd5b813561202781612058565b6001600160a01b0381168114610a0157600080fd5b600080604083850312156120b257600080fd5b82356120bd8161208a565b946020939093013593505050565b60008083601f8401126120dd57600080fd5b5081356001600160401b038111156120f457600080fd5b60208301915083602082850101111561210c57600080fd5b9250929050565b6000806000806040858703121561212957600080fd5b84356001600160401b038082111561214057600080fd5b61214c888389016120cb565b9096509450602087013591508082111561216557600080fd5b50612172878288016120cb565b95989497509550505050565b60006020828403121561219057600080fd5b81356001600160401b038111156121a657600080fd5b820160a0818503121561202757600080fd5b6001600160401b0381168114610a0157600080fd5b80356121d8816121b8565b919050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715612215576122156121dd565b60405290565b60405160a081016001600160401b0381118282101715612215576122156121dd565b604051601f8201601f191681016001600160401b0381118282101715612265576122656121dd565b604052919050565b600082601f83011261227e57600080fd5b81356001600160401b03811115612297576122976121dd565b6122aa601f8201601f191660200161223d565b8181528460208386010111156122bf57600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000606084860312156122f157600080fd5b83356122fc816121b8565b9250602084013561230c8161208a565b915060408401356001600160401b0381111561232757600080fd5b6123338682870161226d565b9150509250925092565b60006020828403121561234f57600080fd5b5035919050565b600082601f83011261236757600080fd5b813560206001600160401b03821115612382576123826121dd565b612390818360051b0161223d565b82815260069290921b840181019181810190868411156123af57600080fd5b8286015b848110156123f757604081890312156123cc5760008081fd5b6123d46121f3565b81356123df8161208a565b815281850135858201528352918301916040016123b3565b509695505050505050565b600060a0828403121561241457600080fd5b61241c61221b565b90508135815261242e602083016121cd565b602082015260408201356001600160401b038082111561244d57600080fd5b6124598583860161226d565b6040840152606084013591508082111561247257600080fd5b61247e8583860161226d565b6060840152608084013591508082111561249757600080fd5b506124a484828501612356565b60808301525092915050565b6000602082840312156124c257600080fd5b81356001600160401b038111156124d857600080fd5b610bef84828501612402565b6000602082840312156124f657600080fd5b81356120278161208a565b6020808252825182820181905260009190848201906040850190845b818110156125425783516001600160801b03168352928401929184019160010161251d565b50909695505050505050565b60006020828403121561256057600080fd5b5051919050565b60006020828403121561257957600080fd5b8151801515811461202757600080fd5b60ff9490941684526001600160a01b039290921660208401526001600160801b03166040830152606082015260800190565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6040815260006125f86040830186886125bb565b828103602084015261260b8185876125bb565b979650505050505050565b60006105f13683612402565b6000815180845260005b818110156126485760208185018101518683018201520161262c565b506000602082860101526020601f19601f83011685010191505092915050565b600060406001600160401b038516835260208181850152845160a08386015261269460e0860182612622565b905081860151603f19808784030160608801526126b18383612622565b88860151888203830160808a01528051808352908601945060009350908501905b8084101561270457845180516001600160a01b03168352860151868301529385019360019390930192908601906126d2565b5060608901516001600160a01b031660a08901526080890151888203830160c08a015295506127338187612622565b9a9950505050505050505050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176105f1576105f1612741565b60008261278b57634e487b7160e01b600052601260045260246000fd5b500490565b808201808211156105f1576105f1612741565b6001600160801b038181168382160190808211156127c3576127c3612741565b5092915050565b805160ff811681146121d857600080fd5b6000806000606084860312156127f057600080fd5b6127f9846127ca565b925060208401519150604084015161281081612058565b809150509250925092565b6000806000806000806000806000806000806101808d8f03121561283e57600080fd5b8c519b5060208d01519a5060408d0151995060608d0151985060808d0151975060a08d0151965060c08d0151955060e08d015194506101008d015193506101208d015192506101408d015191506101608d015164ffffffffff811681146128a457600080fd5b809150509295989b509295989b509295989b565b600080600080608085870312156128ce57600080fd5b6128d7856127ca565b9350602085015163ffffffff811681146128f057600080fd5b6040860151909350612901816121b8565b6060959095015193969295505050565b60006020828403121561292357600080fd5b8151612027816121b8565b60008060006060848603121561294357600080fd5b61294c846127ca565b9250602084015161295c8161208a565b80925050604084015190509250925092565b818103818111156105f1576105f1612741565b60006020828403121561299357600080fd5b81516120278161208a565b6000602082840312156129b057600080fd5b612027826127ca56fea264697066735822122029e83454418d7b46d4f9b0df12c20c22208f9fb701a507dae2ded7f7ff3068ae64736f6c63430008130033",
  "bytecodeSha1": "db6054fe378421806c8c34199fc05fb7dba3cabc",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.19+commit.7dd6d404"
  },
  "contractName": "Slave",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {
        "CCIPReceiver.ccipReceive": {
          "66": [
            2427,
            2462,
            false
          ]
        }
      },
      "10": {},
      "11": {
        "Slave._ccipReceive": {
          "63": [
            8490,
            8502,
            false
          ],
          "64": [
            8565,
            8577,
            false
          ],
          "65": [
            8638,
            8650,
            false
          ]
        },
        "Slave._sendMessage": {
          "61": [
            10103,
            10160,
            true
          ],
          "62": [
            10241,
            10284,
            false
          ]
        },
        "Slave.claimAssetsFromBridge": {
          "57": [
            13654,
            13787,
            true
          ]
        },
        "Slave.deposit": {
          "58": [
            11317,
            11382,
            true
          ],
          "59": [
            11451,
            11463,
            true
          ],
          "60": [
            11604,
            11633,
            false
          ]
        },
        "Slave.sendDepositByNonce": {
          "56": [
            12563,
            12614,
            true
          ]
        }
      },
      "12": {},
      "13": {},
      "14": {},
      "15": {},
      "16": {},
      "2": {},
      "3": {},
      "4": {},
      "9": {}
    },
    "statements": {
      "0": {},
      "1": {
        "CCIPReceiver.ccipReceive": {
          "9": [
            1764,
            1785
          ]
        },
        "CCIPReceiver.getRouter": {
          "1": [
            2262,
            2290
          ]
        },
        "CCIPReceiver.supportsInterface": {
          "2": [
            1502,
            1609
          ]
        }
      },
      "10": {},
      "11": {
        "Slave._assetsAllocationDeposit": {
          "46": [
            14090,
            14137
          ],
          "47": [
            14147,
            14211
          ]
        },
        "Slave._assetsAllocationWithdraw": {
          "53": [
            14414,
            14464
          ],
          "54": [
            14475,
            14546
          ]
        },
        "Slave._ccipReceive": {
          "48": [
            8518,
            8544
          ],
          "49": [
            8593,
            8617
          ],
          "50": [
            8666,
            8704
          ],
          "51": [
            8735,
            8772
          ]
        },
        "Slave._sendMessage": {
          "39": [
            9318,
            9903
          ],
          "40": [
            10082,
            10226
          ],
          "41": [
            10237,
            10365
          ],
          "42": [
            10483,
            10527
          ],
          "43": [
            10619,
            10690
          ],
          "44": [
            10747,
            10908
          ],
          "45": [
            10952,
            10968
          ]
        },
        "Slave._sendSupplyAndNonce": {
          "55": [
            6478,
            6530
          ]
        },
        "Slave.calculateSharesValue": {
          "10": [
            7970,
            7994
          ]
        },
        "Slave.claimAssetsFromBridge": {
          "7": [
            13633,
            13873
          ],
          "8": [
            13883,
            13909
          ]
        },
        "Slave.deposit": {
          "11": [
            11296,
            11433
          ],
          "12": [
            11443,
            11486
          ],
          "13": [
            11649,
            11675
          ],
          "14": [
            11706,
            11767
          ],
          "15": [
            11935,
            11996
          ],
          "16": [
            12006,
            12058
          ],
          "17": [
            12068,
            12122
          ],
          "18": [
            12133,
            12167
          ],
          "19": [
            12177,
            12199
          ],
          "20": [
            12244,
            12283
          ],
          "21": [
            12293,
            12349
          ],
          "22": [
            12360,
            12409
          ],
          "23": [
            12419,
            12468
          ]
        },
        "Slave.getUserNonces": {
          "38": [
            4881,
            4919
          ]
        },
        "Slave.sendAaveData": {
          "28": [
            13450,
            13499
          ]
        },
        "Slave.sendDepositByNonce": {
          "5": [
            12542,
            12673
          ],
          "6": [
            12847,
            12896
          ]
        },
        "Slave.setTotalSupplyAndNonce": {
          "24": [
            6679,
            6698
          ],
          "25": [
            6860,
            6912
          ],
          "26": [
            6922,
            6960
          ],
          "27": [
            6970,
            6994
          ]
        },
        "Slave.testingActivateNode": {
          "0": [
            15048,
            15067
          ]
        },
        "Slave.testingReturnFunds": {
          "3": [
            14884,
            14925
          ],
          "4": [
            14935,
            14987
          ]
        },
        "Slave.warpAssets": {
          "29": [
            5266,
            5286
          ],
          "30": [
            5627,
            5677
          ],
          "31": [
            5750,
            5783
          ],
          "32": [
            5794,
            5863
          ],
          "33": [
            5874,
            6050
          ],
          "34": [
            6061,
            6178
          ]
        },
        "Slave.withdraw": {
          "35": [
            7472,
            7506
          ],
          "36": [
            7517,
            7568
          ],
          "37": [
            7578,
            7644
          ]
        }
      },
      "12": {},
      "13": {},
      "14": {},
      "15": {},
      "16": {},
      "2": {},
      "3": {},
      "4": {
        "Client._argsToBytes": {
          "52": [
            1387,
            1450
          ]
        }
      },
      "9": {}
    }
  },
  "dependencies": [
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/CCIPReceiver",
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/Client",
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/IAny2EVMMessageReceiver",
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.8.3/IERC20",
    "IMessageTransmitter",
    "IPool",
    "IPoolAddressesProvider",
    "IPoolDataProvider",
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/IRouterClient",
    "ITokenMessenger",
    "smartcontractkit/ccip@2.9.1-ccip1.4.9-release/LinkTokenInterface"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "761:15292:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1405:209:1;;;;;;:::i;:::-;;:::i;:::-;;;470:14:18;;463:22;445:41;;433:2;418:18;1405:209:1;;;;;;;;2976:36:11;;;;;;;;;2477:32;;;;;;;;;14729:265;;;:::i;:::-;;12481:422;;;;;;:::i;:::-;;:::i;2516:31::-;;;;;;;;;1046:25:18;;;1034:2;1019:18;2516:31:11;900:177:18;2611:39:11;;;;;;15000:74;;15048:12;:19;;-1:-1:-1;;15048:19:11;15063:4;15048:19;;;15000:74;2194:44;;;;;-1:-1:-1;;;;;2194:44:11;;;;;;-1:-1:-1;;;;;1355:32:18;;;1337:51;;1325:2;1310:18;2194:44:11;1191:203:18;2916:53:11;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2916:53:11;;;1884:54;;;;;2854:55;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2019:47:18;;;2001:66;;1989:2;1974:18;2854:55:11;1855:218:18;13511:405:11;;;;;;:::i;:::-;;:::i;1660:130:1:-;;;;;;:::i;:::-;;:::i;15080:971:11:-;;;;;;:::i;:::-;;:::i;2146:42::-;;;;;-1:-1:-1;;;;;2146:42:11;;;1944:51;;;;;7693:308;;;;;;:::i;:::-;;:::i;1838:40::-;;;;;2656:32;;;;;-1:-1:-1;;;;;2656:32:11;;;3050;;;;;;2205:90:1;2277:12;2205:90;;11244:1231:11;;;;;;:::i;:::-;;:::i;2786:62::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2786:62:11;;;;;;;;;;-1:-1:-1;;;;;6265:32:18;;;6247:51;;6329:2;6314:18;;6307:34;;;;6220:18;2786:62:11;6073:274:18;6543:458:11;;;;;;:::i;:::-;;:::i;2114:25::-;;;;;-1:-1:-1;;;;;2114:25:11;;;2084:24;;;;;-1:-1:-1;;;;;2084:24:11;;;1741:58;;1779:20;1741:58;;;;;-1:-1:-1;;;;;8854:31:18;;;8836:50;;8824:2;8809:18;1741:58:11;8692:200:18;2356:84:11;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9284:10:18;9272:23;;;9254:42;;9327:2;9312:18;;9305:34;;;;9227:18;2356:84:11;9082:263:18;2446:24:11;;;;;;:::i;:::-;;:::i;12909:597::-;;;:::i;5154:1031::-;;;;;;:::i;:::-;;:::i;3019:25::-;;;;;;;;;;;;7007:644;;;;;;:::i;:::-;;:::i;4774:152::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1405:209:1:-;1490:4;-1:-1:-1;;;;;;1509:56:1;;-1:-1:-1;;;1509:56:1;;:100;;-1:-1:-1;;;;;;;1569:40:1;;-1:-1:-1;;;1569:40:1;1509:100;1502:107;1405:209;-1:-1:-1;;1405:209:1:o;14729:265:11:-;14801:10;;14794:43;;-1:-1:-1;;;14794:43:11;;14831:4;14794:43;;;1337:51:18;14776:15:11;;-1:-1:-1;;;;;14801:10:11;;14794:28;;1310:18:18;;14794:43:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14776:61;;14848:12;14863:10;:8;:10::i;:::-;14891;;14884:41;;-1:-1:-1;;;14884:41:11;;-1:-1:-1;;;;;6265:32:18;;;14884:41:11;;;6247:51:18;6314:18;;;6307:34;;;14848:25:11;;-1:-1:-1;14891:10:11;;;14884:26;;6220:18:18;;14884:41:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;14956:9:11;;14935:52;;-1:-1:-1;;;14935:52:11;;-1:-1:-1;;;;;14956:9:11;;;14935:52;;;11173:34:18;11223:18;;;11216:34;;;14976:10:11;11266:18:18;;;11259:43;14935:20:11;;;;;;11108:18:18;;14935:52:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;14766:228;;14729:265::o;12481:422::-;-1:-1:-1;;;;;12563:25:11;;;;;;:17;:25;;;;;:37;-1:-1:-1;;;;;12563:37:11;12604:10;12563:51;12542:131;;;;-1:-1:-1;;;12542:131:11;;11515:2:18;12542:131:11;;;11497:21:18;11554:2;11534:18;;;11527:30;11593:34;11573:18;;;11566:62;-1:-1:-1;;;11644:18:18;;;11637:31;11685:19;;12542:131:11;;;;;;;;;-1:-1:-1;;;;;12794:25:11;;12684:17;12794:25;;;:17;:25;;;;;;;;:32;;;12704:132;;;;12684:17;;12750:10;;12774:6;;12704:132;;:::i;:::-;;;;;;;;;;;;;12684:152;;12847:49;1779:20;12874:15;12891:4;12847:12;:49::i;2854:55::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2854:55:11;;:::o;13511:405::-;13674:29;;13654:133;;-1:-1:-1;;;13654:133:11;;-1:-1:-1;;;;;13674:29:11;;;;13654:65;;:133;;13737:7;;;;13762:11;;;;13654:133;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13633:240;;;;-1:-1:-1;;;13633:240:11;;13094:2:18;13633:240:11;;;13076:21:18;13133:2;13113:18;;;13106:30;13172:34;13152:18;;;13145:62;13243:30;13223:18;;;13216:58;13291:19;;13633:240:11;12892:424:18;13633:240:11;13883:26;:24;:26::i;:::-;13511:405;;;;:::o;1660:130:1:-;2427:10;-1:-1:-1;;;;;2449:12:1;2427:35;;2423:73;;2471:25;;-1:-1:-1;;;2471:25:1;;2485:10;2471:25;;;1337:51:18;1310:18;;2471:25:1;1191:203:18;2423:73:1;1764:21:::1;;1777:7:::0;1764:21:::1;:::i;:::-;:12;:21::i;:::-;1660:130:::0;:::o;15080:971:11:-;15288:566;;;;;;;;;-1:-1:-1;;;;;1355:32:18;;15334:20:11;;;1337:51:18;15223:7:11;;;;15288:566;1310:18:18;;;15334:20:11;;;;;;-1:-1:-1;;15334:20:11;;;;;;15288:566;;;15334:20;15288:566;;;;;;15459:30;;-1:-1:-1;15459:30:11;;;;;;;;15288:566;;;;;15459:30;;;;-1:-1:-1;;;;;;;;;;;;;;;;;15459:30:11;;;;;;;;;;;;;;;-1:-1:-1;15288:566:11;;15831:11;;-1:-1:-1;;;;;15831:11:11;15288:566;;;;;;;;;15661:44;;;;;;;15694:9;15661:44;;15288:566;;;;15565:154;;:19;:154::i;:::-;15288:566;;15917:12;15932:8;;:91;;-1:-1:-1;;;15932:91:11;;15242:612;;-1:-1:-1;15917:12:11;;-1:-1:-1;;;;;15932:8:11;;;;:15;;:91;;15961:24;;15242:612;;15932:91;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15917:106;15080:971;-1:-1:-1;;;;;;15080:971:11:o;7693:308::-;7823:10;;7816:43;;-1:-1:-1;;;7816:43:11;;7853:4;7816:43;;;1337:51:18;7776:7:11;;;;-1:-1:-1;;;;;7823:10:11;;;;7816:28;;1310:18:18;;7816:43:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7795:64;;7869:14;7935:24;;7909:10;7888:6;7897:8;7888:17;;;;:::i;:::-;7887:32;;;;:::i;:::-;7886:73;;;;:::i;:::-;7869:90;-1:-1:-1;7977:17:11;7986:8;7869:90;7977:17;:::i;:::-;7970:24;7693:308;-1:-1:-1;;;;7693:308:11:o;11244:1231::-;11324:9;;11317:65;;-1:-1:-1;;;11317:65:11;;11348:10;11317:65;;;16344:34:18;11368:4:11;16394:18:18;;;16387:43;16446:18;;;16439:34;;;-1:-1:-1;;;;;11324:9:11;;;;11317:30;;16279:18:18;;11317:65:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11296:137;;;;-1:-1:-1;;;11296:137:11;;16686:2:18;11296:137:11;;;16668:21:18;16725:2;16705:18;;;16698:30;16764:27;16744:18;;;16737:55;16809:18;;11296:137:11;16484:349:18;11296:137:11;11451:12;;;;11443:43;;;;-1:-1:-1;;;11443:43:11;;17040:2:18;11443:43:11;;;17022:21:18;17079:2;17059:18;;;17052:30;-1:-1:-1;;;17098:18:18;;;17091:48;17156:18;;11443:43:11;16838:342:18;11443:43:11;11529:10;;11522:43;;-1:-1:-1;;;11522:43:11;;11559:4;11522:43;;;1337:51:18;11497:22:11;;-1:-1:-1;;;;;11529:10:11;;11522:28;;1310:18:18;;11522:43:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11497:68;;11576:14;11604:24;;11632:1;11604:29;11600:178;;11658:17;:6;11667:8;11658:17;:::i;:::-;11649:26;;11600:178;;;11753:14;11725:24;;11716:6;:33;;;;:::i;:::-;11715:52;;;;:::i;:::-;11706:61;;11600:178;11877:17;;11807:117;;11787:17;;11807:117;;11787:17;;11853:10;;-1:-1:-1;;;;;11877:17:11;;;;11908:6;;11807:117;;;:::i;:::-;;;;-1:-1:-1;;11807:117:11;;;;;;;;;11953:17;;;-1:-1:-1;;;;;11953:17:11;;;11935:36;;;;:17;11807:117;11935:36;;;;;;:61;;-1:-1:-1;;;;;;11935:61:11;11986:10;11935:61;;;;;;12024:17;;;;12006:36;;;;;11953:17;12006:43;;;:52;;;12068:30;;;:18;:30;;;;;12104:17;;12068:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;11953:17;12068:54;12104:17;;;12068:54;;;;;;;;;;;12133:24;:34;;11807:117;;-1:-1:-1;12052:6:11;;12133:24;;11935:36;12133:34;;12052:6;;12133:34;:::i;:::-;;;;-1:-1:-1;;12177:17:11;:22;;12198:1;;12177:17;;;:22;;12198:1;;-1:-1:-1;;;;;12177:22:11;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;12177:22:11;;;;;-1:-1:-1;;;;;12177:22:11;;;;;;12209:12;12224:10;:8;:10::i;:::-;12251:9;;12244:39;;-1:-1:-1;;;12244:39:11;;-1:-1:-1;;;;;6265:32:18;;;12244:39:11;;;6247:51:18;6314:18;;;6307:34;;;12209:25:11;;-1:-1:-1;12251:9:11;;;12244:25;;6220:18:18;;12244:39:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;12313:9:11;;12293:56;;-1:-1:-1;;;12293:56:11;;-1:-1:-1;;;;;12313:9:11;;;12293:56;;;17793:34:18;17843:18;;;17836:34;;;12340:4:11;17886:18:18;;;17879:43;12313:9:11;17938:18:18;;;17931:47;12293:19:11;;;;;;17727::18;;12293:56:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12360:49;1779:20;12387:15;12404:4;12360:12;:49::i;:::-;-1:-1:-1;12424:44:11;;;18163:25:18;;;12452:15:11;18219:2:18;18204:18;;18197:34;12432:10:11;;12424:44;;18136:18:18;12424:44:11;;;;;;;11286:1189;;;;11244:1231;:::o;6543:458::-;6679:12;:19;;-1:-1:-1;;6679:19:11;6694:4;6679:19;;;6801:20;;;;6777:72;;6679:12;;;;6777:72;;;;;;;;;;;;:::i;:::-;6860:24;:52;;;;6922:17;:38;;-1:-1:-1;;6922:38:11;-1:-1:-1;;;;;6922:38:11;;;;;;;;;-1:-1:-1;;6970:17:11;:24;;-1:-1:-1;;6970:24:11;-1:-1:-1;6970:24:11;;;-1:-1:-1;;6543:458:11:o;2446:24::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2446:24:11;:::o;12909:597::-;13261:9;;13183:101;;-1:-1:-1;;;13183:101:11;;-1:-1:-1;;;;;13261:9:11;;;13183:101;;;1337:51:18;12992:23:11;;;;;;13201:26;13183:60;;;;1310:18:18;;13183:101:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;13315:124:11;;;13345:1;13315:124;;;20003:36:18;20055:18;;;20048:34;;;20098:18;;;20091:34;;;20141:18;;;20134:34;;;12950:334:11;;-1:-1:-1;12950:334:11;;-1:-1:-1;12950:334:11;;-1:-1:-1;13295:17:11;;-1:-1:-1;;19975:19:18;;;;;-1:-1:-1;13315:124:11;;-1:-1:-1;;;;19776:398:18;13315:124:11;;;;;;;;;;;;;13295:144;;13450:49;1779:20;13477:15;13494:4;13450:12;:49::i;:::-;;12940:566;;;;12909:597::o;5154:1031::-;5266:12;:20;;-1:-1:-1;;5266:20:11;;;5445;;;;5434:66;;5281:5;;;;;;5434:66;;;;;;;;;;;:::i;:::-;5545:10;;5538:43;;-1:-1:-1;;;5538:43:11;;5575:4;5538:43;;;1337:51:18;5296:204:11;;-1:-1:-1;5296:204:11;;-1:-1:-1;5296:204:11;-1:-1:-1;5511:24:11;;-1:-1:-1;;;;;;5545:10:11;;5538:28;;1310:18:18;;5538:43:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5511:70;;5591:12;5606:10;:8;:10::i;:::-;5634;;5627:50;;-1:-1:-1;;;5627:50:11;;-1:-1:-1;;;;;6265:32:18;;;5627:50:11;;;6247:51:18;6314:18;;;6307:34;;;5591:25:11;;-1:-1:-1;5634:10:11;;;5627:26;;6220:18:18;;5627:50:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5688:21;5712:27;:25;:27::i;:::-;5750:17;:33;;;5801:9;;5820:27;;;5794:69;;-1:-1:-1;;;5794:69:11;;-1:-1:-1;;;;;5820:27:11;;;5794:69;;;6247:51:18;;;;6314:18;;;6307:34;;;5750:33:11;;-1:-1:-1;5801:9:11;;;5794:25;;6220:18:18;;5794:69:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5890:27:11;;;6031:9;;5874:176;;-1:-1:-1;;;5874:176:11;;;;;20968:25:18;;;21041:10;21029:23;;21009:18;;;21002:51;21069:18;;;21062:34;;;-1:-1:-1;;;;;6031:9:11;;;21112:18:18;;;21105:60;5890:27:11;;5874:59;;20940:19:18;;5874:176:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6061:117:11;6094:18;6150:15;6061:19;:117::i;:::-;5227:958;;;;;;5154:1031;:::o;7007:644::-;7091:22;7115:14;7157:15;:20;;;7133:93;;;;;;;;;;;;:::i;:::-;7088:138;;;;;7237:12;7252:10;:8;:10::i;:::-;7300;;7293:43;;-1:-1:-1;;;7293:43:11;;7330:4;7293:43;;;1337:51:18;7237:25:11;;-1:-1:-1;7272:18:11;;-1:-1:-1;;;;;7300:10:11;;;;7293:28;;1310:18:18;;7293:43:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7272:64;;7371:14;7437:24;;7411:10;7390:6;7399:8;7390:17;;;;:::i;:::-;7389:32;;;;:::i;:::-;7388:73;;;;:::i;:::-;7371:90;;7500:6;7472:24;;:34;;;;;;;:::i;:::-;;;;-1:-1:-1;;7524:10:11;;-1:-1:-1;;;;;7524:10:11;7517:26;7544:4;7550:17;7559:8;7550:6;:17;:::i;:::-;7517:51;;-1:-1:-1;;;;;;7517:51:11;;;;;;;-1:-1:-1;;;;;6265:32:18;;;7517:51:11;;;6247::18;6314:18;;;6307:34;6220:18;;7517:51:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7599:9:11;;-1:-1:-1;;;;;7578:20:11;;;;;;7599:9;7610:17;7619:8;7610:6;:17;:::i;:::-;7578:66;;-1:-1:-1;;;;;;7578:66:11;;;;;;;-1:-1:-1;;;;;11191:15:18;;;7578:66:11;;;11173:34:18;11223:18;;;11216:34;;;;11286:15;;;11266:18;;;11259:43;11108:18;;7578:66:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4774:152::-;-1:-1:-1;;;;;4888:31:11;;;;;;:18;:31;;;;;;;;;4881:38;;;;;;;;;;;;;;;;;4853:16;;4881:38;;;4888:31;4881:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4881:38:11;-1:-1:-1;;;;;4881:38:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4774:152;;;:::o;10981:182::-;11024:7;11043:12;11081:29;-1:-1:-1;;;;;11058:74:11;;:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;8980:1995::-;9121:17;9150:43;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9150:43:11;9335:568;;;;;;;;;-1:-1:-1;;;;;1355:32:18;;9381:20:11;;;1337:51:18;9335:568:11;1310:18:18;;;9381:20:11;;;;;;-1:-1:-1;;9381:20:11;;;;;;9335:568;;;9381:20;9335:568;;;;;;9508:30;;-1:-1:-1;9508:30:11;;;;;;;;9335:568;;;;;9508:30;;;;-1:-1:-1;;;;;;;;;;;;;;;;;9508:30:11;;;;;;;;;;;;;;;-1:-1:-1;9335:568:11;;9880:11;;-1:-1:-1;;;;;9880:11:11;9335:568;;;;;;;;;9710:44;;;;;;;9743:9;9710:44;;9335:568;;;;9614:154;;:19;:154::i;:::-;9335:568;;9966:12;9981:8;;:91;;-1:-1:-1;;;9981:91:11;;9318:585;;-1:-1:-1;9966:12:11;;-1:-1:-1;;;;;9981:8:11;;;;:15;;:91;;10010:24;;9318:585;;9981:91;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10103:11;;:57;;-1:-1:-1;;;10103:57:11;;10128:10;10103:57;;;16344:34:18;10148:4:11;16394:18:18;;;16387:43;16446:18;;;16439:34;;;9966:106:11;;-1:-1:-1;;;;;;10103:11:11;;:24;;16279:18:18;;10103:57:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10082:144;;;;-1:-1:-1;;;10082:144:11;;22427:2:18;10082:144:11;;;22409:21:18;22466:2;22446:18;;;22439:30;22505:34;22485:18;;;22478:62;-1:-1:-1;;;22556:18:18;;;22549:38;22604:19;;10082:144:11;22225:404:18;10082:144:11;10248:11;;:36;;-1:-1:-1;;;10248:36:11;;10278:4;10248:36;;;1337:51:18;-1:-1:-1;;;;;10248:11:11;;;;:21;;1310:18:18;;10248:36:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10241:4;:43;10237:128;;;10322:11;;:36;;-1:-1:-1;;;10322:36:11;;10352:4;10322:36;;;1337:51:18;-1:-1:-1;;;;;10322:11:11;;;;:21;;1310:18:18;;10322:36:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10305:60;;-1:-1:-1;;;10305:60:11;;;;;18163:25:18;;;;18204:18;;;18197:34;;;18136:18;;10305:60:11;17989:248:18;10237:128:11;10483:11;;;10511:8;10483:44;;-1:-1:-1;;;10483:44:11;;-1:-1:-1;;;;;10511:8:11;;;10483:44;;;6247:51:18;6314:18;;;6307:34;;;10483:11:11;;;:19;;6220:18:18;;10483:44:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10631:8:11;;:59;;-1:-1:-1;;;10631:59:11;;-1:-1:-1;;;;;10631:8:11;;;;:17;;:59;;10649:24;;10675:14;;10631:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10868:11;;10752:156;;;-1:-1:-1;;;;;16362:15:18;;;16344:34;;10868:11:11;;;16409:2:18;16394:18;;16387:43;16446:18;;16439:34;;;10619:71:11;;-1:-1:-1;;;;;;10752:156:11;;;10619:71;;10752:156;;16294:2:18;16279:18;10752:156:11;;;;;;;10952:16;;8980:1995;;;;;:::o;13922:296::-;14009:9;;14002:42;;-1:-1:-1;;;14002:42:11;;14038:4;14002:42;;;1337:51:18;13977:22:11;;-1:-1:-1;;;;;14009:9:11;;14002:27;;1310:18:18;;14002:42:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13977:67;;14054:12;14069:10;:8;:10::i;:::-;14097:9;;14090:47;;-1:-1:-1;;;14090:47:11;;-1:-1:-1;;;;;6265:32:18;;;14090:47:11;;;6247:51:18;6314:18;;;6307:34;;;14054:25:11;;-1:-1:-1;14097:9:11;;;14090:25;;6220:18:18;;14090:47:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;14167:9:11;;14147:64;;-1:-1:-1;;;14147:64:11;;-1:-1:-1;;;;;14167:9:11;;;14147:64;;;17793:34:18;17843:18;;;17836:34;;;14202:4:11;17886:18:18;;;17879:43;14167:9:11;17938:18:18;;;17931:47;14147:19:11;;;;;;17727::18;;14147:64:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13967:251;;13922:296::o;8041:933::-;8421:13;8437:38;8460:14;8437:22;:38::i;:::-;8421:54;;8490:7;:12;;8501:1;8490:12;8486:297;;8518:26;8529:14;8518:10;:26::i;:::-;8140:834;8041:933;:::o;8486:297::-;8565:7;:12;;8576:1;8565:12;8561:222;;8593:24;8602:14;8593:8;:24::i;8561:222::-;8638:7;:12;;8649:1;8638:12;8634:149;;8666:38;8689:14;8666:22;:38::i;8634:149::-;8735:37;;-1:-1:-1;;;8735:37:11;;23025:2:18;8735:37:11;;;23007:21:18;23064:2;23044:18;;;23037:30;23103:29;23083:18;;;23076:57;23150:18;;8735:37:11;22823:351:18;1285:170:4;1394:56;;;23407:13:18;;1394:56:4;;;;23389:32:18;;;;1394:56:4;;;;;;;;;;23362:18:18;;;;1394:56:4;;;;;;;-1:-1:-1;;;;;1394:56:4;-1:-1:-1;;;1394:56:4;;;;1285:170::o;14224:329:11:-;14332:10;;14325:43;;-1:-1:-1;;;14325:43:11;;14362:4;14325:43;;;1337:51:18;14279:7:11;;;;-1:-1:-1;;;;;14332:10:11;;;;14325:28;;1310:18:18;;14325:43:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14298:70;;14378:12;14393:10;:8;:10::i;:::-;14421;;14414:50;;-1:-1:-1;;;14414:50:11;;-1:-1:-1;;;;;6265:32:18;;;14414:50:11;;;6247:51:18;6314:18;;;6307:34;;;14378:25:11;;-1:-1:-1;14421:10:11;;;14414:26;;6220:18:18;;14414:50:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;14503:9:11;;14482:64;;-1:-1:-1;;;14482:64:11;;-1:-1:-1;;;;;14503:9:11;;;14482:64;;;11173:34:18;11223:18;;;11216:34;;;14540:4:11;11266:18:18;;;11259:43;14482:20:11;;;;;;11108:18:18;;14482:64:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14475:71;;;;14224:329;:::o;6191:346::-;6402:24;;6440:17;;6357:110;;;6326:1;6357:110;;;23630:36:18;;;23682:18;;;23675:34;;;;-1:-1:-1;;;;;6440:17:11;;;23725:18:18;;;23718:75;6326:1:11;6310:13;;23603:18:18;;6357:110:11;;;;;;;;;;;;6337:130;;6478:52;6491:11;6504:19;6525:4;6478:12;:52::i;4932:216::-;5042:5;5059:13;5086:15;:20;;;5075:41;;;;;;;;;;;;:::i;:::-;5059:57;4932:216;-1:-1:-1;;;4932:216:11:o;14:286:18:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:18;;209:43;;199:71;;266:1;263;256:12;497:146;-1:-1:-1;;;;;576:5:18;572:46;565:5;562:57;552:85;;633:1;630;623:12;648:247;707:6;760:2;748:9;739:7;735:23;731:32;728:52;;;776:1;773;766:12;728:52;815:9;802:23;834:31;859:5;834:31;:::i;1399:131::-;-1:-1:-1;;;;;1474:31:18;;1464:42;;1454:70;;1520:1;1517;1510:12;1535:315;1603:6;1611;1664:2;1652:9;1643:7;1639:23;1635:32;1632:52;;;1680:1;1677;1670:12;1632:52;1719:9;1706:23;1738:31;1763:5;1738:31;:::i;:::-;1788:5;1840:2;1825:18;;;;1812:32;;-1:-1:-1;;;1535:315:18:o;2078:347::-;2129:8;2139:6;2193:3;2186:4;2178:6;2174:17;2170:27;2160:55;;2211:1;2208;2201:12;2160:55;-1:-1:-1;2234:20:18;;-1:-1:-1;;;;;2266:30:18;;2263:50;;;2309:1;2306;2299:12;2263:50;2346:4;2338:6;2334:17;2322:29;;2398:3;2391:4;2382:6;2374;2370:19;2366:30;2363:39;2360:59;;;2415:1;2412;2405:12;2360:59;2078:347;;;;;:::o;2430:717::-;2520:6;2528;2536;2544;2597:2;2585:9;2576:7;2572:23;2568:32;2565:52;;;2613:1;2610;2603:12;2565:52;2653:9;2640:23;-1:-1:-1;;;;;2723:2:18;2715:6;2712:14;2709:34;;;2739:1;2736;2729:12;2709:34;2778:58;2828:7;2819:6;2808:9;2804:22;2778:58;:::i;:::-;2855:8;;-1:-1:-1;2752:84:18;-1:-1:-1;2943:2:18;2928:18;;2915:32;;-1:-1:-1;2959:16:18;;;2956:36;;;2988:1;2985;2978:12;2956:36;;3027:60;3079:7;3068:8;3057:9;3053:24;3027:60;:::i;:::-;2430:717;;;;-1:-1:-1;3106:8:18;-1:-1:-1;;;;2430:717:18:o;3152:394::-;3245:6;3298:2;3286:9;3277:7;3273:23;3269:32;3266:52;;;3314:1;3311;3304:12;3266:52;3354:9;3341:23;-1:-1:-1;;;;;3379:6:18;3376:30;3373:50;;;3419:1;3416;3409:12;3373:50;3442:22;;3498:3;3480:16;;;3476:26;3473:46;;;3515:1;3512;3505:12;3551:129;-1:-1:-1;;;;;3629:5:18;3625:30;3618:5;3615:41;3605:69;;3670:1;3667;3660:12;3685:132;3752:20;;3781:30;3752:20;3781:30;:::i;:::-;3685:132;;;:::o;3822:127::-;3883:10;3878:3;3874:20;3871:1;3864:31;3914:4;3911:1;3904:15;3938:4;3935:1;3928:15;3954:257;4026:4;4020:11;;;4058:17;;-1:-1:-1;;;;;4090:34:18;;4126:22;;;4087:62;4084:88;;;4152:18;;:::i;:::-;4188:4;4181:24;3954:257;:::o;4216:253::-;4288:2;4282:9;4330:4;4318:17;;-1:-1:-1;;;;;4350:34:18;;4386:22;;;4347:62;4344:88;;;4412:18;;:::i;4474:275::-;4545:2;4539:9;4610:2;4591:13;;-1:-1:-1;;4587:27:18;4575:40;;-1:-1:-1;;;;;4630:34:18;;4666:22;;;4627:62;4624:88;;;4692:18;;:::i;:::-;4728:2;4721:22;4474:275;;-1:-1:-1;4474:275:18:o;4754:530::-;4796:5;4849:3;4842:4;4834:6;4830:17;4826:27;4816:55;;4867:1;4864;4857:12;4816:55;4903:6;4890:20;-1:-1:-1;;;;;4925:2:18;4922:26;4919:52;;;4951:18;;:::i;:::-;4995:55;5038:2;5019:13;;-1:-1:-1;;5015:27:18;5044:4;5011:38;4995:55;:::i;:::-;5075:2;5066:7;5059:19;5121:3;5114:4;5109:2;5101:6;5097:15;5093:26;5090:35;5087:55;;;5138:1;5135;5128:12;5087:55;5203:2;5196:4;5188:6;5184:17;5177:4;5168:7;5164:18;5151:55;5251:1;5226:16;;;5244:4;5222:27;5215:38;;;;5230:7;4754:530;-1:-1:-1;;;4754:530:18:o;5289:594::-;5374:6;5382;5390;5443:2;5431:9;5422:7;5418:23;5414:32;5411:52;;;5459:1;5456;5449:12;5411:52;5498:9;5485:23;5517:30;5541:5;5517:30;:::i;:::-;5566:5;-1:-1:-1;5623:2:18;5608:18;;5595:32;5636:33;5595:32;5636:33;:::i;:::-;5688:7;-1:-1:-1;5746:2:18;5731:18;;5718:32;-1:-1:-1;;;;;5762:30:18;;5759:50;;;5805:1;5802;5795:12;5759:50;5828:49;5869:7;5860:6;5849:9;5845:22;5828:49;:::i;:::-;5818:59;;;5289:594;;;;;:::o;5888:180::-;5947:6;6000:2;5988:9;5979:7;5975:23;5971:32;5968:52;;;6016:1;6013;6006:12;5968:52;-1:-1:-1;6039:23:18;;5888:180;-1:-1:-1;5888:180:18:o;6352:1067::-;6420:5;6473:3;6466:4;6458:6;6454:17;6450:27;6440:55;;6491:1;6488;6481:12;6440:55;6527:6;6514:20;6553:4;-1:-1:-1;;;;;6572:2:18;6569:26;6566:52;;;6598:18;;:::i;:::-;6638:36;6670:2;6665;6662:1;6658:10;6654:19;6638:36;:::i;:::-;6708:15;;;6794:1;6790:10;;;;6778:23;;6774:32;;;6739:12;;;;6818:15;;;6815:35;;;6846:1;6843;6836:12;6815:35;6882:2;6874:6;6870:15;6894:496;6910:6;6905:3;6902:15;6894:496;;;6988:4;6982:3;6977;6973:13;6969:24;6966:114;;;7034:1;7063:2;7059;7052:14;6966:114;7106:22;;:::i;:::-;7169:3;7156:17;7186:33;7211:7;7186:33;:::i;:::-;7232:22;;7303:12;;;7290:26;7274:14;;;7267:50;7330:18;;7368:12;;;;6936:4;6927:14;6894:496;;;-1:-1:-1;7408:5:18;6352:1067;-1:-1:-1;;;;;;6352:1067:18:o;7424:899::-;7485:5;7533:4;7521:9;7516:3;7512:19;7508:30;7505:50;;;7551:1;7548;7541:12;7505:50;7573:22;;:::i;:::-;7564:31;;7631:9;7618:23;7611:5;7604:38;7674:37;7707:2;7696:9;7692:18;7674:37;:::i;:::-;7669:2;7662:5;7658:14;7651:61;7763:2;7752:9;7748:18;7735:32;-1:-1:-1;;;;;7827:2:18;7819:6;7816:14;7813:34;;;7843:1;7840;7833:12;7813:34;7879:45;7920:3;7911:6;7900:9;7896:22;7879:45;:::i;:::-;7874:2;7867:5;7863:14;7856:69;7978:2;7967:9;7963:18;7950:32;7934:48;;8007:2;7997:8;7994:16;7991:36;;;8023:1;8020;8013:12;7991:36;8059:47;8102:3;8091:8;8080:9;8076:24;8059:47;:::i;:::-;8054:2;8047:5;8043:14;8036:71;8160:3;8149:9;8145:19;8132:33;8116:49;;8190:2;8180:8;8177:16;8174:36;;;8206:1;8203;8196:12;8174:36;;8243:73;8312:3;8301:8;8290:9;8286:24;8243:73;:::i;:::-;8237:3;8230:5;8226:15;8219:98;;7424:899;;;;:::o;8328:359::-;8419:6;8472:2;8460:9;8451:7;8447:23;8443:32;8440:52;;;8488:1;8485;8478:12;8440:52;8528:9;8515:23;-1:-1:-1;;;;;8553:6:18;8550:30;8547:50;;;8593:1;8590;8583:12;8547:50;8616:65;8673:7;8664:6;8653:9;8649:22;8616:65;:::i;9532:247::-;9591:6;9644:2;9632:9;9623:7;9619:23;9615:32;9612:52;;;9660:1;9657;9650:12;9612:52;9699:9;9686:23;9718:31;9743:5;9718:31;:::i;9784:673::-;9955:2;10007:21;;;10077:13;;9980:18;;;10099:22;;;9926:4;;9955:2;10178:15;;;;10152:2;10137:18;;;9926:4;10221:210;10235:6;10232:1;10229:13;10221:210;;;10300:13;;-1:-1:-1;;;;;10296:54:18;10284:67;;10406:15;;;;10371:12;;;;10257:1;10250:9;10221:210;;;-1:-1:-1;10448:3:18;;9784:673;-1:-1:-1;;;;;;9784:673:18:o;10462:184::-;10532:6;10585:2;10573:9;10564:7;10560:23;10556:32;10553:52;;;10601:1;10598;10591:12;10553:52;-1:-1:-1;10624:16:18;;10462:184;-1:-1:-1;10462:184:18:o;10651:277::-;10718:6;10771:2;10759:9;10750:7;10746:23;10742:32;10739:52;;;10787:1;10784;10777:12;10739:52;10819:9;10813:16;10872:5;10865:13;10858:21;10851:5;10848:32;10838:60;;10894:1;10891;10884:12;11715:465;11972:4;11960:17;;;;11942:36;;-1:-1:-1;;;;;12014:32:18;;;;12009:2;11994:18;;11987:60;-1:-1:-1;;;;;12083:47:18;12078:2;12063:18;;12056:75;12162:2;12147:18;;12140:34;11929:3;11914:19;;11715:465::o;12185:266::-;12273:6;12268:3;12261:19;12325:6;12318:5;12311:4;12306:3;12302:14;12289:43;-1:-1:-1;12377:1:18;12352:16;;;12370:4;12348:27;;;12341:38;;;;12433:2;12412:15;;;-1:-1:-1;;12408:29:18;12399:39;;;12395:50;;12185:266::o;12456:431::-;12669:2;12658:9;12651:21;12632:4;12695:61;12752:2;12741:9;12737:18;12729:6;12721;12695:61;:::i;:::-;12804:9;12796:6;12792:22;12787:2;12776:9;12772:18;12765:50;12832:49;12874:6;12866;12858;12832:49;:::i;:::-;12824:57;12456:431;-1:-1:-1;;;;;;;12456:431:18:o;13321:214::-;13437:9;13474:55;13514:14;13507:5;13474:55;:::i;13540:422::-;13581:3;13619:5;13613:12;13646:6;13641:3;13634:19;13671:1;13681:162;13695:6;13692:1;13689:13;13681:162;;;13757:4;13813:13;;;13809:22;;13803:29;13785:11;;;13781:20;;13774:59;13710:12;13681:162;;;13685:3;13888:1;13881:4;13872:6;13867:3;13863:16;13859:27;13852:38;13951:4;13944:2;13940:7;13935:2;13927:6;13923:15;13919:29;13914:3;13910:39;13906:50;13899:57;;;13540:422;;;;:::o;13967:1605::-;14149:4;14178:2;-1:-1:-1;;;;;14211:6:18;14207:31;14196:9;14189:50;14258:2;14296;14291;14280:9;14276:18;14269:30;14334:6;14328:13;14377:4;14372:2;14361:9;14357:18;14350:32;14405:51;14451:3;14440:9;14436:19;14422:12;14405:51;:::i;:::-;14391:65;;14505:2;14497:6;14493:15;14487:22;14532:2;14528:7;14599:2;14587:9;14579:6;14575:22;14571:31;14566:2;14555:9;14551:18;14544:59;14626:40;14659:6;14643:14;14626:40;:::i;:::-;14703:15;;;14697:22;14760;;;14756:31;;14750:3;14735:19;;14728:60;14837:21;;14867:22;;;14943:23;;;;-1:-1:-1;14984:1:18;;-1:-1:-1;14905:15:18;;;;14994:280;15008:6;15005:1;15002:13;14994:280;;;15067:13;;15109:9;;-1:-1:-1;;;;;15105:35:18;15093:48;;15181:11;;15175:18;15161:12;;;15154:40;15249:15;;;;15137:1;15023:9;;;;;15214:12;;;;14994:280;;;-1:-1:-1;15323:2:18;15311:15;;15305:22;-1:-1:-1;;;;;1148:31:18;15386:4;15371:20;;1136:44;15441:3;15429:16;;15423:23;15487:19;;;15483:28;;15477:3;15462:19;;15455:57;15423:23;-1:-1:-1;15529:37:18;15491:3;15423:23;15529:37;:::i;:::-;15521:45;13967:1605;-1:-1:-1;;;;;;;;;;13967:1605:18:o;15577:127::-;15638:10;15633:3;15629:20;15626:1;15619:31;15669:4;15666:1;15659:15;15693:4;15690:1;15683:15;15709:168;15782:9;;;15813;;15830:15;;;15824:22;;15810:37;15800:71;;15851:18;;:::i;15882:217::-;15922:1;15948;15938:132;;15992:10;15987:3;15983:20;15980:1;15973:31;16027:4;16024:1;16017:15;16055:4;16052:1;16045:15;15938:132;-1:-1:-1;16084:9:18;;15882:217::o;17185:125::-;17250:9;;;17271:10;;;17268:36;;;17284:18;;:::i;17315:197::-;-1:-1:-1;;;;;17437:10:18;;;17449;;;17433:27;;17472:11;;;17469:37;;;17486:18;;:::i;:::-;17469:37;17315:197;;;;:::o;18242:160::-;18319:13;;18372:4;18361:16;;18351:27;;18341:55;;18392:1;18389;18382:12;18407:393;18493:6;18501;18509;18562:2;18550:9;18541:7;18537:23;18533:32;18530:52;;;18578:1;18575;18568:12;18530:52;18601:38;18629:9;18601:38;:::i;:::-;18591:48;;18679:2;18668:9;18664:18;18658:25;18648:35;;18726:2;18715:9;18711:18;18705:25;18739:31;18764:5;18739:31;:::i;:::-;18789:5;18779:15;;;18407:393;;;;;:::o;18805:966::-;18973:6;18981;18989;18997;19005;19013;19021;19029;19037;19045;19053:7;19062;19116:3;19104:9;19095:7;19091:23;19087:33;19084:53;;;19133:1;19130;19123:12;19084:53;19162:9;19156:16;19146:26;;19212:2;19201:9;19197:18;19191:25;19181:35;;19256:2;19245:9;19241:18;19235:25;19225:35;;19300:2;19289:9;19285:18;19279:25;19269:35;;19344:3;19333:9;19329:19;19323:26;19313:36;;19389:3;19378:9;19374:19;19368:26;19358:36;;19434:3;19423:9;19419:19;19413:26;19403:36;;19479:3;19468:9;19464:19;19458:26;19448:36;;19524:3;19513:9;19509:19;19503:26;19493:36;;19569:3;19558:9;19554:19;19548:26;19538:36;;19615:3;19604:9;19600:19;19594:26;19583:37;;19663:3;19652:9;19648:19;19642:26;19708:12;19701:5;19697:24;19690:5;19687:35;19677:63;;19736:1;19733;19726:12;19677:63;19760:5;19749:16;;;18805:966;;;;;;;;;;;;;;:::o;20179:555::-;20272:6;20280;20288;20296;20349:3;20337:9;20328:7;20324:23;20320:33;20317:53;;;20366:1;20363;20356:12;20317:53;20389:38;20417:9;20389:38;:::i;:::-;20379:48;;20470:2;20459:9;20455:18;20449:25;20514:10;20507:5;20503:22;20496:5;20493:33;20483:61;;20540:1;20537;20530:12;20483:61;20613:2;20598:18;;20592:25;20563:5;;-1:-1:-1;20626:32:18;20592:25;20626:32;:::i;:::-;20724:2;20709:18;;;;20703:25;20179:555;;;;-1:-1:-1;;;20179:555:18:o;21176:249::-;21245:6;21298:2;21286:9;21277:7;21273:23;21269:32;21266:52;;;21314:1;21311;21304:12;21266:52;21346:9;21340:16;21365:30;21389:5;21365:30;:::i;21430:401::-;21524:6;21532;21540;21593:2;21581:9;21572:7;21568:23;21564:32;21561:52;;;21609:1;21606;21599:12;21561:52;21632:38;21660:9;21632:38;:::i;:::-;21622:48;;21713:2;21702:9;21698:18;21692:25;21726:31;21751:5;21726:31;:::i;:::-;21776:5;21766:15;;;21821:2;21810:9;21806:18;21800:25;21790:35;;21430:401;;;;;:::o;21836:128::-;21903:9;;;21924:11;;;21921:37;;;21938:18;;:::i;21969:251::-;22039:6;22092:2;22080:9;22071:7;22067:23;22063:32;22060:52;;;22108:1;22105;22098:12;22060:52;22140:9;22134:16;22159:31;22184:5;22159:31;:::i;23804:204::-;23872:6;23925:2;23913:9;23904:7;23900:23;23896:32;23893:52;;;23941:1;23938;23931:12;23893:52;23964:38;23992:9;23964:38;:::i",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))": {
        "details": "Note ensure you check the msg.sender is the OffRampRouter",
        "notice": "Called by the Router to deliver a message. If this reverts, any token transfers also revert. The message will move to a FAILED state and become available for manual execution.",
        "params": {
          "message": "CCIP Message"
        }
      },
      "constructor": {
        "notice": "Constructor initializes the contract with the router address.",
        "params": {
          "_MASTER_CONTRACT": "The address of the master contract.",
          "_POOL_ADDRESS_PROVIDER_ADDRESS": "The address of the Pool address provider contract (aave).",
          "_POOL_DATA_PROVIDER_ADDRESS": "The address of the Pool data provider contract (aave).",
          "_circleTokenMessengerAddress": "The address of the Circle token messenger contract.",
          "_link": "The address of the LINK token contract.",
          "_router": "The address of the router contract (CCIP chainlink router).",
          "_tokenAUSDC": "The address of the ausdc provided by aave when deposit is done.",
          "_tokenUSDC": "The address of the Circle USDC token contract."
        }
      },
      "getRouter()": {
        "notice": "Return the current router",
        "returns": {
          "_0": "CCIP router address"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "Should indicate whether the contract implements IAny2EVMMessageReceiver e.g. return interfaceId == type(IAny2EVMMessageReceiver).interfaceId || interfaceId == type(IERC165).interfaceId This allows CCIP to check if ccipReceive is available before calling it. If this returns false or reverts, only tokens are transferred to the receiver. If this returns true, tokens are transferred and ccipReceive is called atomically. Additionally, if the receiver address does not have code associated with it at the time of execution (EXTCODESIZE returns 0), only tokens will be transferred.",
        "notice": "IERC165 supports an interfaceId",
        "params": {
          "interfaceId": "The interfaceId to check"
        },
        "returns": {
          "_0": "true if the interfaceId is supported"
        }
      }
    },
    "version": 1
  },
  "offset": [
    761,
    16053
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x211 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x98B3C1F8 GT PUSH2 0x125 JUMPI DUP1 PUSH4 0xC86D4040 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD8BBA68F GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD8BBA68F EQ PUSH2 0x560 JUMPI DUP1 PUSH4 0xE346FDFA EQ PUSH2 0x568 JUMPI DUP1 PUSH4 0xE48C59D8 EQ PUSH2 0x57B JUMPI DUP1 PUSH4 0xE9644410 EQ PUSH2 0x58D JUMPI DUP1 PUSH4 0xFCA4DF39 EQ PUSH2 0x5A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC86D4040 EQ PUSH2 0x4C7 JUMPI DUP1 PUSH4 0xCA65A4FE EQ PUSH2 0x4DA JUMPI DUP1 PUSH4 0xCBEC3E30 EQ PUSH2 0x501 JUMPI DUP1 PUSH4 0xD1451BE6 EQ PUSH2 0x54D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB0F479A1 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0xB0F479A1 EQ PUSH2 0x416 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0xB91DA80E EQ PUSH2 0x44F JUMPI DUP1 PUSH4 0xBD193173 EQ PUSH2 0x4A1 JUMPI DUP1 PUSH4 0xC3F4A838 EQ PUSH2 0x4B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x98B3C1F8 EQ PUSH2 0x3C0 JUMPI DUP1 PUSH4 0xA2A41A92 EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0xA2FEB55A EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0xB007661B EQ PUSH2 0x40D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3D2E2D61 GT PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x7E96B20C GT PUSH2 0x177 JUMPI DUP1 PUSH4 0x7E96B20C EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0x85572FFB EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0x8FB41EF5 EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0x97E8B613 EQ PUSH2 0x386 JUMPI DUP1 PUSH4 0x982D1F18 EQ PUSH2 0x399 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3D2E2D61 EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0x60E39095 EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0x67062580 EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0x7ADC6710 EQ PUSH2 0x322 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x28D74CB6 GT PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x28D74CB6 EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0x2B72DC26 EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x335D92F3 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x3BEDED9F EQ PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xFDFAA97 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x1D34B4FF EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x28D41DEF EQ PUSH2 0x258 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x229 PUSH2 0x224 CALLDATASIZE PUSH1 0x4 PUSH2 0x202E JUMP JUMPDEST PUSH2 0x5C0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0xF SLOAD PUSH2 0x229 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x229 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x260 PUSH2 0x5F7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x260 PUSH2 0x270 CALLDATASIZE PUSH1 0x4 PUSH2 0x206D JUMP JUMPDEST PUSH2 0x76C JUMP JUMPDEST PUSH2 0x27E PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x235 JUMP JUMPDEST PUSH2 0x27E PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x260 PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x2BA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x235 JUMP JUMPDEST PUSH2 0x2BA PUSH2 0x2E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x206D JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2BA PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x335 PUSH2 0x330 CALLDATASIZE PUSH1 0x4 PUSH2 0x209F JUMP JUMPDEST PUSH2 0x860 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x235 JUMP JUMPDEST PUSH2 0x260 PUSH2 0x35B CALLDATASIZE PUSH1 0x4 PUSH2 0x2113 JUMP JUMPDEST PUSH2 0x8AC JUMP JUMPDEST PUSH2 0x260 PUSH2 0x36E CALLDATASIZE PUSH1 0x4 PUSH2 0x217E JUMP JUMPDEST PUSH2 0x9A5 JUMP JUMPDEST PUSH2 0x27E PUSH2 0x381 CALLDATASIZE PUSH1 0x4 PUSH2 0x22DC JUMP JUMPDEST PUSH2 0xA04 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x2BA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2BA PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x27E PUSH2 0x3CE CALLDATASIZE PUSH1 0x4 PUSH2 0x233D JUMP JUMPDEST PUSH2 0xB3A JUMP JUMPDEST PUSH2 0x2BA PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x335 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x27E PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x2BA JUMP JUMPDEST PUSH2 0x260 PUSH2 0x44A CALLDATASIZE PUSH1 0x4 PUSH2 0x233D JUMP JUMPDEST PUSH2 0xBF7 JUMP JUMPDEST PUSH2 0x482 PUSH2 0x45D CALLDATASIZE PUSH1 0x4 PUSH2 0x206D JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x235 JUMP JUMPDEST PUSH2 0x260 PUSH2 0x4AF CALLDATASIZE PUSH1 0x4 PUSH2 0x24B0 JUMP JUMPDEST PUSH2 0x1032 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x2BA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x2BA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x4E9 PUSH8 0xDE41BA4FC9D91AD9 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x235 JUMP JUMPDEST PUSH2 0x531 PUSH2 0x50F CALLDATASIZE PUSH1 0x4 PUSH2 0x233D JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND SWAP1 DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x235 JUMP JUMPDEST PUSH2 0x27E PUSH2 0x55B CALLDATASIZE PUSH1 0x4 PUSH2 0x233D JUMP JUMPDEST PUSH2 0x109F JUMP JUMPDEST PUSH2 0x260 PUSH2 0x10C0 JUMP JUMPDEST PUSH2 0x260 PUSH2 0x576 CALLDATASIZE PUSH1 0x4 PUSH2 0x24B0 JUMP JUMPDEST PUSH2 0x11E0 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH2 0x229 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x260 PUSH2 0x59B CALLDATASIZE PUSH1 0x4 PUSH2 0x24B0 JUMP JUMPDEST PUSH2 0x1434 JUMP JUMPDEST PUSH2 0x5B3 PUSH2 0x5AE CALLDATASIZE PUSH1 0x4 PUSH2 0x24E4 JUMP JUMPDEST PUSH2 0x164F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x2501 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x85572FFB PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x5F1 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x640 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x664 SWAP2 SWAP1 PUSH2 0x254E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x670 PUSH2 0x16ED JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE SWAP3 SWAP4 POP SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6E9 SWAP2 SWAP1 PUSH2 0x2567 JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1A4CA37B PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE CALLER PUSH1 0x44 DUP3 ADD MSTORE SWAP1 DUP3 AND SWAP1 PUSH4 0x69328DEC SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x743 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x767 SWAP2 SWAP1 PUSH2 0x254E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41646472657373206E6F74206D617463682077697468206E6F6E636520646174 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x61 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 MLOAD PUSH2 0x81C SWAP3 DUP5 SWAP3 CALLER SWAP3 DUP8 SWAP3 ADD PUSH2 0x2589 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x767 PUSH8 0xDE41BA4FC9D91AD9 PUSH32 0x0 DUP4 PUSH2 0x1772 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x87C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x10 MUL SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0xAFD9FA5 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x57ECFD28 SWAP1 PUSH2 0x8E2 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x25E4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x901 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x925 SWAP2 SWAP1 PUSH2 0x2567 JUMP JUMPDEST PUSH2 0x997 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6661696C65642066726F6D20636972636C652062726964676520494D65737361 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x67655472616E736D69747465722072657475726E65642066616C736500000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7E2 JUMP JUMPDEST PUSH2 0x99F PUSH2 0x1C08 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x9F0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x35FDCCCD PUSH1 0xE2 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7E2 JUMP JUMPDEST PUSH2 0xA01 PUSH2 0x9FC DUP3 PUSH2 0x2616 JUMP JUMPDEST PUSH2 0x1D72 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP1 PUSH1 0xE0 DUP2 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE SWAP2 DUP2 MSTORE SWAP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP8 SWAP1 MSTORE DUP2 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE SWAP2 DUP2 ADD DUP4 MSTORE SWAP3 SWAP1 SWAP2 ADD SWAP2 SWAP1 PUSH2 0xA81 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xA5A JUMPI SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 ADD DUP2 MSTORE PUSH3 0xF4240 DUP3 MSTORE SWAP1 SWAP2 ADD SWAP1 PUSH2 0xAB5 SWAP1 PUSH2 0x1E07 JUMP JUMPDEST SWAP1 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x20487DED PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x20487DED SWAP1 PUSH2 0xAEF SWAP1 DUP10 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2668 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB0C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB30 SWAP2 SWAP1 PUSH2 0x254E JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB87 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBAB SWAP2 SWAP1 PUSH2 0x254E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xA SLOAD DUP3 DUP6 PUSH8 0xDE0B6B3A7640000 PUSH2 0xBC7 SWAP2 SWAP1 PUSH2 0x2757 JUMP JUMPDEST PUSH2 0xBD1 SWAP2 SWAP1 PUSH2 0x2757 JUMP JUMPDEST PUSH2 0xBDB SWAP2 SWAP1 PUSH2 0x276E JUMP JUMPDEST SWAP1 POP PUSH2 0xBEF PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x276E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC4E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC72 SWAP2 SWAP1 PUSH2 0x2567 JUMP JUMPDEST PUSH2 0xCBE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F207472616E7366657220616D6F756E7400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7E2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND PUSH2 0xD05 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4E6F6465206973206E6F7420616374697665 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7E2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD4E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD72 SWAP2 SWAP1 PUSH2 0x254E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xA SLOAD PUSH1 0x0 SUB PUSH2 0xD96 JUMPI PUSH2 0xD8F DUP4 PUSH5 0xE8D4A51000 PUSH2 0x2757 JUMP JUMPDEST SWAP1 POP PUSH2 0xDB2 JUMP JUMPDEST DUP2 PUSH1 0xA SLOAD DUP5 PUSH2 0xDA5 SWAP2 SWAP1 PUSH2 0x2757 JUMP JUMPDEST PUSH2 0xDAF SWAP2 SWAP1 PUSH2 0x276E JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH2 0xDD9 SWAP2 DUP4 SWAP2 CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP7 SWAP1 PUSH1 0x20 ADD PUSH2 0x2589 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE DUP5 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP5 SLOAD DUP5 AND DUP4 MSTORE DUP6 DUP4 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD DUP11 SWAP1 SSTORE SWAP1 DUP4 MSTORE PUSH1 0xD DUP3 MSTORE SWAP5 DUP3 KECCAK256 SWAP4 SLOAD DUP5 SLOAD DUP1 DUP8 ADD DUP7 SSTORE SWAP5 DUP4 MSTORE SWAP1 DUP3 KECCAK256 PUSH1 0x2 DUP6 DIV ADD DUP1 SLOAD PUSH1 0x10 SWAP6 SWAP1 SWAP7 AND SWAP5 SWAP1 SWAP5 MUL PUSH2 0x100 EXP SWAP1 DUP4 AND DUP2 MUL SWAP3 MUL NOT SWAP1 SWAP4 AND OR SWAP1 SSTORE PUSH1 0xA DUP1 SLOAD SWAP3 SWAP4 POP DUP5 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0xE7E SWAP1 DUP5 SWAP1 PUSH2 0x2790 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xB DUP1 SLOAD PUSH1 0x1 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xEA2 SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x27A3 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0xED0 PUSH2 0x16ED JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP10 SWAP1 MSTORE SWAP3 SWAP4 POP SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF25 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF49 SWAP2 SWAP1 PUSH2 0x2567 JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE8EDA9DF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP8 SWAP1 MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 DUP3 AND SWAP1 PUSH4 0xE8EDA9DF SWAP1 PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFB9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xFF0 PUSH8 0xDE41BA4FC9D91AD9 PUSH32 0x0 DUP5 PUSH2 0x1772 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP2 PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x60 DUP2 ADD MLOAD DUP1 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH2 0x105E SWAP2 SWAP1 DUP2 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 ADD PUSH2 0x27DB JUMP JUMPDEST PUSH1 0xA SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0xB DUP1 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP PUSH1 0xF DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x10AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x35EA6A75 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0x35EA6A75 SWAP1 PUSH1 0x24 ADD PUSH2 0x180 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1131 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1155 SWAP2 SWAP1 PUSH2 0x281B JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE SWAP8 SWAP13 POP SWAP5 SWAP11 POP SWAP3 SWAP9 POP PUSH1 0x0 SWAP8 POP POP PUSH1 0xA0 SWAP1 SWAP5 ADD SWAP5 POP PUSH2 0x1195 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x11D9 PUSH8 0xDE41BA4FC9D91AD9 PUSH32 0x0 DUP4 PUSH2 0x1772 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x60 DUP2 ADD MLOAD DUP1 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH2 0x120A SWAP2 DUP2 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 ADD PUSH2 0x28B8 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP4 SWAP8 POP SWAP2 SWAP6 POP SWAP4 POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x125C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1280 SWAP2 SWAP1 PUSH2 0x254E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x128C PUSH2 0x16ED JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE SWAP3 SWAP4 POP SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12E1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1305 SWAP2 SWAP1 PUSH2 0x2567 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x1310 PUSH2 0x1E44 JUMP JUMPDEST PUSH1 0x10 DUP2 SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1370 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1394 SWAP2 SWAP1 PUSH2 0x2567 JUMP JUMPDEST POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x37E9A827 PUSH1 0xE1 SHL DUP2 MSTORE SWAP3 DUP4 ADD DUP5 SWAP1 MSTORE PUSH4 0xFFFFFFFF DUP10 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x64 DUP5 ADD MSTORE AND SWAP1 PUSH4 0x6FD3504E SWAP1 PUSH1 0x84 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13FC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1420 SWAP2 SWAP1 PUSH2 0x2911 JUMP JUMPDEST POP PUSH2 0x142B DUP6 DUP6 PUSH2 0x1FBF JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x60 ADD MLOAD DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x144F SWAP2 SWAP1 PUSH2 0x292E JUMP JUMPDEST SWAP3 POP SWAP3 POP POP PUSH1 0x0 PUSH2 0x145E PUSH2 0x16ED JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14AC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14D0 SWAP2 SWAP1 PUSH2 0x254E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xA SLOAD DUP3 DUP6 PUSH8 0xDE0B6B3A7640000 PUSH2 0x14EC SWAP2 SWAP1 PUSH2 0x2757 JUMP JUMPDEST PUSH2 0x14F6 SWAP2 SWAP1 PUSH2 0x2757 JUMP JUMPDEST PUSH2 0x1500 SWAP2 SWAP1 PUSH2 0x276E JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xA PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1514 SWAP2 SWAP1 PUSH2 0x296E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x95EA7B3 DUP5 PUSH2 0x153D PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x276E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1588 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15AC SWAP2 SWAP1 PUSH2 0x2567 JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP2 PUSH4 0x69328DEC SWAP2 AND PUSH2 0x15D5 PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x276E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP9 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x162B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x142B SWAP2 SWAP1 PUSH2 0x254E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x16E1 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x10 ADD SWAP1 PUSH1 0x20 DUP3 PUSH1 0xF ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB DUP3 MUL SWAP2 POP DUP1 DUP5 GT PUSH2 0x169E JUMPI SWAP1 POP JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x26B1D5F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x174E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5F1 SWAP2 SWAP1 PUSH2 0x2981 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17AF PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0xC0 DUP3 ADD MSTORE DUP1 PUSH1 0xE0 DUP2 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE SWAP2 DUP2 MSTORE SWAP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP8 SWAP1 MSTORE DUP2 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE SWAP2 DUP2 ADD DUP4 MSTORE SWAP3 SWAP1 SWAP2 ADD SWAP2 SWAP1 PUSH2 0x1827 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1800 JUMPI SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 ADD DUP2 MSTORE PUSH3 0xF4240 DUP3 MSTORE SWAP1 SWAP2 ADD SWAP1 PUSH2 0x185B SWAP1 PUSH2 0x1E07 JUMP JUMPDEST SWAP1 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x20487DED PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x20487DED SWAP1 PUSH2 0x1895 SWAP1 DUP10 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2668 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18B2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18D6 SWAP2 SWAP1 PUSH2 0x254E JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x192E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1952 SWAP2 SWAP1 PUSH2 0x2567 JUMP JUMPDEST PUSH2 0x19AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F74204C696E6B207472616E73666572656420666F7220706179696E672043 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x4349502066656573 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7E2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19F7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A1B SWAP2 SWAP1 PUSH2 0x254E JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x1AB2 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A6A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A8E SWAP2 SWAP1 PUSH2 0x254E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4787A103 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x7E2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1B07 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B2B SWAP2 SWAP1 PUSH2 0x2567 JUMP JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x96F4E9F9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x96F4E9F9 SWAP1 PUSH2 0x1B5E SWAP1 DUP10 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2668 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1B7D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BA1 SWAP2 SWAP1 PUSH2 0x254E JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND DUP3 MSTORE SWAP1 SWAP3 AND PUSH1 0x20 DUP4 ADD MSTORE DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP8 AND SWAP1 DUP5 SWAP1 PUSH32 0x9FB548811CFE022BA6400D8533A80D63FBC228E596F93603959DC47B1886AF54 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C51 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C75 SWAP2 SWAP1 PUSH2 0x254E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1C81 PUSH2 0x16ED JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE SWAP3 SWAP4 POP SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1CD6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CFA SWAP2 SWAP1 PUSH2 0x2567 JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE8EDA9DF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 DUP3 AND SWAP1 PUSH4 0xE8EDA9DF SWAP1 PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D6A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D7D DUP3 PUSH2 0x200C JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xFF AND PUSH1 0x0 SUB PUSH2 0x1D97 JUMPI PUSH2 0x1D93 DUP3 PUSH2 0x11E0 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x1 SUB PUSH2 0x1DAB JUMPI PUSH2 0x1D93 DUP3 PUSH2 0x1434 JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x2 SUB PUSH2 0x1DBF JUMPI PUSH2 0x1D93 DUP3 PUSH2 0x1032 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C696420636F6D6D616E642066726F6D204D61737465720000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7E2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 MLOAD PUSH1 0x24 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x44 SWAP1 SWAP3 ADD SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x97A657C9 PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E91 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EB5 SWAP2 SWAP1 PUSH2 0x254E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1EC1 PUSH2 0x16ED JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE SWAP3 SWAP4 POP SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F16 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F3A SWAP2 SWAP1 PUSH2 0x2567 JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1A4CA37B PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE SWAP1 DUP3 AND SWAP1 PUSH4 0x69328DEC SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F94 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FB8 SWAP2 SWAP1 PUSH2 0x254E JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND PUSH1 0x60 DUP4 ADD MSTORE SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x11D9 DUP5 DUP5 DUP4 PUSH2 0x1772 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x60 ADD MLOAD DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2027 SWAP2 SWAP1 PUSH2 0x299E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2040 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x2027 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x207F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2027 DUP2 PUSH2 0x2058 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x20BD DUP2 PUSH2 0x208A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x20DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x20F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x210C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x214C DUP9 DUP4 DUP10 ADD PUSH2 0x20CB JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2165 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2172 DUP8 DUP3 DUP9 ADD PUSH2 0x20CB JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2190 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x21A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0xA0 DUP2 DUP6 SUB SLT ISZERO PUSH2 0x2027 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x21D8 DUP2 PUSH2 0x21B8 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2215 JUMPI PUSH2 0x2215 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xA0 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2215 JUMPI PUSH2 0x2215 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2265 JUMPI PUSH2 0x2265 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x227E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2297 JUMPI PUSH2 0x2297 PUSH2 0x21DD JUMP JUMPDEST PUSH2 0x22AA PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x223D JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x22BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x22F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x22FC DUP2 PUSH2 0x21B8 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x230C DUP2 PUSH2 0x208A JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2327 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2333 DUP7 DUP3 DUP8 ADD PUSH2 0x226D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x234F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x2382 JUMPI PUSH2 0x2382 PUSH2 0x21DD JUMP JUMPDEST PUSH2 0x2390 DUP2 DUP4 PUSH1 0x5 SHL ADD PUSH2 0x223D JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x6 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x23AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x23F7 JUMPI PUSH1 0x40 DUP2 DUP10 SUB SLT ISZERO PUSH2 0x23CC JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x23D4 PUSH2 0x21F3 JUMP JUMPDEST DUP2 CALLDATALOAD PUSH2 0x23DF DUP2 PUSH2 0x208A JUMP JUMPDEST DUP2 MSTORE DUP2 DUP6 ADD CALLDATALOAD DUP6 DUP3 ADD MSTORE DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 PUSH1 0x40 ADD PUSH2 0x23B3 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2414 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x241C PUSH2 0x221B JUMP JUMPDEST SWAP1 POP DUP2 CALLDATALOAD DUP2 MSTORE PUSH2 0x242E PUSH1 0x20 DUP4 ADD PUSH2 0x21CD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x244D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2459 DUP6 DUP4 DUP7 ADD PUSH2 0x226D JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP5 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2472 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x247E DUP6 DUP4 DUP7 ADD PUSH2 0x226D JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP5 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2497 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24A4 DUP5 DUP3 DUP6 ADD PUSH2 0x2356 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x24D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBEF DUP5 DUP3 DUP6 ADD PUSH2 0x2402 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2027 DUP2 PUSH2 0x208A JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2542 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x251D JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2560 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2579 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2027 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xFF SWAP5 SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x25F8 PUSH1 0x40 DUP4 ADD DUP7 DUP9 PUSH2 0x25BB JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x260B DUP2 DUP6 DUP8 PUSH2 0x25BB JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F1 CALLDATASIZE DUP4 PUSH2 0x2402 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2648 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x262C JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 AND DUP4 MSTORE PUSH1 0x20 DUP2 DUP2 DUP6 ADD MSTORE DUP5 MLOAD PUSH1 0xA0 DUP4 DUP7 ADD MSTORE PUSH2 0x2694 PUSH1 0xE0 DUP7 ADD DUP3 PUSH2 0x2622 JUMP JUMPDEST SWAP1 POP DUP2 DUP7 ADD MLOAD PUSH1 0x3F NOT DUP1 DUP8 DUP5 SUB ADD PUSH1 0x60 DUP9 ADD MSTORE PUSH2 0x26B1 DUP4 DUP4 PUSH2 0x2622 JUMP JUMPDEST DUP9 DUP7 ADD MLOAD DUP9 DUP3 SUB DUP4 ADD PUSH1 0x80 DUP11 ADD MSTORE DUP1 MLOAD DUP1 DUP4 MSTORE SWAP1 DUP7 ADD SWAP5 POP PUSH1 0x0 SWAP4 POP SWAP1 DUP6 ADD SWAP1 JUMPDEST DUP1 DUP5 LT ISZERO PUSH2 0x2704 JUMPI DUP5 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP7 ADD MLOAD DUP7 DUP4 ADD MSTORE SWAP4 DUP6 ADD SWAP4 PUSH1 0x1 SWAP4 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP7 ADD SWAP1 PUSH2 0x26D2 JUMP JUMPDEST POP PUSH1 0x60 DUP10 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA0 DUP10 ADD MSTORE PUSH1 0x80 DUP10 ADD MLOAD DUP9 DUP3 SUB DUP4 ADD PUSH1 0xC0 DUP11 ADD MSTORE SWAP6 POP PUSH2 0x2733 DUP2 DUP8 PUSH2 0x2622 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x5F1 JUMPI PUSH2 0x5F1 PUSH2 0x2741 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x278B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x5F1 JUMPI PUSH2 0x5F1 PUSH2 0x2741 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x27C3 JUMPI PUSH2 0x27C3 PUSH2 0x2741 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x21D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x27F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x27F9 DUP5 PUSH2 0x27CA JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD MLOAD SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD PUSH2 0x2810 DUP2 PUSH2 0x2058 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x180 DUP14 DUP16 SUB SLT ISZERO PUSH2 0x283E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP13 MLOAD SWAP12 POP PUSH1 0x20 DUP14 ADD MLOAD SWAP11 POP PUSH1 0x40 DUP14 ADD MLOAD SWAP10 POP PUSH1 0x60 DUP14 ADD MLOAD SWAP9 POP PUSH1 0x80 DUP14 ADD MLOAD SWAP8 POP PUSH1 0xA0 DUP14 ADD MLOAD SWAP7 POP PUSH1 0xC0 DUP14 ADD MLOAD SWAP6 POP PUSH1 0xE0 DUP14 ADD MLOAD SWAP5 POP PUSH2 0x100 DUP14 ADD MLOAD SWAP4 POP PUSH2 0x120 DUP14 ADD MLOAD SWAP3 POP PUSH2 0x140 DUP14 ADD MLOAD SWAP2 POP PUSH2 0x160 DUP14 ADD MLOAD PUSH5 0xFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x28A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x28CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x28D7 DUP6 PUSH2 0x27CA JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x28F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP7 ADD MLOAD SWAP1 SWAP4 POP PUSH2 0x2901 DUP2 PUSH2 0x21B8 JUMP JUMPDEST PUSH1 0x60 SWAP6 SWAP1 SWAP6 ADD MLOAD SWAP4 SWAP7 SWAP3 SWAP6 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2923 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2027 DUP2 PUSH2 0x21B8 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2943 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x294C DUP5 PUSH2 0x27CA JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD MLOAD PUSH2 0x295C DUP2 PUSH2 0x208A JUMP JUMPDEST DUP1 SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x5F1 JUMPI PUSH2 0x5F1 PUSH2 0x2741 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2993 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2027 DUP2 PUSH2 0x208A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x29B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2027 DUP3 PUSH2 0x27CA JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 0xE8 CALLVALUE SLOAD COINBASE DUP14 PUSH28 0x46D4F9B0DF12C20C22208F9FB701A507DAE2DED7F7FF3068AE64736F PUSH13 0x63430008130033000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        761,
        16053
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "CALLVALUE",
      "path": "11"
    },
    "6": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "8": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "12": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "REVERT",
      "path": "11"
    },
    "16": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "17": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "POP",
      "path": "11"
    },
    "18": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "21": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "LT",
      "path": "11"
    },
    "22": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x211"
    },
    "25": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "26": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "29": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "SHR",
      "path": "11"
    },
    "32": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "33": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x98B3C1F8"
    },
    "38": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "GT",
      "path": "11"
    },
    "39": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x125"
    },
    "42": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "43": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "44": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xC86D4040"
    },
    "49": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "GT",
      "path": "11"
    },
    "50": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xAD"
    },
    "53": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "54": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "55": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xD8BBA68F"
    },
    "60": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "GT",
      "path": "11"
    },
    "61": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x7C"
    },
    "64": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "65": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "66": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xD8BBA68F"
    },
    "71": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "EQ",
      "path": "11"
    },
    "72": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x560"
    },
    "75": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "76": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "77": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xE346FDFA"
    },
    "82": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "EQ",
      "path": "11"
    },
    "83": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x568"
    },
    "86": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "87": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "88": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xE48C59D8"
    },
    "93": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "EQ",
      "path": "11"
    },
    "94": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x57B"
    },
    "97": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "98": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "99": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xE9644410"
    },
    "104": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "EQ",
      "path": "11"
    },
    "105": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x58D"
    },
    "108": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "109": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "110": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xFCA4DF39"
    },
    "115": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "EQ",
      "path": "11"
    },
    "116": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x5A0"
    },
    "119": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "120": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "122": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "123": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "REVERT",
      "path": "11"
    },
    "124": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "125": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "126": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xC86D4040"
    },
    "131": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "EQ",
      "path": "11"
    },
    "132": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4C7"
    },
    "135": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "136": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "137": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xCA65A4FE"
    },
    "142": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "EQ",
      "path": "11"
    },
    "143": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4DA"
    },
    "146": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "147": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "148": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xCBEC3E30"
    },
    "153": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "EQ",
      "path": "11"
    },
    "154": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x501"
    },
    "157": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "158": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "159": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xD1451BE6"
    },
    "164": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "EQ",
      "path": "11"
    },
    "165": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x54D"
    },
    "168": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "169": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "171": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "172": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "REVERT",
      "path": "11"
    },
    "173": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "174": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "175": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xB0F479A1"
    },
    "180": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "GT",
      "path": "11"
    },
    "181": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF4"
    },
    "184": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "185": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "186": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xB0F479A1"
    },
    "191": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "EQ",
      "path": "11"
    },
    "192": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x416"
    },
    "195": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "196": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "197": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xB6B55F25"
    },
    "202": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "EQ",
      "path": "11"
    },
    "203": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x43C"
    },
    "206": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "207": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "208": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xB91DA80E"
    },
    "213": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "EQ",
      "path": "11"
    },
    "214": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x44F"
    },
    "217": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "218": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "219": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xBD193173"
    },
    "224": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "EQ",
      "path": "11"
    },
    "225": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4A1"
    },
    "228": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "229": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "230": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xC3F4A838"
    },
    "235": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "EQ",
      "path": "11"
    },
    "236": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4B4"
    },
    "239": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "240": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "242": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "243": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "REVERT",
      "path": "11"
    },
    "244": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "245": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "246": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x98B3C1F8"
    },
    "251": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "EQ",
      "path": "11"
    },
    "252": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3C0"
    },
    "255": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "256": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "257": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xA2A41A92"
    },
    "262": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "EQ",
      "path": "11"
    },
    "263": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3D3"
    },
    "266": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "267": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "268": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xA2FEB55A"
    },
    "273": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "EQ",
      "path": "11"
    },
    "274": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3FA"
    },
    "277": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "278": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "279": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xB007661B"
    },
    "284": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "EQ",
      "path": "11"
    },
    "285": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x40D"
    },
    "288": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "289": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "291": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "292": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "REVERT",
      "path": "11"
    },
    "293": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "294": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "295": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x3D2E2D61"
    },
    "300": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "GT",
      "path": "11"
    },
    "301": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1A8"
    },
    "304": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "305": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "306": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x7E96B20C"
    },
    "311": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "GT",
      "path": "11"
    },
    "312": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x177"
    },
    "315": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "316": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "317": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x7E96B20C"
    },
    "322": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "EQ",
      "path": "11"
    },
    "323": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x34D"
    },
    "326": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "327": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "328": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x85572FFB"
    },
    "333": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "EQ",
      "path": "11"
    },
    "334": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x360"
    },
    "337": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "338": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "339": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x8FB41EF5"
    },
    "344": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "EQ",
      "path": "11"
    },
    "345": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x373"
    },
    "348": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "349": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "350": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x97E8B613"
    },
    "355": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "EQ",
      "path": "11"
    },
    "356": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x386"
    },
    "359": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "360": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "361": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x982D1F18"
    },
    "366": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "EQ",
      "path": "11"
    },
    "367": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x399"
    },
    "370": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "371": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "373": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "374": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "REVERT",
      "path": "11"
    },
    "375": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "376": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "377": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x3D2E2D61"
    },
    "382": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "EQ",
      "path": "11"
    },
    "383": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2A7"
    },
    "386": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "387": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "388": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x60E39095"
    },
    "393": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "EQ",
      "path": "11"
    },
    "394": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2D2"
    },
    "397": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "398": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "399": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x67062580"
    },
    "404": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "EQ",
      "path": "11"
    },
    "405": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2FB"
    },
    "408": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "409": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "410": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x7ADC6710"
    },
    "415": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "EQ",
      "path": "11"
    },
    "416": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x322"
    },
    "419": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "420": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "422": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "423": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "REVERT",
      "path": "11"
    },
    "424": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "425": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "426": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x28D74CB6"
    },
    "431": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "GT",
      "path": "11"
    },
    "432": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1E4"
    },
    "435": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "436": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "437": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x28D74CB6"
    },
    "442": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "EQ",
      "path": "11"
    },
    "443": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x262"
    },
    "446": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "447": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "448": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x2B72DC26"
    },
    "453": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "EQ",
      "path": "11"
    },
    "454": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x275"
    },
    "457": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "458": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "459": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x335D92F3"
    },
    "464": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "EQ",
      "path": "11"
    },
    "465": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x28C"
    },
    "468": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "469": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "470": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x3BEDED9F"
    },
    "475": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "EQ",
      "path": "11"
    },
    "476": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x295"
    },
    "479": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "480": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "482": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "483": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "REVERT",
      "path": "11"
    },
    "484": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "485": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "486": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x1FFC9A7"
    },
    "491": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "EQ",
      "path": "11"
    },
    "492": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x216"
    },
    "495": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "496": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "497": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xFDFAA97"
    },
    "502": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "EQ",
      "path": "11"
    },
    "503": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x23E"
    },
    "506": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "507": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "508": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x1D34B4FF"
    },
    "513": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "EQ",
      "path": "11"
    },
    "514": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x24B"
    },
    "517": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "518": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "519": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x28D41DEF"
    },
    "524": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "EQ",
      "path": "11"
    },
    "525": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x258"
    },
    "528": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "529": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "530": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "532": {
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "533": {
      "first_revert": true,
      "fn": null,
      "offset": [
        761,
        16053
      ],
      "op": "REVERT",
      "path": "11"
    },
    "534": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1405,
        1614
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "535": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1405,
        1614
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x229"
    },
    "538": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1405,
        1614
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x224"
    },
    "541": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1405,
        1614
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "542": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1405,
        1614
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "544": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1405,
        1614
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x202E"
    },
    "547": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "i",
      "offset": [
        1405,
        1614
      ],
      "op": "JUMP",
      "path": "1"
    },
    "548": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1405,
        1614
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "549": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1405,
        1614
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5C0"
    },
    "552": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "i",
      "offset": [
        1405,
        1614
      ],
      "op": "JUMP",
      "path": "1"
    },
    "553": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1405,
        1614
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "554": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1405,
        1614
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "556": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1405,
        1614
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "557": {
      "op": "SWAP1"
    },
    "558": {
      "op": "ISZERO"
    },
    "559": {
      "op": "ISZERO"
    },
    "560": {
      "op": "DUP2"
    },
    "561": {
      "op": "MSTORE"
    },
    "562": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "564": {
      "op": "ADD"
    },
    "565": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1405,
        1614
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "566": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1405,
        1614
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "568": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1405,
        1614
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "569": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1405,
        1614
      ],
      "op": "DUP1",
      "path": "1"
    },
    "570": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1405,
        1614
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "571": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1405,
        1614
      ],
      "op": "SUB",
      "path": "1"
    },
    "572": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1405,
        1614
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "573": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1405,
        1614
      ],
      "op": "RETURN",
      "path": "1"
    },
    "574": {
      "offset": [
        2976,
        3012
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "575": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        2976,
        3012
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xF"
    },
    "577": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        2976,
        3012
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "578": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        2976,
        3012
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x229"
    },
    "581": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        2976,
        3012
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "582": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        2976,
        3012
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xFF"
    },
    "584": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        2976,
        3012
      ],
      "op": "AND",
      "path": "11"
    },
    "585": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        2976,
        3012
      ],
      "op": "DUP2",
      "path": "11"
    },
    "586": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        2976,
        3012
      ],
      "op": "JUMP",
      "path": "11"
    },
    "587": {
      "offset": [
        2477,
        2509
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "588": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        2477,
        2509
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x8"
    },
    "590": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        2477,
        2509
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "591": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        2477,
        2509
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x229"
    },
    "594": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        2477,
        2509
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "595": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        2477,
        2509
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xFF"
    },
    "597": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        2477,
        2509
      ],
      "op": "AND",
      "path": "11"
    },
    "598": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        2477,
        2509
      ],
      "op": "DUP2",
      "path": "11"
    },
    "599": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        2477,
        2509
      ],
      "op": "JUMP",
      "path": "11"
    },
    "600": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14729,
        14994
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "601": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14729,
        14994
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x260"
    },
    "604": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14729,
        14994
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x5F7"
    },
    "607": {
      "fn": "Slave.testingReturnFunds",
      "jump": "i",
      "offset": [
        14729,
        14994
      ],
      "op": "JUMP",
      "path": "11"
    },
    "608": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14729,
        14994
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "609": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14729,
        14994
      ],
      "op": "STOP",
      "path": "11"
    },
    "610": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12481,
        12903
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "611": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12481,
        12903
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x260"
    },
    "614": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12481,
        12903
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x270"
    },
    "617": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12481,
        12903
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "618": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12481,
        12903
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "620": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12481,
        12903
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x206D"
    },
    "623": {
      "fn": "Slave.sendDepositByNonce",
      "jump": "i",
      "offset": [
        12481,
        12903
      ],
      "op": "JUMP",
      "path": "11"
    },
    "624": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12481,
        12903
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "625": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12481,
        12903
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x76C"
    },
    "628": {
      "fn": "Slave.sendDepositByNonce",
      "jump": "i",
      "offset": [
        12481,
        12903
      ],
      "op": "JUMP",
      "path": "11"
    },
    "629": {
      "offset": [
        2516,
        2547
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "630": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2516,
        2547
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x27E"
    },
    "633": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2516,
        2547
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x9"
    },
    "635": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2516,
        2547
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "636": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2516,
        2547
      ],
      "op": "DUP2",
      "path": "11"
    },
    "637": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2516,
        2547
      ],
      "op": "JUMP",
      "path": "11"
    },
    "638": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2516,
        2547
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "639": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2516,
        2547
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "641": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2516,
        2547
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "642": {
      "op": "SWAP1"
    },
    "643": {
      "op": "DUP2"
    },
    "644": {
      "op": "MSTORE"
    },
    "645": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "647": {
      "op": "ADD"
    },
    "648": {
      "offset": [
        2516,
        2547
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x235"
    },
    "651": {
      "op": "JUMP"
    },
    "652": {
      "offset": [
        2611,
        2650
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "653": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2611,
        2650
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x27E"
    },
    "656": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2611,
        2650
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA"
    },
    "658": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2611,
        2650
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "659": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2611,
        2650
      ],
      "op": "DUP2",
      "path": "11"
    },
    "660": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2611,
        2650
      ],
      "op": "JUMP",
      "path": "11"
    },
    "661": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        15000,
        15074
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "662": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        15000,
        15074
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x260"
    },
    "665": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        15048,
        15060
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 0,
      "value": "0x8"
    },
    "667": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        15048,
        15067
      ],
      "op": "DUP1",
      "path": "11"
    },
    "668": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        15048,
        15067
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "669": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "671": {
      "op": "NOT"
    },
    "672": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        15048,
        15067
      ],
      "op": "AND",
      "path": "11"
    },
    "673": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        15063,
        15067
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "675": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        15048,
        15067
      ],
      "op": "OR",
      "path": "11"
    },
    "676": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        15048,
        15067
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "677": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        15048,
        15067
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "678": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        15000,
        15074
      ],
      "op": "JUMP",
      "path": "11"
    },
    "679": {
      "offset": [
        2194,
        2238
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "680": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2194,
        2238
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x5"
    },
    "682": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2194,
        2238
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "683": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2194,
        2238
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2BA"
    },
    "686": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2194,
        2238
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "687": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "689": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "691": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "693": {
      "op": "SHL"
    },
    "694": {
      "op": "SUB"
    },
    "695": {
      "offset": [
        2194,
        2238
      ],
      "op": "AND",
      "path": "11"
    },
    "696": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2194,
        2238
      ],
      "op": "DUP2",
      "path": "11"
    },
    "697": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2194,
        2238
      ],
      "op": "JUMP",
      "path": "11"
    },
    "698": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2194,
        2238
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "699": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2194,
        2238
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "701": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2194,
        2238
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "704": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "706": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "708": {
      "op": "SHL"
    },
    "709": {
      "op": "SUB"
    },
    "710": {
      "op": "SWAP1"
    },
    "711": {
      "op": "SWAP2"
    },
    "712": {
      "op": "AND"
    },
    "713": {
      "op": "DUP2"
    },
    "714": {
      "op": "MSTORE"
    },
    "715": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "717": {
      "op": "ADD"
    },
    "718": {
      "offset": [
        2194,
        2238
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x235"
    },
    "721": {
      "op": "JUMP"
    },
    "722": {
      "offset": [
        2916,
        2969
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "723": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2916,
        2969
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2BA"
    },
    "726": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2916,
        2969
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E0"
    },
    "729": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2916,
        2969
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "730": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2916,
        2969
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "732": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2916,
        2969
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x206D"
    },
    "735": {
      "fn": "Slave.testingActivateNode",
      "jump": "i",
      "offset": [
        2916,
        2969
      ],
      "op": "JUMP",
      "path": "11"
    },
    "736": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2916,
        2969
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "737": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2916,
        2969
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE"
    },
    "739": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2916,
        2969
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "741": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2916,
        2969
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "742": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2916,
        2969
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "744": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2916,
        2969
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "745": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2916,
        2969
      ],
      "op": "DUP2",
      "path": "11"
    },
    "746": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2916,
        2969
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "747": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2916,
        2969
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "749": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2916,
        2969
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "750": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2916,
        2969
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "751": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2916,
        2969
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "756": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "758": {
      "op": "SHL"
    },
    "759": {
      "op": "SUB"
    },
    "760": {
      "offset": [
        2916,
        2969
      ],
      "op": "AND",
      "path": "11"
    },
    "761": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2916,
        2969
      ],
      "op": "DUP2",
      "path": "11"
    },
    "762": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2916,
        2969
      ],
      "op": "JUMP",
      "path": "11"
    },
    "763": {
      "offset": [
        1884,
        1938
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "764": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        1884,
        1938
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2BA"
    },
    "767": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        1884,
        1938
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x0"
    },
    "800": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        1884,
        1938
      ],
      "op": "DUP2",
      "path": "11"
    },
    "801": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        1884,
        1938
      ],
      "op": "JUMP",
      "path": "11"
    },
    "802": {
      "offset": [
        2854,
        2909
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "803": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2854,
        2909
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x335"
    },
    "806": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2854,
        2909
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x330"
    },
    "809": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2854,
        2909
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "810": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2854,
        2909
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "812": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2854,
        2909
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x209F"
    },
    "815": {
      "fn": "Slave.testingActivateNode",
      "jump": "i",
      "offset": [
        2854,
        2909
      ],
      "op": "JUMP",
      "path": "11"
    },
    "816": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2854,
        2909
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "817": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2854,
        2909
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x860"
    },
    "820": {
      "fn": "Slave.testingActivateNode",
      "jump": "i",
      "offset": [
        2854,
        2909
      ],
      "op": "JUMP",
      "path": "11"
    },
    "821": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2854,
        2909
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "822": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2854,
        2909
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "824": {
      "fn": "Slave.testingActivateNode",
      "offset": [
        2854,
        2909
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "825": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "827": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "829": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "831": {
      "op": "SHL"
    },
    "832": {
      "op": "SUB"
    },
    "833": {
      "op": "SWAP1"
    },
    "834": {
      "op": "SWAP2"
    },
    "835": {
      "op": "AND"
    },
    "836": {
      "op": "DUP2"
    },
    "837": {
      "op": "MSTORE"
    },
    "838": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "840": {
      "op": "ADD"
    },
    "841": {
      "offset": [
        2854,
        2909
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x235"
    },
    "844": {
      "op": "JUMP"
    },
    "845": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13511,
        13916
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "846": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13511,
        13916
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x260"
    },
    "849": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13511,
        13916
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x35B"
    },
    "852": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13511,
        13916
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "853": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13511,
        13916
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "855": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13511,
        13916
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2113"
    },
    "858": {
      "fn": "Slave.claimAssetsFromBridge",
      "jump": "i",
      "offset": [
        13511,
        13916
      ],
      "op": "JUMP",
      "path": "11"
    },
    "859": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13511,
        13916
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "860": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13511,
        13916
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x8AC"
    },
    "863": {
      "fn": "Slave.claimAssetsFromBridge",
      "jump": "i",
      "offset": [
        13511,
        13916
      ],
      "op": "JUMP",
      "path": "11"
    },
    "864": {
      "fn": "CCIPReceiver.ccipReceive",
      "offset": [
        1660,
        1790
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "865": {
      "fn": "CCIPReceiver.ccipReceive",
      "offset": [
        1660,
        1790
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x260"
    },
    "868": {
      "fn": "CCIPReceiver.ccipReceive",
      "offset": [
        1660,
        1790
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x36E"
    },
    "871": {
      "fn": "CCIPReceiver.ccipReceive",
      "offset": [
        1660,
        1790
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "872": {
      "fn": "CCIPReceiver.ccipReceive",
      "offset": [
        1660,
        1790
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "874": {
      "fn": "CCIPReceiver.ccipReceive",
      "offset": [
        1660,
        1790
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x217E"
    },
    "877": {
      "fn": "CCIPReceiver.ccipReceive",
      "jump": "i",
      "offset": [
        1660,
        1790
      ],
      "op": "JUMP",
      "path": "1"
    },
    "878": {
      "fn": "CCIPReceiver.ccipReceive",
      "offset": [
        1660,
        1790
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "879": {
      "fn": "CCIPReceiver.ccipReceive",
      "offset": [
        1660,
        1790
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9A5"
    },
    "882": {
      "fn": "CCIPReceiver.ccipReceive",
      "jump": "i",
      "offset": [
        1660,
        1790
      ],
      "op": "JUMP",
      "path": "1"
    },
    "883": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15080,
        16051
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "884": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15080,
        16051
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x27E"
    },
    "887": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15080,
        16051
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x381"
    },
    "890": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15080,
        16051
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "891": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15080,
        16051
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "893": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15080,
        16051
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x22DC"
    },
    "896": {
      "fn": "Slave.getLinkFees",
      "jump": "i",
      "offset": [
        15080,
        16051
      ],
      "op": "JUMP",
      "path": "11"
    },
    "897": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15080,
        16051
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "898": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15080,
        16051
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA04"
    },
    "901": {
      "fn": "Slave.getLinkFees",
      "jump": "i",
      "offset": [
        15080,
        16051
      ],
      "op": "JUMP",
      "path": "11"
    },
    "902": {
      "offset": [
        2146,
        2188
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "903": {
      "fn": "Slave.getLinkFees",
      "offset": [
        2146,
        2188
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "905": {
      "fn": "Slave.getLinkFees",
      "offset": [
        2146,
        2188
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "906": {
      "fn": "Slave.getLinkFees",
      "offset": [
        2146,
        2188
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2BA"
    },
    "909": {
      "fn": "Slave.getLinkFees",
      "offset": [
        2146,
        2188
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "910": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "912": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "914": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "916": {
      "op": "SHL"
    },
    "917": {
      "op": "SUB"
    },
    "918": {
      "offset": [
        2146,
        2188
      ],
      "op": "AND",
      "path": "11"
    },
    "919": {
      "fn": "Slave.getLinkFees",
      "offset": [
        2146,
        2188
      ],
      "op": "DUP2",
      "path": "11"
    },
    "920": {
      "fn": "Slave.getLinkFees",
      "offset": [
        2146,
        2188
      ],
      "op": "JUMP",
      "path": "11"
    },
    "921": {
      "offset": [
        1944,
        1995
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "922": {
      "fn": "Slave.getLinkFees",
      "offset": [
        1944,
        1995
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2BA"
    },
    "925": {
      "fn": "Slave.getLinkFees",
      "offset": [
        1944,
        1995
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x0"
    },
    "958": {
      "fn": "Slave.getLinkFees",
      "offset": [
        1944,
        1995
      ],
      "op": "DUP2",
      "path": "11"
    },
    "959": {
      "fn": "Slave.getLinkFees",
      "offset": [
        1944,
        1995
      ],
      "op": "JUMP",
      "path": "11"
    },
    "960": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7693,
        8001
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "961": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7693,
        8001
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x27E"
    },
    "964": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7693,
        8001
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3CE"
    },
    "967": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7693,
        8001
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "968": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7693,
        8001
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "970": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7693,
        8001
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x233D"
    },
    "973": {
      "fn": "Slave.calculateSharesValue",
      "jump": "i",
      "offset": [
        7693,
        8001
      ],
      "op": "JUMP",
      "path": "11"
    },
    "974": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7693,
        8001
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "975": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7693,
        8001
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xB3A"
    },
    "978": {
      "fn": "Slave.calculateSharesValue",
      "jump": "i",
      "offset": [
        7693,
        8001
      ],
      "op": "JUMP",
      "path": "11"
    },
    "979": {
      "offset": [
        1838,
        1878
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "980": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        1838,
        1878
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2BA"
    },
    "983": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        1838,
        1878
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x0"
    },
    "1016": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        1838,
        1878
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1017": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        1838,
        1878
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1018": {
      "offset": [
        2656,
        2688
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1019": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        2656,
        2688
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xB"
    },
    "1021": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        2656,
        2688
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1022": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        2656,
        2688
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x335"
    },
    "1025": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        2656,
        2688
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1026": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1028": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1030": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1032": {
      "op": "SHL"
    },
    "1033": {
      "op": "SUB"
    },
    "1034": {
      "offset": [
        2656,
        2688
      ],
      "op": "AND",
      "path": "11"
    },
    "1035": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        2656,
        2688
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1036": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        2656,
        2688
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1037": {
      "offset": [
        3050,
        3082
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1038": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        3050,
        3082
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x27E"
    },
    "1041": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        3050,
        3082
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x10"
    },
    "1043": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        3050,
        3082
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1044": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        3050,
        3082
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1045": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        3050,
        3082
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1046": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        2205,
        2295
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1047": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        2277,
        2289
      ],
      "op": "PUSH32",
      "path": "1",
      "statement": 1,
      "value": "0x0"
    },
    "1080": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        2205,
        2295
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2BA"
    },
    "1083": {
      "fn": "CCIPReceiver.getRouter",
      "offset": [
        2205,
        2295
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1084": {
      "fn": "Slave.deposit",
      "offset": [
        11244,
        12475
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1085": {
      "fn": "Slave.deposit",
      "offset": [
        11244,
        12475
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x260"
    },
    "1088": {
      "fn": "Slave.deposit",
      "offset": [
        11244,
        12475
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x44A"
    },
    "1091": {
      "fn": "Slave.deposit",
      "offset": [
        11244,
        12475
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "1092": {
      "fn": "Slave.deposit",
      "offset": [
        11244,
        12475
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1094": {
      "fn": "Slave.deposit",
      "offset": [
        11244,
        12475
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x233D"
    },
    "1097": {
      "fn": "Slave.deposit",
      "jump": "i",
      "offset": [
        11244,
        12475
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1098": {
      "fn": "Slave.deposit",
      "offset": [
        11244,
        12475
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1099": {
      "fn": "Slave.deposit",
      "offset": [
        11244,
        12475
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xBF7"
    },
    "1102": {
      "fn": "Slave.deposit",
      "jump": "i",
      "offset": [
        11244,
        12475
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1103": {
      "offset": [
        2786,
        2848
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1104": {
      "fn": "Slave.deposit",
      "offset": [
        2786,
        2848
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x482"
    },
    "1107": {
      "fn": "Slave.deposit",
      "offset": [
        2786,
        2848
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x45D"
    },
    "1110": {
      "fn": "Slave.deposit",
      "offset": [
        2786,
        2848
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "1111": {
      "fn": "Slave.deposit",
      "offset": [
        2786,
        2848
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1113": {
      "fn": "Slave.deposit",
      "offset": [
        2786,
        2848
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x206D"
    },
    "1116": {
      "fn": "Slave.deposit",
      "jump": "i",
      "offset": [
        2786,
        2848
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1117": {
      "fn": "Slave.deposit",
      "offset": [
        2786,
        2848
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1118": {
      "fn": "Slave.deposit",
      "offset": [
        2786,
        2848
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xC"
    },
    "1120": {
      "fn": "Slave.deposit",
      "offset": [
        2786,
        2848
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1122": {
      "fn": "Slave.deposit",
      "offset": [
        2786,
        2848
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1123": {
      "fn": "Slave.deposit",
      "offset": [
        2786,
        2848
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1125": {
      "fn": "Slave.deposit",
      "offset": [
        2786,
        2848
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1126": {
      "fn": "Slave.deposit",
      "offset": [
        2786,
        2848
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1127": {
      "fn": "Slave.deposit",
      "offset": [
        2786,
        2848
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1128": {
      "fn": "Slave.deposit",
      "offset": [
        2786,
        2848
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1130": {
      "fn": "Slave.deposit",
      "offset": [
        2786,
        2848
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1131": {
      "fn": "Slave.deposit",
      "offset": [
        2786,
        2848
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1132": {
      "fn": "Slave.deposit",
      "offset": [
        2786,
        2848
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1133": {
      "fn": "Slave.deposit",
      "offset": [
        2786,
        2848
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1134": {
      "fn": "Slave.deposit",
      "offset": [
        2786,
        2848
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "1136": {
      "fn": "Slave.deposit",
      "offset": [
        2786,
        2848
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1137": {
      "fn": "Slave.deposit",
      "offset": [
        2786,
        2848
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1138": {
      "fn": "Slave.deposit",
      "offset": [
        2786,
        2848
      ],
      "op": "ADD",
      "path": "11"
    },
    "1139": {
      "fn": "Slave.deposit",
      "offset": [
        2786,
        2848
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1144": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1146": {
      "op": "SHL"
    },
    "1147": {
      "op": "SUB"
    },
    "1148": {
      "offset": [
        2786,
        2848
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1149": {
      "fn": "Slave.deposit",
      "offset": [
        2786,
        2848
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1150": {
      "fn": "Slave.deposit",
      "offset": [
        2786,
        2848
      ],
      "op": "AND",
      "path": "11"
    },
    "1151": {
      "fn": "Slave.deposit",
      "offset": [
        2786,
        2848
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1152": {
      "fn": "Slave.deposit",
      "offset": [
        2786,
        2848
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1153": {
      "fn": "Slave.deposit",
      "offset": [
        2786,
        2848
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1154": {
      "fn": "Slave.deposit",
      "offset": [
        2786,
        2848
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1155": {
      "fn": "Slave.deposit",
      "offset": [
        2786,
        2848
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1157": {
      "fn": "Slave.deposit",
      "offset": [
        2786,
        2848
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1158": {
      "fn": "Slave.deposit",
      "offset": [
        2786,
        2848
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1163": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1165": {
      "op": "SHL"
    },
    "1166": {
      "op": "SUB"
    },
    "1167": {
      "op": "SWAP1"
    },
    "1168": {
      "op": "SWAP4"
    },
    "1169": {
      "op": "AND"
    },
    "1170": {
      "op": "DUP4"
    },
    "1171": {
      "op": "MSTORE"
    },
    "1172": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1174": {
      "op": "DUP4"
    },
    "1175": {
      "op": "ADD"
    },
    "1176": {
      "op": "SWAP2"
    },
    "1177": {
      "op": "SWAP1"
    },
    "1178": {
      "op": "SWAP2"
    },
    "1179": {
      "op": "MSTORE"
    },
    "1180": {
      "op": "ADD"
    },
    "1181": {
      "offset": [
        2786,
        2848
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x235"
    },
    "1184": {
      "op": "JUMP"
    },
    "1185": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6543,
        7001
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1186": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6543,
        7001
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x260"
    },
    "1189": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6543,
        7001
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4AF"
    },
    "1192": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6543,
        7001
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "1193": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6543,
        7001
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1195": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6543,
        7001
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x24B0"
    },
    "1198": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "jump": "i",
      "offset": [
        6543,
        7001
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1199": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6543,
        7001
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1200": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6543,
        7001
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1032"
    },
    "1203": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "jump": "i",
      "offset": [
        6543,
        7001
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1204": {
      "offset": [
        2114,
        2139
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1205": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2114,
        2139
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "1207": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2114,
        2139
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1208": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2114,
        2139
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2BA"
    },
    "1211": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2114,
        2139
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1216": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1218": {
      "op": "SHL"
    },
    "1219": {
      "op": "SUB"
    },
    "1220": {
      "offset": [
        2114,
        2139
      ],
      "op": "AND",
      "path": "11"
    },
    "1221": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2114,
        2139
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1222": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2114,
        2139
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1223": {
      "offset": [
        2084,
        2108
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1224": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2084,
        2108
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "1226": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2084,
        2108
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1227": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2084,
        2108
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2BA"
    },
    "1230": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2084,
        2108
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1235": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1237": {
      "op": "SHL"
    },
    "1238": {
      "op": "SUB"
    },
    "1239": {
      "offset": [
        2084,
        2108
      ],
      "op": "AND",
      "path": "11"
    },
    "1240": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2084,
        2108
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1241": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2084,
        2108
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1242": {
      "offset": [
        1741,
        1799
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1243": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        1741,
        1799
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4E9"
    },
    "1246": {
      "offset": [
        1779,
        1799
      ],
      "op": "PUSH8",
      "path": "11",
      "value": "0xDE41BA4FC9D91AD9"
    },
    "1255": {
      "offset": [
        1741,
        1799
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1256": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        1741,
        1799
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1257": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        1741,
        1799
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1258": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        1741,
        1799
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1260": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        1741,
        1799
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1261": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1265": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1267": {
      "op": "SHL"
    },
    "1268": {
      "op": "SUB"
    },
    "1269": {
      "op": "SWAP1"
    },
    "1270": {
      "op": "SWAP2"
    },
    "1271": {
      "op": "AND"
    },
    "1272": {
      "op": "DUP2"
    },
    "1273": {
      "op": "MSTORE"
    },
    "1274": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1276": {
      "op": "ADD"
    },
    "1277": {
      "offset": [
        1741,
        1799
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x235"
    },
    "1280": {
      "op": "JUMP"
    },
    "1281": {
      "offset": [
        2356,
        2440
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1282": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2356,
        2440
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x531"
    },
    "1285": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2356,
        2440
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x50F"
    },
    "1288": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2356,
        2440
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "1289": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2356,
        2440
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1291": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2356,
        2440
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x233D"
    },
    "1294": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "jump": "i",
      "offset": [
        2356,
        2440
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1295": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2356,
        2440
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1296": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2356,
        2440
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x6"
    },
    "1298": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2356,
        2440
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1300": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2356,
        2440
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1301": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2356,
        2440
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1303": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2356,
        2440
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1304": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2356,
        2440
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1305": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2356,
        2440
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1306": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2356,
        2440
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1308": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2356,
        2440
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1309": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2356,
        2440
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1310": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2356,
        2440
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1311": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2356,
        2440
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1312": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2356,
        2440
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "1314": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2356,
        2440
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1315": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2356,
        2440
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1316": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2356,
        2440
      ],
      "op": "ADD",
      "path": "11"
    },
    "1317": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2356,
        2440
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1318": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2356,
        2440
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xFFFFFFFF"
    },
    "1323": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2356,
        2440
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1324": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2356,
        2440
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1325": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2356,
        2440
      ],
      "op": "AND",
      "path": "11"
    },
    "1326": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2356,
        2440
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1327": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2356,
        2440
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1328": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2356,
        2440
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1329": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2356,
        2440
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1330": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2356,
        2440
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1332": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2356,
        2440
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1333": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2356,
        2440
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1334": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "1339": {
      "op": "SWAP1"
    },
    "1340": {
      "op": "SWAP4"
    },
    "1341": {
      "op": "AND"
    },
    "1342": {
      "op": "DUP4"
    },
    "1343": {
      "op": "MSTORE"
    },
    "1344": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1346": {
      "op": "DUP4"
    },
    "1347": {
      "op": "ADD"
    },
    "1348": {
      "op": "SWAP2"
    },
    "1349": {
      "op": "SWAP1"
    },
    "1350": {
      "op": "SWAP2"
    },
    "1351": {
      "op": "MSTORE"
    },
    "1352": {
      "op": "ADD"
    },
    "1353": {
      "offset": [
        2356,
        2440
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x235"
    },
    "1356": {
      "op": "JUMP"
    },
    "1357": {
      "offset": [
        2446,
        2470
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1358": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2446,
        2470
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x27E"
    },
    "1361": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2446,
        2470
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x55B"
    },
    "1364": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2446,
        2470
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "1365": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2446,
        2470
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1367": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2446,
        2470
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x233D"
    },
    "1370": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "jump": "i",
      "offset": [
        2446,
        2470
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1371": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2446,
        2470
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1372": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2446,
        2470
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x109F"
    },
    "1375": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "jump": "i",
      "offset": [
        2446,
        2470
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1376": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12909,
        13506
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1377": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12909,
        13506
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x260"
    },
    "1380": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12909,
        13506
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x10C0"
    },
    "1383": {
      "fn": "Slave.sendAaveData",
      "jump": "i",
      "offset": [
        12909,
        13506
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1384": {
      "fn": "Slave.warpAssets",
      "offset": [
        5154,
        6185
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1385": {
      "fn": "Slave.warpAssets",
      "offset": [
        5154,
        6185
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x260"
    },
    "1388": {
      "fn": "Slave.warpAssets",
      "offset": [
        5154,
        6185
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x576"
    },
    "1391": {
      "fn": "Slave.warpAssets",
      "offset": [
        5154,
        6185
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "1392": {
      "fn": "Slave.warpAssets",
      "offset": [
        5154,
        6185
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1394": {
      "fn": "Slave.warpAssets",
      "offset": [
        5154,
        6185
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x24B0"
    },
    "1397": {
      "fn": "Slave.warpAssets",
      "jump": "i",
      "offset": [
        5154,
        6185
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1398": {
      "fn": "Slave.warpAssets",
      "offset": [
        5154,
        6185
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1399": {
      "fn": "Slave.warpAssets",
      "offset": [
        5154,
        6185
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x11E0"
    },
    "1402": {
      "fn": "Slave.warpAssets",
      "jump": "i",
      "offset": [
        5154,
        6185
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1403": {
      "offset": [
        3019,
        3044
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1404": {
      "fn": "Slave.warpAssets",
      "offset": [
        3019,
        3044
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xF"
    },
    "1406": {
      "fn": "Slave.warpAssets",
      "offset": [
        3019,
        3044
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1407": {
      "fn": "Slave.warpAssets",
      "offset": [
        3019,
        3044
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x229"
    },
    "1410": {
      "fn": "Slave.warpAssets",
      "offset": [
        3019,
        3044
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1411": {
      "fn": "Slave.warpAssets",
      "offset": [
        3019,
        3044
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x100"
    },
    "1414": {
      "fn": "Slave.warpAssets",
      "offset": [
        3019,
        3044
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1415": {
      "fn": "Slave.warpAssets",
      "offset": [
        3019,
        3044
      ],
      "op": "DIV",
      "path": "11"
    },
    "1416": {
      "fn": "Slave.warpAssets",
      "offset": [
        3019,
        3044
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xFF"
    },
    "1418": {
      "fn": "Slave.warpAssets",
      "offset": [
        3019,
        3044
      ],
      "op": "AND",
      "path": "11"
    },
    "1419": {
      "fn": "Slave.warpAssets",
      "offset": [
        3019,
        3044
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1420": {
      "fn": "Slave.warpAssets",
      "offset": [
        3019,
        3044
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1421": {
      "fn": "Slave.withdraw",
      "offset": [
        7007,
        7651
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1422": {
      "fn": "Slave.withdraw",
      "offset": [
        7007,
        7651
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x260"
    },
    "1425": {
      "fn": "Slave.withdraw",
      "offset": [
        7007,
        7651
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x59B"
    },
    "1428": {
      "fn": "Slave.withdraw",
      "offset": [
        7007,
        7651
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "1429": {
      "fn": "Slave.withdraw",
      "offset": [
        7007,
        7651
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1431": {
      "fn": "Slave.withdraw",
      "offset": [
        7007,
        7651
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x24B0"
    },
    "1434": {
      "fn": "Slave.withdraw",
      "jump": "i",
      "offset": [
        7007,
        7651
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1435": {
      "fn": "Slave.withdraw",
      "offset": [
        7007,
        7651
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1436": {
      "fn": "Slave.withdraw",
      "offset": [
        7007,
        7651
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1434"
    },
    "1439": {
      "fn": "Slave.withdraw",
      "jump": "i",
      "offset": [
        7007,
        7651
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1440": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4774,
        4926
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1441": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4774,
        4926
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x5B3"
    },
    "1444": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4774,
        4926
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x5AE"
    },
    "1447": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4774,
        4926
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "1448": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4774,
        4926
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1450": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4774,
        4926
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x24E4"
    },
    "1453": {
      "fn": "Slave.getUserNonces",
      "jump": "i",
      "offset": [
        4774,
        4926
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1454": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4774,
        4926
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1455": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4774,
        4926
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x164F"
    },
    "1458": {
      "fn": "Slave.getUserNonces",
      "jump": "i",
      "offset": [
        4774,
        4926
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1459": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4774,
        4926
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1460": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4774,
        4926
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1462": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4774,
        4926
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1463": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4774,
        4926
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x235"
    },
    "1466": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4774,
        4926
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1467": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4774,
        4926
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1468": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4774,
        4926
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2501"
    },
    "1471": {
      "fn": "Slave.getUserNonces",
      "jump": "i",
      "offset": [
        4774,
        4926
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1472": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1405,
        1614
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1473": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1490,
        1494
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1479": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1481": {
      "op": "SHL"
    },
    "1482": {
      "op": "SUB"
    },
    "1483": {
      "op": "NOT"
    },
    "1484": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1565
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 2
    },
    "1485": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1565
      ],
      "op": "AND",
      "path": "1"
    },
    "1486": {
      "op": "PUSH4",
      "value": "0x85572FFB"
    },
    "1491": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1493": {
      "op": "SHL"
    },
    "1494": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1565
      ],
      "op": "EQ",
      "path": "1"
    },
    "1495": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1565
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1496": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1609
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5F1"
    },
    "1499": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1609
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1500": {
      "op": "POP"
    },
    "1501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1505": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1507": {
      "op": "SHL"
    },
    "1508": {
      "op": "SUB"
    },
    "1509": {
      "op": "NOT"
    },
    "1510": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1569,
        1609
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1511": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1569,
        1609
      ],
      "op": "AND",
      "path": "1"
    },
    "1512": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "1517": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1519": {
      "op": "SHL"
    },
    "1520": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1569,
        1609
      ],
      "op": "EQ",
      "path": "1"
    },
    "1521": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1509,
        1609
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1522": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1502,
        1609
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1523": {
      "fn": "CCIPReceiver.supportsInterface",
      "offset": [
        1405,
        1614
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1524": {
      "op": "POP"
    },
    "1525": {
      "op": "POP"
    },
    "1526": {
      "fn": "CCIPReceiver.supportsInterface",
      "jump": "o",
      "offset": [
        1405,
        1614
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1527": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14729,
        14994
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1528": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14801,
        14811
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "1530": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14801,
        14811
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1531": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1533": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1534": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1539": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1541": {
      "op": "SHL"
    },
    "1542": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1543": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1544": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14831,
        14835
      ],
      "op": "ADDRESS",
      "path": "11"
    },
    "1545": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1547": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1548": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "ADD",
      "path": "11"
    },
    "1549": {
      "op": "MSTORE"
    },
    "1550": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14776,
        14791
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1552": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14776,
        14791
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1557": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1559": {
      "op": "SHL"
    },
    "1560": {
      "op": "SUB"
    },
    "1561": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14801,
        14811
      ],
      "op": "AND",
      "path": "11"
    },
    "1562": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14801,
        14811
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1563": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14822
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x70A08231"
    },
    "1568": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14822
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1569": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1571": {
      "op": "ADD"
    },
    "1572": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1574": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1576": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1577": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1578": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1579": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "SUB",
      "path": "11"
    },
    "1580": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1581": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "DUP7",
      "path": "11"
    },
    "1582": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "GAS",
      "path": "11"
    },
    "1583": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "1584": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1585": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1586": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1587": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x640"
    },
    "1590": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1591": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1592": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1594": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1595": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "1596": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1597": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1599": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1600": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1601": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "POP",
      "path": "11"
    },
    "1602": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "POP",
      "path": "11"
    },
    "1603": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "POP",
      "path": "11"
    },
    "1604": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "POP",
      "path": "11"
    },
    "1605": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1607": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1608": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1609": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "1611": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "NOT",
      "path": "11"
    },
    "1612": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "1614": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1615": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "ADD",
      "path": "11"
    },
    "1616": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "AND",
      "path": "11"
    },
    "1617": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1618": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "ADD",
      "path": "11"
    },
    "1619": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1620": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1622": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1623": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "POP",
      "path": "11"
    },
    "1624": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1625": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "ADD",
      "path": "11"
    },
    "1626": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1627": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x664"
    },
    "1630": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1631": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1632": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x254E"
    },
    "1635": {
      "fn": "Slave.testingReturnFunds",
      "jump": "i",
      "offset": [
        14794,
        14837
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1636": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14794,
        14837
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1637": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14776,
        14837
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1638": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14776,
        14837
      ],
      "op": "POP",
      "path": "11"
    },
    "1639": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14848,
        14860
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1641": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14863,
        14873
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x670"
    },
    "1644": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14863,
        14871
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x16ED"
    },
    "1647": {
      "fn": "Slave.testingReturnFunds",
      "jump": "i",
      "offset": [
        14863,
        14873
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1648": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14863,
        14873
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1649": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14891,
        14901
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 3,
      "value": "0x3"
    },
    "1651": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14891,
        14901
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1652": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1654": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1655": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "1660": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1662": {
      "op": "SHL"
    },
    "1663": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1664": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1669": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1671": {
      "op": "SHL"
    },
    "1672": {
      "op": "SUB"
    },
    "1673": {
      "op": "DUP1"
    },
    "1674": {
      "op": "DUP5"
    },
    "1675": {
      "op": "AND"
    },
    "1676": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1678": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1679": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "ADD",
      "path": "11"
    },
    "1680": {
      "op": "MSTORE"
    },
    "1681": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1683": {
      "op": "DUP3"
    },
    "1684": {
      "op": "ADD"
    },
    "1685": {
      "op": "DUP7"
    },
    "1686": {
      "op": "SWAP1"
    },
    "1687": {
      "op": "MSTORE"
    },
    "1688": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14848,
        14873
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "1689": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14848,
        14873
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "1690": {
      "op": "POP"
    },
    "1691": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14891,
        14901
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1692": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14891,
        14901
      ],
      "op": "AND",
      "path": "11"
    },
    "1693": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14891,
        14901
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1694": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14910
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x95EA7B3"
    },
    "1699": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14910
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1700": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1702": {
      "op": "ADD"
    },
    "1703": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1705": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1707": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1708": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1709": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1710": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "SUB",
      "path": "11"
    },
    "1711": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1712": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1714": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "DUP8",
      "path": "11"
    },
    "1715": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "GAS",
      "path": "11"
    },
    "1716": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "CALL",
      "path": "11"
    },
    "1717": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1718": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1719": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1720": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x6C5"
    },
    "1723": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1724": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1725": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1727": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1728": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "1729": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1730": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1732": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1733": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1734": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "POP",
      "path": "11"
    },
    "1735": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "POP",
      "path": "11"
    },
    "1736": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "POP",
      "path": "11"
    },
    "1737": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "POP",
      "path": "11"
    },
    "1738": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1740": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1741": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1742": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "1744": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "NOT",
      "path": "11"
    },
    "1745": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "1747": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1748": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "ADD",
      "path": "11"
    },
    "1749": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "AND",
      "path": "11"
    },
    "1750": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1751": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "ADD",
      "path": "11"
    },
    "1752": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1753": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1755": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1756": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "POP",
      "path": "11"
    },
    "1757": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1758": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "ADD",
      "path": "11"
    },
    "1759": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1760": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x6E9"
    },
    "1763": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1764": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1765": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2567"
    },
    "1768": {
      "fn": "Slave.testingReturnFunds",
      "jump": "i",
      "offset": [
        14884,
        14925
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1769": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14884,
        14925
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1770": {
      "op": "POP"
    },
    "1771": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14956,
        14965
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 4,
      "value": "0x2"
    },
    "1773": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14956,
        14965
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1774": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1776": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1777": {
      "op": "PUSH4",
      "value": "0x1A4CA37B"
    },
    "1782": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "1784": {
      "op": "SHL"
    },
    "1785": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1786": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1791": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1793": {
      "op": "SHL"
    },
    "1794": {
      "op": "SUB"
    },
    "1795": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14956,
        14965
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1796": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14956,
        14965
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1797": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14956,
        14965
      ],
      "op": "AND",
      "path": "11"
    },
    "1798": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1800": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1801": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "ADD",
      "path": "11"
    },
    "1802": {
      "op": "MSTORE"
    },
    "1803": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1805": {
      "op": "DUP2"
    },
    "1806": {
      "op": "ADD"
    },
    "1807": {
      "op": "DUP5"
    },
    "1808": {
      "op": "SWAP1"
    },
    "1809": {
      "op": "MSTORE"
    },
    "1810": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14976,
        14986
      ],
      "op": "CALLER",
      "path": "11"
    },
    "1811": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1813": {
      "op": "DUP3"
    },
    "1814": {
      "op": "ADD"
    },
    "1815": {
      "op": "MSTORE"
    },
    "1816": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14955
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1817": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14955
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1818": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14955
      ],
      "op": "AND",
      "path": "11"
    },
    "1819": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14955
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1820": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14955
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x69328DEC"
    },
    "1825": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14955
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1826": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1828": {
      "op": "ADD"
    },
    "1829": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1831": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1833": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1834": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1835": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1836": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "SUB",
      "path": "11"
    },
    "1837": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1838": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1840": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "DUP8",
      "path": "11"
    },
    "1841": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "GAS",
      "path": "11"
    },
    "1842": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "CALL",
      "path": "11"
    },
    "1843": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1844": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1845": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1846": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x743"
    },
    "1849": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1850": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1851": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1853": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1854": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "1855": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1856": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1858": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1859": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1860": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "POP",
      "path": "11"
    },
    "1861": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "POP",
      "path": "11"
    },
    "1862": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "POP",
      "path": "11"
    },
    "1863": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "POP",
      "path": "11"
    },
    "1864": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1866": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1867": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "1868": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "1870": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "NOT",
      "path": "11"
    },
    "1871": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "1873": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1874": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "ADD",
      "path": "11"
    },
    "1875": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "AND",
      "path": "11"
    },
    "1876": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1877": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "ADD",
      "path": "11"
    },
    "1878": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1879": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1881": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1882": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "POP",
      "path": "11"
    },
    "1883": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1884": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "ADD",
      "path": "11"
    },
    "1885": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1886": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x767"
    },
    "1889": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1890": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1891": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x254E"
    },
    "1894": {
      "fn": "Slave.testingReturnFunds",
      "jump": "i",
      "offset": [
        14935,
        14987
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1895": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1896": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14935,
        14987
      ],
      "op": "POP",
      "path": "11"
    },
    "1897": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14766,
        14994
      ],
      "op": "POP",
      "path": "11"
    },
    "1898": {
      "fn": "Slave.testingReturnFunds",
      "offset": [
        14766,
        14994
      ],
      "op": "POP",
      "path": "11"
    },
    "1899": {
      "fn": "Slave.testingReturnFunds",
      "jump": "o",
      "offset": [
        14729,
        14994
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1900": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12481,
        12903
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1901": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1903": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1905": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1907": {
      "op": "SHL"
    },
    "1908": {
      "op": "SUB"
    },
    "1909": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12563,
        12588
      ],
      "op": "DUP2",
      "path": "11",
      "statement": 5
    },
    "1910": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12563,
        12588
      ],
      "op": "AND",
      "path": "11"
    },
    "1911": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12563,
        12588
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1913": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12563,
        12588
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1914": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12563,
        12588
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1915": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12563,
        12588
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1916": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12563,
        12580
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xC"
    },
    "1918": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12563,
        12588
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1920": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12563,
        12588
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1921": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12563,
        12588
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1923": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12563,
        12588
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1924": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12563,
        12588
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1925": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12563,
        12600
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1930": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1932": {
      "op": "SHL"
    },
    "1933": {
      "op": "SUB"
    },
    "1934": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12563,
        12600
      ],
      "op": "AND",
      "path": "11"
    },
    "1935": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12604,
        12614
      ],
      "op": "CALLER",
      "path": "11"
    },
    "1936": {
      "branch": 56,
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12563,
        12614
      ],
      "op": "EQ",
      "path": "11"
    },
    "1937": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12542,
        12673
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x7EB"
    },
    "1940": {
      "branch": 56,
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12542,
        12673
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1941": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12542,
        12673
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1943": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12542,
        12673
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1944": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1948": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1950": {
      "op": "SHL"
    },
    "1951": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12542,
        12673
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1952": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12542,
        12673
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1953": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1955": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12542,
        12673
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1957": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12542,
        12673
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1958": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12542,
        12673
      ],
      "op": "ADD",
      "path": "11"
    },
    "1959": {
      "op": "MSTORE"
    },
    "1960": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "1962": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1964": {
      "op": "DUP3"
    },
    "1965": {
      "op": "ADD"
    },
    "1966": {
      "op": "MSTORE"
    },
    "1967": {
      "op": "PUSH32",
      "value": "0x41646472657373206E6F74206D617463682077697468206E6F6E636520646174"
    },
    "2000": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2002": {
      "op": "DUP3"
    },
    "2003": {
      "op": "ADD"
    },
    "2004": {
      "op": "MSTORE"
    },
    "2005": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "2007": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "2009": {
      "op": "SHL"
    },
    "2010": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2012": {
      "op": "DUP3"
    },
    "2013": {
      "op": "ADD"
    },
    "2014": {
      "op": "MSTORE"
    },
    "2015": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2017": {
      "op": "ADD"
    },
    "2018": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12542,
        12673
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2019": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12542,
        12673
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2021": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12542,
        12673
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2022": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12542,
        12673
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2023": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12542,
        12673
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2024": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12542,
        12673
      ],
      "op": "SUB",
      "path": "11"
    },
    "2025": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12542,
        12673
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2026": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12542,
        12673
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "11"
    },
    "2027": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12542,
        12673
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2028": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2030": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2032": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2034": {
      "op": "SHL"
    },
    "2035": {
      "op": "SUB"
    },
    "2036": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12794,
        12819
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2037": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12794,
        12819
      ],
      "op": "AND",
      "path": "11"
    },
    "2038": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12684,
        12701
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2040": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12794,
        12819
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2041": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12794,
        12819
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2042": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12794,
        12819
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2043": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12794,
        12811
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xC"
    },
    "2045": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12794,
        12819
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2047": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12794,
        12819
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2048": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12794,
        12819
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2049": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12794,
        12819
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2050": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12794,
        12819
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2052": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12794,
        12819
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2053": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12794,
        12819
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2054": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12794,
        12819
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "2055": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12794,
        12826
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "2057": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12794,
        12826
      ],
      "op": "ADD",
      "path": "11"
    },
    "2058": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12794,
        12826
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2059": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12704,
        12836
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2060": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12704,
        12836
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2061": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12704,
        12836
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x81C"
    },
    "2064": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12704,
        12836
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "2065": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12684,
        12701
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2066": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12684,
        12701
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "2067": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12750,
        12760
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2068": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12750,
        12760
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "2069": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12774,
        12780
      ],
      "op": "DUP8",
      "path": "11"
    },
    "2070": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12774,
        12780
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "2071": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12704,
        12836
      ],
      "op": "ADD",
      "path": "11"
    },
    "2072": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12704,
        12836
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2589"
    },
    "2075": {
      "fn": "Slave.sendDepositByNonce",
      "jump": "i",
      "offset": [
        12704,
        12836
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2076": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12704,
        12836
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2077": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12704,
        12836
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2079": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12704,
        12836
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2080": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12704,
        12836
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2082": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12704,
        12836
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2083": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12704,
        12836
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2084": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12704,
        12836
      ],
      "op": "SUB",
      "path": "11"
    },
    "2085": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12704,
        12836
      ],
      "op": "SUB",
      "path": "11"
    },
    "2086": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12704,
        12836
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2087": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12704,
        12836
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2088": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12704,
        12836
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2089": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12704,
        12836
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2091": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12704,
        12836
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2092": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12684,
        12836
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2093": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12684,
        12836
      ],
      "op": "POP",
      "path": "11"
    },
    "2094": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12847,
        12896
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 6,
      "value": "0x767"
    },
    "2097": {
      "offset": [
        1779,
        1799
      ],
      "op": "PUSH8",
      "path": "11",
      "value": "0xDE41BA4FC9D91AD9"
    },
    "2106": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12874,
        12889
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x0"
    },
    "2139": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12891,
        12895
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2140": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        12847,
        12859
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1772"
    },
    "2143": {
      "fn": "Slave.sendDepositByNonce",
      "jump": "i",
      "offset": [
        12847,
        12896
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2144": {
      "offset": [
        2854,
        2909
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2145": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2854,
        2909
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xD"
    },
    "2147": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2854,
        2909
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2149": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2854,
        2909
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2150": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2854,
        2909
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2151": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2854,
        2909
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2153": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2854,
        2909
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2154": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2854,
        2909
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2156": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2854,
        2909
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2158": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2854,
        2909
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "2159": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2854,
        2909
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2160": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2854,
        2909
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2161": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2854,
        2909
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2162": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2854,
        2909
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2163": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2854,
        2909
      ],
      "op": "LT",
      "path": "11"
    },
    "2164": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2854,
        2909
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x87C"
    },
    "2167": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2854,
        2909
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2168": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2854,
        2909
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2170": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2854,
        2909
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2171": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2854,
        2909
      ],
      "op": "REVERT",
      "path": "11"
    },
    "2172": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2854,
        2909
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2173": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2854,
        2909
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2174": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2854,
        2909
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2176": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2854,
        2909
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2177": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2854,
        2909
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2179": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2854,
        2909
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2181": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2854,
        2909
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "2182": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2854,
        2909
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2183": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2854,
        2909
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "2185": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2854,
        2909
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2186": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2854,
        2909
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2187": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2854,
        2909
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2188": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2854,
        2909
      ],
      "op": "DIV",
      "path": "11"
    },
    "2189": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2854,
        2909
      ],
      "op": "ADD",
      "path": "11"
    },
    "2190": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2854,
        2909
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2191": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2854,
        2909
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2192": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2854,
        2909
      ],
      "op": "MOD",
      "path": "11"
    },
    "2193": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2854,
        2909
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x10"
    },
    "2195": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2854,
        2909
      ],
      "op": "MUL",
      "path": "11"
    },
    "2196": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2854,
        2909
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2197": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2854,
        2909
      ],
      "op": "POP",
      "path": "11"
    },
    "2198": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2854,
        2909
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2199": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2854,
        2909
      ],
      "op": "POP",
      "path": "11"
    },
    "2200": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2854,
        2909
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2201": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2854,
        2909
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2202": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2854,
        2909
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2203": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2854,
        2909
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x100"
    },
    "2206": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2854,
        2909
      ],
      "op": "EXP",
      "path": "11"
    },
    "2207": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2854,
        2909
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2208": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2854,
        2909
      ],
      "op": "DIV",
      "path": "11"
    },
    "2209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2211": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2213": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2215": {
      "op": "SHL"
    },
    "2216": {
      "op": "SUB"
    },
    "2217": {
      "offset": [
        2854,
        2909
      ],
      "op": "AND",
      "path": "11"
    },
    "2218": {
      "fn": "Slave.sendDepositByNonce",
      "offset": [
        2854,
        2909
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2219": {
      "fn": "Slave.sendDepositByNonce",
      "jump": "o",
      "offset": [
        2854,
        2909
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2220": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13511,
        13916
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2221": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13674,
        13703
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 7,
      "value": "0x5"
    },
    "2223": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13674,
        13703
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2224": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2226": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2227": {
      "op": "PUSH4",
      "value": "0xAFD9FA5"
    },
    "2232": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "2234": {
      "op": "SHL"
    },
    "2235": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2236": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2241": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2243": {
      "op": "SHL"
    },
    "2244": {
      "op": "SUB"
    },
    "2245": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13674,
        13703
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2246": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13674,
        13703
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2247": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13674,
        13703
      ],
      "op": "AND",
      "path": "11"
    },
    "2248": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13674,
        13703
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2249": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13719
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x57ECFD28"
    },
    "2254": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13719
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2255": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x8E2"
    },
    "2258": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2259": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13737,
        13744
      ],
      "op": "DUP8",
      "path": "11"
    },
    "2260": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13737,
        13744
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2261": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13737,
        13744
      ],
      "op": "DUP8",
      "path": "11"
    },
    "2262": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13737,
        13744
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2263": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13762,
        13773
      ],
      "op": "DUP8",
      "path": "11"
    },
    "2264": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13762,
        13773
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2265": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13762,
        13773
      ],
      "op": "DUP8",
      "path": "11"
    },
    "2266": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13762,
        13773
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2267": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2269": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "ADD",
      "path": "11"
    },
    "2270": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x25E4"
    },
    "2273": {
      "fn": "Slave.claimAssetsFromBridge",
      "jump": "i",
      "offset": [
        13654,
        13787
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2274": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2275": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2277": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2279": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2280": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2281": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2282": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "SUB",
      "path": "11"
    },
    "2283": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2284": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2286": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "DUP8",
      "path": "11"
    },
    "2287": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "GAS",
      "path": "11"
    },
    "2288": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "CALL",
      "path": "11"
    },
    "2289": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2290": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2291": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2292": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x901"
    },
    "2295": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2296": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2297": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2299": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2300": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "2301": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2302": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2304": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "REVERT",
      "path": "11"
    },
    "2305": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2306": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "POP",
      "path": "11"
    },
    "2307": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "POP",
      "path": "11"
    },
    "2308": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "POP",
      "path": "11"
    },
    "2309": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "POP",
      "path": "11"
    },
    "2310": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2312": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2313": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2314": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "2316": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "NOT",
      "path": "11"
    },
    "2317": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "2319": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2320": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "ADD",
      "path": "11"
    },
    "2321": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "AND",
      "path": "11"
    },
    "2322": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2323": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "ADD",
      "path": "11"
    },
    "2324": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2325": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2327": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2328": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "POP",
      "path": "11"
    },
    "2329": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2330": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "ADD",
      "path": "11"
    },
    "2331": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2332": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x925"
    },
    "2335": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2336": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2337": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2567"
    },
    "2340": {
      "fn": "Slave.claimAssetsFromBridge",
      "jump": "i",
      "offset": [
        13654,
        13787
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2341": {
      "branch": 57,
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13654,
        13787
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2342": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13633,
        13873
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x997"
    },
    "2345": {
      "branch": 57,
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13633,
        13873
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2346": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13633,
        13873
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2348": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13633,
        13873
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2349": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2353": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2355": {
      "op": "SHL"
    },
    "2356": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13633,
        13873
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2357": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13633,
        13873
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2358": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2360": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13633,
        13873
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2362": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13633,
        13873
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2363": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13633,
        13873
      ],
      "op": "ADD",
      "path": "11"
    },
    "2364": {
      "op": "MSTORE"
    },
    "2365": {
      "op": "PUSH1",
      "value": "0x3C"
    },
    "2367": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2369": {
      "op": "DUP3"
    },
    "2370": {
      "op": "ADD"
    },
    "2371": {
      "op": "MSTORE"
    },
    "2372": {
      "op": "PUSH32",
      "value": "0x6661696C65642066726F6D20636972636C652062726964676520494D65737361"
    },
    "2405": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2407": {
      "op": "DUP3"
    },
    "2408": {
      "op": "ADD"
    },
    "2409": {
      "op": "MSTORE"
    },
    "2410": {
      "op": "PUSH32",
      "value": "0x67655472616E736D69747465722072657475726E65642066616C736500000000"
    },
    "2443": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2445": {
      "op": "DUP3"
    },
    "2446": {
      "op": "ADD"
    },
    "2447": {
      "op": "MSTORE"
    },
    "2448": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2450": {
      "op": "ADD"
    },
    "2451": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13633,
        13873
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x7E2"
    },
    "2454": {
      "op": "JUMP"
    },
    "2455": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13633,
        13873
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2456": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13883,
        13909
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 8,
      "value": "0x99F"
    },
    "2459": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13883,
        13907
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1C08"
    },
    "2462": {
      "fn": "Slave.claimAssetsFromBridge",
      "jump": "i",
      "offset": [
        13883,
        13909
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2463": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13883,
        13909
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2464": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13511,
        13916
      ],
      "op": "POP",
      "path": "11"
    },
    "2465": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13511,
        13916
      ],
      "op": "POP",
      "path": "11"
    },
    "2466": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13511,
        13916
      ],
      "op": "POP",
      "path": "11"
    },
    "2467": {
      "fn": "Slave.claimAssetsFromBridge",
      "offset": [
        13511,
        13916
      ],
      "op": "POP",
      "path": "11"
    },
    "2468": {
      "fn": "Slave.claimAssetsFromBridge",
      "jump": "o",
      "offset": [
        13511,
        13916
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2469": {
      "fn": "CCIPReceiver.ccipReceive",
      "offset": [
        1660,
        1790
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2470": {
      "offset": [
        2427,
        2437
      ],
      "op": "CALLER",
      "path": "1"
    },
    "2471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2475": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2477": {
      "op": "SHL"
    },
    "2478": {
      "op": "SUB"
    },
    "2479": {
      "offset": [
        2449,
        2461
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x0"
    },
    "2512": {
      "offset": [
        2427,
        2462
      ],
      "op": "AND",
      "path": "1"
    },
    "2513": {
      "branch": 66,
      "fn": "CCIPReceiver.ccipReceive",
      "offset": [
        2427,
        2462
      ],
      "op": "EQ",
      "path": "1"
    },
    "2514": {
      "offset": [
        2423,
        2496
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9F0"
    },
    "2517": {
      "branch": 66,
      "offset": [
        2423,
        2496
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2518": {
      "offset": [
        2471,
        2496
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2520": {
      "fn": "CCIPReceiver.ccipReceive",
      "offset": [
        2471,
        2496
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2521": {
      "op": "PUSH4",
      "value": "0x35FDCCCD"
    },
    "2526": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2528": {
      "op": "SHL"
    },
    "2529": {
      "offset": [
        2471,
        2496
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2530": {
      "fn": "CCIPReceiver.ccipReceive",
      "offset": [
        2471,
        2496
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2531": {
      "offset": [
        2485,
        2495
      ],
      "op": "CALLER",
      "path": "1"
    },
    "2532": {
      "offset": [
        2471,
        2496
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2534": {
      "fn": "CCIPReceiver.ccipReceive",
      "offset": [
        2471,
        2496
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2535": {
      "fn": "CCIPReceiver.ccipReceive",
      "offset": [
        2471,
        2496
      ],
      "op": "ADD",
      "path": "1"
    },
    "2536": {
      "op": "MSTORE"
    },
    "2537": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2539": {
      "op": "ADD"
    },
    "2540": {
      "offset": [
        2471,
        2496
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7E2"
    },
    "2543": {
      "op": "JUMP"
    },
    "2544": {
      "offset": [
        2423,
        2496
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2545": {
      "fn": "CCIPReceiver.ccipReceive",
      "offset": [
        1764,
        1785
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 9,
      "value": "0xA01"
    },
    "2548": {
      "fn": "CCIPReceiver.ccipReceive",
      "offset": [
        1764,
        1785
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9FC"
    },
    "2551": {
      "fn": "CCIPReceiver.ccipReceive",
      "offset": [
        1777,
        1784
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2552": {
      "fn": "CCIPReceiver.ccipReceive",
      "offset": [
        1764,
        1785
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2616"
    },
    "2555": {
      "fn": "CCIPReceiver.ccipReceive",
      "jump": "i",
      "offset": [
        1764,
        1785
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2556": {
      "fn": "CCIPReceiver.ccipReceive",
      "offset": [
        1764,
        1785
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2557": {
      "fn": "CCIPReceiver.ccipReceive",
      "offset": [
        1764,
        1776
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D72"
    },
    "2560": {
      "fn": "CCIPReceiver.ccipReceive",
      "jump": "i",
      "offset": [
        1764,
        1785
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2561": {
      "fn": "CCIPReceiver.ccipReceive",
      "offset": [
        1764,
        1785
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2562": {
      "fn": "CCIPReceiver.ccipReceive",
      "offset": [
        1660,
        1790
      ],
      "op": "POP",
      "path": "1"
    },
    "2563": {
      "fn": "CCIPReceiver.ccipReceive",
      "jump": "o",
      "offset": [
        1660,
        1790
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2564": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15080,
        16051
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2565": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15288,
        15854
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2567": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15288,
        15854
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2568": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15288,
        15854
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2569": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15288,
        15854
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA0"
    },
    "2571": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15288,
        15854
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2572": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15288,
        15854
      ],
      "op": "ADD",
      "path": "11"
    },
    "2573": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15288,
        15854
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2574": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15288,
        15854
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2575": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15288,
        15854
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2580": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2582": {
      "op": "SHL"
    },
    "2583": {
      "op": "SUB"
    },
    "2584": {
      "op": "DUP4"
    },
    "2585": {
      "op": "AND"
    },
    "2586": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15334,
        15354
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xC0"
    },
    "2588": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15334,
        15354
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2589": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15334,
        15354
      ],
      "op": "ADD",
      "path": "11"
    },
    "2590": {
      "op": "MSTORE"
    },
    "2591": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15223,
        15230
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2593": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15223,
        15230
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2594": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15223,
        15230
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2595": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15223,
        15230
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2596": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15288,
        15854
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2597": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2599": {
      "op": "DUP2"
    },
    "2600": {
      "op": "ADD"
    },
    "2601": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15334,
        15354
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2603": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15334,
        15354
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2604": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15334,
        15354
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2605": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15334,
        15354
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2606": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15334,
        15354
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2607": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15334,
        15354
      ],
      "op": "SUB",
      "path": "11"
    },
    "2608": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2610": {
      "op": "NOT"
    },
    "2611": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15334,
        15354
      ],
      "op": "ADD",
      "path": "11"
    },
    "2612": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15334,
        15354
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2613": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15334,
        15354
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2614": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15334,
        15354
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2615": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15334,
        15354
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2616": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15334,
        15354
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2617": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15288,
        15854
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2618": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15288,
        15854
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2619": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15288,
        15854
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2620": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15334,
        15354
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2622": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15288,
        15854
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2623": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15288,
        15854
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2624": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15288,
        15854
      ],
      "op": "ADD",
      "path": "11"
    },
    "2625": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15288,
        15854
      ],
      "op": "DUP8",
      "path": "11"
    },
    "2626": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15288,
        15854
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2627": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15288,
        15854
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2628": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15459,
        15489
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2629": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15459,
        15489
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2630": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2632": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15459,
        15489
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2633": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15459,
        15489
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2634": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15459,
        15489
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2635": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15459,
        15489
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2636": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15459,
        15489
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2637": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15459,
        15489
      ],
      "op": "ADD",
      "path": "11"
    },
    "2638": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15459,
        15489
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2639": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15459,
        15489
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2640": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15288,
        15854
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "2641": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15288,
        15854
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2642": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15288,
        15854
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2643": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15288,
        15854
      ],
      "op": "ADD",
      "path": "11"
    },
    "2644": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15288,
        15854
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2645": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15459,
        15489
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2646": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15459,
        15489
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA81"
    },
    "2649": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15459,
        15489
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2650": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15459,
        15489
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2651": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2653": {
      "op": "DUP1"
    },
    "2654": {
      "op": "MLOAD"
    },
    "2655": {
      "op": "DUP1"
    },
    "2656": {
      "op": "DUP3"
    },
    "2657": {
      "op": "ADD"
    },
    "2658": {
      "op": "SWAP1"
    },
    "2659": {
      "op": "SWAP2"
    },
    "2660": {
      "op": "MSTORE"
    },
    "2661": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2663": {
      "op": "DUP1"
    },
    "2664": {
      "op": "DUP3"
    },
    "2665": {
      "op": "MSTORE"
    },
    "2666": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2668": {
      "op": "DUP3"
    },
    "2669": {
      "op": "ADD"
    },
    "2670": {
      "op": "MSTORE"
    },
    "2671": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15459,
        15489
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2672": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15459,
        15489
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2673": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15459,
        15489
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2675": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15459,
        15489
      ],
      "op": "ADD",
      "path": "11"
    },
    "2676": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15459,
        15489
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2677": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15459,
        15489
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "2679": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15459,
        15489
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2680": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15459,
        15489
      ],
      "op": "SUB",
      "path": "11"
    },
    "2681": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15459,
        15489
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2682": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15459,
        15489
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2683": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15459,
        15489
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA5A"
    },
    "2686": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15459,
        15489
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2687": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15459,
        15489
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2688": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15459,
        15489
      ],
      "op": "POP",
      "path": "11"
    },
    "2689": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15459,
        15489
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2690": {
      "op": "POP"
    },
    "2691": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15288,
        15854
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2692": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15288,
        15854
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2693": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15831,
        15842
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "2695": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15831,
        15842
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2700": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2702": {
      "op": "SHL"
    },
    "2703": {
      "op": "SUB"
    },
    "2704": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15831,
        15842
      ],
      "op": "AND",
      "path": "11"
    },
    "2705": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15288,
        15854
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2707": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15288,
        15854
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2708": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15288,
        15854
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2709": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15288,
        15854
      ],
      "op": "ADD",
      "path": "11"
    },
    "2710": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15288,
        15854
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2711": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15288,
        15854
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2712": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15288,
        15854
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2713": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15288,
        15854
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2714": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15288,
        15854
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2716": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15661,
        15705
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2717": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15661,
        15705
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2718": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15661,
        15705
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2719": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15661,
        15705
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2720": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15661,
        15705
      ],
      "op": "ADD",
      "path": "11"
    },
    "2721": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15661,
        15705
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2722": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15661,
        15705
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2723": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15694,
        15703
      ],
      "op": "PUSH3",
      "path": "11",
      "value": "0xF4240"
    },
    "2727": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15661,
        15705
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2728": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15661,
        15705
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2729": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15288,
        15854
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2730": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15288,
        15854
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2731": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15288,
        15854
      ],
      "op": "ADD",
      "path": "11"
    },
    "2732": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15288,
        15854
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2733": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15565,
        15719
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xAB5"
    },
    "2736": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15565,
        15719
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2737": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15565,
        15584
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1E07"
    },
    "2740": {
      "fn": "Slave.getLinkFees",
      "jump": "i",
      "offset": [
        15565,
        15719
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2741": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15565,
        15719
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2742": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15288,
        15854
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2743": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15288,
        15854
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2744": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15917,
        15929
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2746": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        15940
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2747": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        15940
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2748": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2750": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2751": {
      "op": "PUSH4",
      "value": "0x20487DED"
    },
    "2756": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2758": {
      "op": "SHL"
    },
    "2759": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2760": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2761": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15242,
        15854
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "2762": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15242,
        15854
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "2763": {
      "op": "POP"
    },
    "2764": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15917,
        15929
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2765": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15917,
        15929
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2770": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2772": {
      "op": "SHL"
    },
    "2773": {
      "op": "SUB"
    },
    "2774": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        15940
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2775": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        15940
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2776": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        15940
      ],
      "op": "AND",
      "path": "11"
    },
    "2777": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        15940
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2778": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        15947
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x20487DED"
    },
    "2783": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        15947
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2784": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xAEF"
    },
    "2787": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2788": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15961,
        15985
      ],
      "op": "DUP10",
      "path": "11"
    },
    "2789": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15961,
        15985
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2790": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15242,
        15854
      ],
      "op": "DUP7",
      "path": "11"
    },
    "2791": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15242,
        15854
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2792": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2794": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "ADD",
      "path": "11"
    },
    "2795": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2668"
    },
    "2798": {
      "fn": "Slave.getLinkFees",
      "jump": "i",
      "offset": [
        15932,
        16023
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2799": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2800": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2802": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2804": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2805": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2806": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2807": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "SUB",
      "path": "11"
    },
    "2808": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2809": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "DUP7",
      "path": "11"
    },
    "2810": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "GAS",
      "path": "11"
    },
    "2811": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "2812": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2813": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2814": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2815": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xB0C"
    },
    "2818": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2819": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2820": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2822": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2823": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "2824": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2825": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2827": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "REVERT",
      "path": "11"
    },
    "2828": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2829": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "POP",
      "path": "11"
    },
    "2830": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "POP",
      "path": "11"
    },
    "2831": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "POP",
      "path": "11"
    },
    "2832": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "POP",
      "path": "11"
    },
    "2833": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2835": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2836": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2837": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "2839": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "NOT",
      "path": "11"
    },
    "2840": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "2842": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2843": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "ADD",
      "path": "11"
    },
    "2844": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "AND",
      "path": "11"
    },
    "2845": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2846": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "ADD",
      "path": "11"
    },
    "2847": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2848": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2850": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2851": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "POP",
      "path": "11"
    },
    "2852": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2853": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "ADD",
      "path": "11"
    },
    "2854": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2855": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xB30"
    },
    "2858": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2859": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2860": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x254E"
    },
    "2863": {
      "fn": "Slave.getLinkFees",
      "jump": "i",
      "offset": [
        15932,
        16023
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2864": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15932,
        16023
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2865": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15917,
        16023
      ],
      "op": "SWAP7",
      "path": "11"
    },
    "2866": {
      "fn": "Slave.getLinkFees",
      "offset": [
        15080,
        16051
      ],
      "op": "SWAP6",
      "path": "11"
    },
    "2867": {
      "op": "POP"
    },
    "2868": {
      "op": "POP"
    },
    "2869": {
      "op": "POP"
    },
    "2870": {
      "op": "POP"
    },
    "2871": {
      "op": "POP"
    },
    "2872": {
      "op": "POP"
    },
    "2873": {
      "fn": "Slave.getLinkFees",
      "jump": "o",
      "offset": [
        15080,
        16051
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2874": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7693,
        8001
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2875": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7823,
        7833
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "2877": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7823,
        7833
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2878": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2880": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2881": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2886": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2888": {
      "op": "SHL"
    },
    "2889": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2890": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2891": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7853,
        7857
      ],
      "op": "ADDRESS",
      "path": "11"
    },
    "2892": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2894": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2895": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "ADD",
      "path": "11"
    },
    "2896": {
      "op": "MSTORE"
    },
    "2897": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7776,
        7783
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2899": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7776,
        7783
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2900": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7776,
        7783
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2901": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7776,
        7783
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2906": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2908": {
      "op": "SHL"
    },
    "2909": {
      "op": "SUB"
    },
    "2910": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7823,
        7833
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2911": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7823,
        7833
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2912": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7823,
        7833
      ],
      "op": "AND",
      "path": "11"
    },
    "2913": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7823,
        7833
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2914": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7844
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x70A08231"
    },
    "2919": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7844
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2920": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2922": {
      "op": "ADD"
    },
    "2923": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2925": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2927": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2928": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2929": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2930": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "SUB",
      "path": "11"
    },
    "2931": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2932": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "DUP7",
      "path": "11"
    },
    "2933": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "GAS",
      "path": "11"
    },
    "2934": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "2935": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2936": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2937": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2938": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xB87"
    },
    "2941": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2942": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2943": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2945": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2946": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "2947": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2948": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2950": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "REVERT",
      "path": "11"
    },
    "2951": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2952": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "POP",
      "path": "11"
    },
    "2953": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "POP",
      "path": "11"
    },
    "2954": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "POP",
      "path": "11"
    },
    "2955": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "POP",
      "path": "11"
    },
    "2956": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2958": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2959": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2960": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "2962": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "NOT",
      "path": "11"
    },
    "2963": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "2965": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2966": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "ADD",
      "path": "11"
    },
    "2967": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "AND",
      "path": "11"
    },
    "2968": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2969": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "ADD",
      "path": "11"
    },
    "2970": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2971": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2973": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2974": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "POP",
      "path": "11"
    },
    "2975": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2976": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "ADD",
      "path": "11"
    },
    "2977": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2978": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xBAB"
    },
    "2981": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2982": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2983": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x254E"
    },
    "2986": {
      "fn": "Slave.calculateSharesValue",
      "jump": "i",
      "offset": [
        7816,
        7859
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2987": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7816,
        7859
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2988": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7795,
        7859
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2989": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7795,
        7859
      ],
      "op": "POP",
      "path": "11"
    },
    "2990": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7869,
        7883
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2992": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7935,
        7959
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA"
    },
    "2994": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7935,
        7959
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2995": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7909,
        7919
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2996": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7888,
        7894
      ],
      "op": "DUP6",
      "path": "11"
    },
    "2997": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7897,
        7905
      ],
      "op": "PUSH8",
      "path": "11",
      "value": "0xDE0B6B3A7640000"
    },
    "3006": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7888,
        7905
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xBC7"
    },
    "3009": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7888,
        7905
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3010": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7888,
        7905
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3011": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7888,
        7905
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2757"
    },
    "3014": {
      "fn": "Slave.calculateSharesValue",
      "jump": "i",
      "offset": [
        7888,
        7905
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3015": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7888,
        7905
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3016": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7887,
        7919
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xBD1"
    },
    "3019": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7887,
        7919
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3020": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7887,
        7919
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3021": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7887,
        7919
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2757"
    },
    "3024": {
      "fn": "Slave.calculateSharesValue",
      "jump": "i",
      "offset": [
        7887,
        7919
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3025": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7887,
        7919
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3026": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7886,
        7959
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xBDB"
    },
    "3029": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7886,
        7959
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3030": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7886,
        7959
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3031": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7886,
        7959
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x276E"
    },
    "3034": {
      "fn": "Slave.calculateSharesValue",
      "jump": "i",
      "offset": [
        7886,
        7959
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3035": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7886,
        7959
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3036": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7869,
        7959
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3037": {
      "op": "POP"
    },
    "3038": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7977,
        7994
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 10,
      "value": "0xBEF"
    },
    "3041": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7986,
        7994
      ],
      "op": "PUSH8",
      "path": "11",
      "value": "0xDE0B6B3A7640000"
    },
    "3050": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7869,
        7959
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3051": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7977,
        7994
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x276E"
    },
    "3054": {
      "fn": "Slave.calculateSharesValue",
      "jump": "i",
      "offset": [
        7977,
        7994
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3055": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7977,
        7994
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3056": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7970,
        7994
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "3057": {
      "fn": "Slave.calculateSharesValue",
      "offset": [
        7693,
        8001
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "3058": {
      "op": "POP"
    },
    "3059": {
      "op": "POP"
    },
    "3060": {
      "op": "POP"
    },
    "3061": {
      "op": "POP"
    },
    "3062": {
      "fn": "Slave.calculateSharesValue",
      "jump": "o",
      "offset": [
        7693,
        8001
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3063": {
      "fn": "Slave.deposit",
      "offset": [
        11244,
        12475
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3064": {
      "fn": "Slave.deposit",
      "offset": [
        11324,
        11333
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 11,
      "value": "0x2"
    },
    "3066": {
      "fn": "Slave.deposit",
      "offset": [
        11324,
        11333
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3067": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3069": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3070": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "3075": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3077": {
      "op": "SHL"
    },
    "3078": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3079": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3080": {
      "fn": "Slave.deposit",
      "offset": [
        11348,
        11358
      ],
      "op": "CALLER",
      "path": "11"
    },
    "3081": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "3083": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3084": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "ADD",
      "path": "11"
    },
    "3085": {
      "op": "MSTORE"
    },
    "3086": {
      "fn": "Slave.deposit",
      "offset": [
        11368,
        11372
      ],
      "op": "ADDRESS",
      "path": "11"
    },
    "3087": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3089": {
      "op": "DUP3"
    },
    "3090": {
      "op": "ADD"
    },
    "3091": {
      "op": "MSTORE"
    },
    "3092": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3094": {
      "op": "DUP2"
    },
    "3095": {
      "op": "ADD"
    },
    "3096": {
      "op": "DUP4"
    },
    "3097": {
      "op": "SWAP1"
    },
    "3098": {
      "op": "MSTORE"
    },
    "3099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3103": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3105": {
      "op": "SHL"
    },
    "3106": {
      "op": "SUB"
    },
    "3107": {
      "fn": "Slave.deposit",
      "offset": [
        11324,
        11333
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3108": {
      "fn": "Slave.deposit",
      "offset": [
        11324,
        11333
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3109": {
      "fn": "Slave.deposit",
      "offset": [
        11324,
        11333
      ],
      "op": "AND",
      "path": "11"
    },
    "3110": {
      "fn": "Slave.deposit",
      "offset": [
        11324,
        11333
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3111": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11347
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x23B872DD"
    },
    "3116": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11347
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3117": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3119": {
      "op": "ADD"
    },
    "3120": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "3122": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3124": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3125": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3126": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3127": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "SUB",
      "path": "11"
    },
    "3128": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3129": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3131": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "DUP8",
      "path": "11"
    },
    "3132": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "GAS",
      "path": "11"
    },
    "3133": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "CALL",
      "path": "11"
    },
    "3134": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3135": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3136": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3137": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xC4E"
    },
    "3140": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3141": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "3142": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3144": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3145": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "3146": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "3147": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3149": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "REVERT",
      "path": "11"
    },
    "3150": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3151": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "POP",
      "path": "11"
    },
    "3152": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "POP",
      "path": "11"
    },
    "3153": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "POP",
      "path": "11"
    },
    "3154": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "POP",
      "path": "11"
    },
    "3155": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3157": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3158": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "3159": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "3161": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "NOT",
      "path": "11"
    },
    "3162": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "3164": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3165": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "ADD",
      "path": "11"
    },
    "3166": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "AND",
      "path": "11"
    },
    "3167": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3168": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "ADD",
      "path": "11"
    },
    "3169": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3170": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3172": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3173": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "POP",
      "path": "11"
    },
    "3174": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3175": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "ADD",
      "path": "11"
    },
    "3176": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3177": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xC72"
    },
    "3180": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3181": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3182": {
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2567"
    },
    "3185": {
      "fn": "Slave.deposit",
      "jump": "i",
      "offset": [
        11317,
        11382
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3186": {
      "branch": 58,
      "fn": "Slave.deposit",
      "offset": [
        11317,
        11382
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3187": {
      "fn": "Slave.deposit",
      "offset": [
        11296,
        11433
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xCBE"
    },
    "3190": {
      "branch": 58,
      "fn": "Slave.deposit",
      "offset": [
        11296,
        11433
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3191": {
      "fn": "Slave.deposit",
      "offset": [
        11296,
        11433
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3193": {
      "fn": "Slave.deposit",
      "offset": [
        11296,
        11433
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3194": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3198": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3200": {
      "op": "SHL"
    },
    "3201": {
      "fn": "Slave.deposit",
      "offset": [
        11296,
        11433
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3202": {
      "fn": "Slave.deposit",
      "offset": [
        11296,
        11433
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3203": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3205": {
      "fn": "Slave.deposit",
      "offset": [
        11296,
        11433
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "3207": {
      "fn": "Slave.deposit",
      "offset": [
        11296,
        11433
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3208": {
      "fn": "Slave.deposit",
      "offset": [
        11296,
        11433
      ],
      "op": "ADD",
      "path": "11"
    },
    "3209": {
      "op": "MSTORE"
    },
    "3210": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "3212": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3214": {
      "op": "DUP3"
    },
    "3215": {
      "op": "ADD"
    },
    "3216": {
      "op": "MSTORE"
    },
    "3217": {
      "op": "PUSH32",
      "value": "0x4661696C656420746F207472616E7366657220616D6F756E7400000000000000"
    },
    "3250": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3252": {
      "op": "DUP3"
    },
    "3253": {
      "op": "ADD"
    },
    "3254": {
      "op": "MSTORE"
    },
    "3255": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3257": {
      "op": "ADD"
    },
    "3258": {
      "fn": "Slave.deposit",
      "offset": [
        11296,
        11433
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x7E2"
    },
    "3261": {
      "op": "JUMP"
    },
    "3262": {
      "fn": "Slave.deposit",
      "offset": [
        11296,
        11433
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3263": {
      "fn": "Slave.deposit",
      "offset": [
        11451,
        11463
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 12,
      "value": "0x8"
    },
    "3265": {
      "fn": "Slave.deposit",
      "offset": [
        11451,
        11463
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3266": {
      "fn": "Slave.deposit",
      "offset": [
        11451,
        11463
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xFF"
    },
    "3268": {
      "branch": 59,
      "fn": "Slave.deposit",
      "offset": [
        11451,
        11463
      ],
      "op": "AND",
      "path": "11"
    },
    "3269": {
      "fn": "Slave.deposit",
      "offset": [
        11443,
        11486
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xD05"
    },
    "3272": {
      "branch": 59,
      "fn": "Slave.deposit",
      "offset": [
        11443,
        11486
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3273": {
      "fn": "Slave.deposit",
      "offset": [
        11443,
        11486
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3275": {
      "fn": "Slave.deposit",
      "offset": [
        11443,
        11486
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3276": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3280": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3282": {
      "op": "SHL"
    },
    "3283": {
      "fn": "Slave.deposit",
      "offset": [
        11443,
        11486
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3284": {
      "fn": "Slave.deposit",
      "offset": [
        11443,
        11486
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3285": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3287": {
      "fn": "Slave.deposit",
      "offset": [
        11443,
        11486
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "3289": {
      "fn": "Slave.deposit",
      "offset": [
        11443,
        11486
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3290": {
      "fn": "Slave.deposit",
      "offset": [
        11443,
        11486
      ],
      "op": "ADD",
      "path": "11"
    },
    "3291": {
      "op": "MSTORE"
    },
    "3292": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "3294": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3296": {
      "op": "DUP3"
    },
    "3297": {
      "op": "ADD"
    },
    "3298": {
      "op": "MSTORE"
    },
    "3299": {
      "op": "PUSH18",
      "value": "0x4E6F6465206973206E6F7420616374697665"
    },
    "3318": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "3320": {
      "op": "SHL"
    },
    "3321": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3323": {
      "op": "DUP3"
    },
    "3324": {
      "op": "ADD"
    },
    "3325": {
      "op": "MSTORE"
    },
    "3326": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3328": {
      "op": "ADD"
    },
    "3329": {
      "fn": "Slave.deposit",
      "offset": [
        11443,
        11486
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x7E2"
    },
    "3332": {
      "op": "JUMP"
    },
    "3333": {
      "fn": "Slave.deposit",
      "offset": [
        11443,
        11486
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3334": {
      "fn": "Slave.deposit",
      "offset": [
        11529,
        11539
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "3336": {
      "fn": "Slave.deposit",
      "offset": [
        11529,
        11539
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3337": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3339": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3340": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3345": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3347": {
      "op": "SHL"
    },
    "3348": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3349": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3350": {
      "fn": "Slave.deposit",
      "offset": [
        11559,
        11563
      ],
      "op": "ADDRESS",
      "path": "11"
    },
    "3351": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "3353": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3354": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "ADD",
      "path": "11"
    },
    "3355": {
      "op": "MSTORE"
    },
    "3356": {
      "fn": "Slave.deposit",
      "offset": [
        11497,
        11519
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3358": {
      "fn": "Slave.deposit",
      "offset": [
        11497,
        11519
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3363": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3365": {
      "op": "SHL"
    },
    "3366": {
      "op": "SUB"
    },
    "3367": {
      "fn": "Slave.deposit",
      "offset": [
        11529,
        11539
      ],
      "op": "AND",
      "path": "11"
    },
    "3368": {
      "fn": "Slave.deposit",
      "offset": [
        11529,
        11539
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3369": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11550
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x70A08231"
    },
    "3374": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11550
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3375": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3377": {
      "op": "ADD"
    },
    "3378": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "3380": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3382": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3383": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3384": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3385": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "SUB",
      "path": "11"
    },
    "3386": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3387": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "DUP7",
      "path": "11"
    },
    "3388": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "GAS",
      "path": "11"
    },
    "3389": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "3390": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3391": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3392": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3393": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xD4E"
    },
    "3396": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3397": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "3398": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3400": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3401": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "3402": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "3403": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3405": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "REVERT",
      "path": "11"
    },
    "3406": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3407": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "POP",
      "path": "11"
    },
    "3408": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "POP",
      "path": "11"
    },
    "3409": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "POP",
      "path": "11"
    },
    "3410": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "POP",
      "path": "11"
    },
    "3411": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3413": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3414": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "3415": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "3417": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "NOT",
      "path": "11"
    },
    "3418": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "3420": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3421": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "ADD",
      "path": "11"
    },
    "3422": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "AND",
      "path": "11"
    },
    "3423": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3424": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "ADD",
      "path": "11"
    },
    "3425": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3426": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3428": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3429": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "POP",
      "path": "11"
    },
    "3430": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3431": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "ADD",
      "path": "11"
    },
    "3432": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3433": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xD72"
    },
    "3436": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3437": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3438": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x254E"
    },
    "3441": {
      "fn": "Slave.deposit",
      "jump": "i",
      "offset": [
        11522,
        11565
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3442": {
      "fn": "Slave.deposit",
      "offset": [
        11522,
        11565
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3443": {
      "fn": "Slave.deposit",
      "offset": [
        11497,
        11565
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3444": {
      "fn": "Slave.deposit",
      "offset": [
        11497,
        11565
      ],
      "op": "POP",
      "path": "11"
    },
    "3445": {
      "fn": "Slave.deposit",
      "offset": [
        11576,
        11590
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3447": {
      "fn": "Slave.deposit",
      "offset": [
        11604,
        11628
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA"
    },
    "3449": {
      "fn": "Slave.deposit",
      "offset": [
        11604,
        11628
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3450": {
      "fn": "Slave.deposit",
      "offset": [
        11632,
        11633
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3452": {
      "branch": 60,
      "fn": "Slave.deposit",
      "offset": [
        11604,
        11633
      ],
      "op": "SUB",
      "path": "11"
    },
    "3453": {
      "fn": "Slave.deposit",
      "offset": [
        11600,
        11778
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xD96"
    },
    "3456": {
      "branch": 60,
      "fn": "Slave.deposit",
      "offset": [
        11600,
        11778
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3457": {
      "fn": "Slave.deposit",
      "offset": [
        11658,
        11675
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 13,
      "value": "0xD8F"
    },
    "3460": {
      "fn": "Slave.deposit",
      "offset": [
        11658,
        11664
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3461": {
      "fn": "Slave.deposit",
      "offset": [
        11667,
        11675
      ],
      "op": "PUSH5",
      "path": "11",
      "value": "0xE8D4A51000"
    },
    "3467": {
      "fn": "Slave.deposit",
      "offset": [
        11658,
        11675
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2757"
    },
    "3470": {
      "fn": "Slave.deposit",
      "jump": "i",
      "offset": [
        11658,
        11675
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3471": {
      "fn": "Slave.deposit",
      "offset": [
        11658,
        11675
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3472": {
      "fn": "Slave.deposit",
      "offset": [
        11649,
        11675
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3473": {
      "fn": "Slave.deposit",
      "offset": [
        11649,
        11675
      ],
      "op": "POP",
      "path": "11"
    },
    "3474": {
      "fn": "Slave.deposit",
      "offset": [
        11600,
        11778
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xDB2"
    },
    "3477": {
      "fn": "Slave.deposit",
      "offset": [
        11600,
        11778
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3478": {
      "fn": "Slave.deposit",
      "offset": [
        11600,
        11778
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3479": {
      "fn": "Slave.deposit",
      "offset": [
        11753,
        11767
      ],
      "op": "DUP2",
      "path": "11",
      "statement": 14
    },
    "3480": {
      "fn": "Slave.deposit",
      "offset": [
        11725,
        11749
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA"
    },
    "3482": {
      "fn": "Slave.deposit",
      "offset": [
        11725,
        11749
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3483": {
      "fn": "Slave.deposit",
      "offset": [
        11716,
        11722
      ],
      "op": "DUP5",
      "path": "11"
    },
    "3484": {
      "fn": "Slave.deposit",
      "offset": [
        11716,
        11749
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xDA5"
    },
    "3487": {
      "fn": "Slave.deposit",
      "offset": [
        11716,
        11749
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3488": {
      "fn": "Slave.deposit",
      "offset": [
        11716,
        11749
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3489": {
      "fn": "Slave.deposit",
      "offset": [
        11716,
        11749
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2757"
    },
    "3492": {
      "fn": "Slave.deposit",
      "jump": "i",
      "offset": [
        11716,
        11749
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3493": {
      "fn": "Slave.deposit",
      "offset": [
        11716,
        11749
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3494": {
      "fn": "Slave.deposit",
      "offset": [
        11715,
        11767
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xDAF"
    },
    "3497": {
      "fn": "Slave.deposit",
      "offset": [
        11715,
        11767
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3498": {
      "fn": "Slave.deposit",
      "offset": [
        11715,
        11767
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3499": {
      "fn": "Slave.deposit",
      "offset": [
        11715,
        11767
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x276E"
    },
    "3502": {
      "fn": "Slave.deposit",
      "jump": "i",
      "offset": [
        11715,
        11767
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3503": {
      "fn": "Slave.deposit",
      "offset": [
        11715,
        11767
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3504": {
      "fn": "Slave.deposit",
      "offset": [
        11706,
        11767
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3505": {
      "fn": "Slave.deposit",
      "offset": [
        11706,
        11767
      ],
      "op": "POP",
      "path": "11"
    },
    "3506": {
      "fn": "Slave.deposit",
      "offset": [
        11600,
        11778
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3507": {
      "fn": "Slave.deposit",
      "offset": [
        11877,
        11894
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xB"
    },
    "3509": {
      "fn": "Slave.deposit",
      "offset": [
        11877,
        11894
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3510": {
      "fn": "Slave.deposit",
      "offset": [
        11807,
        11924
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3512": {
      "fn": "Slave.deposit",
      "offset": [
        11807,
        11924
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3513": {
      "fn": "Slave.deposit",
      "offset": [
        11787,
        11804
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3515": {
      "fn": "Slave.deposit",
      "offset": [
        11787,
        11804
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3516": {
      "fn": "Slave.deposit",
      "offset": [
        11807,
        11924
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xDD9"
    },
    "3519": {
      "fn": "Slave.deposit",
      "offset": [
        11807,
        11924
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3520": {
      "fn": "Slave.deposit",
      "offset": [
        11787,
        11804
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3521": {
      "fn": "Slave.deposit",
      "offset": [
        11787,
        11804
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3522": {
      "fn": "Slave.deposit",
      "offset": [
        11853,
        11863
      ],
      "op": "CALLER",
      "path": "11"
    },
    "3523": {
      "fn": "Slave.deposit",
      "offset": [
        11853,
        11863
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3524": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3528": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3530": {
      "op": "SHL"
    },
    "3531": {
      "op": "SUB"
    },
    "3532": {
      "fn": "Slave.deposit",
      "offset": [
        11877,
        11894
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3533": {
      "fn": "Slave.deposit",
      "offset": [
        11877,
        11894
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3534": {
      "fn": "Slave.deposit",
      "offset": [
        11877,
        11894
      ],
      "op": "AND",
      "path": "11"
    },
    "3535": {
      "fn": "Slave.deposit",
      "offset": [
        11877,
        11894
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3536": {
      "fn": "Slave.deposit",
      "offset": [
        11908,
        11914
      ],
      "op": "DUP7",
      "path": "11"
    },
    "3537": {
      "fn": "Slave.deposit",
      "offset": [
        11908,
        11914
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3538": {
      "fn": "Slave.deposit",
      "offset": [
        11807,
        11924
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "3540": {
      "fn": "Slave.deposit",
      "offset": [
        11807,
        11924
      ],
      "op": "ADD",
      "path": "11"
    },
    "3541": {
      "fn": "Slave.deposit",
      "offset": [
        11807,
        11924
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2589"
    },
    "3544": {
      "fn": "Slave.deposit",
      "jump": "i",
      "offset": [
        11807,
        11924
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3545": {
      "fn": "Slave.deposit",
      "offset": [
        11807,
        11924
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3546": {
      "fn": "Slave.deposit",
      "offset": [
        11807,
        11924
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3548": {
      "fn": "Slave.deposit",
      "offset": [
        11807,
        11924
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3549": {
      "fn": "Slave.deposit",
      "offset": [
        11807,
        11924
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3550": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3552": {
      "op": "NOT"
    },
    "3553": {
      "fn": "Slave.deposit",
      "offset": [
        11807,
        11924
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3554": {
      "fn": "Slave.deposit",
      "offset": [
        11807,
        11924
      ],
      "op": "DUP5",
      "path": "11"
    },
    "3555": {
      "fn": "Slave.deposit",
      "offset": [
        11807,
        11924
      ],
      "op": "SUB",
      "path": "11"
    },
    "3556": {
      "fn": "Slave.deposit",
      "offset": [
        11807,
        11924
      ],
      "op": "ADD",
      "path": "11"
    },
    "3557": {
      "fn": "Slave.deposit",
      "offset": [
        11807,
        11924
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3558": {
      "fn": "Slave.deposit",
      "offset": [
        11807,
        11924
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3559": {
      "fn": "Slave.deposit",
      "offset": [
        11807,
        11924
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3560": {
      "fn": "Slave.deposit",
      "offset": [
        11807,
        11924
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3561": {
      "fn": "Slave.deposit",
      "offset": [
        11807,
        11924
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3562": {
      "fn": "Slave.deposit",
      "offset": [
        11953,
        11970
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 15,
      "value": "0xB"
    },
    "3564": {
      "fn": "Slave.deposit",
      "offset": [
        11953,
        11970
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3565": {
      "fn": "Slave.deposit",
      "offset": [
        11953,
        11970
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3570": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3572": {
      "op": "SHL"
    },
    "3573": {
      "op": "SUB"
    },
    "3574": {
      "fn": "Slave.deposit",
      "offset": [
        11953,
        11970
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3575": {
      "fn": "Slave.deposit",
      "offset": [
        11953,
        11970
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3576": {
      "fn": "Slave.deposit",
      "offset": [
        11953,
        11970
      ],
      "op": "AND",
      "path": "11"
    },
    "3577": {
      "fn": "Slave.deposit",
      "offset": [
        11935,
        11971
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3579": {
      "fn": "Slave.deposit",
      "offset": [
        11935,
        11971
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3580": {
      "fn": "Slave.deposit",
      "offset": [
        11935,
        11971
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3581": {
      "fn": "Slave.deposit",
      "offset": [
        11935,
        11971
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3582": {
      "fn": "Slave.deposit",
      "offset": [
        11935,
        11952
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xC"
    },
    "3584": {
      "fn": "Slave.deposit",
      "offset": [
        11807,
        11924
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "3586": {
      "fn": "Slave.deposit",
      "offset": [
        11935,
        11971
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3587": {
      "fn": "Slave.deposit",
      "offset": [
        11935,
        11971
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3588": {
      "fn": "Slave.deposit",
      "offset": [
        11935,
        11971
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3589": {
      "fn": "Slave.deposit",
      "offset": [
        11935,
        11971
      ],
      "op": "DUP5",
      "path": "11"
    },
    "3590": {
      "fn": "Slave.deposit",
      "offset": [
        11935,
        11971
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3591": {
      "fn": "Slave.deposit",
      "offset": [
        11935,
        11971
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "3592": {
      "fn": "Slave.deposit",
      "offset": [
        11935,
        11996
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3593": {
      "fn": "Slave.deposit",
      "offset": [
        11935,
        11996
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3598": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3600": {
      "op": "SHL"
    },
    "3601": {
      "op": "SUB"
    },
    "3602": {
      "op": "NOT"
    },
    "3603": {
      "fn": "Slave.deposit",
      "offset": [
        11935,
        11996
      ],
      "op": "AND",
      "path": "11"
    },
    "3604": {
      "fn": "Slave.deposit",
      "offset": [
        11986,
        11996
      ],
      "op": "CALLER",
      "path": "11"
    },
    "3605": {
      "fn": "Slave.deposit",
      "offset": [
        11935,
        11996
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3606": {
      "fn": "Slave.deposit",
      "offset": [
        11935,
        11996
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3607": {
      "fn": "Slave.deposit",
      "offset": [
        11935,
        11996
      ],
      "op": "OR",
      "path": "11"
    },
    "3608": {
      "fn": "Slave.deposit",
      "offset": [
        11935,
        11996
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3609": {
      "fn": "Slave.deposit",
      "offset": [
        11935,
        11996
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3610": {
      "fn": "Slave.deposit",
      "offset": [
        11935,
        11996
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "3611": {
      "fn": "Slave.deposit",
      "offset": [
        12024,
        12041
      ],
      "op": "DUP5",
      "path": "11",
      "statement": 16
    },
    "3612": {
      "fn": "Slave.deposit",
      "offset": [
        12024,
        12041
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3613": {
      "fn": "Slave.deposit",
      "offset": [
        12024,
        12041
      ],
      "op": "DUP5",
      "path": "11"
    },
    "3614": {
      "fn": "Slave.deposit",
      "offset": [
        12024,
        12041
      ],
      "op": "AND",
      "path": "11"
    },
    "3615": {
      "fn": "Slave.deposit",
      "offset": [
        12006,
        12042
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3616": {
      "fn": "Slave.deposit",
      "offset": [
        12006,
        12042
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3617": {
      "fn": "Slave.deposit",
      "offset": [
        12006,
        12042
      ],
      "op": "DUP6",
      "path": "11"
    },
    "3618": {
      "fn": "Slave.deposit",
      "offset": [
        12006,
        12042
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3619": {
      "fn": "Slave.deposit",
      "offset": [
        12006,
        12042
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "3620": {
      "fn": "Slave.deposit",
      "offset": [
        11953,
        11970
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "3622": {
      "fn": "Slave.deposit",
      "offset": [
        12006,
        12049
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3623": {
      "fn": "Slave.deposit",
      "offset": [
        12006,
        12049
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3624": {
      "fn": "Slave.deposit",
      "offset": [
        12006,
        12049
      ],
      "op": "ADD",
      "path": "11"
    },
    "3625": {
      "fn": "Slave.deposit",
      "offset": [
        12006,
        12058
      ],
      "op": "DUP11",
      "path": "11"
    },
    "3626": {
      "fn": "Slave.deposit",
      "offset": [
        12006,
        12058
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3627": {
      "fn": "Slave.deposit",
      "offset": [
        12006,
        12058
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "3628": {
      "fn": "Slave.deposit",
      "offset": [
        12068,
        12098
      ],
      "op": "SWAP1",
      "path": "11",
      "statement": 17
    },
    "3629": {
      "fn": "Slave.deposit",
      "offset": [
        12068,
        12098
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3630": {
      "fn": "Slave.deposit",
      "offset": [
        12068,
        12098
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3631": {
      "fn": "Slave.deposit",
      "offset": [
        12068,
        12086
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xD"
    },
    "3633": {
      "fn": "Slave.deposit",
      "offset": [
        12068,
        12098
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3634": {
      "fn": "Slave.deposit",
      "offset": [
        12068,
        12098
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3635": {
      "fn": "Slave.deposit",
      "offset": [
        12068,
        12098
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "3636": {
      "fn": "Slave.deposit",
      "offset": [
        12068,
        12098
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3637": {
      "fn": "Slave.deposit",
      "offset": [
        12068,
        12098
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "3638": {
      "fn": "Slave.deposit",
      "offset": [
        12104,
        12121
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "3639": {
      "fn": "Slave.deposit",
      "offset": [
        12104,
        12121
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3640": {
      "fn": "Slave.deposit",
      "offset": [
        12068,
        12122
      ],
      "op": "DUP5",
      "path": "11"
    },
    "3641": {
      "fn": "Slave.deposit",
      "offset": [
        12068,
        12122
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3642": {
      "fn": "Slave.deposit",
      "offset": [
        12068,
        12122
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3643": {
      "fn": "Slave.deposit",
      "offset": [
        12068,
        12122
      ],
      "op": "DUP8",
      "path": "11"
    },
    "3644": {
      "fn": "Slave.deposit",
      "offset": [
        12068,
        12122
      ],
      "op": "ADD",
      "path": "11"
    },
    "3645": {
      "fn": "Slave.deposit",
      "offset": [
        12068,
        12122
      ],
      "op": "DUP7",
      "path": "11"
    },
    "3646": {
      "fn": "Slave.deposit",
      "offset": [
        12068,
        12122
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "3647": {
      "fn": "Slave.deposit",
      "offset": [
        12068,
        12122
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "3648": {
      "fn": "Slave.deposit",
      "offset": [
        12068,
        12122
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3649": {
      "fn": "Slave.deposit",
      "offset": [
        12068,
        12122
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3650": {
      "fn": "Slave.deposit",
      "offset": [
        12068,
        12122
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3651": {
      "fn": "Slave.deposit",
      "offset": [
        12068,
        12122
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3652": {
      "fn": "Slave.deposit",
      "offset": [
        12068,
        12122
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "3653": {
      "fn": "Slave.deposit",
      "offset": [
        12068,
        12122
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "3655": {
      "fn": "Slave.deposit",
      "offset": [
        12068,
        12122
      ],
      "op": "DUP6",
      "path": "11"
    },
    "3656": {
      "fn": "Slave.deposit",
      "offset": [
        12068,
        12122
      ],
      "op": "DIV",
      "path": "11"
    },
    "3657": {
      "fn": "Slave.deposit",
      "offset": [
        12068,
        12122
      ],
      "op": "ADD",
      "path": "11"
    },
    "3658": {
      "fn": "Slave.deposit",
      "offset": [
        12068,
        12122
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3659": {
      "fn": "Slave.deposit",
      "offset": [
        12068,
        12122
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3660": {
      "fn": "Slave.deposit",
      "offset": [
        12068,
        12122
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x10"
    },
    "3662": {
      "fn": "Slave.deposit",
      "offset": [
        12068,
        12122
      ],
      "op": "SWAP6",
      "path": "11"
    },
    "3663": {
      "fn": "Slave.deposit",
      "offset": [
        12068,
        12122
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3664": {
      "fn": "Slave.deposit",
      "offset": [
        12068,
        12122
      ],
      "op": "SWAP7",
      "path": "11"
    },
    "3665": {
      "fn": "Slave.deposit",
      "offset": [
        12068,
        12122
      ],
      "op": "AND",
      "path": "11"
    },
    "3666": {
      "fn": "Slave.deposit",
      "offset": [
        12068,
        12122
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "3667": {
      "fn": "Slave.deposit",
      "offset": [
        12068,
        12122
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3668": {
      "fn": "Slave.deposit",
      "offset": [
        12068,
        12122
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "3669": {
      "fn": "Slave.deposit",
      "offset": [
        12068,
        12122
      ],
      "op": "MUL",
      "path": "11"
    },
    "3670": {
      "fn": "Slave.deposit",
      "offset": [
        11953,
        11970
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x100"
    },
    "3673": {
      "fn": "Slave.deposit",
      "offset": [
        12068,
        12122
      ],
      "op": "EXP",
      "path": "11"
    },
    "3674": {
      "fn": "Slave.deposit",
      "offset": [
        12104,
        12121
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3675": {
      "fn": "Slave.deposit",
      "offset": [
        12104,
        12121
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3676": {
      "fn": "Slave.deposit",
      "offset": [
        12104,
        12121
      ],
      "op": "AND",
      "path": "11"
    },
    "3677": {
      "fn": "Slave.deposit",
      "offset": [
        12068,
        12122
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3678": {
      "fn": "Slave.deposit",
      "offset": [
        12068,
        12122
      ],
      "op": "MUL",
      "path": "11"
    },
    "3679": {
      "fn": "Slave.deposit",
      "offset": [
        12068,
        12122
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "3680": {
      "fn": "Slave.deposit",
      "offset": [
        12068,
        12122
      ],
      "op": "MUL",
      "path": "11"
    },
    "3681": {
      "fn": "Slave.deposit",
      "offset": [
        12068,
        12122
      ],
      "op": "NOT",
      "path": "11"
    },
    "3682": {
      "fn": "Slave.deposit",
      "offset": [
        12068,
        12122
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3683": {
      "fn": "Slave.deposit",
      "offset": [
        12068,
        12122
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "3684": {
      "fn": "Slave.deposit",
      "offset": [
        12068,
        12122
      ],
      "op": "AND",
      "path": "11"
    },
    "3685": {
      "fn": "Slave.deposit",
      "offset": [
        12068,
        12122
      ],
      "op": "OR",
      "path": "11"
    },
    "3686": {
      "fn": "Slave.deposit",
      "offset": [
        12068,
        12122
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3687": {
      "fn": "Slave.deposit",
      "offset": [
        12068,
        12122
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "3688": {
      "fn": "Slave.deposit",
      "offset": [
        12133,
        12157
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 18,
      "value": "0xA"
    },
    "3690": {
      "fn": "Slave.deposit",
      "offset": [
        12133,
        12167
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3691": {
      "fn": "Slave.deposit",
      "offset": [
        12133,
        12167
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3692": {
      "fn": "Slave.deposit",
      "offset": [
        11807,
        11924
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "3693": {
      "fn": "Slave.deposit",
      "offset": [
        11807,
        11924
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "3694": {
      "op": "POP"
    },
    "3695": {
      "fn": "Slave.deposit",
      "offset": [
        12052,
        12058
      ],
      "op": "DUP5",
      "path": "11"
    },
    "3696": {
      "fn": "Slave.deposit",
      "offset": [
        12052,
        12058
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "3697": {
      "fn": "Slave.deposit",
      "offset": [
        12133,
        12157
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3698": {
      "fn": "Slave.deposit",
      "offset": [
        12133,
        12157
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3699": {
      "fn": "Slave.deposit",
      "offset": [
        11935,
        11971
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3700": {
      "fn": "Slave.deposit",
      "offset": [
        12133,
        12167
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xE7E"
    },
    "3703": {
      "fn": "Slave.deposit",
      "offset": [
        12133,
        12167
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3704": {
      "fn": "Slave.deposit",
      "offset": [
        12052,
        12058
      ],
      "op": "DUP5",
      "path": "11"
    },
    "3705": {
      "fn": "Slave.deposit",
      "offset": [
        12052,
        12058
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3706": {
      "fn": "Slave.deposit",
      "offset": [
        12133,
        12167
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2790"
    },
    "3709": {
      "fn": "Slave.deposit",
      "jump": "i",
      "offset": [
        12133,
        12167
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3710": {
      "fn": "Slave.deposit",
      "offset": [
        12133,
        12167
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3711": {
      "fn": "Slave.deposit",
      "offset": [
        12133,
        12167
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3712": {
      "fn": "Slave.deposit",
      "offset": [
        12133,
        12167
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3713": {
      "fn": "Slave.deposit",
      "offset": [
        12133,
        12167
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "3714": {
      "op": "POP"
    },
    "3715": {
      "op": "POP"
    },
    "3716": {
      "fn": "Slave.deposit",
      "offset": [
        12177,
        12194
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 19,
      "value": "0xB"
    },
    "3718": {
      "fn": "Slave.deposit",
      "offset": [
        12177,
        12199
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3719": {
      "fn": "Slave.deposit",
      "offset": [
        12177,
        12199
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3720": {
      "fn": "Slave.deposit",
      "offset": [
        12198,
        12199
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "3722": {
      "fn": "Slave.deposit",
      "offset": [
        12198,
        12199
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3723": {
      "fn": "Slave.deposit",
      "offset": [
        12177,
        12194
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3724": {
      "fn": "Slave.deposit",
      "offset": [
        12177,
        12194
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3726": {
      "fn": "Slave.deposit",
      "offset": [
        12177,
        12194
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3727": {
      "fn": "Slave.deposit",
      "offset": [
        12177,
        12199
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xEA2"
    },
    "3730": {
      "fn": "Slave.deposit",
      "offset": [
        12177,
        12199
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3731": {
      "fn": "Slave.deposit",
      "offset": [
        12198,
        12199
      ],
      "op": "DUP5",
      "path": "11"
    },
    "3732": {
      "fn": "Slave.deposit",
      "offset": [
        12198,
        12199
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3737": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3739": {
      "op": "SHL"
    },
    "3740": {
      "op": "SUB"
    },
    "3741": {
      "fn": "Slave.deposit",
      "offset": [
        12177,
        12199
      ],
      "op": "AND",
      "path": "11"
    },
    "3742": {
      "fn": "Slave.deposit",
      "offset": [
        12177,
        12199
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x27A3"
    },
    "3745": {
      "fn": "Slave.deposit",
      "jump": "i",
      "offset": [
        12177,
        12199
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3746": {
      "fn": "Slave.deposit",
      "offset": [
        12177,
        12199
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3747": {
      "fn": "Slave.deposit",
      "offset": [
        12177,
        12199
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "3748": {
      "fn": "Slave.deposit",
      "offset": [
        12177,
        12199
      ],
      "op": "POP",
      "path": "11"
    },
    "3749": {
      "fn": "Slave.deposit",
      "offset": [
        12177,
        12199
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x100"
    },
    "3752": {
      "fn": "Slave.deposit",
      "offset": [
        12177,
        12199
      ],
      "op": "EXP",
      "path": "11"
    },
    "3753": {
      "fn": "Slave.deposit",
      "offset": [
        12177,
        12199
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3754": {
      "fn": "Slave.deposit",
      "offset": [
        12177,
        12199
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3755": {
      "fn": "Slave.deposit",
      "offset": [
        12177,
        12199
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3758": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3760": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3762": {
      "op": "SHL"
    },
    "3763": {
      "op": "SUB"
    },
    "3764": {
      "fn": "Slave.deposit",
      "offset": [
        12177,
        12199
      ],
      "op": "MUL",
      "path": "11"
    },
    "3765": {
      "fn": "Slave.deposit",
      "offset": [
        12177,
        12199
      ],
      "op": "NOT",
      "path": "11"
    },
    "3766": {
      "fn": "Slave.deposit",
      "offset": [
        12177,
        12199
      ],
      "op": "AND",
      "path": "11"
    },
    "3767": {
      "fn": "Slave.deposit",
      "offset": [
        12177,
        12199
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3768": {
      "fn": "Slave.deposit",
      "offset": [
        12177,
        12199
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3769": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3773": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3775": {
      "op": "SHL"
    },
    "3776": {
      "op": "SUB"
    },
    "3777": {
      "fn": "Slave.deposit",
      "offset": [
        12177,
        12199
      ],
      "op": "AND",
      "path": "11"
    },
    "3778": {
      "fn": "Slave.deposit",
      "offset": [
        12177,
        12199
      ],
      "op": "MUL",
      "path": "11"
    },
    "3779": {
      "fn": "Slave.deposit",
      "offset": [
        12177,
        12199
      ],
      "op": "OR",
      "path": "11"
    },
    "3780": {
      "fn": "Slave.deposit",
      "offset": [
        12177,
        12199
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3781": {
      "fn": "Slave.deposit",
      "offset": [
        12177,
        12199
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "3782": {
      "fn": "Slave.deposit",
      "offset": [
        12177,
        12199
      ],
      "op": "POP",
      "path": "11"
    },
    "3783": {
      "fn": "Slave.deposit",
      "offset": [
        12209,
        12221
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3785": {
      "fn": "Slave.deposit",
      "offset": [
        12224,
        12234
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xED0"
    },
    "3788": {
      "fn": "Slave.deposit",
      "offset": [
        12224,
        12232
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x16ED"
    },
    "3791": {
      "fn": "Slave.deposit",
      "jump": "i",
      "offset": [
        12224,
        12234
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3792": {
      "fn": "Slave.deposit",
      "offset": [
        12224,
        12234
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3793": {
      "fn": "Slave.deposit",
      "offset": [
        12251,
        12260
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 20,
      "value": "0x2"
    },
    "3795": {
      "fn": "Slave.deposit",
      "offset": [
        12251,
        12260
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3796": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3798": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3799": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "3804": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3806": {
      "op": "SHL"
    },
    "3807": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3808": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3809": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3813": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3815": {
      "op": "SHL"
    },
    "3816": {
      "op": "SUB"
    },
    "3817": {
      "op": "DUP1"
    },
    "3818": {
      "op": "DUP5"
    },
    "3819": {
      "op": "AND"
    },
    "3820": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "3822": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3823": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "ADD",
      "path": "11"
    },
    "3824": {
      "op": "MSTORE"
    },
    "3825": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3827": {
      "op": "DUP3"
    },
    "3828": {
      "op": "ADD"
    },
    "3829": {
      "op": "DUP10"
    },
    "3830": {
      "op": "SWAP1"
    },
    "3831": {
      "op": "MSTORE"
    },
    "3832": {
      "fn": "Slave.deposit",
      "offset": [
        12209,
        12234
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "3833": {
      "fn": "Slave.deposit",
      "offset": [
        12209,
        12234
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "3834": {
      "op": "POP"
    },
    "3835": {
      "fn": "Slave.deposit",
      "offset": [
        12251,
        12260
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3836": {
      "fn": "Slave.deposit",
      "offset": [
        12251,
        12260
      ],
      "op": "AND",
      "path": "11"
    },
    "3837": {
      "fn": "Slave.deposit",
      "offset": [
        12251,
        12260
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3838": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12269
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x95EA7B3"
    },
    "3843": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12269
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3844": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3846": {
      "op": "ADD"
    },
    "3847": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "3849": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3851": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3852": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3853": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3854": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "SUB",
      "path": "11"
    },
    "3855": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3856": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3858": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "DUP8",
      "path": "11"
    },
    "3859": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "GAS",
      "path": "11"
    },
    "3860": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "CALL",
      "path": "11"
    },
    "3861": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3862": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3863": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3864": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF25"
    },
    "3867": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3868": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "3869": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3871": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3872": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "3873": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "3874": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3876": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "REVERT",
      "path": "11"
    },
    "3877": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3878": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "POP",
      "path": "11"
    },
    "3879": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "POP",
      "path": "11"
    },
    "3880": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "POP",
      "path": "11"
    },
    "3881": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "POP",
      "path": "11"
    },
    "3882": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3884": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3885": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "3886": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "3888": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "NOT",
      "path": "11"
    },
    "3889": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "3891": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3892": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "ADD",
      "path": "11"
    },
    "3893": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "AND",
      "path": "11"
    },
    "3894": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3895": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "ADD",
      "path": "11"
    },
    "3896": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3897": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3899": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3900": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "POP",
      "path": "11"
    },
    "3901": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3902": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "ADD",
      "path": "11"
    },
    "3903": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3904": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF49"
    },
    "3907": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3908": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3909": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2567"
    },
    "3912": {
      "fn": "Slave.deposit",
      "jump": "i",
      "offset": [
        12244,
        12283
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3913": {
      "fn": "Slave.deposit",
      "offset": [
        12244,
        12283
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3914": {
      "op": "POP"
    },
    "3915": {
      "fn": "Slave.deposit",
      "offset": [
        12313,
        12322
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 21,
      "value": "0x2"
    },
    "3917": {
      "fn": "Slave.deposit",
      "offset": [
        12313,
        12322
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3918": {
      "fn": "Slave.deposit",
      "offset": [
        12293,
        12349
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3920": {
      "fn": "Slave.deposit",
      "offset": [
        12293,
        12349
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3921": {
      "op": "PUSH4",
      "value": "0xE8EDA9DF"
    },
    "3926": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3928": {
      "op": "SHL"
    },
    "3929": {
      "fn": "Slave.deposit",
      "offset": [
        12293,
        12349
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3930": {
      "fn": "Slave.deposit",
      "offset": [
        12293,
        12349
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3933": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3935": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3937": {
      "op": "SHL"
    },
    "3938": {
      "op": "SUB"
    },
    "3939": {
      "fn": "Slave.deposit",
      "offset": [
        12313,
        12322
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3940": {
      "fn": "Slave.deposit",
      "offset": [
        12313,
        12322
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3941": {
      "fn": "Slave.deposit",
      "offset": [
        12313,
        12322
      ],
      "op": "AND",
      "path": "11"
    },
    "3942": {
      "fn": "Slave.deposit",
      "offset": [
        12293,
        12349
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "3944": {
      "fn": "Slave.deposit",
      "offset": [
        12293,
        12349
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3945": {
      "fn": "Slave.deposit",
      "offset": [
        12293,
        12349
      ],
      "op": "ADD",
      "path": "11"
    },
    "3946": {
      "op": "MSTORE"
    },
    "3947": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3949": {
      "op": "DUP2"
    },
    "3950": {
      "op": "ADD"
    },
    "3951": {
      "op": "DUP8"
    },
    "3952": {
      "op": "SWAP1"
    },
    "3953": {
      "op": "MSTORE"
    },
    "3954": {
      "fn": "Slave.deposit",
      "offset": [
        12340,
        12344
      ],
      "op": "ADDRESS",
      "path": "11"
    },
    "3955": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3957": {
      "op": "DUP3"
    },
    "3958": {
      "op": "ADD"
    },
    "3959": {
      "op": "MSTORE"
    },
    "3960": {
      "fn": "Slave.deposit",
      "offset": [
        12313,
        12322
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3962": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3964": {
      "op": "DUP3"
    },
    "3965": {
      "op": "ADD"
    },
    "3966": {
      "op": "MSTORE"
    },
    "3967": {
      "fn": "Slave.deposit",
      "offset": [
        12293,
        12312
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3968": {
      "fn": "Slave.deposit",
      "offset": [
        12293,
        12312
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3969": {
      "fn": "Slave.deposit",
      "offset": [
        12293,
        12312
      ],
      "op": "AND",
      "path": "11"
    },
    "3970": {
      "fn": "Slave.deposit",
      "offset": [
        12293,
        12312
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3971": {
      "fn": "Slave.deposit",
      "offset": [
        12293,
        12312
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xE8EDA9DF"
    },
    "3976": {
      "fn": "Slave.deposit",
      "offset": [
        12293,
        12312
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3977": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3979": {
      "op": "ADD"
    },
    "3980": {
      "fn": "Slave.deposit",
      "offset": [
        12293,
        12349
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3982": {
      "fn": "Slave.deposit",
      "offset": [
        12293,
        12349
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3984": {
      "fn": "Slave.deposit",
      "offset": [
        12293,
        12349
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3985": {
      "fn": "Slave.deposit",
      "offset": [
        12293,
        12349
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3986": {
      "fn": "Slave.deposit",
      "offset": [
        12293,
        12349
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3987": {
      "fn": "Slave.deposit",
      "offset": [
        12293,
        12349
      ],
      "op": "SUB",
      "path": "11"
    },
    "3988": {
      "fn": "Slave.deposit",
      "offset": [
        12293,
        12349
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3989": {
      "fn": "Slave.deposit",
      "offset": [
        12293,
        12349
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3991": {
      "fn": "Slave.deposit",
      "offset": [
        12293,
        12349
      ],
      "op": "DUP8",
      "path": "11"
    },
    "3992": {
      "fn": "Slave.deposit",
      "offset": [
        12293,
        12349
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3993": {
      "fn": "Slave.deposit",
      "offset": [
        12293,
        12349
      ],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "3994": {
      "fn": "Slave.deposit",
      "offset": [
        12293,
        12349
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3995": {
      "fn": "Slave.deposit",
      "offset": [
        12293,
        12349
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3996": {
      "fn": "Slave.deposit",
      "offset": [
        12293,
        12349
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3997": {
      "fn": "Slave.deposit",
      "offset": [
        12293,
        12349
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xFA5"
    },
    "4000": {
      "fn": "Slave.deposit",
      "offset": [
        12293,
        12349
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "4001": {
      "fn": "Slave.deposit",
      "offset": [
        12293,
        12349
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4003": {
      "fn": "Slave.deposit",
      "offset": [
        12293,
        12349
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4004": {
      "fn": "Slave.deposit",
      "offset": [
        12293,
        12349
      ],
      "op": "REVERT",
      "path": "11"
    },
    "4005": {
      "fn": "Slave.deposit",
      "offset": [
        12293,
        12349
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4006": {
      "fn": "Slave.deposit",
      "offset": [
        12293,
        12349
      ],
      "op": "POP",
      "path": "11"
    },
    "4007": {
      "fn": "Slave.deposit",
      "offset": [
        12293,
        12349
      ],
      "op": "GAS",
      "path": "11"
    },
    "4008": {
      "fn": "Slave.deposit",
      "offset": [
        12293,
        12349
      ],
      "op": "CALL",
      "path": "11"
    },
    "4009": {
      "fn": "Slave.deposit",
      "offset": [
        12293,
        12349
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "4010": {
      "fn": "Slave.deposit",
      "offset": [
        12293,
        12349
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4011": {
      "fn": "Slave.deposit",
      "offset": [
        12293,
        12349
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "4012": {
      "fn": "Slave.deposit",
      "offset": [
        12293,
        12349
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xFB9"
    },
    "4015": {
      "fn": "Slave.deposit",
      "offset": [
        12293,
        12349
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "4016": {
      "fn": "Slave.deposit",
      "offset": [
        12293,
        12349
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "4017": {
      "fn": "Slave.deposit",
      "offset": [
        12293,
        12349
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4019": {
      "fn": "Slave.deposit",
      "offset": [
        12293,
        12349
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4020": {
      "fn": "Slave.deposit",
      "offset": [
        12293,
        12349
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "4021": {
      "fn": "Slave.deposit",
      "offset": [
        12293,
        12349
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "4022": {
      "fn": "Slave.deposit",
      "offset": [
        12293,
        12349
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4024": {
      "fn": "Slave.deposit",
      "offset": [
        12293,
        12349
      ],
      "op": "REVERT",
      "path": "11"
    },
    "4025": {
      "fn": "Slave.deposit",
      "offset": [
        12293,
        12349
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4026": {
      "fn": "Slave.deposit",
      "offset": [
        12293,
        12349
      ],
      "op": "POP",
      "path": "11"
    },
    "4027": {
      "fn": "Slave.deposit",
      "offset": [
        12293,
        12349
      ],
      "op": "POP",
      "path": "11"
    },
    "4028": {
      "fn": "Slave.deposit",
      "offset": [
        12293,
        12349
      ],
      "op": "POP",
      "path": "11"
    },
    "4029": {
      "fn": "Slave.deposit",
      "offset": [
        12293,
        12349
      ],
      "op": "POP",
      "path": "11"
    },
    "4030": {
      "fn": "Slave.deposit",
      "offset": [
        12360,
        12409
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 22,
      "value": "0xFF0"
    },
    "4033": {
      "offset": [
        1779,
        1799
      ],
      "op": "PUSH8",
      "path": "11",
      "value": "0xDE41BA4FC9D91AD9"
    },
    "4042": {
      "fn": "Slave.deposit",
      "offset": [
        12387,
        12402
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x0"
    },
    "4075": {
      "fn": "Slave.deposit",
      "offset": [
        12404,
        12408
      ],
      "op": "DUP5",
      "path": "11"
    },
    "4076": {
      "fn": "Slave.deposit",
      "offset": [
        12360,
        12372
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1772"
    },
    "4079": {
      "fn": "Slave.deposit",
      "jump": "i",
      "offset": [
        12360,
        12409
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4080": {
      "fn": "Slave.deposit",
      "offset": [
        12360,
        12409
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4081": {
      "op": "POP"
    },
    "4082": {
      "fn": "Slave.deposit",
      "offset": [
        12424,
        12468
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 23,
      "value": "0x40"
    },
    "4084": {
      "fn": "Slave.deposit",
      "offset": [
        12424,
        12468
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4085": {
      "fn": "Slave.deposit",
      "offset": [
        12424,
        12468
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4086": {
      "op": "DUP5"
    },
    "4087": {
      "op": "DUP2"
    },
    "4088": {
      "op": "MSTORE"
    },
    "4089": {
      "fn": "Slave.deposit",
      "offset": [
        12452,
        12467
      ],
      "op": "TIMESTAMP",
      "path": "11"
    },
    "4090": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4092": {
      "op": "DUP3"
    },
    "4093": {
      "op": "ADD"
    },
    "4094": {
      "op": "MSTORE"
    },
    "4095": {
      "fn": "Slave.deposit",
      "offset": [
        12432,
        12442
      ],
      "op": "CALLER",
      "path": "11"
    },
    "4096": {
      "fn": "Slave.deposit",
      "offset": [
        12432,
        12442
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4097": {
      "fn": "Slave.deposit",
      "offset": [
        12424,
        12468
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
    },
    "4130": {
      "fn": "Slave.deposit",
      "offset": [
        12424,
        12468
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4131": {
      "op": "ADD"
    },
    "4132": {
      "fn": "Slave.deposit",
      "offset": [
        12424,
        12468
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4134": {
      "fn": "Slave.deposit",
      "offset": [
        12424,
        12468
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4135": {
      "fn": "Slave.deposit",
      "offset": [
        12424,
        12468
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4136": {
      "fn": "Slave.deposit",
      "offset": [
        12424,
        12468
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4137": {
      "fn": "Slave.deposit",
      "offset": [
        12424,
        12468
      ],
      "op": "SUB",
      "path": "11"
    },
    "4138": {
      "fn": "Slave.deposit",
      "offset": [
        12424,
        12468
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4139": {
      "fn": "Slave.deposit",
      "offset": [
        12424,
        12468
      ],
      "op": "LOG2",
      "path": "11"
    },
    "4140": {
      "fn": "Slave.deposit",
      "offset": [
        11286,
        12475
      ],
      "op": "POP",
      "path": "11"
    },
    "4141": {
      "fn": "Slave.deposit",
      "offset": [
        11286,
        12475
      ],
      "op": "POP",
      "path": "11"
    },
    "4142": {
      "fn": "Slave.deposit",
      "offset": [
        11286,
        12475
      ],
      "op": "POP",
      "path": "11"
    },
    "4143": {
      "fn": "Slave.deposit",
      "offset": [
        11286,
        12475
      ],
      "op": "POP",
      "path": "11"
    },
    "4144": {
      "fn": "Slave.deposit",
      "offset": [
        11244,
        12475
      ],
      "op": "POP",
      "path": "11"
    },
    "4145": {
      "fn": "Slave.deposit",
      "jump": "o",
      "offset": [
        11244,
        12475
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4146": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6543,
        7001
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4147": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6679,
        6691
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 24,
      "value": "0x8"
    },
    "4149": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6679,
        6698
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4150": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6679,
        6698
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4151": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4153": {
      "op": "NOT"
    },
    "4154": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6679,
        6698
      ],
      "op": "AND",
      "path": "11"
    },
    "4155": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6694,
        6698
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "4157": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6679,
        6698
      ],
      "op": "OR",
      "path": "11"
    },
    "4158": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6679,
        6698
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4159": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6679,
        6698
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "4160": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6801,
        6821
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "4162": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6801,
        6821
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4163": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6801,
        6821
      ],
      "op": "ADD",
      "path": "11"
    },
    "4164": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6801,
        6821
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4165": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6777,
        6849
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4166": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6777,
        6849
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4167": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6679,
        6691
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4169": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6679,
        6691
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4170": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6679,
        6691
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4171": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6679,
        6691
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4172": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6777,
        6849
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x105E"
    },
    "4175": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6777,
        6849
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4176": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6777,
        6849
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4177": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6777,
        6849
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4178": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6777,
        6849
      ],
      "op": "ADD",
      "path": "11"
    },
    "4179": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6777,
        6849
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "4181": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6777,
        6849
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4182": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6777,
        6849
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4183": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6777,
        6849
      ],
      "op": "ADD",
      "path": "11"
    },
    "4184": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6777,
        6849
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4185": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6777,
        6849
      ],
      "op": "ADD",
      "path": "11"
    },
    "4186": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6777,
        6849
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x27DB"
    },
    "4189": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "jump": "i",
      "offset": [
        6777,
        6849
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4190": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6777,
        6849
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4191": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6860,
        6884
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 25,
      "value": "0xA"
    },
    "4193": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6860,
        6912
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4194": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6860,
        6912
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4195": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6860,
        6912
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4196": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6860,
        6912
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "4197": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6922,
        6939
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 26,
      "value": "0xB"
    },
    "4199": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6922,
        6960
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4200": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6922,
        6960
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4201": {
      "op": "PUSH16",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "4218": {
      "op": "NOT"
    },
    "4219": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6922,
        6960
      ],
      "op": "AND",
      "path": "11"
    },
    "4220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4224": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4226": {
      "op": "SHL"
    },
    "4227": {
      "op": "SUB"
    },
    "4228": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6922,
        6960
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4229": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6922,
        6960
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "4230": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6922,
        6960
      ],
      "op": "AND",
      "path": "11"
    },
    "4231": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6922,
        6960
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4232": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6922,
        6960
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4233": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6922,
        6960
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4234": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6922,
        6960
      ],
      "op": "OR",
      "path": "11"
    },
    "4235": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6922,
        6960
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4236": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6922,
        6960
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "4237": {
      "op": "POP"
    },
    "4238": {
      "op": "POP"
    },
    "4239": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6970,
        6987
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 27,
      "value": "0xF"
    },
    "4241": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6970,
        6994
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4242": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6970,
        6994
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4243": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4245": {
      "op": "NOT"
    },
    "4246": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6970,
        6994
      ],
      "op": "AND",
      "path": "11"
    },
    "4247": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4249": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6970,
        6994
      ],
      "op": "OR",
      "path": "11"
    },
    "4250": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6970,
        6994
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4251": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        6970,
        6994
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "4252": {
      "op": "POP"
    },
    "4253": {
      "op": "POP"
    },
    "4254": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "jump": "o",
      "offset": [
        6543,
        7001
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4255": {
      "offset": [
        2446,
        2470
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4256": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2446,
        2470
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "4258": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2446,
        2470
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4259": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2446,
        2470
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4260": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2446,
        2470
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4261": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2446,
        2470
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4262": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2446,
        2470
      ],
      "op": "LT",
      "path": "11"
    },
    "4263": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2446,
        2470
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x10AF"
    },
    "4266": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2446,
        2470
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "4267": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2446,
        2470
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4269": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2446,
        2470
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4270": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2446,
        2470
      ],
      "op": "REVERT",
      "path": "11"
    },
    "4271": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2446,
        2470
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4272": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2446,
        2470
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4274": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2446,
        2470
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4275": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2446,
        2470
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4276": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2446,
        2470
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4277": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2446,
        2470
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "4279": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2446,
        2470
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4280": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2446,
        2470
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4281": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2446,
        2470
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "4282": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2446,
        2470
      ],
      "op": "ADD",
      "path": "11"
    },
    "4283": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2446,
        2470
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4284": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "offset": [
        2446,
        2470
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4285": {
      "op": "POP"
    },
    "4286": {
      "offset": [
        2446,
        2470
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4287": {
      "fn": "Slave.setTotalSupplyAndNonce",
      "jump": "o",
      "offset": [
        2446,
        2470
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4288": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12909,
        13506
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4289": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13261,
        13270
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "4291": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13261,
        13270
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4292": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4294": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4295": {
      "op": "PUSH4",
      "value": "0x35EA6A75"
    },
    "4300": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4302": {
      "op": "SHL"
    },
    "4303": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4304": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4309": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4311": {
      "op": "SHL"
    },
    "4312": {
      "op": "SUB"
    },
    "4313": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13261,
        13270
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4314": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13261,
        13270
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4315": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13261,
        13270
      ],
      "op": "AND",
      "path": "11"
    },
    "4316": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "4318": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4319": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "ADD",
      "path": "11"
    },
    "4320": {
      "op": "MSTORE"
    },
    "4321": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12992,
        13015
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4323": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12992,
        13015
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4324": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12992,
        13015
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4325": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12992,
        13015
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4326": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12992,
        13015
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4327": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12992,
        13015
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4328": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13201,
        13227
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x0"
    },
    "4361": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13243
      ],
      "op": "AND",
      "path": "11"
    },
    "4362": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13243
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4363": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13243
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x35EA6A75"
    },
    "4368": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13243
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4369": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4371": {
      "op": "ADD"
    },
    "4372": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x180"
    },
    "4375": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4377": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4378": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4379": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "DUP4",
      "path": "11"
    },
    "4380": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "SUB",
      "path": "11"
    },
    "4381": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4382": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "DUP7",
      "path": "11"
    },
    "4383": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "GAS",
      "path": "11"
    },
    "4384": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "4385": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "4386": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4387": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "4388": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1131"
    },
    "4391": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "4392": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "4393": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4395": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4396": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "4397": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "4398": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4400": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "REVERT",
      "path": "11"
    },
    "4401": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4402": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "POP",
      "path": "11"
    },
    "4403": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "POP",
      "path": "11"
    },
    "4404": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "POP",
      "path": "11"
    },
    "4405": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "POP",
      "path": "11"
    },
    "4406": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4408": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4409": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "4410": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "4412": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "NOT",
      "path": "11"
    },
    "4413": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "4415": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4416": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "ADD",
      "path": "11"
    },
    "4417": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "AND",
      "path": "11"
    },
    "4418": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4419": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "ADD",
      "path": "11"
    },
    "4420": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4421": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4423": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4424": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "POP",
      "path": "11"
    },
    "4425": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4426": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "ADD",
      "path": "11"
    },
    "4427": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4428": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1155"
    },
    "4431": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4432": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4433": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x281B"
    },
    "4436": {
      "fn": "Slave.sendAaveData",
      "jump": "i",
      "offset": [
        13183,
        13284
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4437": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13183,
        13284
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4438": {
      "op": "POP"
    },
    "4439": {
      "op": "POP"
    },
    "4440": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13315,
        13439
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4442": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13315,
        13439
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4443": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13315,
        13439
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4444": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13345,
        13346
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "4446": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13315,
        13439
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "4448": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13315,
        13439
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4449": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13315,
        13439
      ],
      "op": "ADD",
      "path": "11"
    },
    "4450": {
      "op": "MSTORE"
    },
    "4451": {
      "op": "SWAP1"
    },
    "4452": {
      "op": "DUP2"
    },
    "4453": {
      "op": "ADD"
    },
    "4454": {
      "op": "DUP10"
    },
    "4455": {
      "op": "SWAP1"
    },
    "4456": {
      "op": "MSTORE"
    },
    "4457": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4459": {
      "op": "DUP2"
    },
    "4460": {
      "op": "ADD"
    },
    "4461": {
      "op": "DUP8"
    },
    "4462": {
      "op": "SWAP1"
    },
    "4463": {
      "op": "MSTORE"
    },
    "4464": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4466": {
      "op": "DUP2"
    },
    "4467": {
      "op": "ADD"
    },
    "4468": {
      "op": "DUP7"
    },
    "4469": {
      "op": "SWAP1"
    },
    "4470": {
      "op": "MSTORE"
    },
    "4471": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12950,
        13284
      ],
      "op": "SWAP8",
      "path": "11"
    },
    "4472": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12950,
        13284
      ],
      "op": "SWAP13",
      "path": "11"
    },
    "4473": {
      "op": "POP"
    },
    "4474": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12950,
        13284
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "4475": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12950,
        13284
      ],
      "op": "SWAP11",
      "path": "11"
    },
    "4476": {
      "op": "POP"
    },
    "4477": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12950,
        13284
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "4478": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12950,
        13284
      ],
      "op": "SWAP9",
      "path": "11"
    },
    "4479": {
      "op": "POP"
    },
    "4480": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13295,
        13312
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4482": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13295,
        13312
      ],
      "op": "SWAP8",
      "path": "11"
    },
    "4483": {
      "op": "POP"
    },
    "4484": {
      "op": "POP"
    },
    "4485": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4487": {
      "op": "SWAP1"
    },
    "4488": {
      "op": "SWAP5"
    },
    "4489": {
      "op": "ADD"
    },
    "4490": {
      "op": "SWAP5"
    },
    "4491": {
      "op": "POP"
    },
    "4492": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13315,
        13439
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1195"
    },
    "4495": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13315,
        13439
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "4496": {
      "op": "POP"
    },
    "4497": {
      "op": "POP"
    },
    "4498": {
      "op": "POP"
    },
    "4499": {
      "op": "POP"
    },
    "4500": {
      "op": "JUMP"
    },
    "4501": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13315,
        13439
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4502": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13315,
        13439
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4504": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13315,
        13439
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4505": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13315,
        13439
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "4507": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13315,
        13439
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4508": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13315,
        13439
      ],
      "op": "DUP4",
      "path": "11"
    },
    "4509": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13315,
        13439
      ],
      "op": "SUB",
      "path": "11"
    },
    "4510": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13315,
        13439
      ],
      "op": "SUB",
      "path": "11"
    },
    "4511": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13315,
        13439
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4512": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13315,
        13439
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4513": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13315,
        13439
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4514": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13315,
        13439
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4516": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13315,
        13439
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4517": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13295,
        13439
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4518": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13295,
        13439
      ],
      "op": "POP",
      "path": "11"
    },
    "4519": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13450,
        13499
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 28,
      "value": "0x11D9"
    },
    "4522": {
      "offset": [
        1779,
        1799
      ],
      "op": "PUSH8",
      "path": "11",
      "value": "0xDE41BA4FC9D91AD9"
    },
    "4531": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13477,
        13492
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x0"
    },
    "4564": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13494,
        13498
      ],
      "op": "DUP4",
      "path": "11"
    },
    "4565": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13450,
        13462
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1772"
    },
    "4568": {
      "fn": "Slave.sendAaveData",
      "jump": "i",
      "offset": [
        13450,
        13499
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4569": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13450,
        13499
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4570": {
      "fn": "Slave.sendAaveData",
      "offset": [
        13450,
        13499
      ],
      "op": "POP",
      "path": "11"
    },
    "4571": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12940,
        13506
      ],
      "op": "POP",
      "path": "11"
    },
    "4572": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12940,
        13506
      ],
      "op": "POP",
      "path": "11"
    },
    "4573": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12940,
        13506
      ],
      "op": "POP",
      "path": "11"
    },
    "4574": {
      "fn": "Slave.sendAaveData",
      "offset": [
        12940,
        13506
      ],
      "op": "POP",
      "path": "11"
    },
    "4575": {
      "fn": "Slave.sendAaveData",
      "jump": "o",
      "offset": [
        12909,
        13506
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4576": {
      "fn": "Slave.warpAssets",
      "offset": [
        5154,
        6185
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4577": {
      "fn": "Slave.warpAssets",
      "offset": [
        5266,
        5278
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 29,
      "value": "0x8"
    },
    "4579": {
      "fn": "Slave.warpAssets",
      "offset": [
        5266,
        5286
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4580": {
      "fn": "Slave.warpAssets",
      "offset": [
        5266,
        5286
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4581": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4583": {
      "op": "NOT"
    },
    "4584": {
      "fn": "Slave.warpAssets",
      "offset": [
        5266,
        5286
      ],
      "op": "AND",
      "path": "11"
    },
    "4585": {
      "fn": "Slave.warpAssets",
      "offset": [
        5266,
        5286
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4586": {
      "fn": "Slave.warpAssets",
      "offset": [
        5266,
        5286
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "4587": {
      "fn": "Slave.warpAssets",
      "offset": [
        5445,
        5465
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "4589": {
      "fn": "Slave.warpAssets",
      "offset": [
        5445,
        5465
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4590": {
      "fn": "Slave.warpAssets",
      "offset": [
        5445,
        5465
      ],
      "op": "ADD",
      "path": "11"
    },
    "4591": {
      "fn": "Slave.warpAssets",
      "offset": [
        5445,
        5465
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4592": {
      "fn": "Slave.warpAssets",
      "offset": [
        5434,
        5500
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4593": {
      "fn": "Slave.warpAssets",
      "offset": [
        5434,
        5500
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4594": {
      "fn": "Slave.warpAssets",
      "offset": [
        5281,
        5286
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4596": {
      "fn": "Slave.warpAssets",
      "offset": [
        5281,
        5286
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4597": {
      "fn": "Slave.warpAssets",
      "offset": [
        5281,
        5286
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4598": {
      "fn": "Slave.warpAssets",
      "offset": [
        5281,
        5286
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4599": {
      "fn": "Slave.warpAssets",
      "offset": [
        5281,
        5286
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4600": {
      "fn": "Slave.warpAssets",
      "offset": [
        5281,
        5286
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4601": {
      "fn": "Slave.warpAssets",
      "offset": [
        5434,
        5500
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x120A"
    },
    "4604": {
      "fn": "Slave.warpAssets",
      "offset": [
        5434,
        5500
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4605": {
      "fn": "Slave.warpAssets",
      "offset": [
        5434,
        5500
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4606": {
      "fn": "Slave.warpAssets",
      "offset": [
        5434,
        5500
      ],
      "op": "ADD",
      "path": "11"
    },
    "4607": {
      "fn": "Slave.warpAssets",
      "offset": [
        5434,
        5500
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "4609": {
      "fn": "Slave.warpAssets",
      "offset": [
        5434,
        5500
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4610": {
      "fn": "Slave.warpAssets",
      "offset": [
        5434,
        5500
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4611": {
      "fn": "Slave.warpAssets",
      "offset": [
        5434,
        5500
      ],
      "op": "ADD",
      "path": "11"
    },
    "4612": {
      "fn": "Slave.warpAssets",
      "offset": [
        5434,
        5500
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4613": {
      "fn": "Slave.warpAssets",
      "offset": [
        5434,
        5500
      ],
      "op": "ADD",
      "path": "11"
    },
    "4614": {
      "fn": "Slave.warpAssets",
      "offset": [
        5434,
        5500
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x28B8"
    },
    "4617": {
      "fn": "Slave.warpAssets",
      "jump": "i",
      "offset": [
        5434,
        5500
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4618": {
      "fn": "Slave.warpAssets",
      "offset": [
        5434,
        5500
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4619": {
      "fn": "Slave.warpAssets",
      "offset": [
        5545,
        5555
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "4621": {
      "fn": "Slave.warpAssets",
      "offset": [
        5545,
        5555
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4622": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4624": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4625": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "4630": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4632": {
      "op": "SHL"
    },
    "4633": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4634": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4635": {
      "fn": "Slave.warpAssets",
      "offset": [
        5575,
        5579
      ],
      "op": "ADDRESS",
      "path": "11"
    },
    "4636": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "4638": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4639": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "ADD",
      "path": "11"
    },
    "4640": {
      "op": "MSTORE"
    },
    "4641": {
      "fn": "Slave.warpAssets",
      "offset": [
        5296,
        5500
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "4642": {
      "fn": "Slave.warpAssets",
      "offset": [
        5296,
        5500
      ],
      "op": "SWAP8",
      "path": "11"
    },
    "4643": {
      "op": "POP"
    },
    "4644": {
      "fn": "Slave.warpAssets",
      "offset": [
        5296,
        5500
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4645": {
      "fn": "Slave.warpAssets",
      "offset": [
        5296,
        5500
      ],
      "op": "SWAP6",
      "path": "11"
    },
    "4646": {
      "op": "POP"
    },
    "4647": {
      "fn": "Slave.warpAssets",
      "offset": [
        5296,
        5500
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "4648": {
      "op": "POP"
    },
    "4649": {
      "fn": "Slave.warpAssets",
      "offset": [
        5511,
        5535
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4651": {
      "fn": "Slave.warpAssets",
      "offset": [
        5511,
        5535
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "4652": {
      "op": "POP"
    },
    "4653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4657": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4659": {
      "op": "SHL"
    },
    "4660": {
      "op": "SUB"
    },
    "4661": {
      "fn": "Slave.warpAssets",
      "offset": [
        5545,
        5555
      ],
      "op": "AND",
      "path": "11"
    },
    "4662": {
      "fn": "Slave.warpAssets",
      "offset": [
        5545,
        5555
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4663": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5566
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x70A08231"
    },
    "4668": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5566
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4669": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4671": {
      "op": "ADD"
    },
    "4672": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "4674": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4676": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4677": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4678": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "DUP4",
      "path": "11"
    },
    "4679": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "SUB",
      "path": "11"
    },
    "4680": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4681": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "DUP7",
      "path": "11"
    },
    "4682": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "GAS",
      "path": "11"
    },
    "4683": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "4684": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "4685": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4686": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "4687": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x125C"
    },
    "4690": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "4691": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "4692": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4694": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4695": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "4696": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "4697": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4699": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "REVERT",
      "path": "11"
    },
    "4700": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4701": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "POP",
      "path": "11"
    },
    "4702": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "POP",
      "path": "11"
    },
    "4703": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "POP",
      "path": "11"
    },
    "4704": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "POP",
      "path": "11"
    },
    "4705": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4707": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4708": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "4709": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "4711": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "NOT",
      "path": "11"
    },
    "4712": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "4714": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4715": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "ADD",
      "path": "11"
    },
    "4716": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "AND",
      "path": "11"
    },
    "4717": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4718": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "ADD",
      "path": "11"
    },
    "4719": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4720": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4722": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4723": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "POP",
      "path": "11"
    },
    "4724": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4725": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "ADD",
      "path": "11"
    },
    "4726": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4727": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1280"
    },
    "4730": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4731": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4732": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x254E"
    },
    "4735": {
      "fn": "Slave.warpAssets",
      "jump": "i",
      "offset": [
        5538,
        5581
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4736": {
      "fn": "Slave.warpAssets",
      "offset": [
        5538,
        5581
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4737": {
      "fn": "Slave.warpAssets",
      "offset": [
        5511,
        5581
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4738": {
      "fn": "Slave.warpAssets",
      "offset": [
        5511,
        5581
      ],
      "op": "POP",
      "path": "11"
    },
    "4739": {
      "fn": "Slave.warpAssets",
      "offset": [
        5591,
        5603
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4741": {
      "fn": "Slave.warpAssets",
      "offset": [
        5606,
        5616
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x128C"
    },
    "4744": {
      "fn": "Slave.warpAssets",
      "offset": [
        5606,
        5614
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x16ED"
    },
    "4747": {
      "fn": "Slave.warpAssets",
      "jump": "i",
      "offset": [
        5606,
        5616
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4748": {
      "fn": "Slave.warpAssets",
      "offset": [
        5606,
        5616
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4749": {
      "fn": "Slave.warpAssets",
      "offset": [
        5634,
        5644
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 30,
      "value": "0x3"
    },
    "4751": {
      "fn": "Slave.warpAssets",
      "offset": [
        5634,
        5644
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4752": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4754": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4755": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "4760": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4762": {
      "op": "SHL"
    },
    "4763": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4764": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4767": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4769": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4771": {
      "op": "SHL"
    },
    "4772": {
      "op": "SUB"
    },
    "4773": {
      "op": "DUP1"
    },
    "4774": {
      "op": "DUP5"
    },
    "4775": {
      "op": "AND"
    },
    "4776": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "4778": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "DUP4",
      "path": "11"
    },
    "4779": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "ADD",
      "path": "11"
    },
    "4780": {
      "op": "MSTORE"
    },
    "4781": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4783": {
      "op": "DUP3"
    },
    "4784": {
      "op": "ADD"
    },
    "4785": {
      "op": "DUP7"
    },
    "4786": {
      "op": "SWAP1"
    },
    "4787": {
      "op": "MSTORE"
    },
    "4788": {
      "fn": "Slave.warpAssets",
      "offset": [
        5591,
        5616
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "4789": {
      "fn": "Slave.warpAssets",
      "offset": [
        5591,
        5616
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "4790": {
      "op": "POP"
    },
    "4791": {
      "fn": "Slave.warpAssets",
      "offset": [
        5634,
        5644
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4792": {
      "fn": "Slave.warpAssets",
      "offset": [
        5634,
        5644
      ],
      "op": "AND",
      "path": "11"
    },
    "4793": {
      "fn": "Slave.warpAssets",
      "offset": [
        5634,
        5644
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4794": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5653
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x95EA7B3"
    },
    "4799": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5653
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4800": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4802": {
      "op": "ADD"
    },
    "4803": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "4805": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4807": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4808": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4809": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "DUP4",
      "path": "11"
    },
    "4810": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "SUB",
      "path": "11"
    },
    "4811": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4812": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4814": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "DUP8",
      "path": "11"
    },
    "4815": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "GAS",
      "path": "11"
    },
    "4816": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "CALL",
      "path": "11"
    },
    "4817": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "4818": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4819": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "4820": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x12E1"
    },
    "4823": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "4824": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "4825": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4827": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4828": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "4829": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "4830": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4832": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "REVERT",
      "path": "11"
    },
    "4833": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4834": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "POP",
      "path": "11"
    },
    "4835": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "POP",
      "path": "11"
    },
    "4836": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "POP",
      "path": "11"
    },
    "4837": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "POP",
      "path": "11"
    },
    "4838": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4840": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4841": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "4842": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "4844": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "NOT",
      "path": "11"
    },
    "4845": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "4847": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4848": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "ADD",
      "path": "11"
    },
    "4849": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "AND",
      "path": "11"
    },
    "4850": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4851": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "ADD",
      "path": "11"
    },
    "4852": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4853": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4855": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4856": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "POP",
      "path": "11"
    },
    "4857": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4858": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "ADD",
      "path": "11"
    },
    "4859": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4860": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1305"
    },
    "4863": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4864": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4865": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2567"
    },
    "4868": {
      "fn": "Slave.warpAssets",
      "jump": "i",
      "offset": [
        5627,
        5677
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4869": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4870": {
      "fn": "Slave.warpAssets",
      "offset": [
        5627,
        5677
      ],
      "op": "POP",
      "path": "11"
    },
    "4871": {
      "fn": "Slave.warpAssets",
      "offset": [
        5688,
        5709
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4873": {
      "fn": "Slave.warpAssets",
      "offset": [
        5712,
        5739
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1310"
    },
    "4876": {
      "fn": "Slave.warpAssets",
      "offset": [
        5712,
        5737
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1E44"
    },
    "4879": {
      "fn": "Slave.warpAssets",
      "jump": "i",
      "offset": [
        5712,
        5739
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4880": {
      "fn": "Slave.warpAssets",
      "offset": [
        5712,
        5739
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4881": {
      "fn": "Slave.warpAssets",
      "offset": [
        5750,
        5767
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 31,
      "value": "0x10"
    },
    "4883": {
      "fn": "Slave.warpAssets",
      "offset": [
        5750,
        5783
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4884": {
      "fn": "Slave.warpAssets",
      "offset": [
        5750,
        5783
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4885": {
      "fn": "Slave.warpAssets",
      "offset": [
        5750,
        5783
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "4886": {
      "fn": "Slave.warpAssets",
      "offset": [
        5801,
        5810
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 32,
      "value": "0x2"
    },
    "4888": {
      "fn": "Slave.warpAssets",
      "offset": [
        5801,
        5810
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4889": {
      "fn": "Slave.warpAssets",
      "offset": [
        5820,
        5847
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "4891": {
      "fn": "Slave.warpAssets",
      "offset": [
        5820,
        5847
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4892": {
      "fn": "Slave.warpAssets",
      "offset": [
        5820,
        5847
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4893": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4895": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4896": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "4901": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4903": {
      "op": "SHL"
    },
    "4904": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4905": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4910": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4912": {
      "op": "SHL"
    },
    "4913": {
      "op": "SUB"
    },
    "4914": {
      "fn": "Slave.warpAssets",
      "offset": [
        5820,
        5847
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4915": {
      "fn": "Slave.warpAssets",
      "offset": [
        5820,
        5847
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4916": {
      "fn": "Slave.warpAssets",
      "offset": [
        5820,
        5847
      ],
      "op": "AND",
      "path": "11"
    },
    "4917": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "4918": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4919": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "ADD",
      "path": "11"
    },
    "4920": {
      "op": "SWAP3"
    },
    "4921": {
      "op": "SWAP1"
    },
    "4922": {
      "op": "SWAP3"
    },
    "4923": {
      "op": "MSTORE"
    },
    "4924": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4926": {
      "op": "DUP3"
    },
    "4927": {
      "op": "ADD"
    },
    "4928": {
      "op": "DUP5"
    },
    "4929": {
      "op": "SWAP1"
    },
    "4930": {
      "op": "MSTORE"
    },
    "4931": {
      "fn": "Slave.warpAssets",
      "offset": [
        5750,
        5783
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "4932": {
      "fn": "Slave.warpAssets",
      "offset": [
        5750,
        5783
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "4933": {
      "op": "POP"
    },
    "4934": {
      "fn": "Slave.warpAssets",
      "offset": [
        5801,
        5810
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4935": {
      "fn": "Slave.warpAssets",
      "offset": [
        5801,
        5810
      ],
      "op": "AND",
      "path": "11"
    },
    "4936": {
      "fn": "Slave.warpAssets",
      "offset": [
        5801,
        5810
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4937": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5819
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x95EA7B3"
    },
    "4942": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5819
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4943": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4945": {
      "op": "ADD"
    },
    "4946": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "4948": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4950": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4951": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4952": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "DUP4",
      "path": "11"
    },
    "4953": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "SUB",
      "path": "11"
    },
    "4954": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4955": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4957": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "DUP8",
      "path": "11"
    },
    "4958": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "GAS",
      "path": "11"
    },
    "4959": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "CALL",
      "path": "11"
    },
    "4960": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "4961": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4962": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "4963": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1370"
    },
    "4966": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "4967": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "4968": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4970": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4971": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "4972": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "4973": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4975": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "REVERT",
      "path": "11"
    },
    "4976": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4977": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "POP",
      "path": "11"
    },
    "4978": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "POP",
      "path": "11"
    },
    "4979": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "POP",
      "path": "11"
    },
    "4980": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "POP",
      "path": "11"
    },
    "4981": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4983": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4984": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "4985": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "4987": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "NOT",
      "path": "11"
    },
    "4988": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "4990": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4991": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "ADD",
      "path": "11"
    },
    "4992": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "AND",
      "path": "11"
    },
    "4993": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4994": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "ADD",
      "path": "11"
    },
    "4995": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4996": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4998": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4999": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "POP",
      "path": "11"
    },
    "5000": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5001": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "ADD",
      "path": "11"
    },
    "5002": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5003": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1394"
    },
    "5006": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5007": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5008": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2567"
    },
    "5011": {
      "fn": "Slave.warpAssets",
      "jump": "i",
      "offset": [
        5794,
        5863
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5012": {
      "fn": "Slave.warpAssets",
      "offset": [
        5794,
        5863
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5013": {
      "op": "POP"
    },
    "5014": {
      "fn": "Slave.warpAssets",
      "offset": [
        5890,
        5917
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 33,
      "value": "0x4"
    },
    "5016": {
      "fn": "Slave.warpAssets",
      "offset": [
        5890,
        5917
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5017": {
      "fn": "Slave.warpAssets",
      "offset": [
        5890,
        5917
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "5018": {
      "fn": "Slave.warpAssets",
      "offset": [
        6031,
        6040
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "5020": {
      "fn": "Slave.warpAssets",
      "offset": [
        6031,
        6040
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "5021": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5023": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5024": {
      "op": "PUSH4",
      "value": "0x37E9A827"
    },
    "5029": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "5031": {
      "op": "SHL"
    },
    "5032": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5033": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5034": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "5035": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "DUP4",
      "path": "11"
    },
    "5036": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "ADD",
      "path": "11"
    },
    "5037": {
      "op": "DUP5"
    },
    "5038": {
      "op": "SWAP1"
    },
    "5039": {
      "op": "MSTORE"
    },
    "5040": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "5045": {
      "op": "DUP10"
    },
    "5046": {
      "op": "AND"
    },
    "5047": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5049": {
      "op": "DUP5"
    },
    "5050": {
      "op": "ADD"
    },
    "5051": {
      "op": "MSTORE"
    },
    "5052": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5054": {
      "op": "DUP4"
    },
    "5055": {
      "op": "ADD"
    },
    "5056": {
      "op": "DUP8"
    },
    "5057": {
      "op": "SWAP1"
    },
    "5058": {
      "op": "MSTORE"
    },
    "5059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5063": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5065": {
      "op": "SHL"
    },
    "5066": {
      "op": "SUB"
    },
    "5067": {
      "fn": "Slave.warpAssets",
      "offset": [
        6031,
        6040
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5068": {
      "fn": "Slave.warpAssets",
      "offset": [
        6031,
        6040
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5069": {
      "fn": "Slave.warpAssets",
      "offset": [
        6031,
        6040
      ],
      "op": "AND",
      "path": "11"
    },
    "5070": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5072": {
      "op": "DUP5"
    },
    "5073": {
      "op": "ADD"
    },
    "5074": {
      "op": "MSTORE"
    },
    "5075": {
      "fn": "Slave.warpAssets",
      "offset": [
        5890,
        5917
      ],
      "op": "AND",
      "path": "11"
    },
    "5076": {
      "fn": "Slave.warpAssets",
      "offset": [
        5890,
        5917
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5077": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        5933
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x6FD3504E"
    },
    "5082": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        5933
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5083": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5085": {
      "op": "ADD"
    },
    "5086": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5088": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5090": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5091": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5092": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "DUP4",
      "path": "11"
    },
    "5093": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "SUB",
      "path": "11"
    },
    "5094": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5095": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5097": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "DUP8",
      "path": "11"
    },
    "5098": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "GAS",
      "path": "11"
    },
    "5099": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "CALL",
      "path": "11"
    },
    "5100": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5101": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5102": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5103": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x13FC"
    },
    "5106": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "5107": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "5108": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5110": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5111": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "5112": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "5113": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5115": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "REVERT",
      "path": "11"
    },
    "5116": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5117": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "POP",
      "path": "11"
    },
    "5118": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "POP",
      "path": "11"
    },
    "5119": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "POP",
      "path": "11"
    },
    "5120": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "POP",
      "path": "11"
    },
    "5121": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5123": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5124": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "5125": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "5127": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "NOT",
      "path": "11"
    },
    "5128": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "5130": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5131": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "ADD",
      "path": "11"
    },
    "5132": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "AND",
      "path": "11"
    },
    "5133": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5134": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "ADD",
      "path": "11"
    },
    "5135": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5136": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5138": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5139": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "POP",
      "path": "11"
    },
    "5140": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5141": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "ADD",
      "path": "11"
    },
    "5142": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5143": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1420"
    },
    "5146": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5147": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5148": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2911"
    },
    "5151": {
      "fn": "Slave.warpAssets",
      "jump": "i",
      "offset": [
        5874,
        6050
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5152": {
      "fn": "Slave.warpAssets",
      "offset": [
        5874,
        6050
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5153": {
      "op": "POP"
    },
    "5154": {
      "fn": "Slave.warpAssets",
      "offset": [
        6061,
        6178
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 34,
      "value": "0x142B"
    },
    "5157": {
      "fn": "Slave.warpAssets",
      "offset": [
        6094,
        6112
      ],
      "op": "DUP6",
      "path": "11"
    },
    "5158": {
      "fn": "Slave.warpAssets",
      "offset": [
        6150,
        6165
      ],
      "op": "DUP6",
      "path": "11"
    },
    "5159": {
      "fn": "Slave.warpAssets",
      "offset": [
        6061,
        6080
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1FBF"
    },
    "5162": {
      "fn": "Slave.warpAssets",
      "jump": "i",
      "offset": [
        6061,
        6178
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5163": {
      "fn": "Slave.warpAssets",
      "offset": [
        6061,
        6178
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5164": {
      "fn": "Slave.warpAssets",
      "offset": [
        5227,
        6185
      ],
      "op": "POP",
      "path": "11"
    },
    "5165": {
      "fn": "Slave.warpAssets",
      "offset": [
        5227,
        6185
      ],
      "op": "POP",
      "path": "11"
    },
    "5166": {
      "fn": "Slave.warpAssets",
      "offset": [
        5227,
        6185
      ],
      "op": "POP",
      "path": "11"
    },
    "5167": {
      "fn": "Slave.warpAssets",
      "offset": [
        5227,
        6185
      ],
      "op": "POP",
      "path": "11"
    },
    "5168": {
      "fn": "Slave.warpAssets",
      "offset": [
        5227,
        6185
      ],
      "op": "POP",
      "path": "11"
    },
    "5169": {
      "fn": "Slave.warpAssets",
      "offset": [
        5227,
        6185
      ],
      "op": "POP",
      "path": "11"
    },
    "5170": {
      "fn": "Slave.warpAssets",
      "offset": [
        5154,
        6185
      ],
      "op": "POP",
      "path": "11"
    },
    "5171": {
      "fn": "Slave.warpAssets",
      "jump": "o",
      "offset": [
        5154,
        6185
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5172": {
      "fn": "Slave.withdraw",
      "offset": [
        7007,
        7651
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5173": {
      "fn": "Slave.withdraw",
      "offset": [
        7091,
        7113
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5175": {
      "fn": "Slave.withdraw",
      "offset": [
        7115,
        7129
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5176": {
      "fn": "Slave.withdraw",
      "offset": [
        7157,
        7172
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5177": {
      "fn": "Slave.withdraw",
      "offset": [
        7157,
        7177
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "5179": {
      "fn": "Slave.withdraw",
      "offset": [
        7157,
        7177
      ],
      "op": "ADD",
      "path": "11"
    },
    "5180": {
      "fn": "Slave.withdraw",
      "offset": [
        7157,
        7177
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5181": {
      "fn": "Slave.withdraw",
      "offset": [
        7133,
        7226
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5182": {
      "fn": "Slave.withdraw",
      "offset": [
        7133,
        7226
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5184": {
      "fn": "Slave.withdraw",
      "offset": [
        7133,
        7226
      ],
      "op": "ADD",
      "path": "11"
    },
    "5185": {
      "fn": "Slave.withdraw",
      "offset": [
        7133,
        7226
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5186": {
      "fn": "Slave.withdraw",
      "offset": [
        7133,
        7226
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5187": {
      "fn": "Slave.withdraw",
      "offset": [
        7133,
        7226
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5188": {
      "fn": "Slave.withdraw",
      "offset": [
        7133,
        7226
      ],
      "op": "ADD",
      "path": "11"
    },
    "5189": {
      "fn": "Slave.withdraw",
      "offset": [
        7133,
        7226
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5190": {
      "fn": "Slave.withdraw",
      "offset": [
        7133,
        7226
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x144F"
    },
    "5193": {
      "fn": "Slave.withdraw",
      "offset": [
        7133,
        7226
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5194": {
      "fn": "Slave.withdraw",
      "offset": [
        7133,
        7226
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5195": {
      "fn": "Slave.withdraw",
      "offset": [
        7133,
        7226
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x292E"
    },
    "5198": {
      "fn": "Slave.withdraw",
      "jump": "i",
      "offset": [
        7133,
        7226
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5199": {
      "fn": "Slave.withdraw",
      "offset": [
        7133,
        7226
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5200": {
      "fn": "Slave.withdraw",
      "offset": [
        7088,
        7226
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "5201": {
      "fn": "Slave.withdraw",
      "offset": [
        7088,
        7226
      ],
      "op": "POP",
      "path": "11"
    },
    "5202": {
      "fn": "Slave.withdraw",
      "offset": [
        7088,
        7226
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "5203": {
      "fn": "Slave.withdraw",
      "offset": [
        7088,
        7226
      ],
      "op": "POP",
      "path": "11"
    },
    "5204": {
      "fn": "Slave.withdraw",
      "offset": [
        7088,
        7226
      ],
      "op": "POP",
      "path": "11"
    },
    "5205": {
      "fn": "Slave.withdraw",
      "offset": [
        7237,
        7249
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5207": {
      "fn": "Slave.withdraw",
      "offset": [
        7252,
        7262
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x145E"
    },
    "5210": {
      "fn": "Slave.withdraw",
      "offset": [
        7252,
        7260
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x16ED"
    },
    "5213": {
      "fn": "Slave.withdraw",
      "jump": "i",
      "offset": [
        7252,
        7262
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5214": {
      "fn": "Slave.withdraw",
      "offset": [
        7252,
        7262
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5215": {
      "fn": "Slave.withdraw",
      "offset": [
        7300,
        7310
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "5217": {
      "fn": "Slave.withdraw",
      "offset": [
        7300,
        7310
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "5218": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5220": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5221": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "5226": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5228": {
      "op": "SHL"
    },
    "5229": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5230": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5231": {
      "fn": "Slave.withdraw",
      "offset": [
        7330,
        7334
      ],
      "op": "ADDRESS",
      "path": "11"
    },
    "5232": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "5234": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5235": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "ADD",
      "path": "11"
    },
    "5236": {
      "op": "MSTORE"
    },
    "5237": {
      "fn": "Slave.withdraw",
      "offset": [
        7237,
        7262
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5238": {
      "fn": "Slave.withdraw",
      "offset": [
        7237,
        7262
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "5239": {
      "op": "POP"
    },
    "5240": {
      "fn": "Slave.withdraw",
      "offset": [
        7272,
        7290
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5242": {
      "fn": "Slave.withdraw",
      "offset": [
        7272,
        7290
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5247": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5249": {
      "op": "SHL"
    },
    "5250": {
      "op": "SUB"
    },
    "5251": {
      "fn": "Slave.withdraw",
      "offset": [
        7300,
        7310
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5252": {
      "fn": "Slave.withdraw",
      "offset": [
        7300,
        7310
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5253": {
      "fn": "Slave.withdraw",
      "offset": [
        7300,
        7310
      ],
      "op": "AND",
      "path": "11"
    },
    "5254": {
      "fn": "Slave.withdraw",
      "offset": [
        7300,
        7310
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5255": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7321
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x70A08231"
    },
    "5260": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7321
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5261": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5263": {
      "op": "ADD"
    },
    "5264": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5266": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5268": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5269": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5270": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "DUP4",
      "path": "11"
    },
    "5271": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "SUB",
      "path": "11"
    },
    "5272": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5273": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "DUP7",
      "path": "11"
    },
    "5274": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "GAS",
      "path": "11"
    },
    "5275": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "5276": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5277": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5278": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5279": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x14AC"
    },
    "5282": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "5283": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "5284": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5286": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5287": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "5288": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "5289": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5291": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "REVERT",
      "path": "11"
    },
    "5292": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5293": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "POP",
      "path": "11"
    },
    "5294": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "POP",
      "path": "11"
    },
    "5295": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "POP",
      "path": "11"
    },
    "5296": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "POP",
      "path": "11"
    },
    "5297": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5299": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5300": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "5301": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "5303": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "NOT",
      "path": "11"
    },
    "5304": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "5306": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5307": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "ADD",
      "path": "11"
    },
    "5308": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "AND",
      "path": "11"
    },
    "5309": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5310": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "ADD",
      "path": "11"
    },
    "5311": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5312": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5314": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5315": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "POP",
      "path": "11"
    },
    "5316": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5317": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "ADD",
      "path": "11"
    },
    "5318": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5319": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x14D0"
    },
    "5322": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5323": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5324": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x254E"
    },
    "5327": {
      "fn": "Slave.withdraw",
      "jump": "i",
      "offset": [
        7293,
        7336
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5328": {
      "fn": "Slave.withdraw",
      "offset": [
        7293,
        7336
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5329": {
      "fn": "Slave.withdraw",
      "offset": [
        7272,
        7336
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5330": {
      "fn": "Slave.withdraw",
      "offset": [
        7272,
        7336
      ],
      "op": "POP",
      "path": "11"
    },
    "5331": {
      "fn": "Slave.withdraw",
      "offset": [
        7371,
        7385
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5333": {
      "fn": "Slave.withdraw",
      "offset": [
        7437,
        7461
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA"
    },
    "5335": {
      "fn": "Slave.withdraw",
      "offset": [
        7437,
        7461
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "5336": {
      "fn": "Slave.withdraw",
      "offset": [
        7411,
        7421
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5337": {
      "fn": "Slave.withdraw",
      "offset": [
        7390,
        7396
      ],
      "op": "DUP6",
      "path": "11"
    },
    "5338": {
      "fn": "Slave.withdraw",
      "offset": [
        7399,
        7407
      ],
      "op": "PUSH8",
      "path": "11",
      "value": "0xDE0B6B3A7640000"
    },
    "5347": {
      "fn": "Slave.withdraw",
      "offset": [
        7390,
        7407
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x14EC"
    },
    "5350": {
      "fn": "Slave.withdraw",
      "offset": [
        7390,
        7407
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5351": {
      "fn": "Slave.withdraw",
      "offset": [
        7390,
        7407
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5352": {
      "fn": "Slave.withdraw",
      "offset": [
        7390,
        7407
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2757"
    },
    "5355": {
      "fn": "Slave.withdraw",
      "jump": "i",
      "offset": [
        7390,
        7407
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5356": {
      "fn": "Slave.withdraw",
      "offset": [
        7390,
        7407
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5357": {
      "fn": "Slave.withdraw",
      "offset": [
        7389,
        7421
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x14F6"
    },
    "5360": {
      "fn": "Slave.withdraw",
      "offset": [
        7389,
        7421
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5361": {
      "fn": "Slave.withdraw",
      "offset": [
        7389,
        7421
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5362": {
      "fn": "Slave.withdraw",
      "offset": [
        7389,
        7421
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2757"
    },
    "5365": {
      "fn": "Slave.withdraw",
      "jump": "i",
      "offset": [
        7389,
        7421
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5366": {
      "fn": "Slave.withdraw",
      "offset": [
        7389,
        7421
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5367": {
      "fn": "Slave.withdraw",
      "offset": [
        7388,
        7461
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1500"
    },
    "5370": {
      "fn": "Slave.withdraw",
      "offset": [
        7388,
        7461
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5371": {
      "fn": "Slave.withdraw",
      "offset": [
        7388,
        7461
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5372": {
      "fn": "Slave.withdraw",
      "offset": [
        7388,
        7461
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x276E"
    },
    "5375": {
      "fn": "Slave.withdraw",
      "jump": "i",
      "offset": [
        7388,
        7461
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5376": {
      "fn": "Slave.withdraw",
      "offset": [
        7388,
        7461
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5377": {
      "fn": "Slave.withdraw",
      "offset": [
        7371,
        7461
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5378": {
      "fn": "Slave.withdraw",
      "offset": [
        7371,
        7461
      ],
      "op": "POP",
      "path": "11"
    },
    "5379": {
      "fn": "Slave.withdraw",
      "offset": [
        7500,
        7506
      ],
      "op": "DUP4",
      "path": "11",
      "statement": 35
    },
    "5380": {
      "fn": "Slave.withdraw",
      "offset": [
        7472,
        7496
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA"
    },
    "5382": {
      "fn": "Slave.withdraw",
      "offset": [
        7472,
        7496
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5384": {
      "fn": "Slave.withdraw",
      "offset": [
        7472,
        7506
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5385": {
      "fn": "Slave.withdraw",
      "offset": [
        7472,
        7506
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5386": {
      "fn": "Slave.withdraw",
      "offset": [
        7472,
        7506
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "5387": {
      "fn": "Slave.withdraw",
      "offset": [
        7472,
        7506
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1514"
    },
    "5390": {
      "fn": "Slave.withdraw",
      "offset": [
        7472,
        7506
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5391": {
      "fn": "Slave.withdraw",
      "offset": [
        7472,
        7506
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5392": {
      "fn": "Slave.withdraw",
      "offset": [
        7472,
        7506
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x296E"
    },
    "5395": {
      "fn": "Slave.withdraw",
      "jump": "i",
      "offset": [
        7472,
        7506
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5396": {
      "fn": "Slave.withdraw",
      "offset": [
        7472,
        7506
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5397": {
      "fn": "Slave.withdraw",
      "offset": [
        7472,
        7506
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5398": {
      "fn": "Slave.withdraw",
      "offset": [
        7472,
        7506
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5399": {
      "fn": "Slave.withdraw",
      "offset": [
        7472,
        7506
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "5400": {
      "op": "POP"
    },
    "5401": {
      "op": "POP"
    },
    "5402": {
      "fn": "Slave.withdraw",
      "offset": [
        7524,
        7534
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 36,
      "value": "0x3"
    },
    "5404": {
      "fn": "Slave.withdraw",
      "offset": [
        7524,
        7534
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "5405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5409": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5411": {
      "op": "SHL"
    },
    "5412": {
      "op": "SUB"
    },
    "5413": {
      "fn": "Slave.withdraw",
      "offset": [
        7524,
        7534
      ],
      "op": "AND",
      "path": "11"
    },
    "5414": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7543
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x95EA7B3"
    },
    "5419": {
      "fn": "Slave.withdraw",
      "offset": [
        7544,
        7548
      ],
      "op": "DUP5",
      "path": "11"
    },
    "5420": {
      "fn": "Slave.withdraw",
      "offset": [
        7550,
        7567
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x153D"
    },
    "5423": {
      "fn": "Slave.withdraw",
      "offset": [
        7559,
        7567
      ],
      "op": "PUSH8",
      "path": "11",
      "value": "0xDE0B6B3A7640000"
    },
    "5432": {
      "fn": "Slave.withdraw",
      "offset": [
        7550,
        7556
      ],
      "op": "DUP6",
      "path": "11"
    },
    "5433": {
      "fn": "Slave.withdraw",
      "offset": [
        7550,
        7567
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x276E"
    },
    "5436": {
      "fn": "Slave.withdraw",
      "jump": "i",
      "offset": [
        7550,
        7567
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5437": {
      "fn": "Slave.withdraw",
      "offset": [
        7550,
        7567
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5438": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5440": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5443": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5445": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5447": {
      "op": "SHL"
    },
    "5448": {
      "op": "SUB"
    },
    "5449": {
      "op": "NOT"
    },
    "5450": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "5452": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "DUP6",
      "path": "11"
    },
    "5453": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5454": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "SHL",
      "path": "11"
    },
    "5455": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "AND",
      "path": "11"
    },
    "5456": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5457": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5458": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5460": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5462": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5464": {
      "op": "SHL"
    },
    "5465": {
      "op": "SUB"
    },
    "5466": {
      "op": "SWAP1"
    },
    "5467": {
      "op": "SWAP3"
    },
    "5468": {
      "op": "AND"
    },
    "5469": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "5471": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "DUP4",
      "path": "11"
    },
    "5472": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "ADD",
      "path": "11"
    },
    "5473": {
      "op": "MSTORE"
    },
    "5474": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5476": {
      "op": "DUP3"
    },
    "5477": {
      "op": "ADD"
    },
    "5478": {
      "op": "MSTORE"
    },
    "5479": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5481": {
      "op": "ADD"
    },
    "5482": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5484": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5486": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5487": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5488": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "DUP4",
      "path": "11"
    },
    "5489": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "SUB",
      "path": "11"
    },
    "5490": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5491": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5493": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "DUP8",
      "path": "11"
    },
    "5494": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "GAS",
      "path": "11"
    },
    "5495": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "CALL",
      "path": "11"
    },
    "5496": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5497": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5498": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5499": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1588"
    },
    "5502": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "5503": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "5504": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5506": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5507": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "5508": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "5509": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5511": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "REVERT",
      "path": "11"
    },
    "5512": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5513": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "POP",
      "path": "11"
    },
    "5514": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "POP",
      "path": "11"
    },
    "5515": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "POP",
      "path": "11"
    },
    "5516": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "POP",
      "path": "11"
    },
    "5517": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5519": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5520": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "5521": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "5523": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "NOT",
      "path": "11"
    },
    "5524": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "5526": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5527": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "ADD",
      "path": "11"
    },
    "5528": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "AND",
      "path": "11"
    },
    "5529": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5530": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "ADD",
      "path": "11"
    },
    "5531": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5532": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5534": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5535": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "POP",
      "path": "11"
    },
    "5536": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5537": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "ADD",
      "path": "11"
    },
    "5538": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5539": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x15AC"
    },
    "5542": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5543": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5544": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2567"
    },
    "5547": {
      "fn": "Slave.withdraw",
      "jump": "i",
      "offset": [
        7517,
        7568
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5548": {
      "fn": "Slave.withdraw",
      "offset": [
        7517,
        7568
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5549": {
      "op": "POP"
    },
    "5550": {
      "fn": "Slave.withdraw",
      "offset": [
        7599,
        7608
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 37,
      "value": "0x2"
    },
    "5552": {
      "fn": "Slave.withdraw",
      "offset": [
        7599,
        7608
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "5553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5557": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5559": {
      "op": "SHL"
    },
    "5560": {
      "op": "SUB"
    },
    "5561": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7598
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5562": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7598
      ],
      "op": "DUP6",
      "path": "11"
    },
    "5563": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7598
      ],
      "op": "AND",
      "path": "11"
    },
    "5564": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7598
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5565": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7598
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x69328DEC"
    },
    "5570": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7598
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5571": {
      "fn": "Slave.withdraw",
      "offset": [
        7599,
        7608
      ],
      "op": "AND",
      "path": "11"
    },
    "5572": {
      "fn": "Slave.withdraw",
      "offset": [
        7610,
        7627
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x15D5"
    },
    "5575": {
      "fn": "Slave.withdraw",
      "offset": [
        7619,
        7627
      ],
      "op": "PUSH8",
      "path": "11",
      "value": "0xDE0B6B3A7640000"
    },
    "5584": {
      "fn": "Slave.withdraw",
      "offset": [
        7610,
        7616
      ],
      "op": "DUP6",
      "path": "11"
    },
    "5585": {
      "fn": "Slave.withdraw",
      "offset": [
        7610,
        7627
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x276E"
    },
    "5588": {
      "fn": "Slave.withdraw",
      "jump": "i",
      "offset": [
        7610,
        7627
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5589": {
      "fn": "Slave.withdraw",
      "offset": [
        7610,
        7627
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5590": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5592": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5597": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5599": {
      "op": "SHL"
    },
    "5600": {
      "op": "SUB"
    },
    "5601": {
      "op": "NOT"
    },
    "5602": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "5604": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "DUP6",
      "path": "11"
    },
    "5605": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5606": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "SHL",
      "path": "11"
    },
    "5607": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "AND",
      "path": "11"
    },
    "5608": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5609": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5610": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5614": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5616": {
      "op": "SHL"
    },
    "5617": {
      "op": "SUB"
    },
    "5618": {
      "op": "SWAP3"
    },
    "5619": {
      "op": "DUP4"
    },
    "5620": {
      "op": "AND"
    },
    "5621": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "5623": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5624": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "ADD",
      "path": "11"
    },
    "5625": {
      "op": "MSTORE"
    },
    "5626": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5628": {
      "op": "DUP2"
    },
    "5629": {
      "op": "ADD"
    },
    "5630": {
      "op": "SWAP2"
    },
    "5631": {
      "op": "SWAP1"
    },
    "5632": {
      "op": "SWAP2"
    },
    "5633": {
      "op": "MSTORE"
    },
    "5634": {
      "op": "SWAP1"
    },
    "5635": {
      "op": "DUP9"
    },
    "5636": {
      "op": "AND"
    },
    "5637": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5639": {
      "op": "DUP3"
    },
    "5640": {
      "op": "ADD"
    },
    "5641": {
      "op": "MSTORE"
    },
    "5642": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5644": {
      "op": "ADD"
    },
    "5645": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5647": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5649": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5650": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5651": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "DUP4",
      "path": "11"
    },
    "5652": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "SUB",
      "path": "11"
    },
    "5653": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5654": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5656": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "DUP8",
      "path": "11"
    },
    "5657": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "GAS",
      "path": "11"
    },
    "5658": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "CALL",
      "path": "11"
    },
    "5659": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5660": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5661": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5662": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x162B"
    },
    "5665": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "5666": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "5667": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5669": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5670": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "5671": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "5672": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5674": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "REVERT",
      "path": "11"
    },
    "5675": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5676": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "POP",
      "path": "11"
    },
    "5677": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "POP",
      "path": "11"
    },
    "5678": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "POP",
      "path": "11"
    },
    "5679": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "POP",
      "path": "11"
    },
    "5680": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5682": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5683": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "5684": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "5686": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "NOT",
      "path": "11"
    },
    "5687": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "5689": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5690": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "ADD",
      "path": "11"
    },
    "5691": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "AND",
      "path": "11"
    },
    "5692": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5693": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "ADD",
      "path": "11"
    },
    "5694": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5695": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5697": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5698": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "POP",
      "path": "11"
    },
    "5699": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5700": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "ADD",
      "path": "11"
    },
    "5701": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5702": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x142B"
    },
    "5705": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5706": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5707": {
      "fn": "Slave.withdraw",
      "offset": [
        7578,
        7644
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x254E"
    },
    "5710": {
      "fn": "Slave.withdraw",
      "jump": "i",
      "offset": [
        7578,
        7644
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5711": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4774,
        4926
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5712": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5716": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5718": {
      "op": "SHL"
    },
    "5719": {
      "op": "SUB"
    },
    "5720": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4888,
        4919
      ],
      "op": "DUP2",
      "path": "11",
      "statement": 38
    },
    "5721": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4888,
        4919
      ],
      "op": "AND",
      "path": "11"
    },
    "5722": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4888,
        4919
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5724": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4888,
        4919
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5725": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4888,
        4919
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5726": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4888,
        4919
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5727": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4888,
        4906
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xD"
    },
    "5729": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4888,
        4919
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5731": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4888,
        4919
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5732": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4888,
        4919
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5733": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4888,
        4919
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5734": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4888,
        4919
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5736": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4888,
        4919
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5737": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4888,
        4919
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5738": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4888,
        4919
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5739": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4888,
        4919
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "5740": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5741": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "5742": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "DUP4",
      "path": "11"
    },
    "5743": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5744": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5745": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "DUP5",
      "path": "11"
    },
    "5746": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "MUL",
      "path": "11"
    },
    "5747": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5748": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "ADD",
      "path": "11"
    },
    "5749": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "DUP5",
      "path": "11"
    },
    "5750": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "ADD",
      "path": "11"
    },
    "5751": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5752": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "5753": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5754": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5755": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "DUP5",
      "path": "11"
    },
    "5756": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5757": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4853,
        4869
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "5759": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4853,
        4869
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "5760": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "5761": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "DUP4",
      "path": "11"
    },
    "5762": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "ADD",
      "path": "11"
    },
    "5763": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4888,
        4919
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5764": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5765": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5766": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5767": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x16E1"
    },
    "5770": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "5771": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5773": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "MUL",
      "path": "11"
    },
    "5774": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5775": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "ADD",
      "path": "11"
    },
    "5776": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5777": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5778": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5780": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5781": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5783": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5785": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "5786": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5787": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5789": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5790": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5791": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5792": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5793": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5794": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "5795": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5796": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x100"
    },
    "5799": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "EXP",
      "path": "11"
    },
    "5800": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5801": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "DIV",
      "path": "11"
    },
    "5802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5806": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5808": {
      "op": "SHL"
    },
    "5809": {
      "op": "SUB"
    },
    "5810": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "AND",
      "path": "11"
    },
    "5811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5815": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5817": {
      "op": "SHL"
    },
    "5818": {
      "op": "SUB"
    },
    "5819": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "AND",
      "path": "11"
    },
    "5820": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5821": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5822": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5824": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "ADD",
      "path": "11"
    },
    "5825": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5826": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x10"
    },
    "5828": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "ADD",
      "path": "11"
    },
    "5829": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5830": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5832": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5833": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xF"
    },
    "5835": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "ADD",
      "path": "11"
    },
    "5836": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "DIV",
      "path": "11"
    },
    "5837": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "5838": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "DUP4",
      "path": "11"
    },
    "5839": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "ADD",
      "path": "11"
    },
    "5840": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "5841": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "5843": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "SUB",
      "path": "11"
    },
    "5844": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5845": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "MUL",
      "path": "11"
    },
    "5846": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5847": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "POP",
      "path": "11"
    },
    "5848": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5849": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "DUP5",
      "path": "11"
    },
    "5850": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "GT",
      "path": "11"
    },
    "5851": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x169E"
    },
    "5854": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "5855": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5856": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "POP",
      "path": "11"
    },
    "5857": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5858": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "POP",
      "path": "11"
    },
    "5859": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "POP",
      "path": "11"
    },
    "5860": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "POP",
      "path": "11"
    },
    "5861": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "POP",
      "path": "11"
    },
    "5862": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "POP",
      "path": "11"
    },
    "5863": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5864": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4881,
        4919
      ],
      "op": "POP",
      "path": "11"
    },
    "5865": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4774,
        4926
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5866": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4774,
        4926
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5867": {
      "fn": "Slave.getUserNonces",
      "offset": [
        4774,
        4926
      ],
      "op": "POP",
      "path": "11"
    },
    "5868": {
      "fn": "Slave.getUserNonces",
      "jump": "o",
      "offset": [
        4774,
        4926
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5869": {
      "fn": "Slave._getPool",
      "offset": [
        10981,
        11163
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5870": {
      "fn": "Slave._getPool",
      "offset": [
        11024,
        11031
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5872": {
      "fn": "Slave._getPool",
      "offset": [
        11043,
        11055
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5873": {
      "fn": "Slave._getPool",
      "offset": [
        11081,
        11110
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x0"
    },
    "5906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5910": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5912": {
      "op": "SHL"
    },
    "5913": {
      "op": "SUB"
    },
    "5914": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11132
      ],
      "op": "AND",
      "path": "11"
    },
    "5915": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11132
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x26B1D5F"
    },
    "5920": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5922": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5923": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5924": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xFFFFFFFF"
    },
    "5929": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "AND",
      "path": "11"
    },
    "5930": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "5932": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "SHL",
      "path": "11"
    },
    "5933": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5934": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5935": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "5937": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "ADD",
      "path": "11"
    },
    "5938": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5940": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5942": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5943": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5944": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "DUP4",
      "path": "11"
    },
    "5945": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "SUB",
      "path": "11"
    },
    "5946": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5947": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "DUP7",
      "path": "11"
    },
    "5948": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "GAS",
      "path": "11"
    },
    "5949": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "5950": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5951": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5952": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5953": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x174E"
    },
    "5956": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "5957": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "5958": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5960": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5961": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "5962": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "5963": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5965": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "REVERT",
      "path": "11"
    },
    "5966": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5967": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "POP",
      "path": "11"
    },
    "5968": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "POP",
      "path": "11"
    },
    "5969": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "POP",
      "path": "11"
    },
    "5970": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "POP",
      "path": "11"
    },
    "5971": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5973": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5974": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "5975": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "5977": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "NOT",
      "path": "11"
    },
    "5978": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "5980": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5981": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "ADD",
      "path": "11"
    },
    "5982": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "AND",
      "path": "11"
    },
    "5983": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5984": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "ADD",
      "path": "11"
    },
    "5985": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5986": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5988": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5989": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "POP",
      "path": "11"
    },
    "5990": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5991": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "ADD",
      "path": "11"
    },
    "5992": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5993": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x5F1"
    },
    "5996": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5997": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5998": {
      "fn": "Slave._getPool",
      "offset": [
        11058,
        11134
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2981"
    },
    "6001": {
      "fn": "Slave._getPool",
      "jump": "i",
      "offset": [
        11058,
        11134
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6002": {
      "fn": "Slave._sendMessage",
      "offset": [
        8980,
        10975
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6003": {
      "fn": "Slave._sendMessage",
      "offset": [
        9121,
        9138
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6005": {
      "fn": "Slave._sendMessage",
      "offset": [
        9150,
        9193
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x17AF"
    },
    "6008": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6010": {
      "op": "MLOAD"
    },
    "6011": {
      "op": "DUP1"
    },
    "6012": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6014": {
      "op": "ADD"
    },
    "6015": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6017": {
      "op": "MSTORE"
    },
    "6018": {
      "op": "DUP1"
    },
    "6019": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6021": {
      "op": "DUP2"
    },
    "6022": {
      "op": "MSTORE"
    },
    "6023": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6025": {
      "op": "ADD"
    },
    "6026": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6028": {
      "op": "DUP2"
    },
    "6029": {
      "op": "MSTORE"
    },
    "6030": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6032": {
      "op": "ADD"
    },
    "6033": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6035": {
      "op": "DUP2"
    },
    "6036": {
      "op": "MSTORE"
    },
    "6037": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6039": {
      "op": "ADD"
    },
    "6040": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6046": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6048": {
      "op": "SHL"
    },
    "6049": {
      "op": "SUB"
    },
    "6050": {
      "op": "AND"
    },
    "6051": {
      "op": "DUP2"
    },
    "6052": {
      "op": "MSTORE"
    },
    "6053": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6055": {
      "op": "ADD"
    },
    "6056": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6058": {
      "op": "DUP2"
    },
    "6059": {
      "op": "MSTORE"
    },
    "6060": {
      "op": "POP"
    },
    "6061": {
      "op": "SWAP1"
    },
    "6062": {
      "op": "JUMP"
    },
    "6063": {
      "fn": "Slave._sendMessage",
      "offset": [
        9150,
        9193
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6064": {
      "fn": "Slave._sendMessage",
      "offset": [
        9335,
        9903
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 39,
      "value": "0x40"
    },
    "6066": {
      "fn": "Slave._sendMessage",
      "offset": [
        9335,
        9903
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6067": {
      "fn": "Slave._sendMessage",
      "offset": [
        9335,
        9903
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6068": {
      "fn": "Slave._sendMessage",
      "offset": [
        9335,
        9903
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA0"
    },
    "6070": {
      "fn": "Slave._sendMessage",
      "offset": [
        9335,
        9903
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6071": {
      "fn": "Slave._sendMessage",
      "offset": [
        9335,
        9903
      ],
      "op": "ADD",
      "path": "11"
    },
    "6072": {
      "fn": "Slave._sendMessage",
      "offset": [
        9335,
        9903
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6073": {
      "fn": "Slave._sendMessage",
      "offset": [
        9335,
        9903
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6074": {
      "fn": "Slave._sendMessage",
      "offset": [
        9335,
        9903
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6075": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6077": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6079": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6081": {
      "op": "SHL"
    },
    "6082": {
      "op": "SUB"
    },
    "6083": {
      "op": "DUP6"
    },
    "6084": {
      "op": "AND"
    },
    "6085": {
      "fn": "Slave._sendMessage",
      "offset": [
        9381,
        9401
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xC0"
    },
    "6087": {
      "fn": "Slave._sendMessage",
      "offset": [
        9381,
        9401
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6088": {
      "fn": "Slave._sendMessage",
      "offset": [
        9381,
        9401
      ],
      "op": "ADD",
      "path": "11"
    },
    "6089": {
      "op": "MSTORE"
    },
    "6090": {
      "fn": "Slave._sendMessage",
      "offset": [
        9335,
        9903
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6091": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6093": {
      "op": "DUP2"
    },
    "6094": {
      "op": "ADD"
    },
    "6095": {
      "fn": "Slave._sendMessage",
      "offset": [
        9381,
        9401
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6097": {
      "fn": "Slave._sendMessage",
      "offset": [
        9381,
        9401
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6098": {
      "fn": "Slave._sendMessage",
      "offset": [
        9381,
        9401
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6099": {
      "fn": "Slave._sendMessage",
      "offset": [
        9381,
        9401
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6100": {
      "fn": "Slave._sendMessage",
      "offset": [
        9381,
        9401
      ],
      "op": "DUP4",
      "path": "11"
    },
    "6101": {
      "fn": "Slave._sendMessage",
      "offset": [
        9381,
        9401
      ],
      "op": "SUB",
      "path": "11"
    },
    "6102": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6104": {
      "op": "NOT"
    },
    "6105": {
      "fn": "Slave._sendMessage",
      "offset": [
        9381,
        9401
      ],
      "op": "ADD",
      "path": "11"
    },
    "6106": {
      "fn": "Slave._sendMessage",
      "offset": [
        9381,
        9401
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6107": {
      "fn": "Slave._sendMessage",
      "offset": [
        9381,
        9401
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6108": {
      "fn": "Slave._sendMessage",
      "offset": [
        9381,
        9401
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6109": {
      "fn": "Slave._sendMessage",
      "offset": [
        9381,
        9401
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6110": {
      "fn": "Slave._sendMessage",
      "offset": [
        9381,
        9401
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6111": {
      "fn": "Slave._sendMessage",
      "offset": [
        9335,
        9903
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6112": {
      "fn": "Slave._sendMessage",
      "offset": [
        9335,
        9903
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6113": {
      "fn": "Slave._sendMessage",
      "offset": [
        9335,
        9903
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6114": {
      "fn": "Slave._sendMessage",
      "offset": [
        9381,
        9401
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "6116": {
      "fn": "Slave._sendMessage",
      "offset": [
        9335,
        9903
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6117": {
      "fn": "Slave._sendMessage",
      "offset": [
        9335,
        9903
      ],
      "op": "DUP4",
      "path": "11"
    },
    "6118": {
      "fn": "Slave._sendMessage",
      "offset": [
        9335,
        9903
      ],
      "op": "ADD",
      "path": "11"
    },
    "6119": {
      "fn": "Slave._sendMessage",
      "offset": [
        9335,
        9903
      ],
      "op": "DUP8",
      "path": "11"
    },
    "6120": {
      "fn": "Slave._sendMessage",
      "offset": [
        9335,
        9903
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6121": {
      "fn": "Slave._sendMessage",
      "offset": [
        9335,
        9903
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6122": {
      "fn": "Slave._sendMessage",
      "offset": [
        9508,
        9538
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6123": {
      "fn": "Slave._sendMessage",
      "offset": [
        9508,
        9538
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6124": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6126": {
      "fn": "Slave._sendMessage",
      "offset": [
        9508,
        9538
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6127": {
      "fn": "Slave._sendMessage",
      "offset": [
        9508,
        9538
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6128": {
      "fn": "Slave._sendMessage",
      "offset": [
        9508,
        9538
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6129": {
      "fn": "Slave._sendMessage",
      "offset": [
        9508,
        9538
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6130": {
      "fn": "Slave._sendMessage",
      "offset": [
        9508,
        9538
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6131": {
      "fn": "Slave._sendMessage",
      "offset": [
        9508,
        9538
      ],
      "op": "ADD",
      "path": "11"
    },
    "6132": {
      "fn": "Slave._sendMessage",
      "offset": [
        9508,
        9538
      ],
      "op": "DUP4",
      "path": "11"
    },
    "6133": {
      "fn": "Slave._sendMessage",
      "offset": [
        9508,
        9538
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6134": {
      "fn": "Slave._sendMessage",
      "offset": [
        9335,
        9903
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "6135": {
      "fn": "Slave._sendMessage",
      "offset": [
        9335,
        9903
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6136": {
      "fn": "Slave._sendMessage",
      "offset": [
        9335,
        9903
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6137": {
      "fn": "Slave._sendMessage",
      "offset": [
        9335,
        9903
      ],
      "op": "ADD",
      "path": "11"
    },
    "6138": {
      "fn": "Slave._sendMessage",
      "offset": [
        9335,
        9903
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6139": {
      "fn": "Slave._sendMessage",
      "offset": [
        9508,
        9538
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6140": {
      "fn": "Slave._sendMessage",
      "offset": [
        9508,
        9538
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1827"
    },
    "6143": {
      "fn": "Slave._sendMessage",
      "offset": [
        9508,
        9538
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6144": {
      "fn": "Slave._sendMessage",
      "offset": [
        9508,
        9538
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6145": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6147": {
      "op": "DUP1"
    },
    "6148": {
      "op": "MLOAD"
    },
    "6149": {
      "op": "DUP1"
    },
    "6150": {
      "op": "DUP3"
    },
    "6151": {
      "op": "ADD"
    },
    "6152": {
      "op": "SWAP1"
    },
    "6153": {
      "op": "SWAP2"
    },
    "6154": {
      "op": "MSTORE"
    },
    "6155": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6157": {
      "op": "DUP1"
    },
    "6158": {
      "op": "DUP3"
    },
    "6159": {
      "op": "MSTORE"
    },
    "6160": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6162": {
      "op": "DUP3"
    },
    "6163": {
      "op": "ADD"
    },
    "6164": {
      "op": "MSTORE"
    },
    "6165": {
      "fn": "Slave._sendMessage",
      "offset": [
        9508,
        9538
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6166": {
      "fn": "Slave._sendMessage",
      "offset": [
        9508,
        9538
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6167": {
      "fn": "Slave._sendMessage",
      "offset": [
        9508,
        9538
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "6169": {
      "fn": "Slave._sendMessage",
      "offset": [
        9508,
        9538
      ],
      "op": "ADD",
      "path": "11"
    },
    "6170": {
      "fn": "Slave._sendMessage",
      "offset": [
        9508,
        9538
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6171": {
      "fn": "Slave._sendMessage",
      "offset": [
        9508,
        9538
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "6173": {
      "fn": "Slave._sendMessage",
      "offset": [
        9508,
        9538
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6174": {
      "fn": "Slave._sendMessage",
      "offset": [
        9508,
        9538
      ],
      "op": "SUB",
      "path": "11"
    },
    "6175": {
      "fn": "Slave._sendMessage",
      "offset": [
        9508,
        9538
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6176": {
      "fn": "Slave._sendMessage",
      "offset": [
        9508,
        9538
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6177": {
      "fn": "Slave._sendMessage",
      "offset": [
        9508,
        9538
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1800"
    },
    "6180": {
      "fn": "Slave._sendMessage",
      "offset": [
        9508,
        9538
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "6181": {
      "fn": "Slave._sendMessage",
      "offset": [
        9508,
        9538
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6182": {
      "fn": "Slave._sendMessage",
      "offset": [
        9508,
        9538
      ],
      "op": "POP",
      "path": "11"
    },
    "6183": {
      "fn": "Slave._sendMessage",
      "offset": [
        9508,
        9538
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6184": {
      "op": "POP"
    },
    "6185": {
      "fn": "Slave._sendMessage",
      "offset": [
        9335,
        9903
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6186": {
      "fn": "Slave._sendMessage",
      "offset": [
        9335,
        9903
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6187": {
      "fn": "Slave._sendMessage",
      "offset": [
        9880,
        9891
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "6189": {
      "fn": "Slave._sendMessage",
      "offset": [
        9880,
        9891
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "6190": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6192": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6194": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6196": {
      "op": "SHL"
    },
    "6197": {
      "op": "SUB"
    },
    "6198": {
      "fn": "Slave._sendMessage",
      "offset": [
        9880,
        9891
      ],
      "op": "AND",
      "path": "11"
    },
    "6199": {
      "fn": "Slave._sendMessage",
      "offset": [
        9335,
        9903
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "6201": {
      "fn": "Slave._sendMessage",
      "offset": [
        9335,
        9903
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6202": {
      "fn": "Slave._sendMessage",
      "offset": [
        9335,
        9903
      ],
      "op": "DUP4",
      "path": "11"
    },
    "6203": {
      "fn": "Slave._sendMessage",
      "offset": [
        9335,
        9903
      ],
      "op": "ADD",
      "path": "11"
    },
    "6204": {
      "fn": "Slave._sendMessage",
      "offset": [
        9335,
        9903
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6205": {
      "fn": "Slave._sendMessage",
      "offset": [
        9335,
        9903
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6206": {
      "fn": "Slave._sendMessage",
      "offset": [
        9335,
        9903
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6207": {
      "fn": "Slave._sendMessage",
      "offset": [
        9335,
        9903
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6208": {
      "fn": "Slave._sendMessage",
      "offset": [
        9335,
        9903
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6210": {
      "fn": "Slave._sendMessage",
      "offset": [
        9710,
        9754
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6211": {
      "fn": "Slave._sendMessage",
      "offset": [
        9710,
        9754
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6212": {
      "fn": "Slave._sendMessage",
      "offset": [
        9710,
        9754
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6213": {
      "fn": "Slave._sendMessage",
      "offset": [
        9710,
        9754
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6214": {
      "fn": "Slave._sendMessage",
      "offset": [
        9710,
        9754
      ],
      "op": "ADD",
      "path": "11"
    },
    "6215": {
      "fn": "Slave._sendMessage",
      "offset": [
        9710,
        9754
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6216": {
      "fn": "Slave._sendMessage",
      "offset": [
        9710,
        9754
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6217": {
      "fn": "Slave._sendMessage",
      "offset": [
        9743,
        9752
      ],
      "op": "PUSH3",
      "path": "11",
      "value": "0xF4240"
    },
    "6221": {
      "fn": "Slave._sendMessage",
      "offset": [
        9710,
        9754
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6222": {
      "fn": "Slave._sendMessage",
      "offset": [
        9710,
        9754
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6223": {
      "fn": "Slave._sendMessage",
      "offset": [
        9335,
        9903
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6224": {
      "fn": "Slave._sendMessage",
      "offset": [
        9335,
        9903
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6225": {
      "fn": "Slave._sendMessage",
      "offset": [
        9335,
        9903
      ],
      "op": "ADD",
      "path": "11"
    },
    "6226": {
      "fn": "Slave._sendMessage",
      "offset": [
        9335,
        9903
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6227": {
      "fn": "Slave._sendMessage",
      "offset": [
        9614,
        9768
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x185B"
    },
    "6230": {
      "fn": "Slave._sendMessage",
      "offset": [
        9614,
        9768
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6231": {
      "fn": "Slave._sendMessage",
      "offset": [
        9614,
        9633
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1E07"
    },
    "6234": {
      "fn": "Slave._sendMessage",
      "jump": "i",
      "offset": [
        9614,
        9768
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6235": {
      "fn": "Slave._sendMessage",
      "offset": [
        9614,
        9768
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6236": {
      "fn": "Slave._sendMessage",
      "offset": [
        9335,
        9903
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6237": {
      "fn": "Slave._sendMessage",
      "offset": [
        9335,
        9903
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6238": {
      "fn": "Slave._sendMessage",
      "offset": [
        9966,
        9978
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6240": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        9989
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6241": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        9989
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "6242": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6244": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6245": {
      "op": "PUSH4",
      "value": "0x20487DED"
    },
    "6250": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6252": {
      "op": "SHL"
    },
    "6253": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6254": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6255": {
      "fn": "Slave._sendMessage",
      "offset": [
        9318,
        9903
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "6256": {
      "fn": "Slave._sendMessage",
      "offset": [
        9318,
        9903
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "6257": {
      "op": "POP"
    },
    "6258": {
      "fn": "Slave._sendMessage",
      "offset": [
        9966,
        9978
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6259": {
      "fn": "Slave._sendMessage",
      "offset": [
        9966,
        9978
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6264": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6266": {
      "op": "SHL"
    },
    "6267": {
      "op": "SUB"
    },
    "6268": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        9989
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6269": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        9989
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6270": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        9989
      ],
      "op": "AND",
      "path": "11"
    },
    "6271": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        9989
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6272": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        9996
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x20487DED"
    },
    "6277": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        9996
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6278": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1895"
    },
    "6281": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6282": {
      "fn": "Slave._sendMessage",
      "offset": [
        10010,
        10034
      ],
      "op": "DUP10",
      "path": "11"
    },
    "6283": {
      "fn": "Slave._sendMessage",
      "offset": [
        10010,
        10034
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6284": {
      "fn": "Slave._sendMessage",
      "offset": [
        9318,
        9903
      ],
      "op": "DUP7",
      "path": "11"
    },
    "6285": {
      "fn": "Slave._sendMessage",
      "offset": [
        9318,
        9903
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6286": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "6288": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "ADD",
      "path": "11"
    },
    "6289": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2668"
    },
    "6292": {
      "fn": "Slave._sendMessage",
      "jump": "i",
      "offset": [
        9981,
        10072
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6293": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6294": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "6296": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6298": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6299": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6300": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "DUP4",
      "path": "11"
    },
    "6301": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "SUB",
      "path": "11"
    },
    "6302": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6303": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "DUP7",
      "path": "11"
    },
    "6304": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "GAS",
      "path": "11"
    },
    "6305": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "6306": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "6307": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6308": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "6309": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x18B2"
    },
    "6312": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "6313": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "6314": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6316": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6317": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "6318": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "6319": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6321": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "REVERT",
      "path": "11"
    },
    "6322": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6323": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "POP",
      "path": "11"
    },
    "6324": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "POP",
      "path": "11"
    },
    "6325": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "POP",
      "path": "11"
    },
    "6326": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "POP",
      "path": "11"
    },
    "6327": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6329": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6330": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "6331": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "6333": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "NOT",
      "path": "11"
    },
    "6334": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "6336": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6337": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "ADD",
      "path": "11"
    },
    "6338": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "AND",
      "path": "11"
    },
    "6339": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6340": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "ADD",
      "path": "11"
    },
    "6341": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6342": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6344": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6345": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "POP",
      "path": "11"
    },
    "6346": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6347": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "ADD",
      "path": "11"
    },
    "6348": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6349": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x18D6"
    },
    "6352": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6353": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6354": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x254E"
    },
    "6357": {
      "fn": "Slave._sendMessage",
      "jump": "i",
      "offset": [
        9981,
        10072
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6358": {
      "fn": "Slave._sendMessage",
      "offset": [
        9981,
        10072
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6359": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10114
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 40,
      "value": "0x1"
    },
    "6361": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10114
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "6362": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6364": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6365": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "6370": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6372": {
      "op": "SHL"
    },
    "6373": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6374": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6375": {
      "fn": "Slave._sendMessage",
      "offset": [
        10128,
        10138
      ],
      "op": "CALLER",
      "path": "11"
    },
    "6376": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "6378": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6379": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "ADD",
      "path": "11"
    },
    "6380": {
      "op": "MSTORE"
    },
    "6381": {
      "fn": "Slave._sendMessage",
      "offset": [
        10148,
        10152
      ],
      "op": "ADDRESS",
      "path": "11"
    },
    "6382": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6384": {
      "op": "DUP3"
    },
    "6385": {
      "op": "ADD"
    },
    "6386": {
      "op": "MSTORE"
    },
    "6387": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6389": {
      "op": "DUP2"
    },
    "6390": {
      "op": "ADD"
    },
    "6391": {
      "op": "DUP4"
    },
    "6392": {
      "op": "SWAP1"
    },
    "6393": {
      "op": "MSTORE"
    },
    "6394": {
      "fn": "Slave._sendMessage",
      "offset": [
        9966,
        10072
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6395": {
      "fn": "Slave._sendMessage",
      "offset": [
        9966,
        10072
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "6396": {
      "op": "POP"
    },
    "6397": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6401": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6403": {
      "op": "SHL"
    },
    "6404": {
      "op": "SUB"
    },
    "6405": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10114
      ],
      "op": "AND",
      "path": "11"
    },
    "6406": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10114
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6407": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10127
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x23B872DD"
    },
    "6412": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10127
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6413": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6415": {
      "op": "ADD"
    },
    "6416": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "6418": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6420": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6421": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6422": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "DUP4",
      "path": "11"
    },
    "6423": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "SUB",
      "path": "11"
    },
    "6424": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6425": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6427": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "DUP8",
      "path": "11"
    },
    "6428": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "GAS",
      "path": "11"
    },
    "6429": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "CALL",
      "path": "11"
    },
    "6430": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "6431": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6432": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "6433": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x192E"
    },
    "6436": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "6437": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "6438": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6440": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6441": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "6442": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "6443": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6445": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "REVERT",
      "path": "11"
    },
    "6446": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6447": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "POP",
      "path": "11"
    },
    "6448": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "POP",
      "path": "11"
    },
    "6449": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "POP",
      "path": "11"
    },
    "6450": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "POP",
      "path": "11"
    },
    "6451": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6453": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6454": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "6455": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "6457": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "NOT",
      "path": "11"
    },
    "6458": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "6460": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6461": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "ADD",
      "path": "11"
    },
    "6462": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "AND",
      "path": "11"
    },
    "6463": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6464": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "ADD",
      "path": "11"
    },
    "6465": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6466": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6468": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6469": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "POP",
      "path": "11"
    },
    "6470": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6471": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "ADD",
      "path": "11"
    },
    "6472": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6473": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1952"
    },
    "6476": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6477": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6478": {
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2567"
    },
    "6481": {
      "fn": "Slave._sendMessage",
      "jump": "i",
      "offset": [
        10103,
        10160
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6482": {
      "branch": 61,
      "fn": "Slave._sendMessage",
      "offset": [
        10103,
        10160
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6483": {
      "fn": "Slave._sendMessage",
      "offset": [
        10082,
        10226
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x19AF"
    },
    "6486": {
      "branch": 61,
      "fn": "Slave._sendMessage",
      "offset": [
        10082,
        10226
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "6487": {
      "fn": "Slave._sendMessage",
      "offset": [
        10082,
        10226
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6489": {
      "fn": "Slave._sendMessage",
      "offset": [
        10082,
        10226
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6490": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6494": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6496": {
      "op": "SHL"
    },
    "6497": {
      "fn": "Slave._sendMessage",
      "offset": [
        10082,
        10226
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6498": {
      "fn": "Slave._sendMessage",
      "offset": [
        10082,
        10226
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6499": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6501": {
      "fn": "Slave._sendMessage",
      "offset": [
        10082,
        10226
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "6503": {
      "fn": "Slave._sendMessage",
      "offset": [
        10082,
        10226
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6504": {
      "fn": "Slave._sendMessage",
      "offset": [
        10082,
        10226
      ],
      "op": "ADD",
      "path": "11"
    },
    "6505": {
      "op": "MSTORE"
    },
    "6506": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "6508": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6510": {
      "op": "DUP3"
    },
    "6511": {
      "op": "ADD"
    },
    "6512": {
      "op": "MSTORE"
    },
    "6513": {
      "op": "PUSH32",
      "value": "0x4E6F74204C696E6B207472616E73666572656420666F7220706179696E672043"
    },
    "6546": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6548": {
      "op": "DUP3"
    },
    "6549": {
      "op": "ADD"
    },
    "6550": {
      "op": "MSTORE"
    },
    "6551": {
      "op": "PUSH8",
      "value": "0x4349502066656573"
    },
    "6560": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "6562": {
      "op": "SHL"
    },
    "6563": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6565": {
      "op": "DUP3"
    },
    "6566": {
      "op": "ADD"
    },
    "6567": {
      "op": "MSTORE"
    },
    "6568": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6570": {
      "op": "ADD"
    },
    "6571": {
      "fn": "Slave._sendMessage",
      "offset": [
        10082,
        10226
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x7E2"
    },
    "6574": {
      "op": "JUMP"
    },
    "6575": {
      "fn": "Slave._sendMessage",
      "offset": [
        10082,
        10226
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6576": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10259
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 41,
      "value": "0x1"
    },
    "6578": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10259
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "6579": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6581": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6582": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "6587": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6589": {
      "op": "SHL"
    },
    "6590": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6591": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6592": {
      "fn": "Slave._sendMessage",
      "offset": [
        10278,
        10282
      ],
      "op": "ADDRESS",
      "path": "11"
    },
    "6593": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "6595": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6596": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "ADD",
      "path": "11"
    },
    "6597": {
      "op": "MSTORE"
    },
    "6598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6602": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6604": {
      "op": "SHL"
    },
    "6605": {
      "op": "SUB"
    },
    "6606": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10259
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6607": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10259
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6608": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10259
      ],
      "op": "AND",
      "path": "11"
    },
    "6609": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10259
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6610": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10269
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x70A08231"
    },
    "6615": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10269
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6616": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6618": {
      "op": "ADD"
    },
    "6619": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "6621": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6623": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6624": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6625": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "DUP4",
      "path": "11"
    },
    "6626": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "SUB",
      "path": "11"
    },
    "6627": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6628": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "DUP7",
      "path": "11"
    },
    "6629": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "GAS",
      "path": "11"
    },
    "6630": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "6631": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "6632": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6633": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "6634": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x19F7"
    },
    "6637": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "6638": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "6639": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6641": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6642": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "6643": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "6644": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6646": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "REVERT",
      "path": "11"
    },
    "6647": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6648": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "POP",
      "path": "11"
    },
    "6649": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "POP",
      "path": "11"
    },
    "6650": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "POP",
      "path": "11"
    },
    "6651": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "POP",
      "path": "11"
    },
    "6652": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6654": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6655": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "6656": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "6658": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "NOT",
      "path": "11"
    },
    "6659": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "6661": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6662": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "ADD",
      "path": "11"
    },
    "6663": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "AND",
      "path": "11"
    },
    "6664": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6665": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "ADD",
      "path": "11"
    },
    "6666": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6667": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6669": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6670": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "POP",
      "path": "11"
    },
    "6671": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6672": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "ADD",
      "path": "11"
    },
    "6673": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6674": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1A1B"
    },
    "6677": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6678": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6679": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x254E"
    },
    "6682": {
      "fn": "Slave._sendMessage",
      "jump": "i",
      "offset": [
        10248,
        10284
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6683": {
      "fn": "Slave._sendMessage",
      "offset": [
        10248,
        10284
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6684": {
      "fn": "Slave._sendMessage",
      "offset": [
        10241,
        10245
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6685": {
      "branch": 62,
      "fn": "Slave._sendMessage",
      "offset": [
        10241,
        10284
      ],
      "op": "GT",
      "path": "11"
    },
    "6686": {
      "fn": "Slave._sendMessage",
      "offset": [
        10237,
        10365
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "6687": {
      "fn": "Slave._sendMessage",
      "offset": [
        10237,
        10365
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1AB2"
    },
    "6690": {
      "branch": 62,
      "fn": "Slave._sendMessage",
      "offset": [
        10237,
        10365
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "6691": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10333
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "6693": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10333
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "6694": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6696": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6697": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "6702": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6704": {
      "op": "SHL"
    },
    "6705": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6706": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6707": {
      "fn": "Slave._sendMessage",
      "offset": [
        10352,
        10356
      ],
      "op": "ADDRESS",
      "path": "11"
    },
    "6708": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "6710": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6711": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "ADD",
      "path": "11"
    },
    "6712": {
      "op": "MSTORE"
    },
    "6713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6717": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6719": {
      "op": "SHL"
    },
    "6720": {
      "op": "SUB"
    },
    "6721": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10333
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6722": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10333
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6723": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10333
      ],
      "op": "AND",
      "path": "11"
    },
    "6724": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10333
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6725": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10343
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x70A08231"
    },
    "6730": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10343
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6731": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6733": {
      "op": "ADD"
    },
    "6734": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "6736": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6738": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6739": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6740": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "DUP4",
      "path": "11"
    },
    "6741": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "SUB",
      "path": "11"
    },
    "6742": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6743": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "DUP7",
      "path": "11"
    },
    "6744": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "GAS",
      "path": "11"
    },
    "6745": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "6746": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "6747": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6748": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "6749": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1A6A"
    },
    "6752": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "6753": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "6754": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6756": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6757": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "6758": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "6759": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6761": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "REVERT",
      "path": "11"
    },
    "6762": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6763": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "POP",
      "path": "11"
    },
    "6764": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "POP",
      "path": "11"
    },
    "6765": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "POP",
      "path": "11"
    },
    "6766": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "POP",
      "path": "11"
    },
    "6767": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6769": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6770": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "6771": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "6773": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "NOT",
      "path": "11"
    },
    "6774": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "6776": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6777": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "ADD",
      "path": "11"
    },
    "6778": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "AND",
      "path": "11"
    },
    "6779": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6780": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "ADD",
      "path": "11"
    },
    "6781": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6782": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6784": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6785": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "POP",
      "path": "11"
    },
    "6786": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6787": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "ADD",
      "path": "11"
    },
    "6788": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6789": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1A8E"
    },
    "6792": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6793": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6794": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x254E"
    },
    "6797": {
      "fn": "Slave._sendMessage",
      "jump": "i",
      "offset": [
        10322,
        10358
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6798": {
      "fn": "Slave._sendMessage",
      "offset": [
        10322,
        10358
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6799": {
      "fn": "Slave._sendMessage",
      "offset": [
        10305,
        10365
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6801": {
      "fn": "Slave._sendMessage",
      "offset": [
        10305,
        10365
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6802": {
      "op": "PUSH4",
      "value": "0x4787A103"
    },
    "6807": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "6809": {
      "op": "SHL"
    },
    "6810": {
      "fn": "Slave._sendMessage",
      "offset": [
        10305,
        10365
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6811": {
      "fn": "Slave._sendMessage",
      "offset": [
        10305,
        10365
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6812": {
      "fn": "Slave._sendMessage",
      "offset": [
        10305,
        10365
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "6814": {
      "fn": "Slave._sendMessage",
      "offset": [
        10305,
        10365
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6815": {
      "fn": "Slave._sendMessage",
      "offset": [
        10305,
        10365
      ],
      "op": "ADD",
      "path": "11"
    },
    "6816": {
      "op": "SWAP2"
    },
    "6817": {
      "op": "SWAP1"
    },
    "6818": {
      "op": "SWAP2"
    },
    "6819": {
      "op": "MSTORE"
    },
    "6820": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6822": {
      "op": "DUP2"
    },
    "6823": {
      "op": "ADD"
    },
    "6824": {
      "op": "DUP3"
    },
    "6825": {
      "op": "SWAP1"
    },
    "6826": {
      "op": "MSTORE"
    },
    "6827": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6829": {
      "op": "ADD"
    },
    "6830": {
      "fn": "Slave._sendMessage",
      "offset": [
        10305,
        10365
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x7E2"
    },
    "6833": {
      "op": "JUMP"
    },
    "6834": {
      "fn": "Slave._sendMessage",
      "offset": [
        10237,
        10365
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6835": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10494
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 42,
      "value": "0x1"
    },
    "6837": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10494
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "6838": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10494
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6840": {
      "fn": "Slave._sendMessage",
      "offset": [
        10511,
        10519
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "6841": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6843": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6844": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "6849": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6851": {
      "op": "SHL"
    },
    "6852": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6853": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6858": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6860": {
      "op": "SHL"
    },
    "6861": {
      "op": "SUB"
    },
    "6862": {
      "fn": "Slave._sendMessage",
      "offset": [
        10511,
        10519
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6863": {
      "fn": "Slave._sendMessage",
      "offset": [
        10511,
        10519
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6864": {
      "fn": "Slave._sendMessage",
      "offset": [
        10511,
        10519
      ],
      "op": "AND",
      "path": "11"
    },
    "6865": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "6867": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6868": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "ADD",
      "path": "11"
    },
    "6869": {
      "op": "MSTORE"
    },
    "6870": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6872": {
      "op": "DUP2"
    },
    "6873": {
      "op": "ADD"
    },
    "6874": {
      "op": "DUP5"
    },
    "6875": {
      "op": "SWAP1"
    },
    "6876": {
      "op": "MSTORE"
    },
    "6877": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10494
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6878": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10494
      ],
      "op": "AND",
      "path": "11"
    },
    "6879": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10494
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6880": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10502
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x95EA7B3"
    },
    "6885": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10502
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6886": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6888": {
      "op": "ADD"
    },
    "6889": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "6891": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6893": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6894": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6895": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "DUP4",
      "path": "11"
    },
    "6896": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "SUB",
      "path": "11"
    },
    "6897": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6898": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6900": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "DUP8",
      "path": "11"
    },
    "6901": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "GAS",
      "path": "11"
    },
    "6902": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "CALL",
      "path": "11"
    },
    "6903": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "6904": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6905": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "6906": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1B07"
    },
    "6909": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "6910": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "6911": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6913": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6914": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "6915": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "6916": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6918": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "REVERT",
      "path": "11"
    },
    "6919": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6920": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "POP",
      "path": "11"
    },
    "6921": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "POP",
      "path": "11"
    },
    "6922": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "POP",
      "path": "11"
    },
    "6923": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "POP",
      "path": "11"
    },
    "6924": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6926": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6927": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "6928": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "6930": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "NOT",
      "path": "11"
    },
    "6931": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "6933": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6934": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "ADD",
      "path": "11"
    },
    "6935": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "AND",
      "path": "11"
    },
    "6936": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6937": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "ADD",
      "path": "11"
    },
    "6938": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6939": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6941": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6942": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "POP",
      "path": "11"
    },
    "6943": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6944": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "ADD",
      "path": "11"
    },
    "6945": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6946": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1B2B"
    },
    "6949": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6950": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6951": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2567"
    },
    "6954": {
      "fn": "Slave._sendMessage",
      "jump": "i",
      "offset": [
        10483,
        10527
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6955": {
      "fn": "Slave._sendMessage",
      "offset": [
        10483,
        10527
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6956": {
      "op": "POP"
    },
    "6957": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10639
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 43,
      "value": "0x0"
    },
    "6959": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10639
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "6960": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6962": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6963": {
      "op": "PUSH4",
      "value": "0x96F4E9F9"
    },
    "6968": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6970": {
      "op": "SHL"
    },
    "6971": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6972": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6973": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6975": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6977": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6979": {
      "op": "SHL"
    },
    "6980": {
      "op": "SUB"
    },
    "6981": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10639
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6982": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10639
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6983": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10639
      ],
      "op": "AND",
      "path": "11"
    },
    "6984": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10639
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6985": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10648
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x96F4E9F9"
    },
    "6990": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10648
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6991": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1B5E"
    },
    "6994": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6995": {
      "fn": "Slave._sendMessage",
      "offset": [
        10649,
        10673
      ],
      "op": "DUP10",
      "path": "11"
    },
    "6996": {
      "fn": "Slave._sendMessage",
      "offset": [
        10649,
        10673
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6997": {
      "fn": "Slave._sendMessage",
      "offset": [
        10675,
        10689
      ],
      "op": "DUP7",
      "path": "11"
    },
    "6998": {
      "fn": "Slave._sendMessage",
      "offset": [
        10675,
        10689
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6999": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "7001": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "ADD",
      "path": "11"
    },
    "7002": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2668"
    },
    "7005": {
      "fn": "Slave._sendMessage",
      "jump": "i",
      "offset": [
        10631,
        10690
      ],
      "op": "JUMP",
      "path": "11"
    },
    "7006": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7007": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "7009": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7011": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "7012": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7013": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "DUP4",
      "path": "11"
    },
    "7014": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "SUB",
      "path": "11"
    },
    "7015": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7016": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7018": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "DUP8",
      "path": "11"
    },
    "7019": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "GAS",
      "path": "11"
    },
    "7020": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "CALL",
      "path": "11"
    },
    "7021": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "7022": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7023": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "7024": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1B7D"
    },
    "7027": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "7028": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "7029": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7031": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7032": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "7033": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "7034": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7036": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "REVERT",
      "path": "11"
    },
    "7037": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7038": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "POP",
      "path": "11"
    },
    "7039": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "POP",
      "path": "11"
    },
    "7040": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "POP",
      "path": "11"
    },
    "7041": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "POP",
      "path": "11"
    },
    "7042": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7044": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "7045": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "7046": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "7048": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "NOT",
      "path": "11"
    },
    "7049": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "7051": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "DUP3",
      "path": "11"
    },
    "7052": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "ADD",
      "path": "11"
    },
    "7053": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "AND",
      "path": "11"
    },
    "7054": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "DUP3",
      "path": "11"
    },
    "7055": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "ADD",
      "path": "11"
    },
    "7056": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7057": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7059": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "7060": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "POP",
      "path": "11"
    },
    "7061": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7062": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "ADD",
      "path": "11"
    },
    "7063": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7064": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1BA1"
    },
    "7067": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "7068": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7069": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x254E"
    },
    "7072": {
      "fn": "Slave._sendMessage",
      "jump": "i",
      "offset": [
        10631,
        10690
      ],
      "op": "JUMP",
      "path": "11"
    },
    "7073": {
      "fn": "Slave._sendMessage",
      "offset": [
        10631,
        10690
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7074": {
      "fn": "Slave._sendMessage",
      "offset": [
        10868,
        10879
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 44,
      "value": "0x1"
    },
    "7076": {
      "fn": "Slave._sendMessage",
      "offset": [
        10868,
        10879
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "7077": {
      "fn": "Slave._sendMessage",
      "offset": [
        10752,
        10908
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7079": {
      "fn": "Slave._sendMessage",
      "offset": [
        10752,
        10908
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7080": {
      "fn": "Slave._sendMessage",
      "offset": [
        10752,
        10908
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "7081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7085": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7087": {
      "op": "SHL"
    },
    "7088": {
      "op": "SUB"
    },
    "7089": {
      "op": "DUP1"
    },
    "7090": {
      "op": "DUP11"
    },
    "7091": {
      "op": "AND"
    },
    "7092": {
      "op": "DUP3"
    },
    "7093": {
      "op": "MSTORE"
    },
    "7094": {
      "fn": "Slave._sendMessage",
      "offset": [
        10868,
        10879
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7095": {
      "fn": "Slave._sendMessage",
      "offset": [
        10868,
        10879
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "7096": {
      "fn": "Slave._sendMessage",
      "offset": [
        10868,
        10879
      ],
      "op": "AND",
      "path": "11"
    },
    "7097": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7099": {
      "op": "DUP4"
    },
    "7100": {
      "op": "ADD"
    },
    "7101": {
      "op": "MSTORE"
    },
    "7102": {
      "op": "DUP2"
    },
    "7103": {
      "op": "ADD"
    },
    "7104": {
      "op": "DUP4"
    },
    "7105": {
      "op": "SWAP1"
    },
    "7106": {
      "op": "MSTORE"
    },
    "7107": {
      "fn": "Slave._sendMessage",
      "offset": [
        10619,
        10690
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7108": {
      "fn": "Slave._sendMessage",
      "offset": [
        10619,
        10690
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "7109": {
      "op": "POP"
    },
    "7110": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7114": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7116": {
      "op": "SHL"
    },
    "7117": {
      "op": "SUB"
    },
    "7118": {
      "fn": "Slave._sendMessage",
      "offset": [
        10752,
        10908
      ],
      "op": "DUP8",
      "path": "11"
    },
    "7119": {
      "fn": "Slave._sendMessage",
      "offset": [
        10752,
        10908
      ],
      "op": "AND",
      "path": "11"
    },
    "7120": {
      "fn": "Slave._sendMessage",
      "offset": [
        10752,
        10908
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7121": {
      "fn": "Slave._sendMessage",
      "offset": [
        10619,
        10690
      ],
      "op": "DUP5",
      "path": "11"
    },
    "7122": {
      "fn": "Slave._sendMessage",
      "offset": [
        10619,
        10690
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7123": {
      "fn": "Slave._sendMessage",
      "offset": [
        10752,
        10908
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x9FB548811CFE022BA6400D8533A80D63FBC228E596F93603959DC47B1886AF54"
    },
    "7156": {
      "fn": "Slave._sendMessage",
      "offset": [
        10752,
        10908
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7157": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7159": {
      "op": "ADD"
    },
    "7160": {
      "fn": "Slave._sendMessage",
      "offset": [
        10752,
        10908
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7162": {
      "fn": "Slave._sendMessage",
      "offset": [
        10752,
        10908
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "7163": {
      "fn": "Slave._sendMessage",
      "offset": [
        10752,
        10908
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7164": {
      "fn": "Slave._sendMessage",
      "offset": [
        10752,
        10908
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "7165": {
      "fn": "Slave._sendMessage",
      "offset": [
        10752,
        10908
      ],
      "op": "SUB",
      "path": "11"
    },
    "7166": {
      "fn": "Slave._sendMessage",
      "offset": [
        10752,
        10908
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7167": {
      "fn": "Slave._sendMessage",
      "offset": [
        10752,
        10908
      ],
      "op": "LOG3",
      "path": "11"
    },
    "7168": {
      "fn": "Slave._sendMessage",
      "offset": [
        10952,
        10968
      ],
      "op": "POP",
      "path": "11",
      "statement": 45
    },
    "7169": {
      "fn": "Slave._sendMessage",
      "offset": [
        10952,
        10968
      ],
      "op": "POP",
      "path": "11"
    },
    "7170": {
      "fn": "Slave._sendMessage",
      "offset": [
        8980,
        10975
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "7171": {
      "fn": "Slave._sendMessage",
      "offset": [
        8980,
        10975
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "7172": {
      "fn": "Slave._sendMessage",
      "offset": [
        8980,
        10975
      ],
      "op": "POP",
      "path": "11"
    },
    "7173": {
      "fn": "Slave._sendMessage",
      "offset": [
        8980,
        10975
      ],
      "op": "POP",
      "path": "11"
    },
    "7174": {
      "fn": "Slave._sendMessage",
      "offset": [
        8980,
        10975
      ],
      "op": "POP",
      "path": "11"
    },
    "7175": {
      "fn": "Slave._sendMessage",
      "jump": "o",
      "offset": [
        8980,
        10975
      ],
      "op": "JUMP",
      "path": "11"
    },
    "7176": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13922,
        14218
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7177": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14009,
        14018
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "7179": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14009,
        14018
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "7180": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7182": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "7183": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "7188": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7190": {
      "op": "SHL"
    },
    "7191": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7192": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "7193": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14038,
        14042
      ],
      "op": "ADDRESS",
      "path": "11"
    },
    "7194": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "7196": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "DUP3",
      "path": "11"
    },
    "7197": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "ADD",
      "path": "11"
    },
    "7198": {
      "op": "MSTORE"
    },
    "7199": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13977,
        13999
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7201": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13977,
        13999
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "7202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7204": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7206": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7208": {
      "op": "SHL"
    },
    "7209": {
      "op": "SUB"
    },
    "7210": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14009,
        14018
      ],
      "op": "AND",
      "path": "11"
    },
    "7211": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14009,
        14018
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7212": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14029
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x70A08231"
    },
    "7217": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14029
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7218": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7220": {
      "op": "ADD"
    },
    "7221": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "7223": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7225": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "7226": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7227": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "DUP4",
      "path": "11"
    },
    "7228": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "SUB",
      "path": "11"
    },
    "7229": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7230": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "DUP7",
      "path": "11"
    },
    "7231": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "GAS",
      "path": "11"
    },
    "7232": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "7233": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "7234": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7235": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "7236": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1C51"
    },
    "7239": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "7240": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "7241": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7243": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7244": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "7245": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "7246": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7248": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "REVERT",
      "path": "11"
    },
    "7249": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7250": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "POP",
      "path": "11"
    },
    "7251": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "POP",
      "path": "11"
    },
    "7252": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "POP",
      "path": "11"
    },
    "7253": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "POP",
      "path": "11"
    },
    "7254": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7256": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "7257": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "7258": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "7260": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "NOT",
      "path": "11"
    },
    "7261": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "7263": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "DUP3",
      "path": "11"
    },
    "7264": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "ADD",
      "path": "11"
    },
    "7265": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "AND",
      "path": "11"
    },
    "7266": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "DUP3",
      "path": "11"
    },
    "7267": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "ADD",
      "path": "11"
    },
    "7268": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7269": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7271": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "7272": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "POP",
      "path": "11"
    },
    "7273": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7274": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "ADD",
      "path": "11"
    },
    "7275": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7276": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1C75"
    },
    "7279": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "7280": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7281": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x254E"
    },
    "7284": {
      "fn": "Slave._assetsAllocationDeposit",
      "jump": "i",
      "offset": [
        14002,
        14044
      ],
      "op": "JUMP",
      "path": "11"
    },
    "7285": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14002,
        14044
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7286": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13977,
        14044
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7287": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13977,
        14044
      ],
      "op": "POP",
      "path": "11"
    },
    "7288": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14054,
        14066
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7290": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14069,
        14079
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1C81"
    },
    "7293": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14069,
        14077
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x16ED"
    },
    "7296": {
      "fn": "Slave._assetsAllocationDeposit",
      "jump": "i",
      "offset": [
        14069,
        14079
      ],
      "op": "JUMP",
      "path": "11"
    },
    "7297": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14069,
        14079
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7298": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14097,
        14106
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 46,
      "value": "0x2"
    },
    "7300": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14097,
        14106
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "7301": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7303": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "7304": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "7309": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7311": {
      "op": "SHL"
    },
    "7312": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7313": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "7314": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7318": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7320": {
      "op": "SHL"
    },
    "7321": {
      "op": "SUB"
    },
    "7322": {
      "op": "DUP1"
    },
    "7323": {
      "op": "DUP5"
    },
    "7324": {
      "op": "AND"
    },
    "7325": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "7327": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "DUP4",
      "path": "11"
    },
    "7328": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "ADD",
      "path": "11"
    },
    "7329": {
      "op": "MSTORE"
    },
    "7330": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7332": {
      "op": "DUP3"
    },
    "7333": {
      "op": "ADD"
    },
    "7334": {
      "op": "DUP7"
    },
    "7335": {
      "op": "SWAP1"
    },
    "7336": {
      "op": "MSTORE"
    },
    "7337": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14054,
        14079
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "7338": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14054,
        14079
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "7339": {
      "op": "POP"
    },
    "7340": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14097,
        14106
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "7341": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14097,
        14106
      ],
      "op": "AND",
      "path": "11"
    },
    "7342": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14097,
        14106
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7343": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14115
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x95EA7B3"
    },
    "7348": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14115
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7349": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7351": {
      "op": "ADD"
    },
    "7352": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "7354": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7356": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "7357": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7358": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "DUP4",
      "path": "11"
    },
    "7359": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "SUB",
      "path": "11"
    },
    "7360": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7361": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7363": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "DUP8",
      "path": "11"
    },
    "7364": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "GAS",
      "path": "11"
    },
    "7365": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "CALL",
      "path": "11"
    },
    "7366": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "7367": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7368": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "7369": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1CD6"
    },
    "7372": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "7373": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "7374": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7376": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7377": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "7378": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "7379": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7381": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "REVERT",
      "path": "11"
    },
    "7382": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7383": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "POP",
      "path": "11"
    },
    "7384": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "POP",
      "path": "11"
    },
    "7385": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "POP",
      "path": "11"
    },
    "7386": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "POP",
      "path": "11"
    },
    "7387": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7389": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "7390": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "7391": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "7393": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "NOT",
      "path": "11"
    },
    "7394": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "7396": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "DUP3",
      "path": "11"
    },
    "7397": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "ADD",
      "path": "11"
    },
    "7398": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "AND",
      "path": "11"
    },
    "7399": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "DUP3",
      "path": "11"
    },
    "7400": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "ADD",
      "path": "11"
    },
    "7401": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7402": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7404": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "7405": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "POP",
      "path": "11"
    },
    "7406": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7407": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "ADD",
      "path": "11"
    },
    "7408": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7409": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1CFA"
    },
    "7412": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "7413": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7414": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2567"
    },
    "7417": {
      "fn": "Slave._assetsAllocationDeposit",
      "jump": "i",
      "offset": [
        14090,
        14137
      ],
      "op": "JUMP",
      "path": "11"
    },
    "7418": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14090,
        14137
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7419": {
      "op": "POP"
    },
    "7420": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14167,
        14176
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 47,
      "value": "0x2"
    },
    "7422": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14167,
        14176
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "7423": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14147,
        14211
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7425": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14147,
        14211
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "7426": {
      "op": "PUSH4",
      "value": "0xE8EDA9DF"
    },
    "7431": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7433": {
      "op": "SHL"
    },
    "7434": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14147,
        14211
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7435": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14147,
        14211
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "7436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7440": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7442": {
      "op": "SHL"
    },
    "7443": {
      "op": "SUB"
    },
    "7444": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14167,
        14176
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "7445": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14167,
        14176
      ],
      "op": "DUP3",
      "path": "11"
    },
    "7446": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14167,
        14176
      ],
      "op": "AND",
      "path": "11"
    },
    "7447": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14147,
        14211
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "7449": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14147,
        14211
      ],
      "op": "DUP3",
      "path": "11"
    },
    "7450": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14147,
        14211
      ],
      "op": "ADD",
      "path": "11"
    },
    "7451": {
      "op": "MSTORE"
    },
    "7452": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7454": {
      "op": "DUP2"
    },
    "7455": {
      "op": "ADD"
    },
    "7456": {
      "op": "DUP5"
    },
    "7457": {
      "op": "SWAP1"
    },
    "7458": {
      "op": "MSTORE"
    },
    "7459": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14202,
        14206
      ],
      "op": "ADDRESS",
      "path": "11"
    },
    "7460": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7462": {
      "op": "DUP3"
    },
    "7463": {
      "op": "ADD"
    },
    "7464": {
      "op": "MSTORE"
    },
    "7465": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14167,
        14176
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7467": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7469": {
      "op": "DUP3"
    },
    "7470": {
      "op": "ADD"
    },
    "7471": {
      "op": "MSTORE"
    },
    "7472": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14147,
        14166
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7473": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14147,
        14166
      ],
      "op": "DUP3",
      "path": "11"
    },
    "7474": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14147,
        14166
      ],
      "op": "AND",
      "path": "11"
    },
    "7475": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14147,
        14166
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7476": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14147,
        14166
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xE8EDA9DF"
    },
    "7481": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14147,
        14166
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7482": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7484": {
      "op": "ADD"
    },
    "7485": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14147,
        14211
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7487": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14147,
        14211
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7489": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14147,
        14211
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "7490": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14147,
        14211
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7491": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14147,
        14211
      ],
      "op": "DUP4",
      "path": "11"
    },
    "7492": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14147,
        14211
      ],
      "op": "SUB",
      "path": "11"
    },
    "7493": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14147,
        14211
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7494": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14147,
        14211
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7496": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14147,
        14211
      ],
      "op": "DUP8",
      "path": "11"
    },
    "7497": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14147,
        14211
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7498": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14147,
        14211
      ],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "7499": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14147,
        14211
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "7500": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14147,
        14211
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7501": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14147,
        14211
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "7502": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14147,
        14211
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1D56"
    },
    "7505": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14147,
        14211
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "7506": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14147,
        14211
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7508": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14147,
        14211
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7509": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14147,
        14211
      ],
      "op": "REVERT",
      "path": "11"
    },
    "7510": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14147,
        14211
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7511": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14147,
        14211
      ],
      "op": "POP",
      "path": "11"
    },
    "7512": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14147,
        14211
      ],
      "op": "GAS",
      "path": "11"
    },
    "7513": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14147,
        14211
      ],
      "op": "CALL",
      "path": "11"
    },
    "7514": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14147,
        14211
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "7515": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14147,
        14211
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7516": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14147,
        14211
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "7517": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14147,
        14211
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1D6A"
    },
    "7520": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14147,
        14211
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "7521": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14147,
        14211
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "7522": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14147,
        14211
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7524": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14147,
        14211
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7525": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14147,
        14211
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "7526": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14147,
        14211
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "7527": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14147,
        14211
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7529": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14147,
        14211
      ],
      "op": "REVERT",
      "path": "11"
    },
    "7530": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14147,
        14211
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7531": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14147,
        14211
      ],
      "op": "POP",
      "path": "11"
    },
    "7532": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14147,
        14211
      ],
      "op": "POP",
      "path": "11"
    },
    "7533": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14147,
        14211
      ],
      "op": "POP",
      "path": "11"
    },
    "7534": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        14147,
        14211
      ],
      "op": "POP",
      "path": "11"
    },
    "7535": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13967,
        14218
      ],
      "op": "POP",
      "path": "11"
    },
    "7536": {
      "fn": "Slave._assetsAllocationDeposit",
      "offset": [
        13967,
        14218
      ],
      "op": "POP",
      "path": "11"
    },
    "7537": {
      "fn": "Slave._assetsAllocationDeposit",
      "jump": "o",
      "offset": [
        13922,
        14218
      ],
      "op": "JUMP",
      "path": "11"
    },
    "7538": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8041,
        8974
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7539": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8421,
        8434
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7541": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8437,
        8475
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1D7D"
    },
    "7544": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8460,
        8474
      ],
      "op": "DUP3",
      "path": "11"
    },
    "7545": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8437,
        8459
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x200C"
    },
    "7548": {
      "fn": "Slave._ccipReceive",
      "jump": "i",
      "offset": [
        8437,
        8475
      ],
      "op": "JUMP",
      "path": "11"
    },
    "7549": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8437,
        8475
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7550": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8421,
        8475
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7551": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8421,
        8475
      ],
      "op": "POP",
      "path": "11"
    },
    "7552": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8490,
        8497
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7553": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8490,
        8502
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xFF"
    },
    "7555": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8490,
        8502
      ],
      "op": "AND",
      "path": "11"
    },
    "7556": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8501,
        8502
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7558": {
      "branch": 63,
      "fn": "Slave._ccipReceive",
      "offset": [
        8490,
        8502
      ],
      "op": "SUB",
      "path": "11"
    },
    "7559": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8486,
        8783
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1D97"
    },
    "7562": {
      "branch": 63,
      "fn": "Slave._ccipReceive",
      "offset": [
        8486,
        8783
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "7563": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8518,
        8544
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 48,
      "value": "0x1D93"
    },
    "7566": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8529,
        8543
      ],
      "op": "DUP3",
      "path": "11"
    },
    "7567": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8518,
        8528
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x11E0"
    },
    "7570": {
      "fn": "Slave._ccipReceive",
      "jump": "i",
      "offset": [
        8518,
        8544
      ],
      "op": "JUMP",
      "path": "11"
    },
    "7571": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8518,
        8544
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7572": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8140,
        8974
      ],
      "op": "POP",
      "path": "11"
    },
    "7573": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8041,
        8974
      ],
      "op": "POP",
      "path": "11"
    },
    "7574": {
      "fn": "Slave._ccipReceive",
      "jump": "o",
      "offset": [
        8041,
        8974
      ],
      "op": "JUMP",
      "path": "11"
    },
    "7575": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8486,
        8783
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7576": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8565,
        8572
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7577": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8565,
        8577
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xFF"
    },
    "7579": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8565,
        8577
      ],
      "op": "AND",
      "path": "11"
    },
    "7580": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8576,
        8577
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "7582": {
      "branch": 64,
      "fn": "Slave._ccipReceive",
      "offset": [
        8565,
        8577
      ],
      "op": "SUB",
      "path": "11"
    },
    "7583": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8561,
        8783
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1DAB"
    },
    "7586": {
      "branch": 64,
      "fn": "Slave._ccipReceive",
      "offset": [
        8561,
        8783
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "7587": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8593,
        8617
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 49,
      "value": "0x1D93"
    },
    "7590": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8602,
        8616
      ],
      "op": "DUP3",
      "path": "11"
    },
    "7591": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8593,
        8601
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1434"
    },
    "7594": {
      "fn": "Slave._ccipReceive",
      "jump": "i",
      "offset": [
        8593,
        8617
      ],
      "op": "JUMP",
      "path": "11"
    },
    "7595": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8561,
        8783
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7596": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8638,
        8645
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7597": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8638,
        8650
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xFF"
    },
    "7599": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8638,
        8650
      ],
      "op": "AND",
      "path": "11"
    },
    "7600": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8649,
        8650
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "7602": {
      "branch": 65,
      "fn": "Slave._ccipReceive",
      "offset": [
        8638,
        8650
      ],
      "op": "SUB",
      "path": "11"
    },
    "7603": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8634,
        8783
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1DBF"
    },
    "7606": {
      "branch": 65,
      "fn": "Slave._ccipReceive",
      "offset": [
        8634,
        8783
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "7607": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8666,
        8704
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 50,
      "value": "0x1D93"
    },
    "7610": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8689,
        8703
      ],
      "op": "DUP3",
      "path": "11"
    },
    "7611": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8666,
        8688
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1032"
    },
    "7614": {
      "fn": "Slave._ccipReceive",
      "jump": "i",
      "offset": [
        8666,
        8704
      ],
      "op": "JUMP",
      "path": "11"
    },
    "7615": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8634,
        8783
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7616": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8735,
        8772
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 51,
      "value": "0x40"
    },
    "7618": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8735,
        8772
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "7619": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7623": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7625": {
      "op": "SHL"
    },
    "7626": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8735,
        8772
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7627": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8735,
        8772
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "7628": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7630": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8735,
        8772
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "7632": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8735,
        8772
      ],
      "op": "DUP3",
      "path": "11"
    },
    "7633": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8735,
        8772
      ],
      "op": "ADD",
      "path": "11"
    },
    "7634": {
      "op": "MSTORE"
    },
    "7635": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "7637": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7639": {
      "op": "DUP3"
    },
    "7640": {
      "op": "ADD"
    },
    "7641": {
      "op": "MSTORE"
    },
    "7642": {
      "op": "PUSH32",
      "value": "0x696E76616C696420636F6D6D616E642066726F6D204D61737465720000000000"
    },
    "7675": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7677": {
      "op": "DUP3"
    },
    "7678": {
      "op": "ADD"
    },
    "7679": {
      "op": "MSTORE"
    },
    "7680": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7682": {
      "op": "ADD"
    },
    "7683": {
      "fn": "Slave._ccipReceive",
      "offset": [
        8735,
        8772
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x7E2"
    },
    "7686": {
      "op": "JUMP"
    },
    "7687": {
      "fn": "Client._argsToBytes",
      "offset": [
        1285,
        1455
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7688": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 52,
      "value": "0x40"
    },
    "7690": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7691": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "7692": {
      "op": "SWAP2"
    },
    "7693": {
      "op": "MLOAD"
    },
    "7694": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x24"
    },
    "7696": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7697": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "DUP5",
      "path": "4"
    },
    "7698": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "ADD",
      "path": "4"
    },
    "7699": {
      "op": "SWAP2"
    },
    "7700": {
      "op": "SWAP1"
    },
    "7701": {
      "op": "SWAP2"
    },
    "7702": {
      "op": "MSTORE"
    },
    "7703": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7704": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "7705": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7706": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "DUP5",
      "path": "4"
    },
    "7707": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "SUB",
      "path": "4"
    },
    "7708": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7709": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "7710": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "ADD",
      "path": "4"
    },
    "7711": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7712": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7713": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7715": {
      "op": "SWAP1"
    },
    "7716": {
      "op": "SWAP3"
    },
    "7717": {
      "op": "ADD"
    },
    "7718": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7719": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7720": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "7722": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7723": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "ADD",
      "path": "4"
    },
    "7724": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7725": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "7726": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7728": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7730": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7732": {
      "op": "SHL"
    },
    "7733": {
      "op": "SUB"
    },
    "7734": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "AND",
      "path": "4"
    },
    "7735": {
      "op": "PUSH4",
      "value": "0x97A657C9"
    },
    "7740": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7742": {
      "op": "SHL"
    },
    "7743": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "OR",
      "path": "4"
    },
    "7744": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7745": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7746": {
      "fn": "Client._argsToBytes",
      "offset": [
        1394,
        1450
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7747": {
      "fn": "Client._argsToBytes",
      "jump": "o",
      "offset": [
        1285,
        1455
      ],
      "op": "JUMP",
      "path": "4"
    },
    "7748": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14224,
        14553
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7749": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14332,
        14342
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "7751": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14332,
        14342
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "7752": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7754": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "7755": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "7760": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7762": {
      "op": "SHL"
    },
    "7763": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7764": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "7765": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14362,
        14366
      ],
      "op": "ADDRESS",
      "path": "11"
    },
    "7766": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "7768": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "DUP3",
      "path": "11"
    },
    "7769": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "ADD",
      "path": "11"
    },
    "7770": {
      "op": "MSTORE"
    },
    "7771": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14279,
        14286
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7773": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14279,
        14286
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "7774": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14279,
        14286
      ],
      "op": "DUP3",
      "path": "11"
    },
    "7775": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14279,
        14286
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "7776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7780": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7782": {
      "op": "SHL"
    },
    "7783": {
      "op": "SUB"
    },
    "7784": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14332,
        14342
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7785": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14332,
        14342
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "7786": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14332,
        14342
      ],
      "op": "AND",
      "path": "11"
    },
    "7787": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14332,
        14342
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7788": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14353
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x70A08231"
    },
    "7793": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14353
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7794": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7796": {
      "op": "ADD"
    },
    "7797": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "7799": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7801": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "7802": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7803": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "DUP4",
      "path": "11"
    },
    "7804": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "SUB",
      "path": "11"
    },
    "7805": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7806": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "DUP7",
      "path": "11"
    },
    "7807": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "GAS",
      "path": "11"
    },
    "7808": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "7809": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "7810": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7811": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "7812": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1E91"
    },
    "7815": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "7816": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "7817": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7819": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7820": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "7821": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "7822": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7824": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "REVERT",
      "path": "11"
    },
    "7825": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7826": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "POP",
      "path": "11"
    },
    "7827": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "POP",
      "path": "11"
    },
    "7828": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "POP",
      "path": "11"
    },
    "7829": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "POP",
      "path": "11"
    },
    "7830": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7832": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "7833": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "7834": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "7836": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "NOT",
      "path": "11"
    },
    "7837": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "7839": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "DUP3",
      "path": "11"
    },
    "7840": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "ADD",
      "path": "11"
    },
    "7841": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "AND",
      "path": "11"
    },
    "7842": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "DUP3",
      "path": "11"
    },
    "7843": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "ADD",
      "path": "11"
    },
    "7844": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7845": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7847": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "7848": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "POP",
      "path": "11"
    },
    "7849": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7850": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "ADD",
      "path": "11"
    },
    "7851": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7852": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1EB5"
    },
    "7855": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "7856": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7857": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x254E"
    },
    "7860": {
      "fn": "Slave._assetsAllocationWithdraw",
      "jump": "i",
      "offset": [
        14325,
        14368
      ],
      "op": "JUMP",
      "path": "11"
    },
    "7861": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14325,
        14368
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7862": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14298,
        14368
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7863": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14298,
        14368
      ],
      "op": "POP",
      "path": "11"
    },
    "7864": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14378,
        14390
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7866": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14393,
        14403
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1EC1"
    },
    "7869": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14393,
        14401
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x16ED"
    },
    "7872": {
      "fn": "Slave._assetsAllocationWithdraw",
      "jump": "i",
      "offset": [
        14393,
        14403
      ],
      "op": "JUMP",
      "path": "11"
    },
    "7873": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14393,
        14403
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7874": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14421,
        14431
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 53,
      "value": "0x3"
    },
    "7876": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14421,
        14431
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "7877": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7879": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "7880": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "7885": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7887": {
      "op": "SHL"
    },
    "7888": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7889": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "7890": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7894": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7896": {
      "op": "SHL"
    },
    "7897": {
      "op": "SUB"
    },
    "7898": {
      "op": "DUP1"
    },
    "7899": {
      "op": "DUP5"
    },
    "7900": {
      "op": "AND"
    },
    "7901": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "7903": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "DUP4",
      "path": "11"
    },
    "7904": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "ADD",
      "path": "11"
    },
    "7905": {
      "op": "MSTORE"
    },
    "7906": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7908": {
      "op": "DUP3"
    },
    "7909": {
      "op": "ADD"
    },
    "7910": {
      "op": "DUP7"
    },
    "7911": {
      "op": "SWAP1"
    },
    "7912": {
      "op": "MSTORE"
    },
    "7913": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14378,
        14403
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "7914": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14378,
        14403
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "7915": {
      "op": "POP"
    },
    "7916": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14421,
        14431
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "7917": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14421,
        14431
      ],
      "op": "AND",
      "path": "11"
    },
    "7918": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14421,
        14431
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7919": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14440
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x95EA7B3"
    },
    "7924": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14440
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7925": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7927": {
      "op": "ADD"
    },
    "7928": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "7930": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7932": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "7933": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7934": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "DUP4",
      "path": "11"
    },
    "7935": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "SUB",
      "path": "11"
    },
    "7936": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7937": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7939": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "DUP8",
      "path": "11"
    },
    "7940": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "GAS",
      "path": "11"
    },
    "7941": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "CALL",
      "path": "11"
    },
    "7942": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "7943": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7944": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "7945": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1F16"
    },
    "7948": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "7949": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "7950": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7952": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7953": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "7954": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "7955": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7957": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "REVERT",
      "path": "11"
    },
    "7958": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7959": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "POP",
      "path": "11"
    },
    "7960": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "POP",
      "path": "11"
    },
    "7961": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "POP",
      "path": "11"
    },
    "7962": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "POP",
      "path": "11"
    },
    "7963": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7965": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "7966": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "7967": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "7969": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "NOT",
      "path": "11"
    },
    "7970": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "7972": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "DUP3",
      "path": "11"
    },
    "7973": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "ADD",
      "path": "11"
    },
    "7974": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "AND",
      "path": "11"
    },
    "7975": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "DUP3",
      "path": "11"
    },
    "7976": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "ADD",
      "path": "11"
    },
    "7977": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7978": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7980": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "7981": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "POP",
      "path": "11"
    },
    "7982": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7983": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "ADD",
      "path": "11"
    },
    "7984": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7985": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1F3A"
    },
    "7988": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "7989": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7990": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2567"
    },
    "7993": {
      "fn": "Slave._assetsAllocationWithdraw",
      "jump": "i",
      "offset": [
        14414,
        14464
      ],
      "op": "JUMP",
      "path": "11"
    },
    "7994": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14414,
        14464
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7995": {
      "op": "POP"
    },
    "7996": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14503,
        14512
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 54,
      "value": "0x2"
    },
    "7998": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14503,
        14512
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "7999": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "8001": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "8002": {
      "op": "PUSH4",
      "value": "0x1A4CA37B"
    },
    "8007": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "8009": {
      "op": "SHL"
    },
    "8010": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "DUP2",
      "path": "11"
    },
    "8011": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "8012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8016": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8018": {
      "op": "SHL"
    },
    "8019": {
      "op": "SUB"
    },
    "8020": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14503,
        14512
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "8021": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14503,
        14512
      ],
      "op": "DUP3",
      "path": "11"
    },
    "8022": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14503,
        14512
      ],
      "op": "AND",
      "path": "11"
    },
    "8023": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "8025": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "DUP3",
      "path": "11"
    },
    "8026": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "ADD",
      "path": "11"
    },
    "8027": {
      "op": "MSTORE"
    },
    "8028": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8030": {
      "op": "DUP2"
    },
    "8031": {
      "op": "ADD"
    },
    "8032": {
      "op": "DUP5"
    },
    "8033": {
      "op": "SWAP1"
    },
    "8034": {
      "op": "MSTORE"
    },
    "8035": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14540,
        14544
      ],
      "op": "ADDRESS",
      "path": "11"
    },
    "8036": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8038": {
      "op": "DUP3"
    },
    "8039": {
      "op": "ADD"
    },
    "8040": {
      "op": "MSTORE"
    },
    "8041": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14502
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8042": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14502
      ],
      "op": "DUP3",
      "path": "11"
    },
    "8043": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14502
      ],
      "op": "AND",
      "path": "11"
    },
    "8044": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14502
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8045": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14502
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x69328DEC"
    },
    "8050": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14502
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8051": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8053": {
      "op": "ADD"
    },
    "8054": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "8056": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "8058": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "8059": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "DUP1",
      "path": "11"
    },
    "8060": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "DUP4",
      "path": "11"
    },
    "8061": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "SUB",
      "path": "11"
    },
    "8062": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "DUP2",
      "path": "11"
    },
    "8063": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "8065": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "DUP8",
      "path": "11"
    },
    "8066": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "GAS",
      "path": "11"
    },
    "8067": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "CALL",
      "path": "11"
    },
    "8068": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "8069": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "DUP1",
      "path": "11"
    },
    "8070": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "8071": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1F94"
    },
    "8074": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "8075": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "8076": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "8078": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "DUP1",
      "path": "11"
    },
    "8079": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "8080": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "8081": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "8083": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "REVERT",
      "path": "11"
    },
    "8084": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "8085": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "POP",
      "path": "11"
    },
    "8086": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "POP",
      "path": "11"
    },
    "8087": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "POP",
      "path": "11"
    },
    "8088": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "POP",
      "path": "11"
    },
    "8089": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "8091": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "8092": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "8093": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "8095": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "NOT",
      "path": "11"
    },
    "8096": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "8098": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "DUP3",
      "path": "11"
    },
    "8099": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "ADD",
      "path": "11"
    },
    "8100": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "AND",
      "path": "11"
    },
    "8101": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "DUP3",
      "path": "11"
    },
    "8102": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "ADD",
      "path": "11"
    },
    "8103": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "DUP1",
      "path": "11"
    },
    "8104": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "8106": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "8107": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "POP",
      "path": "11"
    },
    "8108": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "DUP2",
      "path": "11"
    },
    "8109": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "ADD",
      "path": "11"
    },
    "8110": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8111": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1FB8"
    },
    "8114": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "8115": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8116": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x254E"
    },
    "8119": {
      "fn": "Slave._assetsAllocationWithdraw",
      "jump": "i",
      "offset": [
        14482,
        14546
      ],
      "op": "JUMP",
      "path": "11"
    },
    "8120": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14482,
        14546
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "8121": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14475,
        14546
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "8122": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14475,
        14546
      ],
      "op": "POP",
      "path": "11"
    },
    "8123": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14475,
        14546
      ],
      "op": "POP",
      "path": "11"
    },
    "8124": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14475,
        14546
      ],
      "op": "POP",
      "path": "11"
    },
    "8125": {
      "fn": "Slave._assetsAllocationWithdraw",
      "offset": [
        14224,
        14553
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8126": {
      "fn": "Slave._assetsAllocationWithdraw",
      "jump": "o",
      "offset": [
        14224,
        14553
      ],
      "op": "JUMP",
      "path": "11"
    },
    "8127": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6191,
        6537
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "8128": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6402,
        6426
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA"
    },
    "8130": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6402,
        6426
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "8131": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6440,
        6457
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xB"
    },
    "8133": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6440,
        6457
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "8134": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6357,
        6467
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "8136": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6357,
        6467
      ],
      "op": "DUP1",
      "path": "11"
    },
    "8137": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6357,
        6467
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "8138": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6326,
        6327
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "8140": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6357,
        6467
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "8142": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6357,
        6467
      ],
      "op": "DUP3",
      "path": "11"
    },
    "8143": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6357,
        6467
      ],
      "op": "ADD",
      "path": "11"
    },
    "8144": {
      "op": "DUP2"
    },
    "8145": {
      "op": "SWAP1"
    },
    "8146": {
      "op": "MSTORE"
    },
    "8147": {
      "op": "SWAP2"
    },
    "8148": {
      "op": "DUP2"
    },
    "8149": {
      "op": "ADD"
    },
    "8150": {
      "op": "SWAP4"
    },
    "8151": {
      "op": "SWAP1"
    },
    "8152": {
      "op": "SWAP4"
    },
    "8153": {
      "op": "MSTORE"
    },
    "8154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8158": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8160": {
      "op": "SHL"
    },
    "8161": {
      "op": "SUB"
    },
    "8162": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6440,
        6457
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8163": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6440,
        6457
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "8164": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6440,
        6457
      ],
      "op": "AND",
      "path": "11"
    },
    "8165": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8167": {
      "op": "DUP4"
    },
    "8168": {
      "op": "ADD"
    },
    "8169": {
      "op": "MSTORE"
    },
    "8170": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6326,
        6327
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8171": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6310,
        6323
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "8173": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6310,
        6323
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8174": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8176": {
      "op": "ADD"
    },
    "8177": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6357,
        6467
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "8179": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6357,
        6467
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "8180": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6357,
        6467
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "8182": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6357,
        6467
      ],
      "op": "DUP2",
      "path": "11"
    },
    "8183": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6357,
        6467
      ],
      "op": "DUP4",
      "path": "11"
    },
    "8184": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6357,
        6467
      ],
      "op": "SUB",
      "path": "11"
    },
    "8185": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6357,
        6467
      ],
      "op": "SUB",
      "path": "11"
    },
    "8186": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6357,
        6467
      ],
      "op": "DUP2",
      "path": "11"
    },
    "8187": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6357,
        6467
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "8188": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6357,
        6467
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8189": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6357,
        6467
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "8191": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6357,
        6467
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "8192": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6337,
        6467
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8193": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6337,
        6467
      ],
      "op": "POP",
      "path": "11"
    },
    "8194": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6478,
        6530
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 55,
      "value": "0x11D9"
    },
    "8197": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6491,
        6502
      ],
      "op": "DUP5",
      "path": "11"
    },
    "8198": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6504,
        6523
      ],
      "op": "DUP5",
      "path": "11"
    },
    "8199": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6525,
        6529
      ],
      "op": "DUP4",
      "path": "11"
    },
    "8200": {
      "fn": "Slave._sendSupplyAndNonce",
      "offset": [
        6478,
        6490
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1772"
    },
    "8203": {
      "fn": "Slave._sendSupplyAndNonce",
      "jump": "i",
      "offset": [
        6478,
        6530
      ],
      "op": "JUMP",
      "path": "11"
    },
    "8204": {
      "fn": "Slave._internalCommandRouter",
      "offset": [
        4932,
        5148
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "8205": {
      "fn": "Slave._internalCommandRouter",
      "offset": [
        5042,
        5047
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "8207": {
      "fn": "Slave._internalCommandRouter",
      "offset": [
        5059,
        5072
      ],
      "op": "DUP1",
      "path": "11"
    },
    "8208": {
      "fn": "Slave._internalCommandRouter",
      "offset": [
        5086,
        5101
      ],
      "op": "DUP3",
      "path": "11"
    },
    "8209": {
      "fn": "Slave._internalCommandRouter",
      "offset": [
        5086,
        5106
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "8211": {
      "fn": "Slave._internalCommandRouter",
      "offset": [
        5086,
        5106
      ],
      "op": "ADD",
      "path": "11"
    },
    "8212": {
      "fn": "Slave._internalCommandRouter",
      "offset": [
        5086,
        5106
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "8213": {
      "fn": "Slave._internalCommandRouter",
      "offset": [
        5075,
        5116
      ],
      "op": "DUP1",
      "path": "11"
    },
    "8214": {
      "fn": "Slave._internalCommandRouter",
      "offset": [
        5075,
        5116
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "8216": {
      "fn": "Slave._internalCommandRouter",
      "offset": [
        5075,
        5116
      ],
      "op": "ADD",
      "path": "11"
    },
    "8217": {
      "fn": "Slave._internalCommandRouter",
      "offset": [
        5075,
        5116
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8218": {
      "fn": "Slave._internalCommandRouter",
      "offset": [
        5075,
        5116
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "8219": {
      "fn": "Slave._internalCommandRouter",
      "offset": [
        5075,
        5116
      ],
      "op": "DUP2",
      "path": "11"
    },
    "8220": {
      "fn": "Slave._internalCommandRouter",
      "offset": [
        5075,
        5116
      ],
      "op": "ADD",
      "path": "11"
    },
    "8221": {
      "fn": "Slave._internalCommandRouter",
      "offset": [
        5075,
        5116
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8222": {
      "fn": "Slave._internalCommandRouter",
      "offset": [
        5075,
        5116
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2027"
    },
    "8225": {
      "fn": "Slave._internalCommandRouter",
      "offset": [
        5075,
        5116
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "8226": {
      "fn": "Slave._internalCommandRouter",
      "offset": [
        5075,
        5116
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8227": {
      "fn": "Slave._internalCommandRouter",
      "offset": [
        5075,
        5116
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x299E"
    },
    "8230": {
      "fn": "Slave._internalCommandRouter",
      "jump": "i",
      "offset": [
        5075,
        5116
      ],
      "op": "JUMP",
      "path": "11"
    },
    "8231": {
      "fn": "Slave._internalCommandRouter",
      "offset": [
        5075,
        5116
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "8232": {
      "fn": "Slave._internalCommandRouter",
      "offset": [
        5059,
        5116
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "8233": {
      "fn": "Slave._internalCommandRouter",
      "offset": [
        4932,
        5148
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "8234": {
      "op": "POP"
    },
    "8235": {
      "op": "POP"
    },
    "8236": {
      "op": "POP"
    },
    "8237": {
      "fn": "Slave._internalCommandRouter",
      "jump": "o",
      "offset": [
        4932,
        5148
      ],
      "op": "JUMP",
      "path": "11"
    },
    "8238": {
      "op": "JUMPDEST"
    },
    "8239": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8241": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8243": {
      "op": "DUP3"
    },
    "8244": {
      "op": "DUP5"
    },
    "8245": {
      "op": "SUB"
    },
    "8246": {
      "op": "SLT"
    },
    "8247": {
      "op": "ISZERO"
    },
    "8248": {
      "op": "PUSH2",
      "value": "0x2040"
    },
    "8251": {
      "op": "JUMPI"
    },
    "8252": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8254": {
      "op": "DUP1"
    },
    "8255": {
      "op": "REVERT"
    },
    "8256": {
      "op": "JUMPDEST"
    },
    "8257": {
      "op": "DUP2"
    },
    "8258": {
      "op": "CALLDATALOAD"
    },
    "8259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8261": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8263": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8265": {
      "op": "SHL"
    },
    "8266": {
      "op": "SUB"
    },
    "8267": {
      "op": "NOT"
    },
    "8268": {
      "op": "DUP2"
    },
    "8269": {
      "op": "AND"
    },
    "8270": {
      "op": "DUP2"
    },
    "8271": {
      "op": "EQ"
    },
    "8272": {
      "op": "PUSH2",
      "value": "0x2027"
    },
    "8275": {
      "op": "JUMPI"
    },
    "8276": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8278": {
      "op": "DUP1"
    },
    "8279": {
      "op": "REVERT"
    },
    "8280": {
      "op": "JUMPDEST"
    },
    "8281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8285": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8287": {
      "op": "SHL"
    },
    "8288": {
      "op": "SUB"
    },
    "8289": {
      "op": "DUP2"
    },
    "8290": {
      "op": "AND"
    },
    "8291": {
      "op": "DUP2"
    },
    "8292": {
      "op": "EQ"
    },
    "8293": {
      "op": "PUSH2",
      "value": "0xA01"
    },
    "8296": {
      "op": "JUMPI"
    },
    "8297": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8299": {
      "op": "DUP1"
    },
    "8300": {
      "op": "REVERT"
    },
    "8301": {
      "op": "JUMPDEST"
    },
    "8302": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8304": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8306": {
      "op": "DUP3"
    },
    "8307": {
      "op": "DUP5"
    },
    "8308": {
      "op": "SUB"
    },
    "8309": {
      "op": "SLT"
    },
    "8310": {
      "op": "ISZERO"
    },
    "8311": {
      "op": "PUSH2",
      "value": "0x207F"
    },
    "8314": {
      "op": "JUMPI"
    },
    "8315": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8317": {
      "op": "DUP1"
    },
    "8318": {
      "op": "REVERT"
    },
    "8319": {
      "op": "JUMPDEST"
    },
    "8320": {
      "op": "DUP2"
    },
    "8321": {
      "op": "CALLDATALOAD"
    },
    "8322": {
      "op": "PUSH2",
      "value": "0x2027"
    },
    "8325": {
      "op": "DUP2"
    },
    "8326": {
      "op": "PUSH2",
      "value": "0x2058"
    },
    "8329": {
      "jump": "i",
      "op": "JUMP"
    },
    "8330": {
      "op": "JUMPDEST"
    },
    "8331": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8333": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8335": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8337": {
      "op": "SHL"
    },
    "8338": {
      "op": "SUB"
    },
    "8339": {
      "op": "DUP2"
    },
    "8340": {
      "op": "AND"
    },
    "8341": {
      "op": "DUP2"
    },
    "8342": {
      "op": "EQ"
    },
    "8343": {
      "op": "PUSH2",
      "value": "0xA01"
    },
    "8346": {
      "op": "JUMPI"
    },
    "8347": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8349": {
      "op": "DUP1"
    },
    "8350": {
      "op": "REVERT"
    },
    "8351": {
      "op": "JUMPDEST"
    },
    "8352": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8354": {
      "op": "DUP1"
    },
    "8355": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8357": {
      "op": "DUP4"
    },
    "8358": {
      "op": "DUP6"
    },
    "8359": {
      "op": "SUB"
    },
    "8360": {
      "op": "SLT"
    },
    "8361": {
      "op": "ISZERO"
    },
    "8362": {
      "op": "PUSH2",
      "value": "0x20B2"
    },
    "8365": {
      "op": "JUMPI"
    },
    "8366": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8368": {
      "op": "DUP1"
    },
    "8369": {
      "op": "REVERT"
    },
    "8370": {
      "op": "JUMPDEST"
    },
    "8371": {
      "op": "DUP3"
    },
    "8372": {
      "op": "CALLDATALOAD"
    },
    "8373": {
      "op": "PUSH2",
      "value": "0x20BD"
    },
    "8376": {
      "op": "DUP2"
    },
    "8377": {
      "op": "PUSH2",
      "value": "0x208A"
    },
    "8380": {
      "jump": "i",
      "op": "JUMP"
    },
    "8381": {
      "op": "JUMPDEST"
    },
    "8382": {
      "op": "SWAP5"
    },
    "8383": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8385": {
      "op": "SWAP4"
    },
    "8386": {
      "op": "SWAP1"
    },
    "8387": {
      "op": "SWAP4"
    },
    "8388": {
      "op": "ADD"
    },
    "8389": {
      "op": "CALLDATALOAD"
    },
    "8390": {
      "op": "SWAP4"
    },
    "8391": {
      "op": "POP"
    },
    "8392": {
      "op": "POP"
    },
    "8393": {
      "op": "POP"
    },
    "8394": {
      "jump": "o",
      "op": "JUMP"
    },
    "8395": {
      "op": "JUMPDEST"
    },
    "8396": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8398": {
      "op": "DUP1"
    },
    "8399": {
      "op": "DUP4"
    },
    "8400": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8402": {
      "op": "DUP5"
    },
    "8403": {
      "op": "ADD"
    },
    "8404": {
      "op": "SLT"
    },
    "8405": {
      "op": "PUSH2",
      "value": "0x20DD"
    },
    "8408": {
      "op": "JUMPI"
    },
    "8409": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8411": {
      "op": "DUP1"
    },
    "8412": {
      "op": "REVERT"
    },
    "8413": {
      "op": "JUMPDEST"
    },
    "8414": {
      "op": "POP"
    },
    "8415": {
      "op": "DUP2"
    },
    "8416": {
      "op": "CALLDATALOAD"
    },
    "8417": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8421": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8423": {
      "op": "SHL"
    },
    "8424": {
      "op": "SUB"
    },
    "8425": {
      "op": "DUP2"
    },
    "8426": {
      "op": "GT"
    },
    "8427": {
      "op": "ISZERO"
    },
    "8428": {
      "op": "PUSH2",
      "value": "0x20F4"
    },
    "8431": {
      "op": "JUMPI"
    },
    "8432": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8434": {
      "op": "DUP1"
    },
    "8435": {
      "op": "REVERT"
    },
    "8436": {
      "op": "JUMPDEST"
    },
    "8437": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8439": {
      "op": "DUP4"
    },
    "8440": {
      "op": "ADD"
    },
    "8441": {
      "op": "SWAP2"
    },
    "8442": {
      "op": "POP"
    },
    "8443": {
      "op": "DUP4"
    },
    "8444": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8446": {
      "op": "DUP3"
    },
    "8447": {
      "op": "DUP6"
    },
    "8448": {
      "op": "ADD"
    },
    "8449": {
      "op": "ADD"
    },
    "8450": {
      "op": "GT"
    },
    "8451": {
      "op": "ISZERO"
    },
    "8452": {
      "op": "PUSH2",
      "value": "0x210C"
    },
    "8455": {
      "op": "JUMPI"
    },
    "8456": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8458": {
      "op": "DUP1"
    },
    "8459": {
      "op": "REVERT"
    },
    "8460": {
      "op": "JUMPDEST"
    },
    "8461": {
      "op": "SWAP3"
    },
    "8462": {
      "op": "POP"
    },
    "8463": {
      "op": "SWAP3"
    },
    "8464": {
      "op": "SWAP1"
    },
    "8465": {
      "op": "POP"
    },
    "8466": {
      "jump": "o",
      "op": "JUMP"
    },
    "8467": {
      "op": "JUMPDEST"
    },
    "8468": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8470": {
      "op": "DUP1"
    },
    "8471": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8473": {
      "op": "DUP1"
    },
    "8474": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8476": {
      "op": "DUP6"
    },
    "8477": {
      "op": "DUP8"
    },
    "8478": {
      "op": "SUB"
    },
    "8479": {
      "op": "SLT"
    },
    "8480": {
      "op": "ISZERO"
    },
    "8481": {
      "op": "PUSH2",
      "value": "0x2129"
    },
    "8484": {
      "op": "JUMPI"
    },
    "8485": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8487": {
      "op": "DUP1"
    },
    "8488": {
      "op": "REVERT"
    },
    "8489": {
      "op": "JUMPDEST"
    },
    "8490": {
      "op": "DUP5"
    },
    "8491": {
      "op": "CALLDATALOAD"
    },
    "8492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8496": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8498": {
      "op": "SHL"
    },
    "8499": {
      "op": "SUB"
    },
    "8500": {
      "op": "DUP1"
    },
    "8501": {
      "op": "DUP3"
    },
    "8502": {
      "op": "GT"
    },
    "8503": {
      "op": "ISZERO"
    },
    "8504": {
      "op": "PUSH2",
      "value": "0x2140"
    },
    "8507": {
      "op": "JUMPI"
    },
    "8508": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8510": {
      "op": "DUP1"
    },
    "8511": {
      "op": "REVERT"
    },
    "8512": {
      "op": "JUMPDEST"
    },
    "8513": {
      "op": "PUSH2",
      "value": "0x214C"
    },
    "8516": {
      "op": "DUP9"
    },
    "8517": {
      "op": "DUP4"
    },
    "8518": {
      "op": "DUP10"
    },
    "8519": {
      "op": "ADD"
    },
    "8520": {
      "op": "PUSH2",
      "value": "0x20CB"
    },
    "8523": {
      "jump": "i",
      "op": "JUMP"
    },
    "8524": {
      "op": "JUMPDEST"
    },
    "8525": {
      "op": "SWAP1"
    },
    "8526": {
      "op": "SWAP7"
    },
    "8527": {
      "op": "POP"
    },
    "8528": {
      "op": "SWAP5"
    },
    "8529": {
      "op": "POP"
    },
    "8530": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8532": {
      "op": "DUP8"
    },
    "8533": {
      "op": "ADD"
    },
    "8534": {
      "op": "CALLDATALOAD"
    },
    "8535": {
      "op": "SWAP2"
    },
    "8536": {
      "op": "POP"
    },
    "8537": {
      "op": "DUP1"
    },
    "8538": {
      "op": "DUP3"
    },
    "8539": {
      "op": "GT"
    },
    "8540": {
      "op": "ISZERO"
    },
    "8541": {
      "op": "PUSH2",
      "value": "0x2165"
    },
    "8544": {
      "op": "JUMPI"
    },
    "8545": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8547": {
      "op": "DUP1"
    },
    "8548": {
      "op": "REVERT"
    },
    "8549": {
      "op": "JUMPDEST"
    },
    "8550": {
      "op": "POP"
    },
    "8551": {
      "op": "PUSH2",
      "value": "0x2172"
    },
    "8554": {
      "op": "DUP8"
    },
    "8555": {
      "op": "DUP3"
    },
    "8556": {
      "op": "DUP9"
    },
    "8557": {
      "op": "ADD"
    },
    "8558": {
      "op": "PUSH2",
      "value": "0x20CB"
    },
    "8561": {
      "jump": "i",
      "op": "JUMP"
    },
    "8562": {
      "op": "JUMPDEST"
    },
    "8563": {
      "op": "SWAP6"
    },
    "8564": {
      "op": "SWAP9"
    },
    "8565": {
      "op": "SWAP5"
    },
    "8566": {
      "op": "SWAP8"
    },
    "8567": {
      "op": "POP"
    },
    "8568": {
      "op": "SWAP6"
    },
    "8569": {
      "op": "POP"
    },
    "8570": {
      "op": "POP"
    },
    "8571": {
      "op": "POP"
    },
    "8572": {
      "op": "POP"
    },
    "8573": {
      "jump": "o",
      "op": "JUMP"
    },
    "8574": {
      "op": "JUMPDEST"
    },
    "8575": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8577": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8579": {
      "op": "DUP3"
    },
    "8580": {
      "op": "DUP5"
    },
    "8581": {
      "op": "SUB"
    },
    "8582": {
      "op": "SLT"
    },
    "8583": {
      "op": "ISZERO"
    },
    "8584": {
      "op": "PUSH2",
      "value": "0x2190"
    },
    "8587": {
      "op": "JUMPI"
    },
    "8588": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8590": {
      "op": "DUP1"
    },
    "8591": {
      "op": "REVERT"
    },
    "8592": {
      "op": "JUMPDEST"
    },
    "8593": {
      "op": "DUP2"
    },
    "8594": {
      "op": "CALLDATALOAD"
    },
    "8595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8597": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8599": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8601": {
      "op": "SHL"
    },
    "8602": {
      "op": "SUB"
    },
    "8603": {
      "op": "DUP2"
    },
    "8604": {
      "op": "GT"
    },
    "8605": {
      "op": "ISZERO"
    },
    "8606": {
      "op": "PUSH2",
      "value": "0x21A6"
    },
    "8609": {
      "op": "JUMPI"
    },
    "8610": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8612": {
      "op": "DUP1"
    },
    "8613": {
      "op": "REVERT"
    },
    "8614": {
      "op": "JUMPDEST"
    },
    "8615": {
      "op": "DUP3"
    },
    "8616": {
      "op": "ADD"
    },
    "8617": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8619": {
      "op": "DUP2"
    },
    "8620": {
      "op": "DUP6"
    },
    "8621": {
      "op": "SUB"
    },
    "8622": {
      "op": "SLT"
    },
    "8623": {
      "op": "ISZERO"
    },
    "8624": {
      "op": "PUSH2",
      "value": "0x2027"
    },
    "8627": {
      "op": "JUMPI"
    },
    "8628": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8630": {
      "op": "DUP1"
    },
    "8631": {
      "op": "REVERT"
    },
    "8632": {
      "op": "JUMPDEST"
    },
    "8633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8637": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8639": {
      "op": "SHL"
    },
    "8640": {
      "op": "SUB"
    },
    "8641": {
      "op": "DUP2"
    },
    "8642": {
      "op": "AND"
    },
    "8643": {
      "op": "DUP2"
    },
    "8644": {
      "op": "EQ"
    },
    "8645": {
      "op": "PUSH2",
      "value": "0xA01"
    },
    "8648": {
      "op": "JUMPI"
    },
    "8649": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8651": {
      "op": "DUP1"
    },
    "8652": {
      "op": "REVERT"
    },
    "8653": {
      "op": "JUMPDEST"
    },
    "8654": {
      "op": "DUP1"
    },
    "8655": {
      "op": "CALLDATALOAD"
    },
    "8656": {
      "op": "PUSH2",
      "value": "0x21D8"
    },
    "8659": {
      "op": "DUP2"
    },
    "8660": {
      "op": "PUSH2",
      "value": "0x21B8"
    },
    "8663": {
      "jump": "i",
      "op": "JUMP"
    },
    "8664": {
      "op": "JUMPDEST"
    },
    "8665": {
      "op": "SWAP2"
    },
    "8666": {
      "op": "SWAP1"
    },
    "8667": {
      "op": "POP"
    },
    "8668": {
      "jump": "o",
      "op": "JUMP"
    },
    "8669": {
      "op": "JUMPDEST"
    },
    "8670": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8675": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8677": {
      "op": "SHL"
    },
    "8678": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8680": {
      "op": "MSTORE"
    },
    "8681": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "8683": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8685": {
      "op": "MSTORE"
    },
    "8686": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8688": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8690": {
      "op": "REVERT"
    },
    "8691": {
      "op": "JUMPDEST"
    },
    "8692": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8694": {
      "op": "DUP1"
    },
    "8695": {
      "op": "MLOAD"
    },
    "8696": {
      "op": "SWAP1"
    },
    "8697": {
      "op": "DUP2"
    },
    "8698": {
      "op": "ADD"
    },
    "8699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8701": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8703": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8705": {
      "op": "SHL"
    },
    "8706": {
      "op": "SUB"
    },
    "8707": {
      "op": "DUP2"
    },
    "8708": {
      "op": "GT"
    },
    "8709": {
      "op": "DUP3"
    },
    "8710": {
      "op": "DUP3"
    },
    "8711": {
      "op": "LT"
    },
    "8712": {
      "op": "OR"
    },
    "8713": {
      "op": "ISZERO"
    },
    "8714": {
      "op": "PUSH2",
      "value": "0x2215"
    },
    "8717": {
      "op": "JUMPI"
    },
    "8718": {
      "op": "PUSH2",
      "value": "0x2215"
    },
    "8721": {
      "op": "PUSH2",
      "value": "0x21DD"
    },
    "8724": {
      "jump": "i",
      "op": "JUMP"
    },
    "8725": {
      "op": "JUMPDEST"
    },
    "8726": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8728": {
      "op": "MSTORE"
    },
    "8729": {
      "op": "SWAP1"
    },
    "8730": {
      "jump": "o",
      "op": "JUMP"
    },
    "8731": {
      "op": "JUMPDEST"
    },
    "8732": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8734": {
      "op": "MLOAD"
    },
    "8735": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8737": {
      "op": "DUP2"
    },
    "8738": {
      "op": "ADD"
    },
    "8739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8743": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8745": {
      "op": "SHL"
    },
    "8746": {
      "op": "SUB"
    },
    "8747": {
      "op": "DUP2"
    },
    "8748": {
      "op": "GT"
    },
    "8749": {
      "op": "DUP3"
    },
    "8750": {
      "op": "DUP3"
    },
    "8751": {
      "op": "LT"
    },
    "8752": {
      "op": "OR"
    },
    "8753": {
      "op": "ISZERO"
    },
    "8754": {
      "op": "PUSH2",
      "value": "0x2215"
    },
    "8757": {
      "op": "JUMPI"
    },
    "8758": {
      "op": "PUSH2",
      "value": "0x2215"
    },
    "8761": {
      "op": "PUSH2",
      "value": "0x21DD"
    },
    "8764": {
      "jump": "i",
      "op": "JUMP"
    },
    "8765": {
      "op": "JUMPDEST"
    },
    "8766": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8768": {
      "op": "MLOAD"
    },
    "8769": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8771": {
      "op": "DUP3"
    },
    "8772": {
      "op": "ADD"
    },
    "8773": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8775": {
      "op": "NOT"
    },
    "8776": {
      "op": "AND"
    },
    "8777": {
      "op": "DUP2"
    },
    "8778": {
      "op": "ADD"
    },
    "8779": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8783": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8785": {
      "op": "SHL"
    },
    "8786": {
      "op": "SUB"
    },
    "8787": {
      "op": "DUP2"
    },
    "8788": {
      "op": "GT"
    },
    "8789": {
      "op": "DUP3"
    },
    "8790": {
      "op": "DUP3"
    },
    "8791": {
      "op": "LT"
    },
    "8792": {
      "op": "OR"
    },
    "8793": {
      "op": "ISZERO"
    },
    "8794": {
      "op": "PUSH2",
      "value": "0x2265"
    },
    "8797": {
      "op": "JUMPI"
    },
    "8798": {
      "op": "PUSH2",
      "value": "0x2265"
    },
    "8801": {
      "op": "PUSH2",
      "value": "0x21DD"
    },
    "8804": {
      "jump": "i",
      "op": "JUMP"
    },
    "8805": {
      "op": "JUMPDEST"
    },
    "8806": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8808": {
      "op": "MSTORE"
    },
    "8809": {
      "op": "SWAP2"
    },
    "8810": {
      "op": "SWAP1"
    },
    "8811": {
      "op": "POP"
    },
    "8812": {
      "jump": "o",
      "op": "JUMP"
    },
    "8813": {
      "op": "JUMPDEST"
    },
    "8814": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8816": {
      "op": "DUP3"
    },
    "8817": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8819": {
      "op": "DUP4"
    },
    "8820": {
      "op": "ADD"
    },
    "8821": {
      "op": "SLT"
    },
    "8822": {
      "op": "PUSH2",
      "value": "0x227E"
    },
    "8825": {
      "op": "JUMPI"
    },
    "8826": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8828": {
      "op": "DUP1"
    },
    "8829": {
      "op": "REVERT"
    },
    "8830": {
      "op": "JUMPDEST"
    },
    "8831": {
      "op": "DUP2"
    },
    "8832": {
      "op": "CALLDATALOAD"
    },
    "8833": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8837": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8839": {
      "op": "SHL"
    },
    "8840": {
      "op": "SUB"
    },
    "8841": {
      "op": "DUP2"
    },
    "8842": {
      "op": "GT"
    },
    "8843": {
      "op": "ISZERO"
    },
    "8844": {
      "op": "PUSH2",
      "value": "0x2297"
    },
    "8847": {
      "op": "JUMPI"
    },
    "8848": {
      "op": "PUSH2",
      "value": "0x2297"
    },
    "8851": {
      "op": "PUSH2",
      "value": "0x21DD"
    },
    "8854": {
      "jump": "i",
      "op": "JUMP"
    },
    "8855": {
      "op": "JUMPDEST"
    },
    "8856": {
      "op": "PUSH2",
      "value": "0x22AA"
    },
    "8859": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8861": {
      "op": "DUP3"
    },
    "8862": {
      "op": "ADD"
    },
    "8863": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8865": {
      "op": "NOT"
    },
    "8866": {
      "op": "AND"
    },
    "8867": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8869": {
      "op": "ADD"
    },
    "8870": {
      "op": "PUSH2",
      "value": "0x223D"
    },
    "8873": {
      "jump": "i",
      "op": "JUMP"
    },
    "8874": {
      "op": "JUMPDEST"
    },
    "8875": {
      "op": "DUP2"
    },
    "8876": {
      "op": "DUP2"
    },
    "8877": {
      "op": "MSTORE"
    },
    "8878": {
      "op": "DUP5"
    },
    "8879": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8881": {
      "op": "DUP4"
    },
    "8882": {
      "op": "DUP7"
    },
    "8883": {
      "op": "ADD"
    },
    "8884": {
      "op": "ADD"
    },
    "8885": {
      "op": "GT"
    },
    "8886": {
      "op": "ISZERO"
    },
    "8887": {
      "op": "PUSH2",
      "value": "0x22BF"
    },
    "8890": {
      "op": "JUMPI"
    },
    "8891": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8893": {
      "op": "DUP1"
    },
    "8894": {
      "op": "REVERT"
    },
    "8895": {
      "op": "JUMPDEST"
    },
    "8896": {
      "op": "DUP2"
    },
    "8897": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8899": {
      "op": "DUP6"
    },
    "8900": {
      "op": "ADD"
    },
    "8901": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8903": {
      "op": "DUP4"
    },
    "8904": {
      "op": "ADD"
    },
    "8905": {
      "op": "CALLDATACOPY"
    },
    "8906": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8908": {
      "op": "SWAP2"
    },
    "8909": {
      "op": "DUP2"
    },
    "8910": {
      "op": "ADD"
    },
    "8911": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8913": {
      "op": "ADD"
    },
    "8914": {
      "op": "SWAP2"
    },
    "8915": {
      "op": "SWAP1"
    },
    "8916": {
      "op": "SWAP2"
    },
    "8917": {
      "op": "MSTORE"
    },
    "8918": {
      "op": "SWAP4"
    },
    "8919": {
      "op": "SWAP3"
    },
    "8920": {
      "op": "POP"
    },
    "8921": {
      "op": "POP"
    },
    "8922": {
      "op": "POP"
    },
    "8923": {
      "jump": "o",
      "op": "JUMP"
    },
    "8924": {
      "op": "JUMPDEST"
    },
    "8925": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8927": {
      "op": "DUP1"
    },
    "8928": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8930": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8932": {
      "op": "DUP5"
    },
    "8933": {
      "op": "DUP7"
    },
    "8934": {
      "op": "SUB"
    },
    "8935": {
      "op": "SLT"
    },
    "8936": {
      "op": "ISZERO"
    },
    "8937": {
      "op": "PUSH2",
      "value": "0x22F1"
    },
    "8940": {
      "op": "JUMPI"
    },
    "8941": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8943": {
      "op": "DUP1"
    },
    "8944": {
      "op": "REVERT"
    },
    "8945": {
      "op": "JUMPDEST"
    },
    "8946": {
      "op": "DUP4"
    },
    "8947": {
      "op": "CALLDATALOAD"
    },
    "8948": {
      "op": "PUSH2",
      "value": "0x22FC"
    },
    "8951": {
      "op": "DUP2"
    },
    "8952": {
      "op": "PUSH2",
      "value": "0x21B8"
    },
    "8955": {
      "jump": "i",
      "op": "JUMP"
    },
    "8956": {
      "op": "JUMPDEST"
    },
    "8957": {
      "op": "SWAP3"
    },
    "8958": {
      "op": "POP"
    },
    "8959": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8961": {
      "op": "DUP5"
    },
    "8962": {
      "op": "ADD"
    },
    "8963": {
      "op": "CALLDATALOAD"
    },
    "8964": {
      "op": "PUSH2",
      "value": "0x230C"
    },
    "8967": {
      "op": "DUP2"
    },
    "8968": {
      "op": "PUSH2",
      "value": "0x208A"
    },
    "8971": {
      "jump": "i",
      "op": "JUMP"
    },
    "8972": {
      "op": "JUMPDEST"
    },
    "8973": {
      "op": "SWAP2"
    },
    "8974": {
      "op": "POP"
    },
    "8975": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8977": {
      "op": "DUP5"
    },
    "8978": {
      "op": "ADD"
    },
    "8979": {
      "op": "CALLDATALOAD"
    },
    "8980": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8984": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8986": {
      "op": "SHL"
    },
    "8987": {
      "op": "SUB"
    },
    "8988": {
      "op": "DUP2"
    },
    "8989": {
      "op": "GT"
    },
    "8990": {
      "op": "ISZERO"
    },
    "8991": {
      "op": "PUSH2",
      "value": "0x2327"
    },
    "8994": {
      "op": "JUMPI"
    },
    "8995": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8997": {
      "op": "DUP1"
    },
    "8998": {
      "op": "REVERT"
    },
    "8999": {
      "op": "JUMPDEST"
    },
    "9000": {
      "op": "PUSH2",
      "value": "0x2333"
    },
    "9003": {
      "op": "DUP7"
    },
    "9004": {
      "op": "DUP3"
    },
    "9005": {
      "op": "DUP8"
    },
    "9006": {
      "op": "ADD"
    },
    "9007": {
      "op": "PUSH2",
      "value": "0x226D"
    },
    "9010": {
      "jump": "i",
      "op": "JUMP"
    },
    "9011": {
      "op": "JUMPDEST"
    },
    "9012": {
      "op": "SWAP2"
    },
    "9013": {
      "op": "POP"
    },
    "9014": {
      "op": "POP"
    },
    "9015": {
      "op": "SWAP3"
    },
    "9016": {
      "op": "POP"
    },
    "9017": {
      "op": "SWAP3"
    },
    "9018": {
      "op": "POP"
    },
    "9019": {
      "op": "SWAP3"
    },
    "9020": {
      "jump": "o",
      "op": "JUMP"
    },
    "9021": {
      "op": "JUMPDEST"
    },
    "9022": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9024": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9026": {
      "op": "DUP3"
    },
    "9027": {
      "op": "DUP5"
    },
    "9028": {
      "op": "SUB"
    },
    "9029": {
      "op": "SLT"
    },
    "9030": {
      "op": "ISZERO"
    },
    "9031": {
      "op": "PUSH2",
      "value": "0x234F"
    },
    "9034": {
      "op": "JUMPI"
    },
    "9035": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9037": {
      "op": "DUP1"
    },
    "9038": {
      "op": "REVERT"
    },
    "9039": {
      "op": "JUMPDEST"
    },
    "9040": {
      "op": "POP"
    },
    "9041": {
      "op": "CALLDATALOAD"
    },
    "9042": {
      "op": "SWAP2"
    },
    "9043": {
      "op": "SWAP1"
    },
    "9044": {
      "op": "POP"
    },
    "9045": {
      "jump": "o",
      "op": "JUMP"
    },
    "9046": {
      "op": "JUMPDEST"
    },
    "9047": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9049": {
      "op": "DUP3"
    },
    "9050": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9052": {
      "op": "DUP4"
    },
    "9053": {
      "op": "ADD"
    },
    "9054": {
      "op": "SLT"
    },
    "9055": {
      "op": "PUSH2",
      "value": "0x2367"
    },
    "9058": {
      "op": "JUMPI"
    },
    "9059": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9061": {
      "op": "DUP1"
    },
    "9062": {
      "op": "REVERT"
    },
    "9063": {
      "op": "JUMPDEST"
    },
    "9064": {
      "op": "DUP2"
    },
    "9065": {
      "op": "CALLDATALOAD"
    },
    "9066": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9070": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9072": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9074": {
      "op": "SHL"
    },
    "9075": {
      "op": "SUB"
    },
    "9076": {
      "op": "DUP3"
    },
    "9077": {
      "op": "GT"
    },
    "9078": {
      "op": "ISZERO"
    },
    "9079": {
      "op": "PUSH2",
      "value": "0x2382"
    },
    "9082": {
      "op": "JUMPI"
    },
    "9083": {
      "op": "PUSH2",
      "value": "0x2382"
    },
    "9086": {
      "op": "PUSH2",
      "value": "0x21DD"
    },
    "9089": {
      "jump": "i",
      "op": "JUMP"
    },
    "9090": {
      "op": "JUMPDEST"
    },
    "9091": {
      "op": "PUSH2",
      "value": "0x2390"
    },
    "9094": {
      "op": "DUP2"
    },
    "9095": {
      "op": "DUP4"
    },
    "9096": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "9098": {
      "op": "SHL"
    },
    "9099": {
      "op": "ADD"
    },
    "9100": {
      "op": "PUSH2",
      "value": "0x223D"
    },
    "9103": {
      "jump": "i",
      "op": "JUMP"
    },
    "9104": {
      "op": "JUMPDEST"
    },
    "9105": {
      "op": "DUP3"
    },
    "9106": {
      "op": "DUP2"
    },
    "9107": {
      "op": "MSTORE"
    },
    "9108": {
      "op": "PUSH1",
      "value": "0x6"
    },
    "9110": {
      "op": "SWAP3"
    },
    "9111": {
      "op": "SWAP1"
    },
    "9112": {
      "op": "SWAP3"
    },
    "9113": {
      "op": "SHL"
    },
    "9114": {
      "op": "DUP5"
    },
    "9115": {
      "op": "ADD"
    },
    "9116": {
      "op": "DUP2"
    },
    "9117": {
      "op": "ADD"
    },
    "9118": {
      "op": "SWAP2"
    },
    "9119": {
      "op": "DUP2"
    },
    "9120": {
      "op": "DUP2"
    },
    "9121": {
      "op": "ADD"
    },
    "9122": {
      "op": "SWAP1"
    },
    "9123": {
      "op": "DUP7"
    },
    "9124": {
      "op": "DUP5"
    },
    "9125": {
      "op": "GT"
    },
    "9126": {
      "op": "ISZERO"
    },
    "9127": {
      "op": "PUSH2",
      "value": "0x23AF"
    },
    "9130": {
      "op": "JUMPI"
    },
    "9131": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9133": {
      "op": "DUP1"
    },
    "9134": {
      "op": "REVERT"
    },
    "9135": {
      "op": "JUMPDEST"
    },
    "9136": {
      "op": "DUP3"
    },
    "9137": {
      "op": "DUP7"
    },
    "9138": {
      "op": "ADD"
    },
    "9139": {
      "op": "JUMPDEST"
    },
    "9140": {
      "op": "DUP5"
    },
    "9141": {
      "op": "DUP2"
    },
    "9142": {
      "op": "LT"
    },
    "9143": {
      "op": "ISZERO"
    },
    "9144": {
      "op": "PUSH2",
      "value": "0x23F7"
    },
    "9147": {
      "op": "JUMPI"
    },
    "9148": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9150": {
      "op": "DUP2"
    },
    "9151": {
      "op": "DUP10"
    },
    "9152": {
      "op": "SUB"
    },
    "9153": {
      "op": "SLT"
    },
    "9154": {
      "op": "ISZERO"
    },
    "9155": {
      "op": "PUSH2",
      "value": "0x23CC"
    },
    "9158": {
      "op": "JUMPI"
    },
    "9159": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9161": {
      "op": "DUP1"
    },
    "9162": {
      "op": "DUP2"
    },
    "9163": {
      "op": "REVERT"
    },
    "9164": {
      "op": "JUMPDEST"
    },
    "9165": {
      "op": "PUSH2",
      "value": "0x23D4"
    },
    "9168": {
      "op": "PUSH2",
      "value": "0x21F3"
    },
    "9171": {
      "jump": "i",
      "op": "JUMP"
    },
    "9172": {
      "op": "JUMPDEST"
    },
    "9173": {
      "op": "DUP2"
    },
    "9174": {
      "op": "CALLDATALOAD"
    },
    "9175": {
      "op": "PUSH2",
      "value": "0x23DF"
    },
    "9178": {
      "op": "DUP2"
    },
    "9179": {
      "op": "PUSH2",
      "value": "0x208A"
    },
    "9182": {
      "jump": "i",
      "op": "JUMP"
    },
    "9183": {
      "op": "JUMPDEST"
    },
    "9184": {
      "op": "DUP2"
    },
    "9185": {
      "op": "MSTORE"
    },
    "9186": {
      "op": "DUP2"
    },
    "9187": {
      "op": "DUP6"
    },
    "9188": {
      "op": "ADD"
    },
    "9189": {
      "op": "CALLDATALOAD"
    },
    "9190": {
      "op": "DUP6"
    },
    "9191": {
      "op": "DUP3"
    },
    "9192": {
      "op": "ADD"
    },
    "9193": {
      "op": "MSTORE"
    },
    "9194": {
      "op": "DUP4"
    },
    "9195": {
      "op": "MSTORE"
    },
    "9196": {
      "op": "SWAP2"
    },
    "9197": {
      "op": "DUP4"
    },
    "9198": {
      "op": "ADD"
    },
    "9199": {
      "op": "SWAP2"
    },
    "9200": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9202": {
      "op": "ADD"
    },
    "9203": {
      "op": "PUSH2",
      "value": "0x23B3"
    },
    "9206": {
      "op": "JUMP"
    },
    "9207": {
      "op": "JUMPDEST"
    },
    "9208": {
      "op": "POP"
    },
    "9209": {
      "op": "SWAP7"
    },
    "9210": {
      "op": "SWAP6"
    },
    "9211": {
      "op": "POP"
    },
    "9212": {
      "op": "POP"
    },
    "9213": {
      "op": "POP"
    },
    "9214": {
      "op": "POP"
    },
    "9215": {
      "op": "POP"
    },
    "9216": {
      "op": "POP"
    },
    "9217": {
      "jump": "o",
      "op": "JUMP"
    },
    "9218": {
      "op": "JUMPDEST"
    },
    "9219": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9221": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9223": {
      "op": "DUP3"
    },
    "9224": {
      "op": "DUP5"
    },
    "9225": {
      "op": "SUB"
    },
    "9226": {
      "op": "SLT"
    },
    "9227": {
      "op": "ISZERO"
    },
    "9228": {
      "op": "PUSH2",
      "value": "0x2414"
    },
    "9231": {
      "op": "JUMPI"
    },
    "9232": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9234": {
      "op": "DUP1"
    },
    "9235": {
      "op": "REVERT"
    },
    "9236": {
      "op": "JUMPDEST"
    },
    "9237": {
      "op": "PUSH2",
      "value": "0x241C"
    },
    "9240": {
      "op": "PUSH2",
      "value": "0x221B"
    },
    "9243": {
      "jump": "i",
      "op": "JUMP"
    },
    "9244": {
      "op": "JUMPDEST"
    },
    "9245": {
      "op": "SWAP1"
    },
    "9246": {
      "op": "POP"
    },
    "9247": {
      "op": "DUP2"
    },
    "9248": {
      "op": "CALLDATALOAD"
    },
    "9249": {
      "op": "DUP2"
    },
    "9250": {
      "op": "MSTORE"
    },
    "9251": {
      "op": "PUSH2",
      "value": "0x242E"
    },
    "9254": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9256": {
      "op": "DUP4"
    },
    "9257": {
      "op": "ADD"
    },
    "9258": {
      "op": "PUSH2",
      "value": "0x21CD"
    },
    "9261": {
      "jump": "i",
      "op": "JUMP"
    },
    "9262": {
      "op": "JUMPDEST"
    },
    "9263": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9265": {
      "op": "DUP3"
    },
    "9266": {
      "op": "ADD"
    },
    "9267": {
      "op": "MSTORE"
    },
    "9268": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9270": {
      "op": "DUP3"
    },
    "9271": {
      "op": "ADD"
    },
    "9272": {
      "op": "CALLDATALOAD"
    },
    "9273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9277": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9279": {
      "op": "SHL"
    },
    "9280": {
      "op": "SUB"
    },
    "9281": {
      "op": "DUP1"
    },
    "9282": {
      "op": "DUP3"
    },
    "9283": {
      "op": "GT"
    },
    "9284": {
      "op": "ISZERO"
    },
    "9285": {
      "op": "PUSH2",
      "value": "0x244D"
    },
    "9288": {
      "op": "JUMPI"
    },
    "9289": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9291": {
      "op": "DUP1"
    },
    "9292": {
      "op": "REVERT"
    },
    "9293": {
      "op": "JUMPDEST"
    },
    "9294": {
      "op": "PUSH2",
      "value": "0x2459"
    },
    "9297": {
      "op": "DUP6"
    },
    "9298": {
      "op": "DUP4"
    },
    "9299": {
      "op": "DUP7"
    },
    "9300": {
      "op": "ADD"
    },
    "9301": {
      "op": "PUSH2",
      "value": "0x226D"
    },
    "9304": {
      "jump": "i",
      "op": "JUMP"
    },
    "9305": {
      "op": "JUMPDEST"
    },
    "9306": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9308": {
      "op": "DUP5"
    },
    "9309": {
      "op": "ADD"
    },
    "9310": {
      "op": "MSTORE"
    },
    "9311": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9313": {
      "op": "DUP5"
    },
    "9314": {
      "op": "ADD"
    },
    "9315": {
      "op": "CALLDATALOAD"
    },
    "9316": {
      "op": "SWAP2"
    },
    "9317": {
      "op": "POP"
    },
    "9318": {
      "op": "DUP1"
    },
    "9319": {
      "op": "DUP3"
    },
    "9320": {
      "op": "GT"
    },
    "9321": {
      "op": "ISZERO"
    },
    "9322": {
      "op": "PUSH2",
      "value": "0x2472"
    },
    "9325": {
      "op": "JUMPI"
    },
    "9326": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9328": {
      "op": "DUP1"
    },
    "9329": {
      "op": "REVERT"
    },
    "9330": {
      "op": "JUMPDEST"
    },
    "9331": {
      "op": "PUSH2",
      "value": "0x247E"
    },
    "9334": {
      "op": "DUP6"
    },
    "9335": {
      "op": "DUP4"
    },
    "9336": {
      "op": "DUP7"
    },
    "9337": {
      "op": "ADD"
    },
    "9338": {
      "op": "PUSH2",
      "value": "0x226D"
    },
    "9341": {
      "jump": "i",
      "op": "JUMP"
    },
    "9342": {
      "op": "JUMPDEST"
    },
    "9343": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9345": {
      "op": "DUP5"
    },
    "9346": {
      "op": "ADD"
    },
    "9347": {
      "op": "MSTORE"
    },
    "9348": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9350": {
      "op": "DUP5"
    },
    "9351": {
      "op": "ADD"
    },
    "9352": {
      "op": "CALLDATALOAD"
    },
    "9353": {
      "op": "SWAP2"
    },
    "9354": {
      "op": "POP"
    },
    "9355": {
      "op": "DUP1"
    },
    "9356": {
      "op": "DUP3"
    },
    "9357": {
      "op": "GT"
    },
    "9358": {
      "op": "ISZERO"
    },
    "9359": {
      "op": "PUSH2",
      "value": "0x2497"
    },
    "9362": {
      "op": "JUMPI"
    },
    "9363": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9365": {
      "op": "DUP1"
    },
    "9366": {
      "op": "REVERT"
    },
    "9367": {
      "op": "JUMPDEST"
    },
    "9368": {
      "op": "POP"
    },
    "9369": {
      "op": "PUSH2",
      "value": "0x24A4"
    },
    "9372": {
      "op": "DUP5"
    },
    "9373": {
      "op": "DUP3"
    },
    "9374": {
      "op": "DUP6"
    },
    "9375": {
      "op": "ADD"
    },
    "9376": {
      "op": "PUSH2",
      "value": "0x2356"
    },
    "9379": {
      "jump": "i",
      "op": "JUMP"
    },
    "9380": {
      "op": "JUMPDEST"
    },
    "9381": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9383": {
      "op": "DUP4"
    },
    "9384": {
      "op": "ADD"
    },
    "9385": {
      "op": "MSTORE"
    },
    "9386": {
      "op": "POP"
    },
    "9387": {
      "op": "SWAP3"
    },
    "9388": {
      "op": "SWAP2"
    },
    "9389": {
      "op": "POP"
    },
    "9390": {
      "op": "POP"
    },
    "9391": {
      "jump": "o",
      "op": "JUMP"
    },
    "9392": {
      "op": "JUMPDEST"
    },
    "9393": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9395": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9397": {
      "op": "DUP3"
    },
    "9398": {
      "op": "DUP5"
    },
    "9399": {
      "op": "SUB"
    },
    "9400": {
      "op": "SLT"
    },
    "9401": {
      "op": "ISZERO"
    },
    "9402": {
      "op": "PUSH2",
      "value": "0x24C2"
    },
    "9405": {
      "op": "JUMPI"
    },
    "9406": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9408": {
      "op": "DUP1"
    },
    "9409": {
      "op": "REVERT"
    },
    "9410": {
      "op": "JUMPDEST"
    },
    "9411": {
      "op": "DUP2"
    },
    "9412": {
      "op": "CALLDATALOAD"
    },
    "9413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9417": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9419": {
      "op": "SHL"
    },
    "9420": {
      "op": "SUB"
    },
    "9421": {
      "op": "DUP2"
    },
    "9422": {
      "op": "GT"
    },
    "9423": {
      "op": "ISZERO"
    },
    "9424": {
      "op": "PUSH2",
      "value": "0x24D8"
    },
    "9427": {
      "op": "JUMPI"
    },
    "9428": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9430": {
      "op": "DUP1"
    },
    "9431": {
      "op": "REVERT"
    },
    "9432": {
      "op": "JUMPDEST"
    },
    "9433": {
      "op": "PUSH2",
      "value": "0xBEF"
    },
    "9436": {
      "op": "DUP5"
    },
    "9437": {
      "op": "DUP3"
    },
    "9438": {
      "op": "DUP6"
    },
    "9439": {
      "op": "ADD"
    },
    "9440": {
      "op": "PUSH2",
      "value": "0x2402"
    },
    "9443": {
      "jump": "i",
      "op": "JUMP"
    },
    "9444": {
      "op": "JUMPDEST"
    },
    "9445": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9447": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9449": {
      "op": "DUP3"
    },
    "9450": {
      "op": "DUP5"
    },
    "9451": {
      "op": "SUB"
    },
    "9452": {
      "op": "SLT"
    },
    "9453": {
      "op": "ISZERO"
    },
    "9454": {
      "op": "PUSH2",
      "value": "0x24F6"
    },
    "9457": {
      "op": "JUMPI"
    },
    "9458": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9460": {
      "op": "DUP1"
    },
    "9461": {
      "op": "REVERT"
    },
    "9462": {
      "op": "JUMPDEST"
    },
    "9463": {
      "op": "DUP2"
    },
    "9464": {
      "op": "CALLDATALOAD"
    },
    "9465": {
      "op": "PUSH2",
      "value": "0x2027"
    },
    "9468": {
      "op": "DUP2"
    },
    "9469": {
      "op": "PUSH2",
      "value": "0x208A"
    },
    "9472": {
      "jump": "i",
      "op": "JUMP"
    },
    "9473": {
      "op": "JUMPDEST"
    },
    "9474": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9476": {
      "op": "DUP1"
    },
    "9477": {
      "op": "DUP3"
    },
    "9478": {
      "op": "MSTORE"
    },
    "9479": {
      "op": "DUP3"
    },
    "9480": {
      "op": "MLOAD"
    },
    "9481": {
      "op": "DUP3"
    },
    "9482": {
      "op": "DUP3"
    },
    "9483": {
      "op": "ADD"
    },
    "9484": {
      "op": "DUP2"
    },
    "9485": {
      "op": "SWAP1"
    },
    "9486": {
      "op": "MSTORE"
    },
    "9487": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9489": {
      "op": "SWAP2"
    },
    "9490": {
      "op": "SWAP1"
    },
    "9491": {
      "op": "DUP5"
    },
    "9492": {
      "op": "DUP3"
    },
    "9493": {
      "op": "ADD"
    },
    "9494": {
      "op": "SWAP1"
    },
    "9495": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9497": {
      "op": "DUP6"
    },
    "9498": {
      "op": "ADD"
    },
    "9499": {
      "op": "SWAP1"
    },
    "9500": {
      "op": "DUP5"
    },
    "9501": {
      "op": "JUMPDEST"
    },
    "9502": {
      "op": "DUP2"
    },
    "9503": {
      "op": "DUP2"
    },
    "9504": {
      "op": "LT"
    },
    "9505": {
      "op": "ISZERO"
    },
    "9506": {
      "op": "PUSH2",
      "value": "0x2542"
    },
    "9509": {
      "op": "JUMPI"
    },
    "9510": {
      "op": "DUP4"
    },
    "9511": {
      "op": "MLOAD"
    },
    "9512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9516": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9518": {
      "op": "SHL"
    },
    "9519": {
      "op": "SUB"
    },
    "9520": {
      "op": "AND"
    },
    "9521": {
      "op": "DUP4"
    },
    "9522": {
      "op": "MSTORE"
    },
    "9523": {
      "op": "SWAP3"
    },
    "9524": {
      "op": "DUP5"
    },
    "9525": {
      "op": "ADD"
    },
    "9526": {
      "op": "SWAP3"
    },
    "9527": {
      "op": "SWAP2"
    },
    "9528": {
      "op": "DUP5"
    },
    "9529": {
      "op": "ADD"
    },
    "9530": {
      "op": "SWAP2"
    },
    "9531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9533": {
      "op": "ADD"
    },
    "9534": {
      "op": "PUSH2",
      "value": "0x251D"
    },
    "9537": {
      "op": "JUMP"
    },
    "9538": {
      "op": "JUMPDEST"
    },
    "9539": {
      "op": "POP"
    },
    "9540": {
      "op": "SWAP1"
    },
    "9541": {
      "op": "SWAP7"
    },
    "9542": {
      "op": "SWAP6"
    },
    "9543": {
      "op": "POP"
    },
    "9544": {
      "op": "POP"
    },
    "9545": {
      "op": "POP"
    },
    "9546": {
      "op": "POP"
    },
    "9547": {
      "op": "POP"
    },
    "9548": {
      "op": "POP"
    },
    "9549": {
      "jump": "o",
      "op": "JUMP"
    },
    "9550": {
      "op": "JUMPDEST"
    },
    "9551": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9553": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9555": {
      "op": "DUP3"
    },
    "9556": {
      "op": "DUP5"
    },
    "9557": {
      "op": "SUB"
    },
    "9558": {
      "op": "SLT"
    },
    "9559": {
      "op": "ISZERO"
    },
    "9560": {
      "op": "PUSH2",
      "value": "0x2560"
    },
    "9563": {
      "op": "JUMPI"
    },
    "9564": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9566": {
      "op": "DUP1"
    },
    "9567": {
      "op": "REVERT"
    },
    "9568": {
      "op": "JUMPDEST"
    },
    "9569": {
      "op": "POP"
    },
    "9570": {
      "op": "MLOAD"
    },
    "9571": {
      "op": "SWAP2"
    },
    "9572": {
      "op": "SWAP1"
    },
    "9573": {
      "op": "POP"
    },
    "9574": {
      "jump": "o",
      "op": "JUMP"
    },
    "9575": {
      "op": "JUMPDEST"
    },
    "9576": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9578": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9580": {
      "op": "DUP3"
    },
    "9581": {
      "op": "DUP5"
    },
    "9582": {
      "op": "SUB"
    },
    "9583": {
      "op": "SLT"
    },
    "9584": {
      "op": "ISZERO"
    },
    "9585": {
      "op": "PUSH2",
      "value": "0x2579"
    },
    "9588": {
      "op": "JUMPI"
    },
    "9589": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9591": {
      "op": "DUP1"
    },
    "9592": {
      "op": "REVERT"
    },
    "9593": {
      "op": "JUMPDEST"
    },
    "9594": {
      "op": "DUP2"
    },
    "9595": {
      "op": "MLOAD"
    },
    "9596": {
      "op": "DUP1"
    },
    "9597": {
      "op": "ISZERO"
    },
    "9598": {
      "op": "ISZERO"
    },
    "9599": {
      "op": "DUP2"
    },
    "9600": {
      "op": "EQ"
    },
    "9601": {
      "op": "PUSH2",
      "value": "0x2027"
    },
    "9604": {
      "op": "JUMPI"
    },
    "9605": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9607": {
      "op": "DUP1"
    },
    "9608": {
      "op": "REVERT"
    },
    "9609": {
      "op": "JUMPDEST"
    },
    "9610": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9612": {
      "op": "SWAP5"
    },
    "9613": {
      "op": "SWAP1"
    },
    "9614": {
      "op": "SWAP5"
    },
    "9615": {
      "op": "AND"
    },
    "9616": {
      "op": "DUP5"
    },
    "9617": {
      "op": "MSTORE"
    },
    "9618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9622": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9624": {
      "op": "SHL"
    },
    "9625": {
      "op": "SUB"
    },
    "9626": {
      "op": "SWAP3"
    },
    "9627": {
      "op": "SWAP1"
    },
    "9628": {
      "op": "SWAP3"
    },
    "9629": {
      "op": "AND"
    },
    "9630": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9632": {
      "op": "DUP5"
    },
    "9633": {
      "op": "ADD"
    },
    "9634": {
      "op": "MSTORE"
    },
    "9635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9639": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9641": {
      "op": "SHL"
    },
    "9642": {
      "op": "SUB"
    },
    "9643": {
      "op": "AND"
    },
    "9644": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9646": {
      "op": "DUP4"
    },
    "9647": {
      "op": "ADD"
    },
    "9648": {
      "op": "MSTORE"
    },
    "9649": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9651": {
      "op": "DUP3"
    },
    "9652": {
      "op": "ADD"
    },
    "9653": {
      "op": "MSTORE"
    },
    "9654": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9656": {
      "op": "ADD"
    },
    "9657": {
      "op": "SWAP1"
    },
    "9658": {
      "jump": "o",
      "op": "JUMP"
    },
    "9659": {
      "op": "JUMPDEST"
    },
    "9660": {
      "op": "DUP2"
    },
    "9661": {
      "op": "DUP4"
    },
    "9662": {
      "op": "MSTORE"
    },
    "9663": {
      "op": "DUP2"
    },
    "9664": {
      "op": "DUP2"
    },
    "9665": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9667": {
      "op": "DUP6"
    },
    "9668": {
      "op": "ADD"
    },
    "9669": {
      "op": "CALLDATACOPY"
    },
    "9670": {
      "op": "POP"
    },
    "9671": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9673": {
      "op": "DUP3"
    },
    "9674": {
      "op": "DUP3"
    },
    "9675": {
      "op": "ADD"
    },
    "9676": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9678": {
      "op": "SWAP1"
    },
    "9679": {
      "op": "DUP2"
    },
    "9680": {
      "op": "ADD"
    },
    "9681": {
      "op": "SWAP2"
    },
    "9682": {
      "op": "SWAP1"
    },
    "9683": {
      "op": "SWAP2"
    },
    "9684": {
      "op": "MSTORE"
    },
    "9685": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9687": {
      "op": "SWAP1"
    },
    "9688": {
      "op": "SWAP2"
    },
    "9689": {
      "op": "ADD"
    },
    "9690": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9692": {
      "op": "NOT"
    },
    "9693": {
      "op": "AND"
    },
    "9694": {
      "op": "SWAP1"
    },
    "9695": {
      "op": "SWAP2"
    },
    "9696": {
      "op": "ADD"
    },
    "9697": {
      "op": "ADD"
    },
    "9698": {
      "op": "SWAP1"
    },
    "9699": {
      "jump": "o",
      "op": "JUMP"
    },
    "9700": {
      "op": "JUMPDEST"
    },
    "9701": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9703": {
      "op": "DUP2"
    },
    "9704": {
      "op": "MSTORE"
    },
    "9705": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9707": {
      "op": "PUSH2",
      "value": "0x25F8"
    },
    "9710": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9712": {
      "op": "DUP4"
    },
    "9713": {
      "op": "ADD"
    },
    "9714": {
      "op": "DUP7"
    },
    "9715": {
      "op": "DUP9"
    },
    "9716": {
      "op": "PUSH2",
      "value": "0x25BB"
    },
    "9719": {
      "jump": "i",
      "op": "JUMP"
    },
    "9720": {
      "op": "JUMPDEST"
    },
    "9721": {
      "op": "DUP3"
    },
    "9722": {
      "op": "DUP2"
    },
    "9723": {
      "op": "SUB"
    },
    "9724": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9726": {
      "op": "DUP5"
    },
    "9727": {
      "op": "ADD"
    },
    "9728": {
      "op": "MSTORE"
    },
    "9729": {
      "op": "PUSH2",
      "value": "0x260B"
    },
    "9732": {
      "op": "DUP2"
    },
    "9733": {
      "op": "DUP6"
    },
    "9734": {
      "op": "DUP8"
    },
    "9735": {
      "op": "PUSH2",
      "value": "0x25BB"
    },
    "9738": {
      "jump": "i",
      "op": "JUMP"
    },
    "9739": {
      "op": "JUMPDEST"
    },
    "9740": {
      "op": "SWAP8"
    },
    "9741": {
      "op": "SWAP7"
    },
    "9742": {
      "op": "POP"
    },
    "9743": {
      "op": "POP"
    },
    "9744": {
      "op": "POP"
    },
    "9745": {
      "op": "POP"
    },
    "9746": {
      "op": "POP"
    },
    "9747": {
      "op": "POP"
    },
    "9748": {
      "op": "POP"
    },
    "9749": {
      "jump": "o",
      "op": "JUMP"
    },
    "9750": {
      "op": "JUMPDEST"
    },
    "9751": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9753": {
      "op": "PUSH2",
      "value": "0x5F1"
    },
    "9756": {
      "op": "CALLDATASIZE"
    },
    "9757": {
      "op": "DUP4"
    },
    "9758": {
      "op": "PUSH2",
      "value": "0x2402"
    },
    "9761": {
      "jump": "i",
      "op": "JUMP"
    },
    "9762": {
      "op": "JUMPDEST"
    },
    "9763": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9765": {
      "op": "DUP2"
    },
    "9766": {
      "op": "MLOAD"
    },
    "9767": {
      "op": "DUP1"
    },
    "9768": {
      "op": "DUP5"
    },
    "9769": {
      "op": "MSTORE"
    },
    "9770": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9772": {
      "op": "JUMPDEST"
    },
    "9773": {
      "op": "DUP2"
    },
    "9774": {
      "op": "DUP2"
    },
    "9775": {
      "op": "LT"
    },
    "9776": {
      "op": "ISZERO"
    },
    "9777": {
      "op": "PUSH2",
      "value": "0x2648"
    },
    "9780": {
      "op": "JUMPI"
    },
    "9781": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9783": {
      "op": "DUP2"
    },
    "9784": {
      "op": "DUP6"
    },
    "9785": {
      "op": "ADD"
    },
    "9786": {
      "op": "DUP2"
    },
    "9787": {
      "op": "ADD"
    },
    "9788": {
      "op": "MLOAD"
    },
    "9789": {
      "op": "DUP7"
    },
    "9790": {
      "op": "DUP4"
    },
    "9791": {
      "op": "ADD"
    },
    "9792": {
      "op": "DUP3"
    },
    "9793": {
      "op": "ADD"
    },
    "9794": {
      "op": "MSTORE"
    },
    "9795": {
      "op": "ADD"
    },
    "9796": {
      "op": "PUSH2",
      "value": "0x262C"
    },
    "9799": {
      "op": "JUMP"
    },
    "9800": {
      "op": "JUMPDEST"
    },
    "9801": {
      "op": "POP"
    },
    "9802": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9804": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9806": {
      "op": "DUP3"
    },
    "9807": {
      "op": "DUP7"
    },
    "9808": {
      "op": "ADD"
    },
    "9809": {
      "op": "ADD"
    },
    "9810": {
      "op": "MSTORE"
    },
    "9811": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9813": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9815": {
      "op": "NOT"
    },
    "9816": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9818": {
      "op": "DUP4"
    },
    "9819": {
      "op": "ADD"
    },
    "9820": {
      "op": "AND"
    },
    "9821": {
      "op": "DUP6"
    },
    "9822": {
      "op": "ADD"
    },
    "9823": {
      "op": "ADD"
    },
    "9824": {
      "op": "SWAP2"
    },
    "9825": {
      "op": "POP"
    },
    "9826": {
      "op": "POP"
    },
    "9827": {
      "op": "SWAP3"
    },
    "9828": {
      "op": "SWAP2"
    },
    "9829": {
      "op": "POP"
    },
    "9830": {
      "op": "POP"
    },
    "9831": {
      "jump": "o",
      "op": "JUMP"
    },
    "9832": {
      "op": "JUMPDEST"
    },
    "9833": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9835": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9839": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9841": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9843": {
      "op": "SHL"
    },
    "9844": {
      "op": "SUB"
    },
    "9845": {
      "op": "DUP6"
    },
    "9846": {
      "op": "AND"
    },
    "9847": {
      "op": "DUP4"
    },
    "9848": {
      "op": "MSTORE"
    },
    "9849": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9851": {
      "op": "DUP2"
    },
    "9852": {
      "op": "DUP2"
    },
    "9853": {
      "op": "DUP6"
    },
    "9854": {
      "op": "ADD"
    },
    "9855": {
      "op": "MSTORE"
    },
    "9856": {
      "op": "DUP5"
    },
    "9857": {
      "op": "MLOAD"
    },
    "9858": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9860": {
      "op": "DUP4"
    },
    "9861": {
      "op": "DUP7"
    },
    "9862": {
      "op": "ADD"
    },
    "9863": {
      "op": "MSTORE"
    },
    "9864": {
      "op": "PUSH2",
      "value": "0x2694"
    },
    "9867": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9869": {
      "op": "DUP7"
    },
    "9870": {
      "op": "ADD"
    },
    "9871": {
      "op": "DUP3"
    },
    "9872": {
      "op": "PUSH2",
      "value": "0x2622"
    },
    "9875": {
      "jump": "i",
      "op": "JUMP"
    },
    "9876": {
      "op": "JUMPDEST"
    },
    "9877": {
      "op": "SWAP1"
    },
    "9878": {
      "op": "POP"
    },
    "9879": {
      "op": "DUP2"
    },
    "9880": {
      "op": "DUP7"
    },
    "9881": {
      "op": "ADD"
    },
    "9882": {
      "op": "MLOAD"
    },
    "9883": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "9885": {
      "op": "NOT"
    },
    "9886": {
      "op": "DUP1"
    },
    "9887": {
      "op": "DUP8"
    },
    "9888": {
      "op": "DUP5"
    },
    "9889": {
      "op": "SUB"
    },
    "9890": {
      "op": "ADD"
    },
    "9891": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9893": {
      "op": "DUP9"
    },
    "9894": {
      "op": "ADD"
    },
    "9895": {
      "op": "MSTORE"
    },
    "9896": {
      "op": "PUSH2",
      "value": "0x26B1"
    },
    "9899": {
      "op": "DUP4"
    },
    "9900": {
      "op": "DUP4"
    },
    "9901": {
      "op": "PUSH2",
      "value": "0x2622"
    },
    "9904": {
      "jump": "i",
      "op": "JUMP"
    },
    "9905": {
      "op": "JUMPDEST"
    },
    "9906": {
      "op": "DUP9"
    },
    "9907": {
      "op": "DUP7"
    },
    "9908": {
      "op": "ADD"
    },
    "9909": {
      "op": "MLOAD"
    },
    "9910": {
      "op": "DUP9"
    },
    "9911": {
      "op": "DUP3"
    },
    "9912": {
      "op": "SUB"
    },
    "9913": {
      "op": "DUP4"
    },
    "9914": {
      "op": "ADD"
    },
    "9915": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9917": {
      "op": "DUP11"
    },
    "9918": {
      "op": "ADD"
    },
    "9919": {
      "op": "MSTORE"
    },
    "9920": {
      "op": "DUP1"
    },
    "9921": {
      "op": "MLOAD"
    },
    "9922": {
      "op": "DUP1"
    },
    "9923": {
      "op": "DUP4"
    },
    "9924": {
      "op": "MSTORE"
    },
    "9925": {
      "op": "SWAP1"
    },
    "9926": {
      "op": "DUP7"
    },
    "9927": {
      "op": "ADD"
    },
    "9928": {
      "op": "SWAP5"
    },
    "9929": {
      "op": "POP"
    },
    "9930": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9932": {
      "op": "SWAP4"
    },
    "9933": {
      "op": "POP"
    },
    "9934": {
      "op": "SWAP1"
    },
    "9935": {
      "op": "DUP6"
    },
    "9936": {
      "op": "ADD"
    },
    "9937": {
      "op": "SWAP1"
    },
    "9938": {
      "op": "JUMPDEST"
    },
    "9939": {
      "op": "DUP1"
    },
    "9940": {
      "op": "DUP5"
    },
    "9941": {
      "op": "LT"
    },
    "9942": {
      "op": "ISZERO"
    },
    "9943": {
      "op": "PUSH2",
      "value": "0x2704"
    },
    "9946": {
      "op": "JUMPI"
    },
    "9947": {
      "op": "DUP5"
    },
    "9948": {
      "op": "MLOAD"
    },
    "9949": {
      "op": "DUP1"
    },
    "9950": {
      "op": "MLOAD"
    },
    "9951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9955": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9957": {
      "op": "SHL"
    },
    "9958": {
      "op": "SUB"
    },
    "9959": {
      "op": "AND"
    },
    "9960": {
      "op": "DUP4"
    },
    "9961": {
      "op": "MSTORE"
    },
    "9962": {
      "op": "DUP7"
    },
    "9963": {
      "op": "ADD"
    },
    "9964": {
      "op": "MLOAD"
    },
    "9965": {
      "op": "DUP7"
    },
    "9966": {
      "op": "DUP4"
    },
    "9967": {
      "op": "ADD"
    },
    "9968": {
      "op": "MSTORE"
    },
    "9969": {
      "op": "SWAP4"
    },
    "9970": {
      "op": "DUP6"
    },
    "9971": {
      "op": "ADD"
    },
    "9972": {
      "op": "SWAP4"
    },
    "9973": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9975": {
      "op": "SWAP4"
    },
    "9976": {
      "op": "SWAP1"
    },
    "9977": {
      "op": "SWAP4"
    },
    "9978": {
      "op": "ADD"
    },
    "9979": {
      "op": "SWAP3"
    },
    "9980": {
      "op": "SWAP1"
    },
    "9981": {
      "op": "DUP7"
    },
    "9982": {
      "op": "ADD"
    },
    "9983": {
      "op": "SWAP1"
    },
    "9984": {
      "op": "PUSH2",
      "value": "0x26D2"
    },
    "9987": {
      "op": "JUMP"
    },
    "9988": {
      "op": "JUMPDEST"
    },
    "9989": {
      "op": "POP"
    },
    "9990": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9992": {
      "op": "DUP10"
    },
    "9993": {
      "op": "ADD"
    },
    "9994": {
      "op": "MLOAD"
    },
    "9995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9997": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9999": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10001": {
      "op": "SHL"
    },
    "10002": {
      "op": "SUB"
    },
    "10003": {
      "op": "AND"
    },
    "10004": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10006": {
      "op": "DUP10"
    },
    "10007": {
      "op": "ADD"
    },
    "10008": {
      "op": "MSTORE"
    },
    "10009": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10011": {
      "op": "DUP10"
    },
    "10012": {
      "op": "ADD"
    },
    "10013": {
      "op": "MLOAD"
    },
    "10014": {
      "op": "DUP9"
    },
    "10015": {
      "op": "DUP3"
    },
    "10016": {
      "op": "SUB"
    },
    "10017": {
      "op": "DUP4"
    },
    "10018": {
      "op": "ADD"
    },
    "10019": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "10021": {
      "op": "DUP11"
    },
    "10022": {
      "op": "ADD"
    },
    "10023": {
      "op": "MSTORE"
    },
    "10024": {
      "op": "SWAP6"
    },
    "10025": {
      "op": "POP"
    },
    "10026": {
      "op": "PUSH2",
      "value": "0x2733"
    },
    "10029": {
      "op": "DUP2"
    },
    "10030": {
      "op": "DUP8"
    },
    "10031": {
      "op": "PUSH2",
      "value": "0x2622"
    },
    "10034": {
      "jump": "i",
      "op": "JUMP"
    },
    "10035": {
      "op": "JUMPDEST"
    },
    "10036": {
      "op": "SWAP11"
    },
    "10037": {
      "op": "SWAP10"
    },
    "10038": {
      "op": "POP"
    },
    "10039": {
      "op": "POP"
    },
    "10040": {
      "op": "POP"
    },
    "10041": {
      "op": "POP"
    },
    "10042": {
      "op": "POP"
    },
    "10043": {
      "op": "POP"
    },
    "10044": {
      "op": "POP"
    },
    "10045": {
      "op": "POP"
    },
    "10046": {
      "op": "POP"
    },
    "10047": {
      "op": "POP"
    },
    "10048": {
      "jump": "o",
      "op": "JUMP"
    },
    "10049": {
      "op": "JUMPDEST"
    },
    "10050": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10055": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10057": {
      "op": "SHL"
    },
    "10058": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10060": {
      "op": "MSTORE"
    },
    "10061": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "10063": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10065": {
      "op": "MSTORE"
    },
    "10066": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10068": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10070": {
      "op": "REVERT"
    },
    "10071": {
      "op": "JUMPDEST"
    },
    "10072": {
      "op": "DUP1"
    },
    "10073": {
      "op": "DUP3"
    },
    "10074": {
      "op": "MUL"
    },
    "10075": {
      "op": "DUP2"
    },
    "10076": {
      "op": "ISZERO"
    },
    "10077": {
      "op": "DUP3"
    },
    "10078": {
      "op": "DUP3"
    },
    "10079": {
      "op": "DIV"
    },
    "10080": {
      "op": "DUP5"
    },
    "10081": {
      "op": "EQ"
    },
    "10082": {
      "op": "OR"
    },
    "10083": {
      "op": "PUSH2",
      "value": "0x5F1"
    },
    "10086": {
      "op": "JUMPI"
    },
    "10087": {
      "op": "PUSH2",
      "value": "0x5F1"
    },
    "10090": {
      "op": "PUSH2",
      "value": "0x2741"
    },
    "10093": {
      "jump": "i",
      "op": "JUMP"
    },
    "10094": {
      "op": "JUMPDEST"
    },
    "10095": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10097": {
      "op": "DUP3"
    },
    "10098": {
      "op": "PUSH2",
      "value": "0x278B"
    },
    "10101": {
      "op": "JUMPI"
    },
    "10102": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10107": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10109": {
      "op": "SHL"
    },
    "10110": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10112": {
      "op": "MSTORE"
    },
    "10113": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "10115": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10117": {
      "op": "MSTORE"
    },
    "10118": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10120": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10122": {
      "op": "REVERT"
    },
    "10123": {
      "op": "JUMPDEST"
    },
    "10124": {
      "op": "POP"
    },
    "10125": {
      "op": "DIV"
    },
    "10126": {
      "op": "SWAP1"
    },
    "10127": {
      "jump": "o",
      "op": "JUMP"
    },
    "10128": {
      "op": "JUMPDEST"
    },
    "10129": {
      "op": "DUP1"
    },
    "10130": {
      "op": "DUP3"
    },
    "10131": {
      "op": "ADD"
    },
    "10132": {
      "op": "DUP1"
    },
    "10133": {
      "op": "DUP3"
    },
    "10134": {
      "op": "GT"
    },
    "10135": {
      "op": "ISZERO"
    },
    "10136": {
      "op": "PUSH2",
      "value": "0x5F1"
    },
    "10139": {
      "op": "JUMPI"
    },
    "10140": {
      "op": "PUSH2",
      "value": "0x5F1"
    },
    "10143": {
      "op": "PUSH2",
      "value": "0x2741"
    },
    "10146": {
      "jump": "i",
      "op": "JUMP"
    },
    "10147": {
      "op": "JUMPDEST"
    },
    "10148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10152": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10154": {
      "op": "SHL"
    },
    "10155": {
      "op": "SUB"
    },
    "10156": {
      "op": "DUP2"
    },
    "10157": {
      "op": "DUP2"
    },
    "10158": {
      "op": "AND"
    },
    "10159": {
      "op": "DUP4"
    },
    "10160": {
      "op": "DUP3"
    },
    "10161": {
      "op": "AND"
    },
    "10162": {
      "op": "ADD"
    },
    "10163": {
      "op": "SWAP1"
    },
    "10164": {
      "op": "DUP1"
    },
    "10165": {
      "op": "DUP3"
    },
    "10166": {
      "op": "GT"
    },
    "10167": {
      "op": "ISZERO"
    },
    "10168": {
      "op": "PUSH2",
      "value": "0x27C3"
    },
    "10171": {
      "op": "JUMPI"
    },
    "10172": {
      "op": "PUSH2",
      "value": "0x27C3"
    },
    "10175": {
      "op": "PUSH2",
      "value": "0x2741"
    },
    "10178": {
      "jump": "i",
      "op": "JUMP"
    },
    "10179": {
      "op": "JUMPDEST"
    },
    "10180": {
      "op": "POP"
    },
    "10181": {
      "op": "SWAP3"
    },
    "10182": {
      "op": "SWAP2"
    },
    "10183": {
      "op": "POP"
    },
    "10184": {
      "op": "POP"
    },
    "10185": {
      "jump": "o",
      "op": "JUMP"
    },
    "10186": {
      "op": "JUMPDEST"
    },
    "10187": {
      "op": "DUP1"
    },
    "10188": {
      "op": "MLOAD"
    },
    "10189": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10191": {
      "op": "DUP2"
    },
    "10192": {
      "op": "AND"
    },
    "10193": {
      "op": "DUP2"
    },
    "10194": {
      "op": "EQ"
    },
    "10195": {
      "op": "PUSH2",
      "value": "0x21D8"
    },
    "10198": {
      "op": "JUMPI"
    },
    "10199": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10201": {
      "op": "DUP1"
    },
    "10202": {
      "op": "REVERT"
    },
    "10203": {
      "op": "JUMPDEST"
    },
    "10204": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10206": {
      "op": "DUP1"
    },
    "10207": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10209": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10211": {
      "op": "DUP5"
    },
    "10212": {
      "op": "DUP7"
    },
    "10213": {
      "op": "SUB"
    },
    "10214": {
      "op": "SLT"
    },
    "10215": {
      "op": "ISZERO"
    },
    "10216": {
      "op": "PUSH2",
      "value": "0x27F0"
    },
    "10219": {
      "op": "JUMPI"
    },
    "10220": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10222": {
      "op": "DUP1"
    },
    "10223": {
      "op": "REVERT"
    },
    "10224": {
      "op": "JUMPDEST"
    },
    "10225": {
      "op": "PUSH2",
      "value": "0x27F9"
    },
    "10228": {
      "op": "DUP5"
    },
    "10229": {
      "op": "PUSH2",
      "value": "0x27CA"
    },
    "10232": {
      "jump": "i",
      "op": "JUMP"
    },
    "10233": {
      "op": "JUMPDEST"
    },
    "10234": {
      "op": "SWAP3"
    },
    "10235": {
      "op": "POP"
    },
    "10236": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10238": {
      "op": "DUP5"
    },
    "10239": {
      "op": "ADD"
    },
    "10240": {
      "op": "MLOAD"
    },
    "10241": {
      "op": "SWAP2"
    },
    "10242": {
      "op": "POP"
    },
    "10243": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10245": {
      "op": "DUP5"
    },
    "10246": {
      "op": "ADD"
    },
    "10247": {
      "op": "MLOAD"
    },
    "10248": {
      "op": "PUSH2",
      "value": "0x2810"
    },
    "10251": {
      "op": "DUP2"
    },
    "10252": {
      "op": "PUSH2",
      "value": "0x2058"
    },
    "10255": {
      "jump": "i",
      "op": "JUMP"
    },
    "10256": {
      "op": "JUMPDEST"
    },
    "10257": {
      "op": "DUP1"
    },
    "10258": {
      "op": "SWAP2"
    },
    "10259": {
      "op": "POP"
    },
    "10260": {
      "op": "POP"
    },
    "10261": {
      "op": "SWAP3"
    },
    "10262": {
      "op": "POP"
    },
    "10263": {
      "op": "SWAP3"
    },
    "10264": {
      "op": "POP"
    },
    "10265": {
      "op": "SWAP3"
    },
    "10266": {
      "jump": "o",
      "op": "JUMP"
    },
    "10267": {
      "op": "JUMPDEST"
    },
    "10268": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10270": {
      "op": "DUP1"
    },
    "10271": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10273": {
      "op": "DUP1"
    },
    "10274": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10276": {
      "op": "DUP1"
    },
    "10277": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10279": {
      "op": "DUP1"
    },
    "10280": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10282": {
      "op": "DUP1"
    },
    "10283": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10285": {
      "op": "DUP1"
    },
    "10286": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "10289": {
      "op": "DUP14"
    },
    "10290": {
      "op": "DUP16"
    },
    "10291": {
      "op": "SUB"
    },
    "10292": {
      "op": "SLT"
    },
    "10293": {
      "op": "ISZERO"
    },
    "10294": {
      "op": "PUSH2",
      "value": "0x283E"
    },
    "10297": {
      "op": "JUMPI"
    },
    "10298": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10300": {
      "op": "DUP1"
    },
    "10301": {
      "op": "REVERT"
    },
    "10302": {
      "op": "JUMPDEST"
    },
    "10303": {
      "op": "DUP13"
    },
    "10304": {
      "op": "MLOAD"
    },
    "10305": {
      "op": "SWAP12"
    },
    "10306": {
      "op": "POP"
    },
    "10307": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10309": {
      "op": "DUP14"
    },
    "10310": {
      "op": "ADD"
    },
    "10311": {
      "op": "MLOAD"
    },
    "10312": {
      "op": "SWAP11"
    },
    "10313": {
      "op": "POP"
    },
    "10314": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10316": {
      "op": "DUP14"
    },
    "10317": {
      "op": "ADD"
    },
    "10318": {
      "op": "MLOAD"
    },
    "10319": {
      "op": "SWAP10"
    },
    "10320": {
      "op": "POP"
    },
    "10321": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10323": {
      "op": "DUP14"
    },
    "10324": {
      "op": "ADD"
    },
    "10325": {
      "op": "MLOAD"
    },
    "10326": {
      "op": "SWAP9"
    },
    "10327": {
      "op": "POP"
    },
    "10328": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10330": {
      "op": "DUP14"
    },
    "10331": {
      "op": "ADD"
    },
    "10332": {
      "op": "MLOAD"
    },
    "10333": {
      "op": "SWAP8"
    },
    "10334": {
      "op": "POP"
    },
    "10335": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10337": {
      "op": "DUP14"
    },
    "10338": {
      "op": "ADD"
    },
    "10339": {
      "op": "MLOAD"
    },
    "10340": {
      "op": "SWAP7"
    },
    "10341": {
      "op": "POP"
    },
    "10342": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "10344": {
      "op": "DUP14"
    },
    "10345": {
      "op": "ADD"
    },
    "10346": {
      "op": "MLOAD"
    },
    "10347": {
      "op": "SWAP6"
    },
    "10348": {
      "op": "POP"
    },
    "10349": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10351": {
      "op": "DUP14"
    },
    "10352": {
      "op": "ADD"
    },
    "10353": {
      "op": "MLOAD"
    },
    "10354": {
      "op": "SWAP5"
    },
    "10355": {
      "op": "POP"
    },
    "10356": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "10359": {
      "op": "DUP14"
    },
    "10360": {
      "op": "ADD"
    },
    "10361": {
      "op": "MLOAD"
    },
    "10362": {
      "op": "SWAP4"
    },
    "10363": {
      "op": "POP"
    },
    "10364": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "10367": {
      "op": "DUP14"
    },
    "10368": {
      "op": "ADD"
    },
    "10369": {
      "op": "MLOAD"
    },
    "10370": {
      "op": "SWAP3"
    },
    "10371": {
      "op": "POP"
    },
    "10372": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "10375": {
      "op": "DUP14"
    },
    "10376": {
      "op": "ADD"
    },
    "10377": {
      "op": "MLOAD"
    },
    "10378": {
      "op": "SWAP2"
    },
    "10379": {
      "op": "POP"
    },
    "10380": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "10383": {
      "op": "DUP14"
    },
    "10384": {
      "op": "ADD"
    },
    "10385": {
      "op": "MLOAD"
    },
    "10386": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "10392": {
      "op": "DUP2"
    },
    "10393": {
      "op": "AND"
    },
    "10394": {
      "op": "DUP2"
    },
    "10395": {
      "op": "EQ"
    },
    "10396": {
      "op": "PUSH2",
      "value": "0x28A4"
    },
    "10399": {
      "op": "JUMPI"
    },
    "10400": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10402": {
      "op": "DUP1"
    },
    "10403": {
      "op": "REVERT"
    },
    "10404": {
      "op": "JUMPDEST"
    },
    "10405": {
      "op": "DUP1"
    },
    "10406": {
      "op": "SWAP2"
    },
    "10407": {
      "op": "POP"
    },
    "10408": {
      "op": "POP"
    },
    "10409": {
      "op": "SWAP3"
    },
    "10410": {
      "op": "SWAP6"
    },
    "10411": {
      "op": "SWAP9"
    },
    "10412": {
      "op": "SWAP12"
    },
    "10413": {
      "op": "POP"
    },
    "10414": {
      "op": "SWAP3"
    },
    "10415": {
      "op": "SWAP6"
    },
    "10416": {
      "op": "SWAP9"
    },
    "10417": {
      "op": "SWAP12"
    },
    "10418": {
      "op": "POP"
    },
    "10419": {
      "op": "SWAP3"
    },
    "10420": {
      "op": "SWAP6"
    },
    "10421": {
      "op": "SWAP9"
    },
    "10422": {
      "op": "SWAP12"
    },
    "10423": {
      "jump": "o",
      "op": "JUMP"
    },
    "10424": {
      "op": "JUMPDEST"
    },
    "10425": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10427": {
      "op": "DUP1"
    },
    "10428": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10430": {
      "op": "DUP1"
    },
    "10431": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10433": {
      "op": "DUP6"
    },
    "10434": {
      "op": "DUP8"
    },
    "10435": {
      "op": "SUB"
    },
    "10436": {
      "op": "SLT"
    },
    "10437": {
      "op": "ISZERO"
    },
    "10438": {
      "op": "PUSH2",
      "value": "0x28CE"
    },
    "10441": {
      "op": "JUMPI"
    },
    "10442": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10444": {
      "op": "DUP1"
    },
    "10445": {
      "op": "REVERT"
    },
    "10446": {
      "op": "JUMPDEST"
    },
    "10447": {
      "op": "PUSH2",
      "value": "0x28D7"
    },
    "10450": {
      "op": "DUP6"
    },
    "10451": {
      "op": "PUSH2",
      "value": "0x27CA"
    },
    "10454": {
      "jump": "i",
      "op": "JUMP"
    },
    "10455": {
      "op": "JUMPDEST"
    },
    "10456": {
      "op": "SWAP4"
    },
    "10457": {
      "op": "POP"
    },
    "10458": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10460": {
      "op": "DUP6"
    },
    "10461": {
      "op": "ADD"
    },
    "10462": {
      "op": "MLOAD"
    },
    "10463": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "10468": {
      "op": "DUP2"
    },
    "10469": {
      "op": "AND"
    },
    "10470": {
      "op": "DUP2"
    },
    "10471": {
      "op": "EQ"
    },
    "10472": {
      "op": "PUSH2",
      "value": "0x28F0"
    },
    "10475": {
      "op": "JUMPI"
    },
    "10476": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10478": {
      "op": "DUP1"
    },
    "10479": {
      "op": "REVERT"
    },
    "10480": {
      "op": "JUMPDEST"
    },
    "10481": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10483": {
      "op": "DUP7"
    },
    "10484": {
      "op": "ADD"
    },
    "10485": {
      "op": "MLOAD"
    },
    "10486": {
      "op": "SWAP1"
    },
    "10487": {
      "op": "SWAP4"
    },
    "10488": {
      "op": "POP"
    },
    "10489": {
      "op": "PUSH2",
      "value": "0x2901"
    },
    "10492": {
      "op": "DUP2"
    },
    "10493": {
      "op": "PUSH2",
      "value": "0x21B8"
    },
    "10496": {
      "jump": "i",
      "op": "JUMP"
    },
    "10497": {
      "op": "JUMPDEST"
    },
    "10498": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10500": {
      "op": "SWAP6"
    },
    "10501": {
      "op": "SWAP1"
    },
    "10502": {
      "op": "SWAP6"
    },
    "10503": {
      "op": "ADD"
    },
    "10504": {
      "op": "MLOAD"
    },
    "10505": {
      "op": "SWAP4"
    },
    "10506": {
      "op": "SWAP7"
    },
    "10507": {
      "op": "SWAP3"
    },
    "10508": {
      "op": "SWAP6"
    },
    "10509": {
      "op": "POP"
    },
    "10510": {
      "op": "POP"
    },
    "10511": {
      "op": "POP"
    },
    "10512": {
      "jump": "o",
      "op": "JUMP"
    },
    "10513": {
      "op": "JUMPDEST"
    },
    "10514": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10516": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10518": {
      "op": "DUP3"
    },
    "10519": {
      "op": "DUP5"
    },
    "10520": {
      "op": "SUB"
    },
    "10521": {
      "op": "SLT"
    },
    "10522": {
      "op": "ISZERO"
    },
    "10523": {
      "op": "PUSH2",
      "value": "0x2923"
    },
    "10526": {
      "op": "JUMPI"
    },
    "10527": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10529": {
      "op": "DUP1"
    },
    "10530": {
      "op": "REVERT"
    },
    "10531": {
      "op": "JUMPDEST"
    },
    "10532": {
      "op": "DUP2"
    },
    "10533": {
      "op": "MLOAD"
    },
    "10534": {
      "op": "PUSH2",
      "value": "0x2027"
    },
    "10537": {
      "op": "DUP2"
    },
    "10538": {
      "op": "PUSH2",
      "value": "0x21B8"
    },
    "10541": {
      "jump": "i",
      "op": "JUMP"
    },
    "10542": {
      "op": "JUMPDEST"
    },
    "10543": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10545": {
      "op": "DUP1"
    },
    "10546": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10548": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10550": {
      "op": "DUP5"
    },
    "10551": {
      "op": "DUP7"
    },
    "10552": {
      "op": "SUB"
    },
    "10553": {
      "op": "SLT"
    },
    "10554": {
      "op": "ISZERO"
    },
    "10555": {
      "op": "PUSH2",
      "value": "0x2943"
    },
    "10558": {
      "op": "JUMPI"
    },
    "10559": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10561": {
      "op": "DUP1"
    },
    "10562": {
      "op": "REVERT"
    },
    "10563": {
      "op": "JUMPDEST"
    },
    "10564": {
      "op": "PUSH2",
      "value": "0x294C"
    },
    "10567": {
      "op": "DUP5"
    },
    "10568": {
      "op": "PUSH2",
      "value": "0x27CA"
    },
    "10571": {
      "jump": "i",
      "op": "JUMP"
    },
    "10572": {
      "op": "JUMPDEST"
    },
    "10573": {
      "op": "SWAP3"
    },
    "10574": {
      "op": "POP"
    },
    "10575": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10577": {
      "op": "DUP5"
    },
    "10578": {
      "op": "ADD"
    },
    "10579": {
      "op": "MLOAD"
    },
    "10580": {
      "op": "PUSH2",
      "value": "0x295C"
    },
    "10583": {
      "op": "DUP2"
    },
    "10584": {
      "op": "PUSH2",
      "value": "0x208A"
    },
    "10587": {
      "jump": "i",
      "op": "JUMP"
    },
    "10588": {
      "op": "JUMPDEST"
    },
    "10589": {
      "op": "DUP1"
    },
    "10590": {
      "op": "SWAP3"
    },
    "10591": {
      "op": "POP"
    },
    "10592": {
      "op": "POP"
    },
    "10593": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10595": {
      "op": "DUP5"
    },
    "10596": {
      "op": "ADD"
    },
    "10597": {
      "op": "MLOAD"
    },
    "10598": {
      "op": "SWAP1"
    },
    "10599": {
      "op": "POP"
    },
    "10600": {
      "op": "SWAP3"
    },
    "10601": {
      "op": "POP"
    },
    "10602": {
      "op": "SWAP3"
    },
    "10603": {
      "op": "POP"
    },
    "10604": {
      "op": "SWAP3"
    },
    "10605": {
      "jump": "o",
      "op": "JUMP"
    },
    "10606": {
      "op": "JUMPDEST"
    },
    "10607": {
      "op": "DUP2"
    },
    "10608": {
      "op": "DUP2"
    },
    "10609": {
      "op": "SUB"
    },
    "10610": {
      "op": "DUP2"
    },
    "10611": {
      "op": "DUP2"
    },
    "10612": {
      "op": "GT"
    },
    "10613": {
      "op": "ISZERO"
    },
    "10614": {
      "op": "PUSH2",
      "value": "0x5F1"
    },
    "10617": {
      "op": "JUMPI"
    },
    "10618": {
      "op": "PUSH2",
      "value": "0x5F1"
    },
    "10621": {
      "op": "PUSH2",
      "value": "0x2741"
    },
    "10624": {
      "jump": "i",
      "op": "JUMP"
    },
    "10625": {
      "op": "JUMPDEST"
    },
    "10626": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10628": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10630": {
      "op": "DUP3"
    },
    "10631": {
      "op": "DUP5"
    },
    "10632": {
      "op": "SUB"
    },
    "10633": {
      "op": "SLT"
    },
    "10634": {
      "op": "ISZERO"
    },
    "10635": {
      "op": "PUSH2",
      "value": "0x2993"
    },
    "10638": {
      "op": "JUMPI"
    },
    "10639": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10641": {
      "op": "DUP1"
    },
    "10642": {
      "op": "REVERT"
    },
    "10643": {
      "op": "JUMPDEST"
    },
    "10644": {
      "op": "DUP2"
    },
    "10645": {
      "op": "MLOAD"
    },
    "10646": {
      "op": "PUSH2",
      "value": "0x2027"
    },
    "10649": {
      "op": "DUP2"
    },
    "10650": {
      "op": "PUSH2",
      "value": "0x208A"
    },
    "10653": {
      "jump": "i",
      "op": "JUMP"
    },
    "10654": {
      "op": "JUMPDEST"
    },
    "10655": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10657": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10659": {
      "op": "DUP3"
    },
    "10660": {
      "op": "DUP5"
    },
    "10661": {
      "op": "SUB"
    },
    "10662": {
      "op": "SLT"
    },
    "10663": {
      "op": "ISZERO"
    },
    "10664": {
      "op": "PUSH2",
      "value": "0x29B0"
    },
    "10667": {
      "op": "JUMPI"
    },
    "10668": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10670": {
      "op": "DUP1"
    },
    "10671": {
      "op": "REVERT"
    },
    "10672": {
      "op": "JUMPDEST"
    },
    "10673": {
      "op": "PUSH2",
      "value": "0x2027"
    },
    "10676": {
      "op": "DUP3"
    },
    "10677": {
      "op": "PUSH2",
      "value": "0x27CA"
    },
    "10680": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "92e03d3fde5ac7706d6f466e193436709dd752cf",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.19;\n\nimport {Client} from \"@chainlink/contracts/src/v0.8/ccip/libraries/Client.sol\";\nimport {CCIPReceiver} from \"@chainlink/contracts/src/v0.8/ccip/applications/CCIPReceiver.sol\";\nimport {IRouterClient} from \"@chainlink/contracts/src/v0.8/ccip/interfaces/IRouterClient.sol\";\nimport {OwnerIsCreator} from \"@chainlink/contracts/src/v0.8/shared/access/OwnerIsCreator.sol\";\n\nimport {LinkTokenInterface} from \"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol\";\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"../interfaces/ITokenMessenger.sol\";\nimport \"../interfaces/IMessageTransmitter.sol\";\nimport \"../interfaces/IPool.sol\";\nimport \"../interfaces/IPoolDataProvider.sol\";\n\ncontract Slave is CCIPReceiver {\n    event Deposit(address indexed from, uint256 amount, uint256 timestamp);\n    // Event emitted when a message is received from another chain.\n    event MessageReceived(\n        bytes32 indexed messageId, // The unique ID of the message.\n        uint64 indexed sourceChainSelector // The chain selector of the source chain.\n    );\n    error NotEnoughBalance(uint256 currentBalance, uint256 calculatedFees); // Used to make sure contract has enough balance.\n\n    // Event emitted when a message is sent to another chain.\n    event MessageSent(\n        bytes32 indexed messageId, // The unique ID of the CCIP message.\n        uint64 indexed destinationChainSelector, // The chain selector of the destination chain.\n        address receiver, // The address of the receiver on the destination chain.\n        address feeToken, // the token address used to pay CCIP fees.\n        uint256 fees // The fees paid for sending the CCIP message.\n    );\n\n    uint64 public constant MASTER_CHAIN = 16015286601757825753; // harcoded sepolia id_cain CCIP\n    address public immutable MASTER_CONTRACT;\n    address public immutable POOL_ADDRESS_PROVIDER_ADDRESS;\n    address public immutable POOL_DATA_PROVIDER_ADDRESS;\n\n    IRouterClient private s_router;\n\n    LinkTokenInterface private s_linkToken;\n\n    address public tokenUSDC;\n    address public tokenAUSDC;\n\n    address public circleTokenMessengerAddress;\n    address public circleMessageTansmiterAddress;\n\n    struct WarpIdToDestinationChain {\n        uint32 circleChainId;\n        bytes32 destinationAddress;\n    }\n\n    mapping(bytes32 => WarpIdToDestinationChain)\n        public warpIdToDestinationChain;\n    bytes32[] public warpIds;\n\n    bool public isNodeActive = false;\n\n    uint256 public aUsdcTokenSupply;\n\n    ////////////////////TESTER ////////////////////////\n\n    uint256 public aWrpTotalSupplySlaveView;\n    uint128 public mainNonceDeposits;\n\n    struct NonceDataDeposits {\n        address userAddress;\n        uint256 shares;\n    }\n\n    mapping(uint128 => NonceDataDeposits) public nonceDataDeposits;\n    mapping(address => uint128[]) public userNoncesDeposits;\n\n    mapping(uint128 => address) public userNoncesWithdraw;\n\n    bool public newNonceAndSupply = true;\n\n    bool public testerSuccess;\n    uint256 public testerBalanceUsdc;\n\n    ////////////////////////// CONSTRUCTOR ///////////////////////////\n\n    /// @notice Constructor initializes the contract with the router address.\n    /// @param _router The address of the router contract (CCIP chainlink router).\n    /// @param _link The address of the LINK token contract.\n    /// @param _tokenUSDC The address of the Circle USDC token contract.\n    /// @param _tokenAUSDC The address of the ausdc provided by aave when deposit is done.\n    /// @param _circleTokenMessengerAddress The address of the Circle token messenger contract.\n    /// @param _POOL_ADDRESS_PROVIDER_ADDRESS The address of the Pool address provider contract (aave).\n    /// @param _POOL_DATA_PROVIDER_ADDRESS The address of the Pool data provider contract (aave).\n    /// @param _MASTER_CONTRACT The address of the master contract.\n\n    constructor(\n        address _router,\n        address _link,\n        address _tokenUSDC,\n        address _tokenAUSDC,\n        address _circleTokenMessengerAddress,\n        address _circleMessageTansmiterAddress,\n        address _POOL_ADDRESS_PROVIDER_ADDRESS,\n        address _POOL_DATA_PROVIDER_ADDRESS,\n        address _MASTER_CONTRACT\n    ) CCIPReceiver(_router) {\n        s_router = IRouterClient(_router);\n        s_linkToken = LinkTokenInterface(_link);\n\n        tokenUSDC = _tokenUSDC;\n        tokenAUSDC = _tokenAUSDC;\n        circleTokenMessengerAddress = _circleTokenMessengerAddress;\n        circleMessageTansmiterAddress = _circleMessageTansmiterAddress;\n        POOL_ADDRESS_PROVIDER_ADDRESS = _POOL_ADDRESS_PROVIDER_ADDRESS;\n        MASTER_CONTRACT = _MASTER_CONTRACT;\n        POOL_DATA_PROVIDER_ADDRESS = _POOL_DATA_PROVIDER_ADDRESS;\n    }\n\n    function getUserNonces(\n        address userAddress\n    ) public view returns (uint128[] memory) {\n        return userNoncesDeposits[userAddress];\n    }\n\n    function _internalCommandRouter(\n        Client.Any2EVMMessage memory _any2EvmMessage\n    ) internal returns (uint8) {\n        uint8 command = abi.decode(_any2EvmMessage.data, (uint8));\n\n        return command;\n    }\n\n    function warpAssets(Client.Any2EVMMessage memory _any2EvmMessage) public {\n        // halt deposits????\n        isNodeActive = false;\n        (\n            ,\n            uint32 newNodeChainId,\n            uint64 newNodeChainIdCCIP,\n            bytes32 newNodeReceiver\n        ) = abi.decode(_any2EvmMessage.data, (uint8, uint32, uint64, bytes32));\n\n        uint256 balanceAusdcNode = IERC20(tokenAUSDC).balanceOf(address(this));\n        address pool = _getPool();\n\n        IERC20(tokenAUSDC).approve(pool, balanceAusdcNode);\n\n        uint256 usdcwithdrawn = _assetsAllocationWithdraw();\n\n        testerBalanceUsdc = usdcwithdrawn;\n\n        IERC20(tokenUSDC).approve(circleTokenMessengerAddress, usdcwithdrawn);\n\n        ITokenMessenger(circleTokenMessengerAddress).depositForBurn(\n            usdcwithdrawn,\n            newNodeChainId,\n            newNodeReceiver,\n            tokenUSDC\n        );\n\n        _sendSupplyAndNonce(\n            newNodeChainIdCCIP,\n            address(uint160(uint256(newNodeReceiver)))\n        );\n    }\n\n    function _sendSupplyAndNonce(\n        uint64 chainCCIPid,\n        address nodeAddressReceiver\n    ) internal {\n        uint8 command = 2;\n        bytes memory data = abi.encode(\n            command,\n            aWrpTotalSupplySlaveView,\n            mainNonceDeposits\n        );\n\n        _sendMessage(chainCCIPid, nodeAddressReceiver, data);\n    }\n\n    function setTotalSupplyAndNonce(\n        Client.Any2EVMMessage memory _any2EvmMessage\n    ) public {\n        //resume Deposits:\n        isNodeActive = true;\n\n        (, uint256 _aWrpTotalSupplySlaveView, uint128 _mainNonceDeposits) = abi\n            .decode(_any2EvmMessage.data, (uint8, uint256, uint128));\n\n        aWrpTotalSupplySlaveView = _aWrpTotalSupplySlaveView;\n        mainNonceDeposits = _mainNonceDeposits;\n        newNonceAndSupply = true;\n    }\n\n    function withdraw(Client.Any2EVMMessage memory _any2EvmMessage) public {\n        (, address transferToUser, uint256 shares) = abi.decode(\n            _any2EvmMessage.data,\n            (uint8, address, uint256)\n        );\n\n        address pool = _getPool();\n        uint256 totalAusdc = IERC20(tokenAUSDC).balanceOf(address(this));\n\n        /// TESTING ///\n        uint256 amount = ((shares * 10 ** 18) * totalAusdc) /\n            aWrpTotalSupplySlaveView;\n\n        aWrpTotalSupplySlaveView -= shares;\n\n        IERC20(tokenAUSDC).approve(pool, amount / 10 ** 18);\n        IPool(pool).withdraw(tokenUSDC, amount / 10 ** 18, transferToUser);\n    }\n\n    //FRONTEND UTIL NO CONTRACT USE\n    function calculateSharesValue(\n        uint256 shares\n    ) external view returns (uint256) {\n        uint256 totalAusdc = IERC20(tokenAUSDC).balanceOf(address(this));\n        uint256 amount = ((shares * 10 ** 18) * totalAusdc) /\n            aWrpTotalSupplySlaveView;\n\n        return amount / 10 ** 18;\n    }\n\n    /// handle a received message\n    function _ccipReceive(\n        Client.Any2EVMMessage memory any2EvmMessage\n    ) internal override {\n        /* require(\n            abi.decode(any2EvmMessage.sender, (address)) == MASTER_CONTRACT,\n            \"MASTER CONTRACT ONLY\"\n        );\n        require(\n            any2EvmMessage.sourceChainSelector == MASTER_CHAIN,\n            \"MASTER CHAIN ONLY\"\n        ); */\n\n        uint8 command = _internalCommandRouter(any2EvmMessage);\n\n        if (command == 0) {\n            warpAssets(any2EvmMessage);\n        } else if (command == 1) {\n            withdraw(any2EvmMessage);\n        } else if (command == 2) {\n            setTotalSupplyAndNonce(any2EvmMessage);\n        } else {\n            revert(\"invalid command from Master\");\n        }\n\n        /* emit MessageReceived(\n            any2EvmMessage.messageId,\n            any2EvmMessage.sourceChainSelector // fetch the source chain identifier (aka selector)\n        ); */\n    }\n\n    function _sendMessage(\n        uint64 destinationChainSelector,\n        address receiver,\n        bytes memory _data\n    ) internal returns (bytes32 messageId) {\n        Client.EVM2AnyMessage memory evm2AnyMessage;\n\n        // Create an EVM2AnyMessage struct in memory with necessary information for sending a cross-chain message\n        evm2AnyMessage = Client.EVM2AnyMessage({\n            receiver: abi.encode(receiver), // ABI-encoded receiver address\n            data: _data, // ABI-encoded string\n            tokenAmounts: new Client.EVMTokenAmount[](0), // Empty array indicating no tokens are being sent\n            extraArgs: Client._argsToBytes(\n                // Additional arguments, setting gas limit\n                Client.EVMExtraArgsV1({gasLimit: 1_000_000})\n            ),\n            // Set the feeToken  address, indicating LINK will be used for fees\n            feeToken: address(s_linkToken)\n        });\n\n        // Get the fee required to send the message\n        uint256 fees = s_router.getFee(\n            destinationChainSelector,\n            evm2AnyMessage\n        );\n        require(\n            s_linkToken.transferFrom(msg.sender, address(this), fees),\n            \"Not Link transfered for paying CCIP fees\"\n        );\n\n        if (fees > s_linkToken.balanceOf(address(this)))\n            revert NotEnoughBalance(s_linkToken.balanceOf(address(this)), fees);\n\n        // approve the Router to transfer LINK tokens on contract's behalf. It will spend the fees in LINK\n        s_linkToken.approve(address(s_router), fees);\n\n        // Send the message through the router and store the returned message ID\n        messageId = s_router.ccipSend(destinationChainSelector, evm2AnyMessage);\n\n        // Emit an event with message details\n        emit MessageSent(\n            messageId,\n            destinationChainSelector,\n            receiver,\n            address(s_linkToken),\n            fees\n        );\n\n        // Return the message ID\n        return messageId;\n    }\n\n    function _getPool() internal view returns (address) {\n        address pool = IPoolAddressesProvider(POOL_ADDRESS_PROVIDER_ADDRESS)\n            .getPool();\n\n        return pool;\n    }\n    // Add referal code as parameter in case in the future activates again\n\n    function deposit(uint256 amount) external {\n        require(\n            IERC20(tokenUSDC).transferFrom(msg.sender, address(this), amount),\n            \"Failed to transfer amount\"\n        );\n        require(isNodeActive, \"Node is not active\");\n\n        uint256 totalAusdcNode = IERC20(tokenAUSDC).balanceOf(address(this));\n\n        uint256 shares;\n        if (aWrpTotalSupplySlaveView == 0) {\n            shares = amount * 10 ** 12;\n        } else {\n            shares = (amount * aWrpTotalSupplySlaveView) / totalAusdcNode;\n        }\n        bytes memory data = abi.encode(\n            uint8(0),\n            msg.sender,\n            mainNonceDeposits,\n            shares\n        );\n\n        nonceDataDeposits[mainNonceDeposits].userAddress = msg.sender;\n        nonceDataDeposits[mainNonceDeposits].shares = shares;\n        userNoncesDeposits[msg.sender].push(mainNonceDeposits);\n\n        aWrpTotalSupplySlaveView += shares;\n        mainNonceDeposits += 1;\n        address pool = _getPool();\n        IERC20(tokenUSDC).approve(pool, amount);\n        IPool(pool).deposit(tokenUSDC, amount, address(this), 0);\n\n        _sendMessage(MASTER_CHAIN, MASTER_CONTRACT, data);\n        emit Deposit(msg.sender, shares, block.timestamp);\n    }\n\n    function sendDepositByNonce(uint128 _nonce) public {\n        require(\n            nonceDataDeposits[_nonce].userAddress == msg.sender,\n            \"Address not match with nonce data\"\n        );\n\n        bytes memory data = abi.encode(\n            uint8(0),\n            msg.sender,\n            _nonce,\n            nonceDataDeposits[_nonce].shares\n        );\n\n        _sendMessage(MASTER_CHAIN, MASTER_CONTRACT, data);\n    }\n\n    function sendAaveData() public {\n        (\n            ,\n            ,\n            uint256 totalUsdcSupply,\n            ,\n            uint256 totalUsdcBorrow,\n            uint256 supplyRate,\n            ,\n            ,\n            ,\n            ,\n            ,\n\n        ) = IPoolDataProvider(POOL_DATA_PROVIDER_ADDRESS).getReserveData(\n                tokenUSDC\n            );\n\n        bytes memory data = abi.encode(\n            uint8(1),\n            totalUsdcSupply,\n            totalUsdcBorrow,\n            supplyRate\n        );\n\n        _sendMessage(MASTER_CHAIN, MASTER_CONTRACT, data);\n    }\n    function claimAssetsFromBridge(\n        bytes calldata message,\n        bytes calldata attestation\n    ) public {\n        require(\n            IMessageTransmitter(circleMessageTansmiterAddress).receiveMessage(\n                message,\n                attestation\n            ),\n            \"failed from circle bridge IMessageTransmitter returned false\"\n        );\n        _assetsAllocationDeposit();\n    }\n\n    function _assetsAllocationDeposit() internal {\n        uint256 blanceUsdcNode = IERC20(tokenUSDC).balanceOf(address(this));\n        address pool = _getPool();\n\n        IERC20(tokenUSDC).approve(pool, blanceUsdcNode);\n        IPool(pool).deposit(tokenUSDC, blanceUsdcNode, address(this), 0);\n    }\n\n    function _assetsAllocationWithdraw() internal returns (uint256) {\n        uint256 balanceAusdcNode = IERC20(tokenAUSDC).balanceOf(address(this));\n        address pool = _getPool();\n\n        IERC20(tokenAUSDC).approve(pool, balanceAusdcNode);\n\n        return IPool(pool).withdraw(tokenUSDC, balanceAusdcNode, address(this));\n    }\n\n    function _resumeWithdrawsNodeActive() internal {\n        bytes memory data = abi.encode(uint8(2));\n\n        _sendMessage(MASTER_CHAIN, MASTER_CONTRACT, data);\n    }\n\n    function testingReturnFunds() public {\n        uint256 balance = IERC20(tokenAUSDC).balanceOf(address(this));\n\n        address pool = _getPool();\n\n        IERC20(tokenAUSDC).approve(pool, balance);\n        IPool(pool).withdraw(tokenUSDC, balance, msg.sender);\n    }\n\n    function testingActivateNode() public {\n        isNodeActive = true;\n    }\n\n    function getLinkFees(\n        uint64 destinationChainSelector,\n        address receiver,\n        bytes memory _data\n    ) public view returns (uint256) {\n        Client.EVM2AnyMessage memory evm2AnyMessage = Client.EVM2AnyMessage({\n            receiver: abi.encode(receiver), // ABI-encoded receiver address\n            data: _data, // ABI-encoded data\n            tokenAmounts: new Client.EVMTokenAmount[](0), // Empty array indicating no tokens are being sent\n            extraArgs: Client._argsToBytes(\n                // Additional arguments, setting gas limit\n                Client.EVMExtraArgsV1({gasLimit: 1_000_000})\n            ),\n            // Set the feeToken  address, indicating LINK will be used for fees\n            feeToken: address(s_linkToken)\n        });\n\n        // Get the fee required to send the message\n        uint256 fees = s_router.getFee(\n            destinationChainSelector,\n            evm2AnyMessage\n        );\n        return fees;\n    }\n}\n",
  "sourceMap": "761:15292:11:-:0;;;2477:32;;;-1:-1:-1;;2477:32:11;;;;;;2976:36;;;;;;2477:32;2976:36;;;3914:854;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4271:7;-1:-1:-1;;;;;542:20:1;;538:58;;571:25;;-1:-1:-1;;;571:25:1;;593:1;571:25;;;1241:51:18;1214:18;;571:25:1;;;;;;;538:58;-1:-1:-1;;;;;602:21:1;;;;;4290:8:11::1;:33:::0;;-1:-1:-1;;;;;;4290:33:11;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;4333:39:11;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;4383:9:::1;:22:::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;4415:10:::1;:24:::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;4449:27:::1;:58:::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;4517:29:::1;:62:::0;;;;::::1;::::0;;::::1;;::::0;;;4589;;::::1;;::::0;4661:34;::::1;;::::0;4705:56:::1;;::::0;761:15292;;14:177:18;93:13;;-1:-1:-1;;;;;135:31:18;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:894::-;338:6;346;354;362;370;378;386;394;402;455:3;443:9;434:7;430:23;426:33;423:53;;;472:1;469;462:12;423:53;495:40;525:9;495:40;:::i;:::-;485:50;;554:49;599:2;588:9;584:18;554:49;:::i;:::-;544:59;;622:49;667:2;656:9;652:18;622:49;:::i;:::-;612:59;;690:49;735:2;724:9;720:18;690:49;:::i;:::-;680:59;;758:50;803:3;792:9;788:19;758:50;:::i;:::-;748:60;;827:50;872:3;861:9;857:19;827:50;:::i;:::-;817:60;;896:50;941:3;930:9;926:19;896:50;:::i;:::-;886:60;;965:50;1010:3;999:9;995:19;965:50;:::i;:::-;955:60;;1034:50;1079:3;1068:9;1064:19;1034:50;:::i;:::-;1024:60;;196:894;;;;;;;;;;;:::o;1095:203::-;761:15292:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/Slave.sol",
  "type": "contract"
}